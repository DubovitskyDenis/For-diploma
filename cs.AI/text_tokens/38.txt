learn
tune
plan
space
plan
shashank
shekhar
deepak
khemani
depart
comput
scienc
engin
iit
madra
chennai
tamil
nadu
india
sshekhar
khemani
abstract
recent
year
plan
commun
observ
techniqu
learn
heurist
function
yield
provement
perform
one
approach
use
ofﬂin
learn
learn
predict
model
exist
heurist
domain
depend
manner
learn
model
ploy
new
heurist
function
learn
model
turn
tune
onlin
use
domain
independ
error
correct
approach
enhanc
inform
onlin
tune
approach
domain
independ
stanc
speciﬁc
contribut
improv
perform
individu
instanc
plan
proce
consequ
effect
larger
problem
paper
mention
two
approach
applic
tial
order
causal
link
pocl
plan
also
known
plan
space
plan
first
endeavour
enhanc
perform
pocl
planner
give
algorithm
supervis
learn
second
discu
onlin
error
minim
approach
pocl
framework
minim
associ
ofﬂin
learn
model
thu
hanc
inform
evalu
show
learn
approach
scale
perform
planner
standard
benchmark
special
larger
problem
introduct
recent
intern
plan
competit
ipc
base
planner
like
lama
richter
westphal
fast
downward
stone
soup
helmert
karpa
fast
downward
stone
soup
pommeren
seipp
perform
well
planner
efﬁcient
gener
consist
state
fast
use
power
heurist
often
commit
earli
order
action
give
ﬂexibl
gener
plan
contrast
pocl
framework
cole
gener
ﬂexibl
plan
gener
comput
intens
base
approach
pocl
framework
found
applic
plan
tempor
plan
benton
cole
cole
research
recent
investig
applic
heurist
learn
approach
sapena
copyright
associ
advanc
artiﬁci
intellig
right
reserv
aindıa
torreno
cole
pocl
ning
reviv
interest
due
idea
delay
commit
repop
nguyen
kambhampati
vhpop
youn
simmon
paper
investig
adapt
state
space
approach
pocl
planner
yield
qualiti
plan
even
larger
problem
gener
due
divers
natur
plan
problem
character
degre
action
subgoal
heurist
function
way
work
well
plan
domain
variou
techniqu
devis
increas
inform
tic
state
space
arena
one
approach
strengthen
delet
relax
heurist
increment
lower
bound
tighten
admiss
heurist
repeatedli
ing
relax
version
plan
problem
haslum
anoth
approach
circumv
ing
multipl
heurist
decis
rule
use
select
heurist
function
given
state
activ
onlin
learn
techniqu
appli
learn
model
given
decis
rule
domshlak
karpa
markovitch
present
coupl
machin
learn
techniqu
inﬂuenc
arfae
zill
holt
thayer
dionn
ruml
samadi
felner
schaeffer
virseda
borrajo
improv
effect
heurist
pocl
framework
first
appli
domain
wise
regress
techniqu
supervis
manner
use
exist
pocl
heurist
featur
get
gener
use
planner
name
regpocl
base
vhpop
us
ground
action
speed
plan
process
next
give
anoth
niqu
pocl
framework
enhanc
tive
ofﬂin
learn
model
techniqu
adapt
version
onlin
heurist
adjust
approach
base
tempor
differ
learn
sutton
thayer
dionn
ruml
extend
domain
independ
approach
learn
instanc
speciﬁc
detail
correct
error
associ
learn
model
thu
make
inform
regpocl
planner
employ
two
approach
evalu
show
efﬁcient
benchmark
conﬁn
evalu
strip
domain
rest
paper
structur
follow
ing
motiv
explor
pocl
approach
describ
learn
approach
use
along
ment
design
follow
experiment
result
conclud
discuss
pocl
plan
pocl
planner
start
search
null
partial
plan
progress
space
partial
plan
ad
solver
partial
plan
remov
ﬂaw
use
heurist
youn
simmon
select
vers
ﬂaw
resolv
select
partial
plan
pocl
framework
certain
advantag
forward
search
f
f
problem
prematur
ment
order
two
action
reduc
plan
ﬂexibl
avoid
mutual
interfer
action
though
may
pocl
ning
avoid
commit
unnecessarili
order
action
f
face
problem
solv
instanc
line
deadlin
may
aris
within
interv
one
dur
action
gener
action
may
produc
delay
effect
may
ramiﬁc
deadlin
well
creat
deadlin
rel
start
point
cole
f
also
suffer
signiﬁc
backtrack
may
explor
possibl
plan
permut
absenc
effect
guidanc
pocl
framework
also
sever
advantag
tempor
plan
special
plan
complex
tempor
straint
beyond
action
durat
limit
f
motiv
explor
pocl
framework
exampl
suppos
requir
add
four
action
plan
depend
depend
interfer
two
action
apart
depend
case
f
give
order
timestamp
makespan
whilst
delay
commit
strategi
would
give
choic
ﬂexibl
order
like
parallel
execut
allow
makespan
would
anoth
action
dent
introduc
plan
f
allot
timestamp
wherea
egi
could
allot
howev
ignor
absenc
ﬂexibl
action
parallel
f
fast
recov
situat
would
aris
due
commit
wrong
choic
plan
f
advantag
faster
search
state
gener
power
heurist
learn
approach
use
propos
two
fold
approach
learn
better
heurist
function
first
exist
heurist
function
combin
process
ofﬂin
learn
gener
learn
predict
model
follow
onlin
techniqu
ing
associ
model
tial
plan
reﬁnement
divid
section
two
part
ﬁrst
describ
ofﬂin
learn
techniqu
perform
regress
second
techniqu
ene
inform
learn
predict
model
ofﬂin
learn
ofﬂin
learn
attract
approach
gener
train
set
plan
domain
fast
simpl
process
learn
process
three
phase
dataset
prepar
train
iii
test
train
stanc
gather
solv
small
problem
becom
put
use
regress
techniqu
linear
sion
describ
later
learn
effect
way
combin
exist
heurist
function
test
phase
use
valid
best
way
combin
known
heurist
function
algorithm
describ
embodi
complet
train
process
algorithm
algorithm
use
train
phase
input
attribut
select
train
dataset
problem
set
learn
techniqu
heurist
set
regpocl
planner
output
learn
predict
model
procedur
domain
speciﬁc
regpocl
train
instanc
appli
return
appli
train
instanc
end
procedur
πloc
solv
regpocl
reﬁn
complet
check
target
valu
set
seed
partial
plan
null
partial
plan
random
procedur
regpocl
end
procedur
πloc
in
regpocl
in
end
bound
number
iter
end
return
end
dataset
prepar
procedur
line
algorithm
use
solv
set
ning
problem
consid
small
problem
gather
plan
domain
select
ou
ipc
output
algorithm
train
predict
model
shown
line
consid
problem
dataset
prepar
domain
line
algorithm
seed
partial
plan
new
partial
plan
get
gener
due
possibl
reﬁnement
select
tial
plan
select
seed
set
seed
partial
plan
line
provid
regpocl
ther
reﬁnement
regpocl
abl
gener
one
tent
solut
reﬁn
complet
use
solv
tion
line
ﬂag
true
captur
newli
gener
partial
plan
local
instanc
call
πloc
target
captur
number
new
action
get
ad
calcul
planner
reﬁn
complet
use
heurist
note
heurist
valu
number
new
action
ad
ing
reﬁnement
process
valu
also
plan
length
found
might
optim
sinc
reﬁn
complet
πloc
updat
line
line
pute
train
instanc
in
use
function
given
planner
gener
train
instanc
form
featur
heurist
maintain
consist
updat
train
set
line
regpocl
reﬁn
current
seed
complet
complet
reﬁnement
possibl
new
seed
πloc
drop
even
though
might
case
πloc
contain
consist
seed
particularli
case
time
maintain
divers
given
domain
randomli
select
ﬁxed
number
seed
complet
reﬁnement
process
line
execut
algorithm
select
domain
given
set
featur
heurist
note
learn
guarante
optim
predict
model
even
though
mal
target
use
train
virseda
borrajo
algorithm
hunt
well
inform
heurist
use
learn
bother
sibil
sinc
pocl
heurist
optim
natur
youn
simmon
usag
regpocl
gener
train
instanc
affect
perform
regpocl
larg
problem
test
phase
select
regpocl
gener
train
set
might
deterior
actual
target
valu
target
calcul
regpocl
optim
gener
thu
possibl
learn
inaccur
predict
model
train
phase
might
reduc
mativ
model
enhanc
inform
model
correct
associ
use
onlin
heurist
tune
approach
train
algorithm
gener
enough
number
train
instanc
given
domain
move
next
step
line
deﬁn
regress
model
train
set
set
real
ber
follow
gener
model
train
strategi
use
weka
hall
remov
irrelev
redund
attribut
line
train
set
reduc
effort
planner
planner
must
calcul
select
featur
heurist
step
plan
ce
next
appli
model
train
process
line
feed
train
instanc
differ
machin
learn
proach
learn
differ
predict
model
test
test
predict
model
larg
problem
model
directli
compar
current
best
tic
pocl
framework
use
machin
learn
proach
plan
efﬁcient
select
best
learn
regress
model
test
efﬁcienc
regpocl
use
differ
benchmark
model
help
select
suitabl
partial
plan
reﬁnement
ofﬂin
learn
learn
better
model
term
search
guidanc
accuraci
onlin
learn
samadi
ner
schaeffer
thayer
dionn
ruml
ofﬂin
learn
predictor
accur
line
one
ofﬂin
case
complet
train
set
avail
anoth
altern
approach
would
bootstrap
method
arfae
zill
holt
set
problem
solv
use
base
tic
within
speciﬁ
time
limit
later
solut
tain
learn
use
gener
new
inform
heurist
function
onlin
error
adjust
predict
model
ofﬂin
approach
assum
learn
knowledg
effect
transfer
train
instanc
test
instanc
alway
true
plan
problem
alway
similar
even
though
belong
domain
also
train
instanc
requir
train
process
plan
domain
dataset
prepar
calcul
featur
tation
hard
calcul
actual
number
new
action
need
rel
expens
onlin
learn
attempt
avoid
limit
hybrid
approach
use
small
instanc
ofﬂin
train
thu
save
time
follow
onlin
learn
improv
heurist
estim
onlin
error
tune
base
tempor
differ
learn
sutton
figur
pocl
framework
reﬁnement
start
go
solut
plan
πsol
step
select
partial
plan
mani
reﬁnement
possibl
like
reﬁnement
lead
best
child
shown
horizont
reﬁnement
onlin
heurist
adjust
approach
inspir
recent
work
present
technic
tion
shekhar
khemani
test
plan
domain
develop
approach
provid
complet
deriv
proof
appendix
orem
use
cite
work
assum
predict
model
given
partial
plan
estim
actual
number
new
action
requir
ad
reﬁn
complet
solut
plan
denot
whilst
minimum
number
new
action
requir
purpos
nguyen
kambhampati
pocl
framework
comput
expens
predict
sinc
also
like
uninform
ment
observ
minimum
number
total
reﬁnement
need
partial
plan
make
solut
plan
go
best
child
obtain
reﬁnement
child
best
child
lowest
predict
number
new
action
need
complet
ment
among
sibl
figur
break
tie
vor
minimum
number
action
child
partial
plan
set
successor
partial
plan
potenti
inﬁnit
due
introduct
loop
plan
simpli
achiev
destroy
subgoal
exampl
stack
unstack
pickup
putdown
blocksworld
domain
loop
common
reﬁnement
process
special
heurist
well
inform
avoid
loop
explicitli
crucial
real
world
scenario
exampl
pair
action
like
obj
truck
loc
obj
truck
loc
driverlog
domain
could
expens
gener
plan
space
plan
backtrack
reﬁnement
partial
plan
lead
differ
node
plan
space
necessit
consid
loop
explicitli
ideal
cost
case
gener
expens
sume
cost
ure
given
partial
plan
suppos
minimum
reﬁnement
step
requir
make
solut
plan
assum
stage
reﬁnement
process
best
child
chosen
estim
ad
new
action
consid
unit
cost
action
ideal
case
gener
commit
error
reﬁnement
step
call
sociat
get
reﬁn
algorithm
use
denot
use
deriv
proof
appendix
low
case
theorem
given
learn
predict
model
partial
plan
figur
lead
solut
plan
πsol
certain
reﬁnement
step
enhanc
version
predict
model
πsol
πsol
path
figur
captur
partial
plan
along
path
πsol
path
includ
exclud
πsol
term
associ
reﬁnement
enhanc
predict
model
theorem
onlin
approxim
version
proxim
us
parent
best
child
relationship
measur
reﬁnement
path
correct
evalu
reﬁnement
use
theorem
figur
calcul
associ
denot
along
path
πsol
πsol
rewrit
πsol
use
simpliﬁ
simpliﬁc
yield
anoth
possibl
expans
use
inﬁnit
geometr
gression
would
use
regpocl
test
effect
pocl
framework
select
best
partial
plan
experi
design
section
describ
evalu
phase
set
includ
heurist
select
featur
domain
select
featur
heurist
learn
featur
use
learn
heurist
literatur
pocl
plan
consid
plicabl
pocl
heurist
ture
youn
simmon
nguyen
pati
select
six
differ
heurist
function
heurist
inform
inform
vari
differ
plan
domain
aim
learn
inform
combin
individu
tic
six
heurist
valu
return
number
action
select
partial
plan
count
two
dummi
action
signiﬁ
far
search
progress
start
state
number
open
condit
hoc
total
ber
unsupport
causal
link
present
partial
plan
hoc
nguyen
kambhampati
addit
heurist
heurist
hadd
haslum
geffner
add
step
requir
individu
open
goal
youn
mon
use
adapt
version
addit
heurist
pocl
plan
ﬁrst
time
addit
heurist
effort
hadd
estim
similar
hadd
consid
cost
action
number
precondit
action
plu
link
cost
action
support
unsupport
causal
link
youn
simmon
call
hadd
notat
use
earlier
signiﬁ
extra
work
requir
account
posit
interact
add
return
estim
take
account
posit
tion
subgoal
ignor
neg
action
repres
add
variant
hadd
youn
simmon
hadd
addit
account
posit
interact
effort
add
similar
heurist
consid
tal
effort
requir
youn
simmon
standard
notat
heurist
also
use
literatur
domain
select
consid
follow
domain
logist
gripper
ipc
logist
elev
ipc
rover
zenotravel
ipc
rover
ipc
iment
consid
domain
petit
either
heurist
abl
creat
enough
train
instanc
learn
pocl
support
domain
deﬁnit
languag
ture
ipc
domain
select
sinc
planner
abl
gener
enough
instanc
initi
ofﬂin
ing
domain
ipc
later
support
regpocl
represent
use
action
cost
ﬂuent
hard
soft
constraint
includ
preprocess
like
remov
action
cost
domain
descript
ﬁle
select
domain
consid
problem
repres
strip
style
select
small
size
lem
learn
test
learn
predict
model
larg
size
problem
domain
total
small
size
problem
select
domain
last
four
featur
heurist
previou
subsect
use
calcul
target
domain
mean
gener
four
differ
dataset
select
main
best
two
select
choos
ing
track
problem
gener
train
instanc
train
set
prepar
time
limit
minut
upper
limit
node
gener
erat
thousand
train
instanc
except
travel
domain
total
instanc
avoid
overﬁt
pick
train
instanc
larger
train
set
select
learn
approach
section
discu
brief
procedur
featur
select
dataset
train
regress
model
differ
regress
techniqu
refer
featur
select
gener
train
set
contain
irrelev
dant
attribut
six
select
heurist
duce
train
effort
increas
efﬁcienc
planner
discard
train
set
planner
bound
calcul
select
featur
stage
reﬁnement
correl
base
featur
select
niqu
hall
use
ﬁnd
correl
featur
regress
techniqu
use
follow
regress
techniqu
learn
tive
model
techniqu
appli
plan
learn
recent
year
samadi
felner
schaeffer
thayer
dionn
ruml
virseda
borrajo
linear
regress
regress
model
learn
linear
function
minim
sum
squar
error
train
instanc
bishop
give
ﬂexibl
due
natur
captur
non
linear
relationship
techniqu
learn
regress
tree
quinlan
other
approxim
class
valu
similar
gener
rule
instead
model
regress
tree
quinlan
other
least
median
squar
lm
lm
similar
median
squar
error
function
gener
subsampl
data
least
squar
error
function
alli
model
lowest
median
squar
error
lect
rousseeuw
leroy
multilay
perceptron
mlp
mlp
learn
plex
relationship
compar
four
regress
techniqu
bishop
techniqu
discuss
use
learn
el
weka
hall
use
valid
domain
regress
techniqu
call
svmreg
implement
support
vector
machin
sion
purpos
use
work
due
cal
difﬁculti
howev
much
inﬂuenc
plan
process
past
virseda
borrajo
experiment
evalu
use
youn
simmon
ﬂaw
select
heurist
reﬁn
partial
plan
give
higher
prefer
local
ﬂaw
present
tial
plan
employ
greedi
best
first
search
algorithm
select
next
partial
plan
reﬁnement
environ
perform
experi
intel
core
quad
ghz
processor
ram
evalu
effect
learn
model
correct
associ
model
time
limit
ute
node
gener
limit
million
use
evalu
use
regpocl
compar
perform
ﬂine
predict
model
correspond
enhanc
model
last
four
base
featur
also
compar
recent
effect
base
heurist
approach
introduc
later
exclud
ﬁrst
two
base
featur
comparison
sinc
weak
heurist
regpocl
solv
ﬁcient
problem
use
howev
use
work
jointli
inform
heurist
next
cuss
observ
made
train
phase
train
use
algorithm
prepar
dataset
learn
differ
predict
model
appli
variou
regress
techniqu
discuss
earlier
select
last
four
featur
solv
set
problem
target
valu
plan
length
found
regpocl
use
base
featur
dataset
prepar
phase
took
le
two
pocl
heurist
domain
hadd
hadd
add
hadd
hadd
add
add
add
add
via
learn
approach
add
add
add
add
add
add
add
evalu
use
fast
downward
lazi
eager
cea
mhf
cea
mhf
cea
mhf
cea
mhf
lama
tabl
number
solv
problem
use
heurist
number
problem
domain
pocl
heurist
compar
learn
one
left
half
heurist
cea
combin
use
mhf
strategi
also
compar
pocl
heurist
last
column
captur
perform
best
result
shown
bold
number
mark
show
competit
perform
learn
model
enhanc
base
heurist
similar
represent
follow
tabl
hour
averag
domain
four
ture
enough
instanc
begin
train
process
domain
best
two
dataset
four
sufﬁcient
train
point
select
model
ing
visual
distribut
train
point
use
weka
note
figur
differ
heurist
culat
target
valu
prefer
differ
path
therefor
four
base
featur
gener
four
differ
dataset
attribut
select
strategi
allow
select
subset
attribut
train
set
remov
correl
redund
featur
learn
total
domain
dataset
regress
techniqu
regress
model
train
phase
took
millisecond
use
use
lm
use
mlp
use
use
averag
per
model
learn
model
high
accuraci
fastest
follow
next
test
model
differ
benchmark
test
test
effect
approach
lect
partial
plan
reﬁnement
use
regpocl
assum
inform
heurist
lead
minim
possibl
reﬁnement
need
next
comparison
pute
ipc
satisﬁc
track
problem
ter
score
standard
signiﬁ
better
perform
compar
perform
learn
model
add
select
base
featur
hadd
hadd
comparison
done
basi
number
solv
problem
score
obtain
plan
qualiti
tion
time
node
partial
plan
visit
makespan
qualiti
add
learn
add
word
regpocl
dataset
prepar
use
add
calcul
target
valu
dataset
us
add
enhanc
add
use
onlin
heurist
justment
approach
expect
inform
add
similar
learn
heurist
model
appli
pocl
framework
select
suitabl
partial
plan
follow
heurist
loc
youn
simmon
select
vers
ﬂaw
exampl
ofﬂin
learn
model
add
also
compar
approach
base
approach
basi
number
problem
solv
score
obtain
plan
qualiti
total
cution
time
select
fast
forward
heurist
mann
nebel
addit
tic
cea
helmert
geffner
heurist
helmert
domshlak
also
use
heurist
togeth
appli
heurist
ﬁrst
solut
strategi
mhf
helmert
gener
strategi
perform
better
ing
usag
differ
heurist
instead
combin
also
compar
effect
techniqu
richter
westphal
helmert
ner
sequenti
satisﬁc
track
appli
richter
helmert
westphal
heurist
togeth
use
search
set
minut
time
limit
evalu
domain
sinc
intern
time
limit
minut
invari
synthesi
part
translat
approach
evalu
use
greedi
best
first
search
algorithm
fast
downward
plan
system
helmert
use
eager
greedi
type
evalu
prefer
oper
regress
model
select
chosen
domain
train
use
iii
tabl
compar
base
featur
ofﬂin
learn
model
enhanc
version
iii
base
heurist
cea
gy
use
mhf
basi
ber
problem
solv
tabl
regpocl
solv
equal
number
problem
use
learn
heurist
enhanc
version
base
featur
form
well
domain
consist
approach
solv
problem
le
beat
base
tor
comprehens
also
learn
model
form
better
base
featur
competit
solv
least
problem
good
heurist
like
cea
regpocl
solv
problem
pli
approach
lose
tor
second
approach
improv
perform
domain
time
score
hadd
hadd
hadd
hadd
add
add
pocl
heurist
via
learn
approach
add
add
add
add
add
add
add
add
add
add
evalu
use
fast
downward
lazi
eager
cea
mhf
cea
mhf
cea
mhf
cea
mhf
lama
tabl
score
plan
qualiti
overal
time
compar
pocl
heurist
learn
one
tive
pocl
heurist
compar
latest
state
base
approach
last
row
demonstr
overal
time
score
heurist
numer
represent
column
detail
similar
tabl
domain
hadd
hadd
hadd
hadd
add
add
via
learn
approach
add
add
add
add
add
add
add
add
add
add
tabl
result
reﬁnement
score
number
node
ite
regpocl
use
heurist
compar
heurist
learn
model
enhanc
best
result
bold
domain
hadd
hadd
hadd
hadd
add
add
add
add
add
add
add
add
add
add
add
add
tabl
makespan
qualiti
score
heurist
column
ident
correspond
one
tabl
learn
model
solv
problem
solv
problem
approach
could
increas
coverag
domain
win
basi
total
number
problem
solv
domain
tabl
compar
score
obtain
plan
iti
base
featur
learn
model
correspond
enhanc
base
tic
techniqu
anytim
planner
give
solut
close
optim
take
time
comput
shorter
plan
pocl
use
learn
heurist
solv
equal
number
problem
ﬁnd
shorter
plan
compar
regpocl
lost
problem
number
problem
solv
obtain
higher
score
problem
solv
produc
shorter
plan
use
add
effect
win
domain
best
plan
qualiti
add
also
creas
plan
qualiti
score
obtain
add
add
add
add
add
use
onlin
error
correct
strategi
howev
perform
decreas
ter
enhanc
add
gener
perform
regpocl
use
either
ofﬂin
learn
model
enhanc
often
better
use
base
featur
case
onlin
error
adjust
approach
enhanc
perform
learn
model
last
row
tabl
give
score
obtain
total
time
taken
process
planner
take
le
second
solv
problem
get
full
score
total
time
score
winner
cea
lazi
evalu
learn
model
enhanc
version
obtain
better
score
competitor
except
cea
score
close
win
score
almost
twice
tabl
compar
score
obtain
number
node
regpocl
visit
solv
plan
problem
obtain
base
featur
learn
heurist
enhanc
version
model
obtain
ﬂine
learn
inform
toward
goal
reﬁn
fewer
partial
plan
score
obtain
learn
el
increas
good
factor
ing
error
correct
approach
error
correct
approach
shown
neg
effect
continu
tabl
tabl
demonstr
score
obtain
makespan
qualiti
higher
score
niﬁe
smaller
makespan
ﬂexibl
ate
solut
plan
score
add
add
decreas
due
neg
effect
error
adjust
approach
score
obtain
add
almost
time
score
add
gener
ofﬂin
learn
model
gener
ﬂexibl
plan
shorter
makespan
base
featur
qualiti
improv
use
enhanc
sion
model
discuss
alreadi
discuss
advantag
approach
also
limit
ofﬂin
approach
bound
poor
gener
learn
heurist
current
literatur
support
idea
select
larg
featur
set
accur
learn
robert
accuraci
also
improv
use
empir
perform
model
compon
portfolio
cide
compon
pick
next
fawcett
work
larg
featur
set
may
drawback
exampl
comput
featur
reﬁnement
step
plan
process
comput
expens
onlin
error
adjust
approach
could
also
perform
poorli
certain
domain
figur
orient
object
domain
larger
may
accur
inaccuraci
compound
condit
hold
begin
plan
process
result
inaccur
valu
lead
wrong
select
partial
plan
reﬁn
next
consequ
planner
may
end
ﬁnding
longer
le
ﬂexibl
plan
anoth
limit
ment
may
chang
exist
prioriti
partial
plan
set
due
adjust
consid
time
factor
avoid
chang
decid
prioriti
partial
plan
may
also
lead
inaccuraci
approach
util
advantag
strategi
like
altern
queue
candid
select
use
cept
pareto
optim
helmert
centli
plan
commun
tri
come
effect
portfolio
heurist
planner
techniqu
gener
good
portfolio
new
theoret
chine
learn
follow
work
done
past
ing
multipl
heurist
onlin
streeter
golovin
smith
one
could
form
portfolio
differ
algorithm
reduc
total
makespan
set
job
solv
streeter
smith
author
provid
bound
manc
portfolio
approach
exampl
tion
greedi
schedul
algorithm
exceed
four
time
optim
schedul
plan
sequenti
portfolio
planner
tic
aim
optim
perform
metric
gener
conﬁgur
automat
gener
sequenti
ing
best
plan
algorithm
portfolio
ticip
allot
timestamp
particip
ing
problem
order
similar
approach
use
seipp
author
outlin
procedur
optim
satisﬁc
plan
procedur
use
work
start
set
plan
algorithm
time
bound
us
anoth
procedur
optim
focu
margin
improv
perform
qualiti
portfolio
bound
opt
run
time
exceed
opt
compon
allow
act
fashion
gerevini
saetti
vallati
planner
exhibit
variat
runtim
given
problem
instanc
planner
alway
domin
other
good
approach
would
select
planner
given
instanc
look
process
time
done
build
empir
perform
model
epm
planner
epm
deriv
set
plan
problem
perform
observ
predict
whether
planner
could
solv
given
instanc
fawcett
author
consid
larg
set
instanc
ture
show
runtim
predictor
often
superior
individu
planner
perform
wise
sort
ponent
portfolio
also
possibl
borrajo
portfolio
sort
iti
perform
portfolio
maximum
time
experi
show
perform
greedi
egi
enhanc
near
optim
time
last
two
paragraph
cover
recent
literatur
brief
explain
previou
strategi
combin
differ
base
method
literatur
show
perform
well
differ
benchmark
current
set
captur
idea
combin
differ
compon
heurist
direct
comparison
mention
work
therefor
scope
current
work
concern
ing
unit
cost
base
pocl
heurist
isol
hand
suspect
mani
strategi
adapt
form
would
like
beneﬁci
pocl
framework
summari
futur
work
demonstr
use
differ
regress
model
combin
differ
heurist
valu
arriv
consist
better
estim
rang
plan
domain
lem
extend
recent
attempt
learn
combin
heurist
function
base
plan
pocl
plan
also
show
learn
model
ther
enhanc
onlin
error
correct
approach
futur
intend
explor
onlin
learn
continu
experi
combin
heurist
tion
also
aim
explor
use
optim
planner
tandem
bootstrap
method
apart
give
complet
gener
current
learn
approach
tempor
plan
ning
deadlin
refer
arfae
zill
holt
arfae
zill
holt
learn
heurist
function
larg
state
space
artiﬁci
intellig
benton
cole
cole
benton
cole
cole
tempor
plan
prefer
continu
cost
proc
icap
bishop
bishop
pattern
recognit
machin
learn
volum
springer
cole
cole
cole
fox
long
plan
proc
icap
domshlak
karpa
markovitch
domshlak
karpa
markovitch
max
max
onlin
learn
speed
optim
plan
proc
aaai
fawcett
fawcett
vallati
hutter
hoffmann
hoo
improv
featur
runtim
predict
independ
planner
proc
icap
gerevini
saetti
vallati
gerevini
saetti
vallati
plan
automat
lio
conﬁgur
pbp
approach
jair
hall
hall
frank
holm
pfahring
reutemann
witten
weka
data
mine
softwar
updat
sigkdd
explor
volum
hall
hall
featur
lection
discret
numer
class
machin
learn
proc
icml
haslum
geffner
haslum
geffner
admiss
heurist
optim
plan
proc
aip
haslum
haslum
increment
lower
bound
addit
cost
plan
problem
proc
icap
helmert
domshlak
helmert
domshlak
optim
plan
heurist
seventh
ipc
helmert
geffner
helmert
geffner
unifi
causal
graph
addit
heurist
proc
icap
helmert
karpa
helmert
karpa
fast
downward
stone
soup
baselin
build
planner
portfolio
proc
icap
pal
cites
helmert
helmert
fast
downward
ning
system
artif
intel
re
jair
hoffmann
nebel
hoffmann
nebel
plan
system
fast
plan
gener
heurist
search
jair
plan
loos
coupl
agent
use
partial
order
proc
icap
nguyen
kambhampati
nguyen
hampati
reviv
partial
order
plan
proc
ijcai
borrajo
borrajo
sort
sequenti
portfolio
tomat
plan
proc
ijcai
aaai
press
quinlan
other
quinlan
ing
continu
class
proc
australian
joint
ferenc
artiﬁci
intellig
volum
richter
westphal
richter
westphal
lama
planner
guid
anytim
plan
landmark
jair
richter
helmert
westphal
richter
helmert
westphal
landmark
revisit
proc
aaai
volum
richter
westphal
helmert
richter
phal
helmert
lama
seventh
ipc
robert
robert
howe
wilson
desjardin
make
planner
predict
proc
icap
aaai
helmert
helmert
merrier
combin
heurist
estim
satisﬁc
plan
proc
icap
pommeren
seipp
meren
seipp
fast
downward
stone
soup
eighth
ipc
rousseeuw
leroy
rousseeuw
leroy
robust
regress
outlier
detect
volum
john
wiley
son
samadi
felner
schaeffer
samadi
felner
schaeffer
learn
multipl
tic
proc
aaai
sapena
onaindıa
torreno
sapena
aindıa
torreno
combin
heurist
proc
icap
acceler
forward
plan
copla
seipp
seipp
siever
helmert
hutter
automat
conﬁgur
sequenti
ning
portfolio
proc
aaai
shekhar
khemani
shekhar
khemani
improv
heurist
effect
search
plan
space
advanc
artiﬁci
intellig
annual
german
confer
streeter
smith
streeter
smith
new
techniqu
algorithm
portfolio
design
proc
uai
streeter
golovin
smith
streeter
golovin
smith
combin
multipl
heurist
onlin
proc
aaai
sutton
sutton
learn
predict
method
tempor
differ
machin
learn
dionn
thayer
dionn
ruml
thayer
ruml
learn
inadmiss
tic
search
proc
icap
virseda
borrajo
virseda
borrajo
learn
heurist
function
plan
proc
icap
pal
cites
youn
simmon
youn
mon
vhpop
versatil
heurist
partial
order
planner
jair
appendix
proof
theorem
theorem
given
learn
predict
model
partial
plan
figur
lead
solut
plan
πsol
certain
reﬁnement
step
enhanc
version
predict
model
πsol
πsol
path
figur
captur
partial
plan
along
path
πsol
path
includ
exclud
πsol
term
associ
reﬁnement
proof
use
principl
mathemat
induct
prove
theorem
basi
assum
need
one
reﬁnement
becom
πsol
would
also
best
child
best
child
alway
keep
lowest
estim
requir
new
action
reﬁnement
among
sibl
one
πsol
use
possibl
reﬁnement
say
term
associ
estim
total
effort
requir
reﬁn
plete
unit
cost
reﬁnement
cost
comput
cost
partial
plan
also
πsol
therefor
use
togeth
get
therefor
base
step
hold
base
case
assum
reﬁnement
step
best
child
unsupport
causal
link
present
threat
resolv
planner
immedi
make
solut
plan
unsupport
causal
link
must
exist
action
support
case
estim
requir
new
action
still
hypothesi
select
arbitrari
partial
plan
assum
hold
proof
step
show
hold
cost
cost
induct
hypothesi
πsol
πsol
πsol
therefor
relationship
hold
parent
partial
plan
well
thu
induct
partial
plan
assumpt
correct
