program
logic
without
logic
program
robert
kowalski
fariba
sadri
depart
comput
imperi
colleg
london
rak
abstract
previou
work
propos
framework
comput
tion
action
attempt
make
reactiv
rule
form
anteced
consequ
true
canon
model
logic
program
determin
initi
state
sequenc
event
result
sequenc
subsequ
state
semant
reactiv
rule
drive
forc
logic
program
play
support
role
canon
model
state
action
event
repres
timestamp
oper
semant
sake
effici
timestamp
omit
current
state
maintain
state
transit
perform
reactiv
execut
action
make
consequ
rule
true
whenev
anteced
becom
true
oper
semant
sound
incomplet
make
reactiv
rule
true
prevent
anteced
becom
true
proactiv
make
consequ
true
anteced
becom
true
paper
character
notion
reactiv
model
prove
oper
semant
gener
model
order
focu
main
issu
omit
logic
program
compon
framework
consider
theori
practic
logic
program
tplp
keyword
kelp
lp
model
gener
reactiv
model
state
transit
system
introduct
state
transit
system
play
import
role
mani
area
comput
underpin
oper
semant
imper
program
languag
namic
behavior
databas
manag
system
mani
aspect
knowledg
represent
artifici
intellig
mani
system
state
transit
perform
execut
reactiv
rule
form
anteced
consequ
describ
relationship
earlier
later
state
event
tive
rule
occur
explicitli
rule
product
system
rule
activ
databas
transit
rule
abstract
state
chine
gurevich
implicit
statechart
harel
bdi
agent
plan
rao
georgeff
core
reaction
ruleml
paschk
despit
appar
logic
syntax
reactiv
rule
system
hardli
system
give
rule
logic
interpret
paper
investig
semant
logic
languag
kelp
program
set
reactiv
rule
form
consequ
classic
order
logic
fol
comput
understood
gener
sequenc
state
transit
purpos
make
reactiv
rule
true
kelp
kowalski
sadri
reactiv
kernel
lp
kowalski
sadri
agent
product
system
languag
combin
reactiv
rule
logic
program
kelp
obtain
lp
drop
logic
program
compon
lp
sens
kelp
languag
program
logic
without
logic
gram
oper
semant
kelp
similar
imper
tive
rule
languag
maintain
singl
current
state
use
destruct
state
transit
howev
semant
kelp
combin
state
singl
model
associ
time
stamp
fact
action
nal
event
kowalski
sadri
show
lp
therefor
kelp
sound
sequenc
state
event
recogn
solv
comput
task
gener
model
make
tive
rule
true
paper
investig
complet
kelp
show
gener
reactiv
model
consequ
reactiv
rule
made
true
anteced
becom
true
howev
kelp
therefor
lp
incomplet
gener
reactiv
model
kelp
gener
model
proactiv
make
consequ
true
whether
anteced
becom
true
prevent
make
ent
fals
avoid
make
consequ
true
make
anteced
true
forc
make
consequ
true
moreov
erat
model
contain
action
irrelev
comput
task
kelp
similar
imper
reactiv
rule
languag
incomplet
kelp
show
oper
semant
vention
reactiv
system
languag
also
incomplet
reactiv
rule
read
logic
implic
lp
therefor
kelp
optimis
version
abduct
logic
program
alp
kaka
exist
proof
procedur
alp
gener
proactiv
prevent
model
avoid
gener
viousli
irrelev
action
section
discu
relationship
alp
figur
illustr
kelp
differ
kind
model
allow
semant
kelp
singl
reactiv
rule
state
see
wolf
time
cri
wolf
time
extern
event
occur
time
reactiv
model
includ
nal
event
action
singl
action
time
vate
reactiv
rule
trigger
extern
event
reactiv
rule
extern
event
reactiv
model
proactiv
model
model
irrelev
action
drink
fig
exampl
model
reactiv
rule
kelp
exampl
figur
variant
figur
reactiv
rule
figur
state
cri
wolf
see
wolf
outsid
state
record
whether
agent
outsid
causal
theori
updat
state
result
extern
event
action
agent
initi
outdoor
model
figur
includ
timestamp
fact
belong
state
timestamp
extern
event
timestamp
action
motiv
tive
rule
prevent
model
includ
action
go
insid
prevent
need
cri
wolf
cours
anoth
model
includ
action
reactiv
rule
causal
theori
initi
state
time
outdoor
extern
event
reactiv
model
prevent
model
outdoor
termin
outdoor
initi
outdoor
outdoor
outdoor
outdoor
outdoor
outdoor
outdoor
fig
exampl
model
reactiv
rule
kelp
paper
character
reactiv
model
gener
kelp
model
properti
everi
action
motiv
instanc
action
occur
explicitli
consequ
rule
whose
earlier
condit
anteced
consequ
rule
alreadi
true
remaind
paper
present
kelp
tional
semant
relationship
two
semant
relationship
relat
work
futur
work
paper
extend
earlier
paper
kowalski
sadri
includ
proof
theorem
appendix
extend
kelp
allow
eral
fol
condit
simplifi
mani
definit
includ
extens
comparison
relat
approach
kelp
exampl
figur
illustr
addit
featur
languag
ple
consequ
rule
consist
two
altern
plan
deadlin
order
receiv
reliabl
custom
item
need
patch
invoic
need
sent
within
time
unit
receiv
order
altern
apolog
need
sent
within
time
unit
tempor
constraint
defin
auxiliari
theori
present
solv
mean
constraint
solver
constraint
logic
program
jaffar
lassez
action
kelp
execut
concurr
consist
maintain
monitor
precondit
set
event
exampl
precondit
sure
item
dispatch
two
differ
custom
time
see
later
precondit
also
use
prevent
send
apolog
item
alreadi
dispatch
semant
kelp
matter
tive
plan
chosen
howev
practic
altern
better
other
exampl
may
good
strategi
tri
first
plan
earliest
deadlin
tri
later
altern
plan
later
deadlin
earlier
plan
fail
action
perform
earlier
partial
execut
plan
commit
choic
undon
roll
back
time
best
effect
undon
perform
compens
action
later
time
practic
implement
applic
would
desir
vide
method
control
choic
altern
howev
lack
space
address
control
issu
paper
dispatch
item
item
reactiv
rule
item
order
item
reliabl
causal
theori
initi
item
item
initi
state
dispatch
item
dispatch
item
fals
item
termin
item
item
reliabl
bob
fig
exampl
complex
consequ
oper
semant
kelp
maintain
singl
current
state
time
reason
reactiv
rule
gener
set
action
combin
set
extern
event
produc
consist
set
concurr
event
event
use
updat
current
state
erat
successor
state
succ
delet
fact
termin
event
ad
fact
initi
kelp
state
repres
set
atom
sentenc
also
call
ground
atom
fact
fluent
event
also
repres
atom
sentenc
set
atom
sentenc
understood
either
syntact
theori
semat
structur
second
interpret
underpin
logic
semant
kelp
state
event
repres
without
timestamp
tion
without
timestamp
outdoor
reliabl
bob
facilit
destruct
updat
fact
termin
set
event
fact
without
timestamp
simpli
persist
one
state
next
howev
represent
timestamp
outdoor
reliabl
bob
make
possibl
combin
state
event
singl
structur
vocabulari
kelp
sort
languag
includ
sort
time
version
kelp
present
paper
assum
time
linear
discret
success
timepoint
repres
tick
logic
clock
stand
stand
stand
thu
repres
state
time
repres
set
event
take
place
transit
state
represent
time
also
possibl
predic
predic
symbol
languag
partit
set
sent
fluent
event
auxiliari
predic
fluent
predic
repres
fact
state
last
argument
timestamp
fluent
atom
time
paramet
repres
time
state
fluent
belong
unstamp
fluent
atom
atom
without
timestamp
event
predic
repres
event
contribut
transit
one
state
next
last
argument
timestamp
event
atom
time
ramet
repres
time
successor
state
unstamp
event
atom
atom
without
time
paramet
event
predic
partit
extern
event
predic
action
predic
fluent
event
predic
time
paramet
call
refer
time
timestamp
exampl
deadlin
task
time
paramet
refer
time
express
time
deadlin
task
auxiliari
predic
two
kind
predic
exampl
isa
book
item
includ
time
paramet
tempor
constraint
predic
includ
inequ
form
timepoint
function
relationship
among
timepoint
max
min
time
paramet
kelp
tempor
constraint
constrain
timestamp
fluent
event
consequ
everi
tempor
constraint
reactiv
rule
contain
least
one
time
paramet
occur
timestamp
fluent
event
atom
rule
lp
auxiliari
predic
defin
logic
program
kelp
defin
simpli
possibl
infinit
set
aux
atom
sentenc
case
auxiliari
tempor
constraint
predic
assumpt
equival
sumption
made
semant
constraint
logic
program
clp
kelp
exploit
relationship
clp
use
constraint
solver
plifi
tempor
constraint
check
satisfi
consist
two
predic
initi
event
fluent
termin
event
fluent
specifi
event
perform
state
transit
illustr
figur
first
argument
set
event
cater
case
two
event
togeth
differ
effect
event
buy
two
book
get
cheaper
one
half
price
two
peopl
push
heavi
object
move
one
person
alon
second
argument
fluent
without
timestamp
lp
predic
defin
logic
program
kelp
defin
atom
causal
theori
also
contain
constraint
precondit
notat
set
fluent
without
timestamp
repres
singl
state
repres
set
fluent
timestamp
eventsi
set
event
without
timestamp
take
place
transit
state
state
repres
set
event
timestamp
exampl
figur
elsewher
paper
use
variabl
definit
auxiliari
predic
shorthand
set
ground
instanc
definit
earlier
paper
causal
theori
call
domain
theori
kelp
framework
definit
kelp
framework
program
tripl
aux
set
reactiv
rule
aux
set
ground
atom
defin
auxiliari
predic
causal
theori
manag
item
item
instock
item
rule
construct
formula
repres
complex
pattern
state
event
express
conjunct
fol
condit
tempor
constraint
oper
fol
condit
queri
aux
timestamp
state
time
augment
recent
set
event
definit
auxiliari
predic
exampl
fol
tion
behav
queri
return
manag
whose
depart
item
item
stock
time
variabl
item
said
bound
condit
variabl
unbound
condit
see
later
depend
condit
occur
reactiv
rule
variabl
either
univers
existenti
quantifi
rule
definit
fol
condit
fol
formula
contain
exactli
one
timestamp
either
constant
variabl
whose
atom
either
fluent
atom
event
atom
auxiliari
predic
timestamp
variabl
bound
quantifi
fol
condit
definit
complex
pattern
state
event
complex
short
possibl
empti
conjunct
fol
condit
tempor
constraint
time
variabl
tempor
constraint
complex
occur
time
paramet
fol
condit
complex
function
depend
time
paramet
exampl
function
depend
max
function
depend
plu
definit
reactiv
rule
simpli
rule
sentenc
form
consequ
set
variabl
includ
time
variabl
occur
anteced
bound
fol
condit
set
variabl
includ
time
variabl
occur
consequ
bound
fol
condit
consequ
disjunct
consequentn
anteced
anteced
consequenti
complex
everi
substitut
replac
time
variabl
ground
time
tempor
constraint
anteced
consequ
true
aux
timestamp
fol
condit
consequ
later
equal
timestamp
fol
condit
anteced
everi
tempor
constraint
consequenti
contain
least
one
timestamp
ble
occur
fol
condit
consequenti
function
depend
timestamp
variabl
intuit
bullet
restrict
reactiv
rule
one
whose
anteced
conjunct
fol
condit
past
present
whose
consequ
disjunct
conjunct
fol
condit
present
futur
last
bullet
prevent
rule
constraint
consequ
constrain
timestamp
anteced
restrict
quantifi
logic
equival
omit
quantifi
simpli
write
anteced
consequ
anteced
consequentn
variabl
unbound
fol
condit
becom
bound
either
univers
existenti
depend
condit
occur
rule
exampl
condit
manag
item
item
instock
item
occur
anteced
rule
bound
univers
er
rule
condit
occur
consequ
rule
occur
anteced
rule
bound
existenti
quantifi
consequ
rule
avoid
ambigu
fol
condit
consequ
rule
empti
anteced
write
rule
form
true
consequ
note
oper
semant
compon
fol
condit
evalu
togeth
aux
sever
fol
condit
evalu
time
timestamp
unifi
time
note
also
anteced
empti
anteced
equival
true
consequ
empti
consequ
equival
fals
fol
condit
contain
action
atom
evalu
aux
like
fol
condit
howev
action
atom
act
conjunct
fol
condit
act
consequ
rule
also
select
candid
execut
transit
next
state
action
atom
call
bare
action
atom
definit
let
consequenti
rule
form
act
act
action
atom
act
bare
action
atom
consequenti
state
transit
perform
mean
causal
theori
impos
dition
set
event
defin
postcondit
set
event
definit
causal
theori
cpost
cpre
consist
two
part
cpost
set
atom
sentenc
defin
predic
initi
termin
cpre
set
sentenc
form
current
event
fals
current
possibl
empti
fol
condit
timestamp
event
fol
simplic
say
formula
particular
form
mean
formula
rewritten
form
simpli
reorder
conjunct
disjunct
take
commut
associ
account
item
dispatch
item
fals
condit
timestamp
contain
fluent
variabl
explicitli
bound
fol
condit
implicitli
univers
quantifi
syntax
cpre
allow
specif
typic
precondit
cution
singl
action
item
fluent
initi
termin
action
stock
item
dispatch
item
respect
syntax
cpre
also
allow
prohibit
concurr
set
event
also
possibl
specifi
certain
action
must
exampl
figur
send
apolog
item
alreadi
patch
dispatch
prevent
mean
precondit
dispatch
item
item
fals
dispatch
item
item
fals
dispatch
item
dispatch
item
fals
fals
dispatch
item
fluent
initi
action
dispatch
item
use
atom
sentenc
defin
predic
initi
termin
similar
use
strip
fike
nilsson
howev
gener
first
argument
predic
set
event
defin
fluent
initi
termin
set
concurr
event
explicitli
mean
atom
sentenc
practic
clarifi
semant
simplifi
oper
semant
moreov
pave
way
practic
represent
initi
termin
defin
logic
program
lp
kelp
semant
oper
semant
kelp
state
updat
ad
delet
semant
kelp
truth
valu
rule
precondit
cpre
defin
accord
standard
semant
classic
logic
contrast
semant
modal
logic
state
repres
possibl
world
link
access
relat
fluent
fluent
affect
updat
left
untouch
definit
aux
kelp
framework
set
unstamp
fluent
repres
singl
state
set
unstamp
event
repres
rent
event
associ
successor
state
succ
termin
cpost
initi
cpost
semant
fluent
event
timestamp
includ
singl
structur
aux
notat
initi
state
exti
sequenc
set
extern
event
actsi
sequenc
set
action
succ
evi
exti
actsi
comput
convent
reactiv
system
consist
gener
stream
acti
action
respons
stream
evi
extern
event
previous
gener
action
comput
kelp
similar
purpos
name
make
reactiv
rule
precondit
action
true
definit
given
kelp
framework
aux
initi
state
tation
task
everi
everi
sequenc
evi
set
extern
event
previous
gener
action
gener
set
action
cpre
true
herbrand
interpret
aux
definit
truth
reactiv
rule
classic
definit
sentenc
fol
consequ
comput
task
allow
gener
action
make
rule
true
make
anteced
fals
make
quent
true
whether
anteced
true
fals
also
allow
manc
action
irrelev
task
kind
prevent
activ
irrelev
action
gener
convent
reactiv
system
gener
kelp
paper
identifi
kind
reactiv
model
gener
kelp
oper
semant
note
kelp
gener
action
need
direct
reaction
current
situat
partial
respons
earlier
situat
herbrand
interpret
semant
herbrand
interpret
simplifi
version
standard
semant
logic
definit
given
sort
languag
herbrand
univers
set
ground
term
construct
set
constant
function
symbol
vocabulari
herbrand
base
set
ground
atom
construct
icat
symbol
ground
term
vocabulari
herbrand
interpret
subset
herbrand
base
herbrand
model
set
sentenc
brand
interpret
everi
sentenc
true
one
differ
standard
definit
truth
base
case
brand
interpret
ground
atom
true
differ
definit
truth
univers
existenti
quantifi
tenc
sentenc
form
true
sort
sentenc
true
similarli
true
sort
sentenc
true
sensibl
herbrand
univers
need
standard
nition
truth
thu
consequentn
true
everi
ground
instanc
anteced
true
exist
ground
instanc
consequenti
also
true
substitut
replac
variabl
respect
term
appropri
sort
herbrand
univers
simplic
assum
except
time
paramet
fluent
ground
instanc
state
tempor
structur
kelp
interpret
timestamp
fluent
event
restrict
syntax
kelp
provid
herbrand
interpret
kelp
program
rich
structur
interpret
structur
captur
follow
theorem
immedi
consequ
definit
truth
true
aux
true
aux
theorem
given
kelp
framework
aux
initi
state
sequenc
set
event
evi
conjunct
tempor
constraint
whose
time
paramet
ground
true
aux
true
aux
conjunct
fol
condit
tempor
constraint
whose
time
paramet
ground
timestamp
time
latest
timestamp
true
aux
true
aux
obviou
similar
possibl
world
semant
modal
logic
aux
similar
possibl
world
singl
interpret
aux
similar
complet
frame
possibl
world
access
relat
possibl
world
semant
fluent
belong
possibl
world
event
belong
access
relat
kelp
fluent
event
timestamp
contain
singl
interpret
aux
sequenc
tempor
constraint
complex
impos
partial
order
timestamp
fol
condit
complex
although
timestamp
partial
order
complex
use
recogn
gener
linearli
order
sequenc
state
satisfi
fol
condit
complex
use
notat
distinguish
differ
sequenc
repres
complex
notat
part
kelp
object
languag
use
defin
reactiv
interpret
oper
semant
kelp
intuit
sequenc
form
earlier
later
mean
fol
condit
earlier
evalu
recognis
erat
fol
condit
later
definit
let
earlier
earlier
later
earlier
later
sequenc
form
earlier
later
form
earlier
later
exist
substitut
time
variabl
earlier
later
tempor
constraint
earlier
later
true
aux
timestamp
fol
condit
earlier
earlier
earlier
equal
timestamp
fol
condit
later
notic
true
true
allow
sequenc
exampl
complex
strict
sequenc
true
true
earlier
paper
allow
action
select
execut
tain
variabl
variabl
instanti
cess
execut
feedback
environ
paper
restrict
select
action
one
variabl
purpos
requir
kelp
framework
definit
kelp
framework
aux
rang
restrict
everi
bare
action
atom
act
contain
variabl
rule
form
anteced
earlier
act
rest
sequenc
ent
earlier
act
rest
variabl
act
occur
anteced
earlier
reactiv
interpret
figur
figur
exemplifi
differ
kind
model
kelp
program
follow
definit
character
reactiv
interpret
model
loos
speak
action
occur
reactiv
interpret
occur
bare
action
atom
one
altern
consequ
instanc
reactiv
rule
earlier
fol
condit
anteced
altern
consequ
instanc
rule
alreadi
true
interpret
time
action
definit
given
rang
restrict
kelp
framework
aux
initi
state
set
timestamp
event
let
cpre
true
aux
let
partit
extern
event
action
reactiv
everi
action
action
exist
rule
form
anteced
earlier
act
rest
exist
substitut
support
action
sens
action
act
anteced
earlier
act
rest
anteced
earlier
act
true
reactiv
model
aux
reactiv
interpret
true
suffici
requir
later
complex
want
allow
later
tempor
constraint
time
variabl
occur
earlier
note
condit
allow
rest
fals
kelp
oper
semant
oper
semant
exploit
intern
structur
kelp
interpret
aux
gener
progress
extend
partial
interpret
aux
one
step
time
moreov
maintain
unstamp
current
state
event
evi
gave
rise
without
rememb
earlier
state
event
recognis
complex
sequenc
state
event
anteced
rule
without
rememb
past
state
event
maintain
current
set
tialli
evalu
rule
need
monitor
futur
exampl
suppos
contain
rule
contain
event
occurr
evalu
condit
augment
current
state
add
new
rule
also
maintain
goal
state
contain
partial
evalu
altern
plan
made
true
futur
exampl
contain
event
currenc
evalu
ment
current
state
true
add
new
goal
logic
goal
state
conjunct
gin
gij
junction
partial
evalu
altern
plan
make
true
consequ
instanc
rule
whose
anteced
alreadi
becom
true
precis
disjunct
gij
instanti
remaind
later
rule
anteced
earlier
later
whose
earlier
part
anteced
earlier
readi
true
partial
interpret
aux
ate
far
similar
goal
claus
logic
program
disjunct
later
also
call
goal
claus
kelp
oper
goal
state
set
conjunct
independ
thread
gij
thread
goal
tree
root
node
instanti
consequ
rule
whose
anteced
alreadi
becom
true
node
goal
claus
goal
tree
represent
help
structur
search
space
altern
plan
guid
search
altern
goal
tree
search
fashion
implement
stack
prolog
backtrack
sibl
previous
gener
action
state
undon
follow
abstract
specif
ignor
mani
optim
improv
effici
describ
kowalski
sadri
optim
restrict
model
gener
henc
affect
relationship
interpret
gener
interpret
sanction
definit
reactiv
interpret
follow
definit
present
agent
cycl
end
cycl
extern
event
input
combin
select
action
ing
combin
set
event
use
updat
current
state
version
updat
perform
begin
cycl
definit
cycl
given
rang
restrict
kelp
framework
aux
initi
state
let
let
goal
state
obtain
creat
everi
rule
form
true
consequ
goal
tree
consequ
root
ad
disjunct
consequ
whose
constraint
satisfi
aux
child
root
let
without
rule
given
evi
cycl
consist
follow
step
step
evalu
anteced
everi
sequenc
current
later
anteced
instanc
rule
form
current
consequ
current
complex
add
later
consequ
new
reactiv
rule
current
true
aux
instanti
variabl
current
instanti
variabl
timestamp
fol
condit
current
current
contain
tempor
constraint
anteced
becom
true
aux
result
evalu
fol
condit
current
later
empti
equival
true
delet
later
consequ
start
new
thread
consequ
root
add
disjunct
consequ
whose
constraint
satisfi
aux
child
root
step
evalu
goal
claus
choos
set
sequenc
current
later
instanc
goal
claus
current
complex
one
thread
choic
add
later
child
true
aux
instanti
variabl
current
instanti
variabl
timestamp
fol
condit
current
current
contain
tempor
constraint
becom
true
aux
step
choos
candid
action
choos
set
sequenc
action
rest
instanc
goal
claus
one
thread
ate
timestamp
variabl
action
action
junction
ground
bare
action
atom
timestamp
let
set
action
atom
action
step
updat
subset
cpre
true
aux
extern
event
given
let
succ
note
action
act
goal
claus
select
step
success
execut
step
candid
select
step
next
cycl
act
date
select
evalu
true
moreov
occurr
act
goal
claus
evalu
true
cycl
even
select
step
previou
cycl
result
evalu
fol
condit
current
note
attempt
make
instanc
consequ
reactiv
rule
true
even
though
instanc
consequ
alreadi
made
true
avoid
easili
ad
extra
case
step
gou
case
step
would
make
correspond
definit
reactiv
interpret
complex
howev
optimis
made
without
affect
definit
reactiv
interpret
optimis
includ
remov
rule
whose
anteced
time
remov
goal
claus
contain
fluent
event
atom
time
relationship
oper
semant
proof
sound
lp
kowalski
sadri
also
appli
kelp
detail
proof
given
appendix
theorem
sound
given
kelp
framework
aux
initi
state
sequenc
exti
set
extern
event
suppos
ate
sequenc
set
actsi
action
state
cpre
true
aux
everi
goal
tree
ad
goal
state
goal
claus
true
ad
goal
tree
goal
state
follow
theorem
characteris
interpret
gener
correct
result
reactiv
interpret
detail
proof
appendix
theorem
everi
interpret
gener
reactiv
given
rang
restrict
kelp
framework
aux
initi
state
set
extern
event
let
set
action
gener
aux
reactiv
interpret
proof
sketch
sketch
proof
case
variabl
rule
consequ
replac
ground
instanc
result
ground
tempor
constraint
evalu
result
rule
longer
contain
tempor
constraint
show
action
gener
support
show
alli
goal
claus
goal
state
exist
rule
form
anteced
earlier
earlier
anteced
earlier
true
aux
action
act
gener
belong
act
select
candid
step
time
goal
claus
sequenc
act
rest
follow
support
act
support
follow
theorem
kind
complet
result
reactiv
interpret
detail
proof
appendix
theorem
everi
reactiv
interpret
gener
given
rang
restrict
kelp
framework
aux
initi
state
extern
event
let
set
action
aux
reactiv
interpret
exist
choic
step
gener
therefor
gener
proof
sketch
sketch
case
variabl
rule
consequ
replac
ground
instanc
tempor
constraint
evalu
let
acti
action
time
support
rule
form
anteced
earli
acti
rest
anteced
earli
true
aux
suffic
show
contain
goal
claus
form
acti
rest
choos
candid
action
step
combin
extern
event
candid
action
step
set
action
acti
show
contain
goal
claus
form
acti
rest
show
gener
time
support
action
exist
choic
step
either
form
earli
late
late
anteced
earli
true
aux
form
later
consequ
later
consequ
earlier
true
aux
frame
axiom
causal
theori
employ
frame
axiom
repres
reason
chang
state
frame
axiom
repres
erti
fluent
persist
one
state
next
unless
termin
event
give
rise
state
transit
use
either
reason
forward
copi
fluent
unchang
one
state
next
reason
backward
mine
whether
fluent
hold
state
determin
whether
hold
previou
state
use
destruct
assign
lp
kelp
avoid
tional
expens
form
reason
kowalski
sadri
show
frame
axiom
emerg
erti
lp
oper
semant
analog
show
exampl
associ
addit
emerg
properti
program
comput
addit
proof
lp
also
appli
kelp
fact
proof
pend
definit
succ
theorem
frame
axiom
emerg
properti
given
definit
cpost
predic
initi
termin
initi
state
sequenc
set
rent
event
evi
let
cpost
evi
fluent
follow
sentenc
true
succ
initi
termin
relat
work
develop
influenc
work
mani
differ
area
comput
includ
program
databas
artifici
intellig
make
task
comparison
relat
work
manag
focu
compar
approach
attempt
give
logic
semant
system
earlier
paper
kowalski
sadri
includ
extens
comparison
lp
mani
system
paper
relat
earlier
comparison
kelp
includ
relat
work
lp
sentenc
agent
agent
agent
sentenc
ture
sentenc
robot
sec
adj
agent
say
agent
human
noun
agent
say
agent
human
first
need
clarifi
relationship
kelp
lp
consid
exampl
reactiv
rule
lp
express
robot
goal
repli
sentenc
sentenc
said
agent
call
ture
predic
sentenc
repres
composit
event
action
start
end
time
lp
predic
defin
logic
program
use
recogn
gener
sentenc
logic
program
could
includ
among
claus
defin
predic
claus
say
repres
primit
event
start
end
time
kelp
primit
event
repres
simpli
end
time
infinit
mani
rule
includ
exampl
rule
say
robot
say
robot
say
robot
intellig
neither
practic
desir
lp
reactiv
rule
logic
program
far
know
chr
section
languag
deriv
alp
combin
reactiv
rule
logic
program
retain
separ
charact
languag
reactiv
rule
late
logic
program
treat
goal
fact
approach
give
logic
semant
reactiv
rule
translat
logic
program
simplifi
clarifi
investig
complet
paper
restrict
attent
reactiv
rule
kelp
kelp
possibl
get
similar
effect
lp
replac
one
rule
say
ture
say
ture
say
ture
human
abduct
logic
program
alp
event
calculu
lp
therefor
kelp
origin
earlier
work
alp
fung
alski
kaka
alp
agent
kowalski
sadri
kowalski
alp
extend
logic
program
allow
certain
predic
call
abduc
open
predic
assum
order
solv
problem
assumpt
restrict
mean
integr
constraint
alp
agent
abduc
predic
repres
action
integr
constraint
includ
tive
rule
main
differ
us
destruct
updat
state
transit
wherea
alp
agent
use
event
calculu
kowalski
sergot
although
event
calculu
view
solv
frame
problem
nahan
believ
compet
practic
applic
structiv
chang
state
howev
destruct
chang
state
obviou
logic
semant
particular
state
axiomat
theori
syntact
object
destruct
chang
state
problemat
possibl
chang
axiom
cours
tri
prove
theorem
retain
ontolog
event
calculu
replac
explicit
sone
event
calculu
axiom
implicit
construct
timestamp
brand
interpret
consequ
gener
reactiv
model
contrast
use
event
calculu
alp
agent
also
gener
prevent
proactiv
model
lp
inherit
alp
properti
model
contain
irrelev
action
alp
irrelev
action
avoid
minim
set
action
contain
model
lp
gener
irrelev
action
reduc
gener
reactiv
interpret
contain
action
instanc
action
atom
occur
explicitli
consequ
reactiv
rule
metatem
best
knowledg
metatem
barring
framework
base
alp
describ
state
transit
reactiv
rule
logic
form
treat
comput
model
gener
program
metatem
consist
sentenc
modal
tempor
logic
form
past
present
formula
impli
present
futur
formula
comput
consist
gener
model
sentenc
true
metatem
formal
distinguish
event
fluent
explicit
causal
theori
frame
axiom
logic
program
ten
need
form
reactiv
rule
like
kelp
metatem
lack
logic
program
lp
main
differ
kelp
time
repres
explicitli
model
classic
rather
model
construct
mean
destruct
updat
lp
differ
logic
program
separ
addit
reactiv
rule
barring
present
oper
semant
proposit
tatem
without
extern
event
despit
claim
page
metatem
complet
exampl
model
kelp
translat
metatem
show
metatem
gener
reactiv
model
therefor
incomplet
constraint
handl
rule
chr
closer
lp
syntact
structur
express
power
languag
chr
constraint
handl
rule
frühwirth
lp
two
kind
rule
equival
propag
rule
equival
use
like
ordinari
logic
program
also
use
simplif
propag
rule
logic
implic
use
reason
forward
like
reactiv
rule
kelp
abdennadh
schütz
extend
chr
includ
disjunct
quent
propag
rule
like
reactiv
rule
kelp
oper
semant
propag
rule
similar
kelp
oper
semant
propag
rule
equival
similar
lp
chr
classic
logic
semant
comput
interpret
similar
iff
fung
kowalski
semant
justifi
destruct
updat
chr
also
translat
linear
logic
betz
frühwirth
justifi
structiv
updat
style
lp
without
use
timestamp
linear
logic
semant
chr
differ
semant
time
repres
explicitli
state
tion
perform
mean
causal
theori
although
propag
rule
similar
reactiv
rule
clear
complet
incomplet
relat
complet
result
product
system
product
system
comput
languag
program
set
sentenc
form
condit
action
state
transit
perform
evalu
condit
current
state
execut
correspond
action
ing
conflict
resolut
choos
conflict
action
chosen
action
destruct
updat
current
state
attempt
understand
logic
product
system
tionship
logic
program
led
develop
lp
explain
lp
sever
author
also
attempt
provid
product
rule
logic
semant
mostli
map
logic
program
raschid
particular
transform
product
rule
logic
program
us
fix
point
semant
logic
program
perform
forward
chain
baral
lobo
hand
translat
product
rule
situat
calculu
repres
logic
program
stabl
model
semant
recent
damásio
use
increment
answer
set
program
asp
realiz
differ
conflict
resolut
strategi
product
system
dialect
eiter
simul
product
system
asp
face
extern
environ
perform
state
chang
updat
access
environ
via
action
atom
extern
atom
gebser
use
junctiv
logic
program
without
existenti
quantifi
repres
reactiv
rule
asp
reason
dynam
system
run
onlin
chang
environ
best
knowledg
none
map
logic
program
form
destruct
updat
manner
product
system
contrast
approach
reformul
product
rule
reactiv
rule
logic
program
lp
logic
program
like
tive
databas
reactiv
rule
like
databas
integr
constraint
integr
constraint
semant
kelp
fundament
investig
complet
paper
base
upon
semant
riti
constraint
deduct
databas
alp
howev
histor
tive
kowalski
semant
one
two
main
nativ
altern
view
integr
straint
queri
meant
theorem
logic
consequ
databas
regard
theori
parallel
world
logic
program
shift
away
view
comput
view
work
semant
follow
shift
lp
semant
logic
program
kowalski
sadri
spirit
semant
van
gelder
case
kelp
role
logic
program
play
simpli
set
ground
atom
equival
relat
databas
reactiv
rule
similar
syntax
integr
constraint
form
disjunct
depend
relat
databas
wang
wherea
relat
databas
main
focu
lem
decid
whether
given
set
depend
logic
pli
anoth
depend
focu
gener
model
make
integr
constraint
form
reactiv
rule
precondit
cpre
true
recent
year
activ
deduct
databas
becom
associ
datalog
databas
logic
program
without
function
symbol
calì
extend
datalog
existenti
rule
similar
syntax
reactiv
rule
without
disjunct
consequ
similarli
view
integr
constraint
howev
wherea
reactiv
rule
logic
program
separ
compon
lp
logic
gram
special
case
existenti
rule
effect
guish
databas
integr
constraint
moreov
deal
one
databas
state
time
deal
databas
updat
gener
answer
queri
use
procedur
call
chase
maier
also
use
wang
gavanelli
map
alp
show
sciff
proof
procedur
alberti
extend
iff
proof
procedur
fung
kowalski
gener
answer
chase
procedur
iff
proof
procedur
turn
one
progenitor
iff
proof
procedur
turn
similar
satchmo
proof
procedur
manthey
bri
full
clausal
form
logic
satchmo
procedur
view
prover
transact
logic
transact
logic
bonner
kifer
formal
defin
transact
similar
complex
plan
similarli
updat
state
logic
program
databas
transact
logic
semant
like
possibl
world
semant
modal
logic
base
set
possibl
world
state
unlik
modal
logic
truth
valu
transact
defin
along
path
state
start
state
begin
transact
end
state
end
transact
state
transit
perform
mean
tive
updat
although
direct
analogu
reactiv
rule
simul
transact
rezk
kifer
use
simul
give
semant
product
system
languag
kelp
share
view
comput
make
goal
true
ing
sequenc
destruct
updat
state
moreov
inclus
fol
dition
larg
inspir
similar
fol
condit
action
main
differ
kelp
transact
consequ
reactiv
rule
trigger
anteced
becom
true
time
sent
explicitli
state
action
event
combin
singl
theoret
structur
trev
gome
alfer
extend
combin
gener
plex
transact
recognit
complex
event
consequ
pressiv
power
similar
kelp
repres
complex
event
complex
transact
separ
without
combin
reactiv
rule
logic
implic
activ
databas
number
research
attempt
develop
semant
activ
databas
major
approach
map
reactiv
rule
form
eca
rule
logic
program
exampl
zaniolo
lausen
use
frame
axiom
similar
theorem
reduc
eca
rule
logic
program
action
condit
event
fernand
give
separ
logic
formalis
event
condit
action
without
combin
reactiv
rule
logic
implic
like
product
system
unlik
activ
databas
restrict
rule
whose
anteced
queri
current
state
whose
consequ
updat
current
state
agent
languag
bailey
argu
although
differ
intend
applic
research
commun
mani
agent
languag
develop
similar
activ
databas
system
particular
agent
plan
bdi
agent
similar
eca
rule
activ
databas
moreov
bdi
agent
activ
databas
maintain
destruct
updat
databas
state
lack
declar
semant
lp
direct
descend
alp
agent
emb
alp
think
compon
agent
cycl
alp
agent
logic
program
repres
agent
belief
initi
goal
integr
constraint
repres
agent
goal
desir
databas
updat
use
event
calculu
use
frame
om
alp
agent
approach
develop
kgp
agent
model
mancarella
contrast
oper
semant
lp
employ
destruct
updat
databas
repres
current
state
event
condit
goal
action
destruct
updat
lp
inspir
part
use
languag
agentspeak
rao
program
agentspeak
collect
statement
form
event
addit
delet
belief
liter
goal
atom
store
databas
condit
queri
databas
goal
action
updat
databas
ad
delet
goal
belief
result
plan
bine
function
reactiv
rule
logic
program
lp
howev
allow
complex
event
event
condit
part
plan
includ
tempor
constraint
moreov
logic
semant
fact
addit
belief
liter
arrow
opposit
arrow
logic
implic
number
author
also
develop
agent
languag
system
logic
program
context
exampl
dali
costantini
tocchio
evolp
brogi
event
transform
initi
agent
logic
program
quenc
logic
program
era
alfer
extend
evolp
complex
event
complex
action
rule
semant
evolutionari
sequenc
logic
program
dali
evolp
era
given
associ
sequenc
model
era
eca
rule
translat
logic
gram
form
condit
event
contrast
distinguish
semant
logic
program
reactiv
rule
combin
quenc
state
event
singl
model
use
timestamp
flux
thielscher
constraint
logic
program
languag
ment
intellig
agent
use
fluent
calculu
one
object
fluent
calculu
avoid
comput
ineffici
reason
frame
axiom
reifi
state
list
fluent
howev
list
represent
quir
explicit
use
recurs
queri
whether
fluent
member
list
repres
state
delet
fluent
termin
action
bli
nearli
ineffici
reason
explicit
frame
axiom
contrast
state
repres
explicitli
languag
sent
implicitli
set
fluent
membership
delet
perform
associ
flux
state
updat
sens
action
seem
analogu
reactiv
rule
governatori
rotolo
author
present
effici
algorithm
comput
extens
tempor
defeas
logic
tdl
gram
tdl
logic
implic
time
stamp
similar
reactiv
rule
kelp
time
complex
algorithm
proport
size
rule
much
effici
explicit
reason
event
calculu
style
frame
axiom
howev
algorithm
describ
term
destruct
updat
difficult
compar
directli
kelp
approach
focu
intern
reason
individu
agent
treat
agent
part
extern
environ
contrast
sciff
alberti
focu
directli
specif
verif
tem
abstract
away
intern
structur
individu
agent
us
alp
repres
expect
behavior
agent
variant
iff
proof
procedur
fung
kowalski
verifi
actual
behaviour
conform
expect
integr
constraint
sciff
resembl
eca
rule
use
specifi
currenc
event
gener
event
timestamp
relat
fluent
causal
theori
reactiv
system
program
languag
although
lp
origin
logic
program
ture
complet
kernel
lp
reactiv
rule
shift
logic
program
reactiv
rule
reflect
better
appreci
fundament
role
state
transit
system
area
comput
includ
reactiv
system
program
languag
david
harel
put
much
literatur
also
seem
ment
state
event
piori
rather
natur
medium
describ
dynam
behaviour
complex
system
basic
fragment
descript
state
transit
take
gener
form
event
occur
state
condit
true
time
system
transfer
state
harel
contrast
reactiv
system
transform
system
transform
input
put
pure
declar
manner
arguabl
lp
reconcil
harel
two
kind
comput
system
reactiv
rule
provid
reactiv
part
logic
program
provid
structur
transform
part
contrast
shapiro
argu
concurr
logic
program
languag
well
suit
specifi
reactiv
system
languag
state
comput
consist
goal
sequenc
atom
assign
valu
variabl
goal
program
guard
horn
claus
form
head
guard
bodi
goal
atom
match
head
satisfi
guard
reduc
goal
atom
bodi
goal
atom
view
process
goal
whole
view
network
concurr
process
process
commun
instanti
share
logic
variabl
extern
environ
repres
process
whose
haviour
specifi
anoth
concurr
logic
program
approach
reactiv
system
differ
state
set
atom
oper
closer
coordin
languag
linda
carriero
gelernt
ce
interact
medium
share
state
wherea
harel
see
need
transform
reactiv
system
shapiro
reduc
kind
system
logic
program
gurevich
model
varieti
comput
abstract
state
machin
asm
program
rule
form
guard
assign
state
abstract
structur
consist
object
function
state
transit
perform
evalu
guard
rule
guard
assign
true
current
state
execut
correspond
assign
destruct
parallel
rule
asm
similar
rule
product
system
reactiv
rule
kelp
howev
asm
rule
restrict
rule
whose
anteced
consequ
involv
entir
complex
ralli
constrain
fol
condit
compar
lp
state
bine
singl
model
individu
state
asm
charact
moreov
syntax
guard
assign
asm
mean
logic
implic
conclus
futur
work
paper
make
contribut
analyz
relationship
tional
semant
kelp
futur
would
use
extend
result
lp
would
also
interest
extend
captur
interpret
satisfi
semant
practic
side
would
use
extend
reactiv
rule
allow
complex
event
condit
extens
would
affect
mantic
implement
exampl
store
window
past
event
also
import
explor
treatment
concurr
greater
depth
cialli
context
system
extern
event
singl
agent
includ
action
gener
agent
number
implement
lp
make
avail
wider
use
major
prioriti
futur
work
acknowledg
grate
anonym
refere
care
read
earlier
submiss
mani
help
comment
refer
abdennadh
schütz
chrv
flexibl
queri
languag
fqa
alberti
chesani
gavanelli
lamma
mello
torroni
verifi
agent
interact
abduct
logic
program
sciff
framework
acm
tion
comput
logic
tocl
alfer
banti
brogi
logic
program
languag
european
confer
logic
artifici
intellig
jelia
lectur
note
artifici
intellig
bailey
georgeff
kemp
kinni
ramamohanarao
activ
base
agent
comparison
rule
databas
system
baral
lobo
character
product
system
use
logic
program
situat
calculu
http
barring
fisher
gabbay
owen
reynold
imper
futur
principl
execut
tempor
logic
john
wiley
son
betz
frühwirth
semant
constraint
handl
rule
principl
practic
constraint
program
springer
berlin
berg
bonner
kifer
logic
program
warren
logic
program
proc
intern
conf
brogi
leit
pereira
evolv
logic
program
european
confer
logic
artifici
intellig
flesca
greco
leon
ianni
ed
lnc
calì
gottlob
lukasiewicz
unifi
approach
ontolog
integr
constraint
proc
intern
confer
databas
acm
carriero
gelernt
linda
context
commun
acm
costantini
tocchio
dali
logic
program
guag
alfer
leit
ed
jelia
lnc
lnai
vol
springer
delberg
damásio
alfer
leit
declar
semant
rule
interchang
format
product
rule
dialect
semant
eiter
feier
fink
simul
product
rule
use
acthex
rect
reason
fernand
william
paton
integr
activ
deduct
databas
new
gener
comput
vol
fike
nilsson
strip
new
approach
applic
theorem
prove
problem
solv
artifici
intellig
frühwirth
theori
practic
constraint
handl
rule
journal
logic
program
frühwirth
constraint
handl
rule
cambridg
univers
press
fung
kowalski
iff
proof
procedur
abduct
logic
ming
journal
logic
program
gavanelli
lamma
riguzzi
bellodi
zese
cota
abduct
logic
program
ontolog
proceed
iclp
gebser
grote
kaminski
schaub
reactiv
answer
set
program
logic
program
nonmonoton
reason
springer
berlin
heidelberg
gelfond
lifschitz
stabl
model
semant
logic
program
vol
gome
alfer
transact
logic
complex
print
governatori
rotolo
comput
tempor
defeas
logic
ruleml
gurevich
sequenti
machin
captur
sequenti
algorithm
acm
transact
comput
logic
tocl
harel
statechart
visual
formal
complex
system
sci
comput
gram
jaffar
lassez
constraint
logic
program
proceed
acm
symposium
principl
program
languag
acm
kaka
kowalski
toni
role
logic
program
abduct
handbook
logic
artifici
intellig
program
oxford
univers
press
kaka
mancarella
sadri
stathi
toni
kgp
model
agenc
proc
kowalski
comput
logic
human
think
artifici
gent
cambridg
univers
press
kowalski
logic
problem
solv
revisit
edit
thom
frühwirth
herstel
und
verlag
book
demand
gmbh
norderstedt
kowalski
sadri
logic
program
toward
system
annal
mathemat
artifici
intellig
vol
kowalski
sadri
integr
logic
program
product
system
abduct
logic
program
agent
proceed
third
intern
enc
web
reason
rule
system
chantilli
virginia
usa
kowalski
sadri
agent
languag
destruct
assign
semant
dix
leit
governatori
jamroga
ed
proc
intern
workshop
comput
logic
system
clima
kowalski
sadri
abduct
logic
program
agent
destruct
databas
annal
mathemat
artifici
intellig
vol
kowalski
sadri
framework
reactiv
system
rule
web
research
applic
ruleml
ki
giurca
ed
lnc
kowalski
sadri
logic
character
reactiv
system
languag
ruleml
bikaki
ed
ruleml
lnc
springer
publish
switzerland
kowalski
sadri
oper
semant
reactiv
comput
new
gener
comput
kowalski
sergot
calculu
event
new
gener
pute
lausen
ludäscher
may
activ
deduct
databas
statelog
approach
transact
chang
logic
databas
maier
mendelzon
sagiv
test
implic
data
depend
acm
tran
databas
syst
manthey
bri
satchmo
theorem
prover
implement
prolog
ceed
cade
lectur
note
comput
scienc
springer
mancarella
terreni
sadri
toni
endriss
ciff
proof
dure
abduct
logic
program
constraint
theori
implement
periment
theori
practic
logic
program
paschk
boley
zhao
teymourian
athan
reaction
ruleml
standard
semant
reaction
rule
rule
web
research
applic
springer
berlin
heidelberg
rao
agentspeak
bdi
agent
speak
logic
comput
languag
agent
break
away
rao
georgeff
bdi
agent
theori
practic
intern
confer
multiag
system
icma
raschid
semant
class
stratifi
product
system
program
journal
logic
program
rezk
kifer
formal
product
system
ontolog
foundat
inform
knowledg
system
shanahan
solv
frame
problem
mathemat
investig
common
sens
law
inertia
mit
press
shapiro
famili
concurr
logic
program
languag
acm
comput
survey
csur
thielscher
flux
logic
program
method
reason
agent
theori
practic
logic
program
van
gelder
ross
schlipf
semant
gener
logic
program
journal
acm
jacm
wang
topor
maher
reason
disjunct
constrain
gener
depend
dexa
zaniolo
unif
activ
databas
deduct
databas
advanc
databas
springer
berlin
heidelberg
appendix
theorem
given
kelp
framework
aux
initi
state
sequenc
exti
set
extern
event
suppos
gener
set
actsi
action
state
cpre
true
aux
everi
goal
tree
ad
goal
state
goal
claus
true
ad
goal
tree
goal
state
proof
show
cpre
true
aux
suffic
show
cpre
true
aux
ensur
step
ear
true
aux
ear
con
con
consequ
show
true
aux
need
show
everi
rule
form
anteced
consequ
whenev
instanc
anteced
anteced
true
correspond
instanc
consequ
consequ
also
true
anteced
true
anteced
come
true
time
aux
quent
ad
root
new
goal
tree
current
goal
state
junct
consequentj
whose
tempor
constraint
satisfi
aux
ad
child
root
node
clearli
consequentj
impli
consequ
true
consequentj
true
consequ
true
truth
true
consequentj
follow
gener
fact
goal
claus
ad
step
child
goal
claus
true
therefor
exist
goal
state
true
ad
goal
tree
consequ
impli
consequ
true
time
therefor
consequ
true
proof
theorem
us
lemma
prove
use
lemma
lemma
let
rule
exist
rule
form
ear
con
consequ
substitut
ground
variabl
ear
proof
let
number
applic
step
deriv
proof
induct
base
case
deriv
applic
step
follow
form
ear
con
consequ
ear
empti
equival
true
let
empti
substitut
induct
step
let
ad
applic
step
rule
step
form
current
consequ
form
true
aux
instanti
variabl
current
instanti
timestamp
variabl
fol
condit
current
induct
hypothesi
appli
exist
rule
form
earlier
curr
rest
conseq
substitut
ground
variabl
earlier
earlier
true
aux
earlier
curr
rest
ear
true
aux
ear
con
con
consequ
prof
base
case
current
curr
later
rest
earlier
curr
true
aux
earlier
curr
rest
rest
conseq
prof
induct
step
lemma
let
goal
claus
exist
rule
form
anteced
earlier
cond
substitut
ground
variabl
anteced
earlier
anteced
earlier
true
aux
earlier
cond
cond
proof
let
number
applic
step
deriv
proof
induct
similar
lemma
base
case
definit
exist
rule
form
true
earlier
earlier
empti
form
requir
statement
lemma
ad
step
contain
rule
form
new
root
node
ad
consequ
lemma
exist
rule
form
ear
con
consequ
substitut
ground
variabl
ear
let
consequ
form
altern
earlier
cond
earlier
true
cond
ground
variabl
ear
con
earlier
induct
step
let
ad
step
child
goal
claus
step
form
current
later
current
later
form
later
current
true
aux
instanti
variabl
current
instanti
timestamp
variabl
fol
condit
current
induct
hypothesi
appli
exist
rule
form
anteced
earlier
curr
rest
substitut
anteced
earlier
true
aux
earlier
curr
rest
current
curr
later
rest
ear
true
aux
ear
con
con
consequ
con
true
consequ
ear
con
earlier
true
aux
earlier
cond
cond
prof
base
case
ground
variabl
anteced
earlier
rest
prof
induct
step
true
aux
anteced
earlier
curr
earlier
curr
rest
theorem
given
rang
restrict
kelp
framework
aux
initi
state
set
extern
event
let
set
action
gener
aux
reactiv
interpret
proof
assum
action
action
ad
step
includ
step
time
follow
exist
sequenc
action
rest
instanc
goal
claus
action
rest
instanti
timestamp
variabl
action
time
lemma
exist
rule
form
anteced
earlier
substitut
ground
variabl
anteced
earlier
anteced
earlier
true
aux
follow
support
action
sens
action
rest
earlier
action
rest
action
anteced
earlier
anteced
earlier
true
moreov
step
ensur
cpre
true
aux
therefor
cpre
true
therefor
reactiv
end
proof
theorem
given
rang
restrict
kelp
framework
aux
initi
state
extern
event
let
set
action
aux
reactiv
interpret
exist
choic
step
gener
therefor
gener
proof
let
support
action
actt
time
show
tion
time
exist
choic
step
begin
cycl
time
either
exist
reactiv
rule
form
earlier
later
consequ
earlier
true
aux
later
consequ
instanc
earlier
later
exist
goal
claus
form
anteced
earli
late
anteced
earli
true
aux
late
instanc
anteced
earli
late
end
cycl
time
chosen
step
action
clearli
impli
statement
theorem
let
form
earlier
act
rest
support
act
earli
earlier
act
rest
earli
empti
true
desir
goal
claus
otherwis
form
later
consequ
later
empti
form
earlier
later
consequ
earlier
empti
desir
reactiv
rule
case
hold
also
hold
action
time
let
assum
hold
begin
cycl
time
hold
end
cycl
time
show
hold
time
let
induct
hypothesi
either
hold
time
suppos
first
hold
time
exist
reactiv
rule
form
earlier
later
consequ
earlier
true
aux
earlier
later
later
consequ
instanc
timestamp
later
equal
persist
end
cycl
becom
desir
begin
next
cycl
hold
time
otherwis
later
form
current
rest
current
true
aux
current
rest
step
must
evalu
fol
condit
tempor
constraint
current
stanc
gener
rule
rest
consequ
instanc
therefor
form
earlier
current
rest
consequ
earlier
current
true
aux
rest
consequ
instanc
earlier
current
rest
rest
empti
persist
end
cycl
becom
desir
begin
next
cycl
hold
time
rest
empti
delet
add
new
goal
tree
root
node
consequ
instanc
support
action
actt
time
form
anteced
clusion
actt
bare
action
conjunct
conclus
add
goal
claus
child
new
root
node
form
anteced
conclus
anteced
true
aux
conclus
instanc
anteced
conclus
timestamp
fol
condit
conclus
equal
rewrit
clusion
earli
late
earli
empti
form
anteced
earli
late
anteced
earli
true
aux
late
instanc
anteced
earli
late
persist
end
cycl
becom
desir
begin
next
cycl
hold
time
otherwis
conclus
form
earli
late
earli
empti
earli
true
aux
earli
late
let
step
choos
evalu
fol
condit
tempor
constraint
earli
instanc
gener
goal
claus
late
instanc
form
anteced
earli
late
anteced
earli
true
aux
late
instanc
anteced
earli
late
persist
end
cycl
becom
desir
begin
next
cycl
hold
time
suppos
instead
induct
hypothesi
hold
exist
goal
claus
form
anteced
earli
late
anteced
earli
true
aux
late
instanc
anteced
earli
late
true
aux
timestamp
fol
condit
late
equal
persist
end
cycl
becom
desir
begin
next
cycl
hold
time
otherwis
late
form
current
rest
current
empti
current
true
aux
current
rest
let
step
choos
evalu
fol
condit
tempor
constraint
current
instanc
gener
goal
claus
rest
instanc
form
anteced
earli
current
rest
anteced
earli
current
rest
instanc
anteced
earli
current
rest
persist
end
cycl
becom
desir
begin
next
cycl
hold
time
show
hold
time
need
ensur
step
choos
acti
follow
ensur
form
anteced
earlier
action
rest
action
acti
support
acti
exist
goal
claus
action
rest
instanc
easi
see
step
includ
acti
actsi
cpre
true
step
choos
acti
among
action
gener
end
cycl
moreov
bare
action
atom
act
goal
claus
whether
whether
step
choos
act
step
choos
act
possibl
satisfi
cpre
