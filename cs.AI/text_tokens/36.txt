федеральное
государственное
автономное
образовательное
учреждение
высшего
профессионального
образования
сибирский
федеральный
университет
институт
математики
фундаментальной
информатики
базовая
кафедра
математического
моделирования
процессов
управления
бакалаврская
работа
направление
математика
порождающее
вероятностное
программирование
выпускник
юрий
научный
руководитель
сфу
татьяна
валерьевна
крупкина
адрес
корреспонденции
yuraperov
реферат
выпускная
квалификационная
бакалаврская
работа
теме
порождающее
ятностное
содержит
страниц
текста
использованных
ков
рисунков
ключевые
слова
вероятностное
программирование
машинное
обучение
искусственный
интеллект
вероятностные
модели
томатическое
моделирование
работа
посвящена
новому
направлению
области
машинного
обучения
терных
наук
вероятностному
программированию
работе
дается
краткое
ное
введение
языки
вероятностного
программирования
описываются
результаты
первых
экспериментов
автоматической
генерации
ностных
программ
содержание
введение
краткое
введение
языки
вероятностного
программирования
church
ventur
anglican
первое
знакомство
church
ventur
anglican
статистический
вывод
вероятностных
языках
программирования
щью
алгоритма
метод
выборки
пространство
историй
выполнений
вероятностных
программ
апостериорное
распределение
историй
выполнений
программ
использование
методов
схеме
марковских
цепей
программная
реализация
статистического
вывода
эффективность
вывода
порождающее
вероятностное
программирование
распознавании
образов
различиях
church
ventur
anglican
автоматическая
генерация
вероятностных
программ
обзор
литературы
описание
подхода
грамматика
порождающие
правила
вероятности
использования
порождающих
правил
эксперименты
выборки
сгенерированных
вероятностных
программ
вывод
вероятностных
программ
определяющих
распределения
падающие
приближающие
классические
одномерные
ления
обобщение
произвольных
эмпирических
данных
помощью
дающего
вероятностного
программирования
вероятностных
программ
обобщение
порождающего
вероятностного
программирования
заключение
список
использованных
источников
моей
любимой
маше
всем
другим
моим
любимым
родным
введение
данная
бакалаврская
работа
посвящена
вероятностному
программированию
вому
направлению
областях
машинного
обучения
искусственного
интеллекта
пьютерных
наук
именно
реферативному
краткому
введению
вероятностное
мирование
описанию
языков
вероятностного
программирования
church
ventur
anglican
описанию
подхода
порождающего
вероятностного
программирования
решения
задач
распознавания
образов
также
представлению
полученных
тельных
результатов
автоматизации
вывода
вероятностных
моделей
программирования
описание
структуры
работы
первая
часть
данной
работы
начинается
общих
сведений
вероятностном
вании
затем
кратко
описываются
результаты
полученные
коллегами
автора
самим
работе
научными
проектами
протяжении
двух
лет
массачусетском
нологическом
инситуте
руководством
профессора
джошуа
тененбаума
доктора
каша
мансингхи
кембридж
штат
массачусетс
сша
оксфордском
университете
руководством
профессора
френка
вуда
великобритания
оксфорд
эта
часть
работы
являясь
сути
переводом
представляет
собой
реферативную
выдержку
ном
программировании
приложениях
русском
языке
насколько
автору
известно
литературы
вероятностном
программировании
русском
языке
практически
этому
надеется
данная
чисто
реферативная
часть
работы
принесет
существенную
пользу
русскоговорящему
научному
сообществу
особенно
заинтересованным
студентам
школьникам
которые
впервые
захотят
познакомиться
развивающимся
направлением
вероятностного
программирования
второй
части
данной
работы
автор
описывает
новые
результаты
области
роятностного
программирования
связанные
автоматизированным
рованным
выводом
вероятностных
моделей
вероятностного
программирования
лученные
время
стажировки
автора
департаменте
технических
наук
оксфордского
университета
научной
лаборатории
профессора
френка
вуда
руководством
вторая
часть
завершается
рассуждениями
автора
обобщении
автоматизированного
чения
вывода
компьютером
вероятностных
моделей
виде
вероятностных
программ
возможностях
порождающего
вероятностного
программирования
вероятностное
программирование
вероятностное
программирование
определить
компактный
композиционный
способ
представления
порождающих
вероятностных
моделей
проведения
вывода
учетом
данных
помощью
обобщенных
алгоритмов
вероятностная
модель
является
важным
понятием
машинного
обучения
одного
основных
направлений
искусственного
интеллекта
сегодняшний
день
общем
чае
рамках
теории
машинного
обучения
компьютером
ставится
задача
произвести
действие
основе
входных
данных
априорных
знаний
возможности
модействовать
средой
ограничений
общности
целевым
действием
компьютера
считать
производство
ответа
виде
выходных
данных
представленных
виде
формации
например
робототехнике
эта
информация
являться
инструкциями
моторов
механических
устройств
выполнения
тех
иных
физических
ствий
роботом
использовании
различных
подходов
рамках
машинного
обучения
ются
модели
которые
являются
формальным
описанием
компонентов
функций
ражающих
существенные
свойства
моделируемого
объема
рамках
машинного
обучения
используются
вероятностные
модели
свойства
элементы
связи
ними
являются
фиксированными
стохастическими
классическим
примером
одного
подходов
машинном
обучении
является
способ
обучение
существует
прецедентов
пар
входных
выходных
данных
обучающей
выборки
необходимо
найти
алгоритм
описывающий
зависимость
алгоритм
который
позволяет
нове
каждого
элемента
входных
данных
получать
абсолютно
достаточно
точный
элемент
выходных
данных
помощью
данного
алгоритма
затем
известных
элементов
входных
данных
находятся
значения
неизвестных
элементов
выходных
данных
рамках
ного
обучения
эта
проблема
числе
решается
помощью
методов
регрессионного
анализа
приведенной
пример
модели
неизвестными
скрытыми
рами
информация
характеристиках
модели
которые
подлежат
выводу
данной
обучающей
выборке
виде
пар
приведем
простой
пример
линейной
регрессии
независимых
переменных
значениями
независимых
переменных
будут
значениями
зависимой
переменной
будут
параметрами
модели
будут
алгоритмом
простоты
ограничений
общности
будем
считать
можем
лучить
детерминированно
зная
порождающих
вероятностных
моделях
задается
совместное
распределение
ятностей
обычно
сначала
путем
задания
априорного
распределения
затем
задания
условного
распределения
называется
моделью
заданной
модели
известных
задачей
являться
поиск
ного
распределения
таким
образом
одним
способов
поиска
данного
апостериорного
распределения
является
применение
теоремы
байеса
теоретически
найти
решении
ских
задач
часто
невозможно
перебор
пространства
поддается
аналитическому
решению
решению
помощью
численных
методов
разумное
поэтому
чаще
решении
задач
рамках
байесовского
подхода
стоит
задача
поиска
ненормированного
значения
символ
часто
встречающийся
зарубежной
литературе
очень
редко
щийся
означает
нормировочную
константу
затем
найти
приближенно
значение
вычисляют
бывает
достаточно
найти
работать
дальше
наиболее
вероятными
элементами
апостериорного
распределения
обычно
особенно
решении
практических
задач
большим
объемом
данных
рамках
сложных
моделей
апостериорное
распределение
находят
точно
помощью
приближенных
методов
числе
помощью
методов
которые
позволяют
сгенерировать
выборку
интересующего
распределения
отмечалось
самом
начале
данного
подраздела
вероятностное
вание
позволяет
композиционно
компактно
записывать
порождающую
вероятностную
модель
помощью
задания
априорных
вероятностей
виде
алгоритма
вероятностной
программы
использованием
стохастических
функций
мер
стохастическая
функция
normal
вспомогательных
ных
функций
например
снабжать
модель
данными
таким
образом
теоретически
определяя
условное
распределение
производить
статистический
вывод
генерации
выборки
условного
деления
помощью
обобщенных
алгоритмов
статистического
вывода
щих
большого
множества
моделей
ознакомления
машинным
обучением
искусственным
интеллектом
автор
рекомендует
следующие
источники
информацию
вероятностных
моделях
байесовских
методах
русском
языке
найти
краткое
введение
языки
вероятностного
программирования
church
ventur
anglican
существует
языков
вероятностного
программирования
перечень
кратким
санием
каждого
найти
данной
работе
реферативно
будут
рены
языка
вероятностного
программирования
church
ventur
anglican
языки
ventur
anglican
являются
продолжениями
языка
church
church
очередь
основан
языке
программирования
lisp
scheme
заинтересованному
тателю
крайне
рекомендуется
ознакомиться
книгой
являющейся
одним
лучших
способов
начать
знакомство
языком
программирования
scheme
первое
знакомство
church
ventur
anglican
текущий
момент
любой
язык
вероятностного
программирования
напрямую
связан
методами
статистического
вывода
которые
используются
нем
поэтому
часто
язык
социируется
платформой
вероятностного
программирования
технической
реализацией
виде
компьютерной
программы
рассмотрим
задание
простой
вероятностной
модели
байесовской
линейной
сии
языке
вероятностного
программирования
виде
ностной
программы
assum
normal
assum
normal
assum
assum
lambda
time
observ
observ
observ
predict
predict
predict
normal
time
скрытые
искомые
параметры
значения
коэффициентов
линейной
функции
time
time
априорные
предположения
данных
коэффициентах
именно
предполагаем
распределены
закону
нормального
распределения
normal
средним
стандартным
отклонением
таким
образом
определили
первых
двух
строках
вероятностной
программы
вероятность
описанную
щем
раздел
инструкцию
assum
name
express
рассматривать
ние
случайной
величины
именем
name
принимающей
значение
вычисляемого
выражение
программного
кода
express
которое
содержит
неопределенность
вероятностные
языки
программирования
далее
будут
иметься
виду
кретно
church
ventur
anglican
указано
иное
являются
функциональными
языками
программирования
используют
польскую
записи
выражений
вычисления
означает
выражении
вызова
функции
чала
располагается
оператор
аргументы
вызов
функции
обрамляется
круглыми
скобками
других
языках
программирования
таких
python
эквивалентно
коду
вероятностных
языках
программирования
выражение
вызова
функции
принято
разделять
разных
вида
вызов
детерминированных
процедур
argn
торые
одних
тех
аргументах
возвращают
одно
значение
таким
процедурам
например
относятся
арифметические
операции
вызов
вероятностных
стохастических
процедур
argn
которые
каждом
вызове
генерируют
случайным
образом
элемент
соответствующего
распределения
вызов
определяет
новую
случайную
величину
например
вызов
вероятностной
процедуры
normal
случайную
величину
распределенную
закону
нормального
распределения
normal
результатом
выполнения
каждый
ственное
число
вызов
составных
процедур
argn
введенная
пользователем
процедура
помощью
ального
выражения
lambda
lambda
argn
bodi
bodi
тело
процедуры
состоящее
выражений
общем
случае
составная
процедура
является
стохастической
недетерминированной
составной
процедурой
имеет
отдельный
дополнительный
вид
синтаксиса
venturescript
использующий
инфиксную
нотацию
бующий
обрамления
вызова
функций
скобками
схожий
своей
сути
привычными
большинству
людей
языками
программирования
python
тело
содержать
вызовы
вероятностных
процедур
хотим
задать
условную
вероятность
наблюдаемых
ременных
заданных
значениях
скрытых
переменных
параметра
time
вводом
непосредственно
самих
наблюдений
помощью
выражения
observ
определяем
общий
закон
наблюдаемых
переменных
рамках
нашей
модели
именно
предполагаем
данные
наблюдаемые
случайные
величины
заданных
заданном
уровне
шума
nois
распределены
закону
нормального
пределения
normal
средним
стандартным
отклонением
nois
данная
условная
вероятность
определена
строках
данной
вероятностной
программы
определена
функция
принимающая
параметр
time
ющая
случайное
значение
определенное
помощью
вычисления
выражение
normal
time
nois
обусловленное
значениями
случайных
величин
менной
nois
отметим
выражение
normal
time
nois
содержит
неопределенность
поэтому
каждый
вычислении
будем
получать
общем
случае
разное
значение
строках
непосредственно
вводим
известные
значения
инструкция
вида
observ
express
valu
фиксирует
наблюдение
случайная
величина
принимающая
значение
согласно
выполнению
выражения
express
приняла
значение
valu
повторим
данном
этапе
всё
сделали
строках
помощью
струкций
вида
assum
задали
непосредственно
саму
вероятностную
модель
строках
непосредственно
задали
известные
нам
значения
наблюдаемых
случайных
величин
помощью
инструкций
вида
observ
строках
запрашиваем
системы
вероятностного
программирования
стериорное
распределение
скрытых
случайных
величин
сказано
большом
объеме
данных
достаточно
сложных
моделях
получить
точное
аналитическое
представление
невозможно
поэтому
инструкции
вида
predict
рируют
выборку
значений
случайных
величин
апостериорного
распределения
приближения
инструкция
вида
predict
express
общем
случае
рует
элемент
выборки
значений
случайной
величины
принимающей
значение
согласно
выполнению
выражения
express
инструкциями
вида
predict
расположены
инструкции
вида
observ
выборка
апостериорного
обусловленного
перечисленными
ранее
введенными
наблюдениями
отметим
завершении
можем
также
предсказать
значение
функции
time
точке
например
time
предсказанием
данном
чае
понимается
генерация
выборки
апостериорного
распределения
новой
случайной
величины
значениях
скрытых
случайных
величин
параметре
time
генерации
выборки
апостериорного
распределения
языке
программирования
church
качестве
основного
используется
алгоритм
гастингса
который
относится
методам
схеме
марковских
цепей
следующем
подразделе
произведено
подробное
описание
применения
данного
горитма
обобщенного
статистического
вывода
вероятностных
языках
выводом
данном
случае
понимается
алгоритм
применен
любым
вероятностным
программам
написанным
данном
вероятностном
языке
граммирования
статистический
вывод
вероятностных
языках
программирования
мощью
алгоритма
описание
алгоритма
применении
вероятностных
языков
church
впервые
опубликовано
подробно
описано
получить
выборку
элементов
априорного
распределения
скрытых
метров
наблюдаемых
величин
совместного
распределение
порождающей
вероятностной
модели
записанной
виде
вероятностной
граммы
составляет
труда
достаточно
выполнить
вероятностную
программу
отметим
очевидный
факт
данном
случае
вероятностная
программа
держать
лишь
инструкции
вида
assum
задание
вероятностной
модели
predict
перечисление
случайных
величин
выборку
которых
генерируем
метод
выборки
заданных
наблюдениях
помощью
инструкций
вида
observ
express
valu
наиболее
простым
способом
получения
апостериорного
распределения
является
метод
точнее
приближения
апостериорного
распределения
выборки
понимания
рассмотрим
следующую
вероятностную
программу
assum
assum
observ
predict
отметим
стохастическая
процедура
возвращает
значение
случайной
величины
распределенной
равномерному
дискретному
закону
пределения
носителем
текстом
задачу
записанную
выше
помощью
вероятностной
программы
сформулировать
следующим
образом
подбрасываются
шестигранных
игральных
бика
сумме
выпало
каково
распределение
произведения
очков
этих
двух
ках
метод
выборки
заключается
генерировать
значения
очков
первом
втором
кубиках
априорного
распределения
таким
образом
независимых
дискретных
равномерных
распределения
проверять
равна
сумма
данная
попытка
отвергается
учитывается
произведение
очков
кубиках
добавляется
множество
элементов
выборки
данная
выборка
дет
аппроксимацией
апостериорного
распределения
значений
произведения
очков
двух
кубиках
известно
сумма
очков
равна
данный
метод
является
неэффективным
решении
сложных
задач
сто
вычислительно
неосуществимым
также
отметим
подходит
дискретных
значений
случайных
промежуточных
переменных
пространство
историй
выполнений
вероятностных
программ
выполнении
вероятностной
программы
каждая
случайная
величина
принимает
деленное
значение
например
следующая
вероятностная
программа
содержит
чайных
величины
каждая
которых
распределена
закону
нормального
ния
assum
normal
assum
normal
assum
normal
predict
выполнении
данной
вероятностной
программы
каждая
трех
случайных
личин
примет
свое
случайное
значение
назовем
историей
выполнения
вероятностной
программы
отображение
сопоставляющее
каждой
случайной
величине
значение
ность
истории
выполнения
совпадает
количеством
случайных
величин
которые
созданы
выполнении
каждой
программы
определить
соответствующее
вероятностное
странство
элементарными
событиями
которого
будут
являться
истории
нения
вероятностью
каждого
элементарного
события
являться
произведение
роятностей
принятие
иного
значения
каждой
случайные
величины
данной
истории
выполнения
очевидно
история
выполнения
однозначным
образом
определяет
выполнение
вероятностной
программы
принимаемые
значения
случайных
зависящих
детерминированных
выражений
примера
рассмотрим
простую
вероятностную
программу
assum
assum
predict
predict
обе
случайных
величины
имеют
свое
название
облегчает
запись
историй
выполнений
иначе
необходимо
вводить
адресную
схему
наименования
случайных
величин
однозначно
идентифицировать
данная
вероятностная
программа
имеет
четыре
различных
возможных
историй
выполнений
именно
вероятностями
соответственно
отметим
также
количество
случайных
величин
выполнении
одной
той
вероятностной
программы
меняться
например
следующей
программе
assum
geometr
lambda
geometr
predict
geometr
данная
программа
генерирует
элемент
одноэлементную
выборку
рического
распределения
параметром
помощью
составной
процедуры
geometr
параметризованной
параметром
выполнении
данной
вероятностной
программы
истории
выполнения
количество
случайных
величин
бым
апостериорное
распределение
историй
выполнений
программ
добавлении
наблюдений
фиксации
значения
определенных
случайных
личин
считать
рассматривается
подмножество
множества
элементарных
бытий
именно
элементы
историях
выполнений
которых
наблюдаемые
случайные
величины
принимают
желаемое
значение
описать
другое
вероятностное
пространство
множеством
элементарных
бытий
которого
являться
описанное
подмножество
вероятностная
мера
новом
вероятностном
пространстве
вероятностной
мерой
первоначального
вероятностного
пространства
учетом
нормировочной
константы
описанный
переход
полностью
сочетается
теоремой
байеса
которая
нашем
случае
записывается
следующим
образом
множество
случайных
величин
которых
знаем
фиксированные
даемые
значения
множество
случайных
величин
ассоциируемых
скрытыми
раметрами
апостериорное
распределение
которых
заинтересованы
получить
грубо
говоря
всё
остальные
случайные
величины
наблюдаемые
значения
случайных
величин
отметим
часто
заинтересованы
апостериорном
распределении
апостериорном
распределении
лишь
части
скрытых
параметров
функции
общем
случае
являющейся
биекцией
стороны
ставим
задачу
получить
тическое
представление
данных
апостериорных
распределений
лишь
выборку
играет
большой
роли
нашем
случае
решении
задач
методами
можем
генерировать
элементы
выборки
затем
использовать
значения
нужных
нам
скрытых
случайных
величин
действовать
функцией
использование
методов
схеме
марковских
цепей
аппарат
методов
схеме
марковских
цепей
кратко
изложен
интуитивно
опишем
собираемся
делать
вероятностная
грамма
определяющая
множество
скрытых
наблюдаемых
случайных
величин
вероятностная
программа
своей
записью
задает
априорное
распределение
значит
совместное
распределение
каждый
путем
выполнения
данной
программы
получаем
одну
возможных
реализаций
данной
программы
которая
ективно
описывается
соответствующей
историей
выполнения
множество
множество
возможных
историй
выполнений
данной
вероятностной
программы
торое
рассматривать
множество
элементарных
событий
каждой
истории
выполнения
определена
вероятностная
мера
также
значение
каждой
наблюдаемой
случайной
величины
ˆxi
множество
ˆxi
существует
подмножество
историй
выполнений
котором
наблюдаемые
случайные
величины
принимают
желаемое
значение
данное
подмножество
рассматривать
множество
элементарных
событий
вероятностного
пространства
вероятностную
меру
котором
предыдущего
путем
деления
нормирующую
постоянную
будем
обозначать
ненормированную
вероятностную
меру
рассмотрим
цепь
маркова
исходами
которой
являются
истории
выполнений
качестве
начального
распределения
выбрать
априорное
распределение
котором
значения
наблюдаемых
случайных
величин
выбираются
случайным
образом
согласно
распределению
устанавливаются
согласно
например
вероятностной
программе
assum
gamma
assum
lambda
normal
observ
первая
случайная
величина
распределенная
gamma
являться
скрытой
сгенерирована
согласно
данному
закону
распределения
наблюдаемая
случайная
величина
распределенная
нормальному
закону
закону
normal
сгенерирована
установлена
соответствии
блюдаемым
значением
хотим
установить
такие
правила
перехода
схеме
одного
состояния
исхода
цепи
маркова
другое
стационарное
распределение
данной
цепи
маркова
совпадало
распределением
таком
случае
получения
аппроксимации
искомого
апостериорного
распределения
виде
выборки
нам
точно
имитировать
данную
цепь
маркова
алгоритме
вероятностная
мера
известна
точностью
нормировочной
константы
происходит
нашем
случае
каждом
шаге
алгоритма
дано
текущее
состояние
соответствии
заданным
заранее
условным
распределение
предлагается
новое
состояние
таким
образом
звать
распределением
предлагаемых
переходов
подсчитывается
коэффициент
нового
состояния
min
состояние
принимается
качестве
следующего
состояния
вероятностью
противном
случае
новое
состояние
предлагается
следующим
образом
случайным
образом
равномерно
выбирается
одна
скрытая
ная
величина
dom
предлагается
новое
значение
данной
случайной
величины
условная
вероятность
данном
случае
локальным
распределением
предлагаемых
переходов
случайная
величина
влияет
поток
выполнения
вероятностной
результате
нового
значения
должны
исполнены
другие
ветви
выполнения
вероятностной
программы
исполняются
общем
случае
исходит
генерация
новых
случайных
величин
которые
прежде
неактивны
примера
рассмотрим
следующую
вероятностную
программу
assum
assum
normal
gamma
predict
данной
вероятностной
программе
случайных
величины
первая
распределена
закону
бернулли
вторая
закону
нормального
распределения
третья
закону
также
называть
имени
переменной
хотя
менная
является
сама
случайной
величиной
зависит
значения
определяющей
поток
выполнения
вероятностной
программы
значения
либо
либо
отметим
также
каждом
выполнении
данной
вероятностной
программы
существовать
две
активных
случайных
величины
предположим
текущим
состоянием
вероятностной
программы
момент
мени
история
выполнения
означает
случайная
величина
приняла
значение
поэтому
задания
переменной
сгенерирован
элемент
нормального
распределения
случайная
величина
normal
очевидно
fnormal
предложим
новое
состояние
выберем
случайным
образом
одну
двух
случайных
величин
пусть
предложим
случайным
образом
новое
значение
данной
случайной
величины
гласно
априорному
распределению
bernoulli
пусть
случайная
величина
действительно
влияет
поток
выполнения
роятностной
программы
изменении
значения
данном
случае
должна
выполнена
другая
ветвь
выполним
данную
ветвь
генерируя
значения
случайных
величин
нашем
случае
предположим
стало
равным
общем
случае
fgamma
rnew
количество
активных
случайных
величин
текущей
истории
выполнения
вероятность
нового
значения
варьируемой
случайной
величины
rnew
совместная
вероятность
выбора
своих
значений
случайных
чин
фиксированном
обратное
коэффициента
принятия
горитма
общем
случае
посчитано
аналогичным
разом
rold
rold
совместная
вероятность
выбора
своих
значений
случайных
величин
активных
являющихся
активными
рассмотренном
примере
fnormal
учетом
fgamma
получаем
min
fgamma
fnormal
поэтому
данном
конкретном
примере
fnormal
fgamma
любом
случае
ятностью
выбор
локального
распределения
предлагаемых
переходов
ным
простейшем
случае
независимая
случайная
величина
данное
ление
выбирается
идентичным
априорному
распределению
вочная
случайная
величина
такие
случайные
величины
поддерживаются
риваемыми
языками
вероятностного
программирования
распределение
выбрано
учетом
накопленных
значений
таким
образом
описали
алгоритм
предложения
нового
состояния
текущем
состоянии
описали
рамках
метода
лучить
выборку
элементов
желаемого
апостериорного
распределения
нам
необходимо
имитировать
данную
цепь
маркова
согласно
описанному
выше
алгоритму
получить
элементов
данной
цепи
затем
необходимо
отсеять
первые
тов
оставшихся
выбрать
каждый
элемент
полученное
множество
являться
любая
история
выполнений
аппроксимацией
искомой
выборки
нозначно
определяет
значение
случайных
величин
вероятностной
программе
аппроксимацией
выборки
выбирается
единицы
исключить
автокорреляцию
которая
ственным
образом
возникает
цепи
маркова
выбирается
достаточно
независимо
выбора
начальной
точки
цепь
успела
данный
первоначальный
выбор
особенно
важно
начальное
априорное
распределение
очень
отличается
апостериорного
общего
правила
выбора
данных
величин
обычно
выбираются
эмпирически
программная
реализация
статистического
вывода
предыдущем
подпункте
теоретически
описан
алгоритм
обобщенного
ческого
вывода
вероятностных
языках
программирования
простая
программная
реализация
впервые
достаточно
подробно
описана
инициализации
выбирается
случайным
образом
путем
выполнения
роятностной
программы
фиксации
наблюдаемых
случайных
величин
ветствии
имеющимися
данными
памяти
компьютера
сохраняется
база
данных
активных
случайных
величин
вместе
значениями
также
храняется
которое
подсчитывается
время
первоначального
выполнения
программы
учетом
вероятности
наблюдаемых
случайных
величин
принять
значение
которое
приняли
описывается
схема
адресации
которая
позволяет
различать
случайные
величины
собой
затем
выбора
последующего
каждый
базы
данных
случайным
равномерным
образом
выбирается
случайная
величина
случайным
разом
варьируется
соответствии
своим
локальным
распределением
лагаемых
переходов
которое
предварительно
задается
используемых
примитивных
несоставных
случайных
величин
создается
копия
базы
данных
которой
значение
случайной
величины
заменяется
новое
вероятностная
программа
выполняется
случайные
чины
которых
базе
данных
имеется
запись
согласно
схеме
ции
принимают
соответствующие
старые
значения
принимает
свое
новое
полученное
значение
общем
случае
влияет
поток
выполнения
программы
генерируются
значения
новых
случайных
величин
которые
становятся
активными
этих
случайных
величин
прежде
базе
данных
записей
также
влияет
поток
выполнения
программы
некоторые
случайные
величины
могут
перестать
активными
данном
случае
соответствующие
записи
базе
данных
будут
невостребованы
выполнения
программы
второй
считать
получили
также
отметим
выполнении
программы
получили
использовали
всё
необходимые
компоненты
подсчета
вероятность
обратного
перехода
получена
разными
собами
вероятностной
программе
независимые
случайные
величины
перестановочных
первые
две
компоненты
могут
найдены
тривиально
знаем
количество
случайных
величин
можем
посчитать
третьей
компоненты
нам
нужно
считать
произведение
вероятностей
случайных
величин
которые
перестали
активными
невостребованные
случайные
величины
базе
ных
случае
наличия
использования
перестановочных
случайных
величин
можем
имитировать
ситуацию
является
нашим
старым
состоянием
новое
состояние
получаем
точном
соответствии
имея
подсчитываем
коэффициент
нятия
алгоритма
либо
принимаем
ностью
означает
следующий
будем
использовать
новую
базу
данных
случайных
величин
значением
соответствующими
либо
клоняем
вероятностью
означает
следующем
шаге
снова
будем
использовать
старую
базы
данную
алгоритм
повторяется
шага
эффективность
вывода
использовании
вероятностных
языков
программирования
встает
вопрос
тивности
статистического
вывода
другими
словами
быстро
генерируем
выборку
желаемой
точности
апостериорного
распределения
описанная
секции
программная
реализация
статистического
вывода
является
неэффективной
исходит
перевыполнение
всей
вероятностной
программы
хотя
вариация
случайной
чины
обычно
имеет
локальный
эффект
рассмотрим
подробно
данную
проблему
примере
следующей
ной
программы
assum
assum
cloudi
assum
cloudi
assum
cloudi
assum
данная
вероятностная
программа
описывает
статистически
простую
упрощенную
модель
зависимости
сезоном
облачностью
дождем
работой
разбрызгивателя
состоянием
травы
мокрая
день
значение
переменных
следующее
рисунок
пример
байесовской
сети
входит
день
сезон
дождей
cloudi
облачно
день
rain
дождь
день
sprinkler
работал
разбрызгиватель
день
трава
мокрой
день
данная
модель
представлена
помощью
байесовской
сети
доверия
рис
таблицами
условных
вероятностей
отметим
любая
байесовская
сеть
доверия
представлена
виде
вероятностной
программы
языке
любая
ностная
программа
представлена
байесовской
сетью
случае
время
очередной
итерации
алгоритма
качестве
варьируемой
случайной
величины
выбрана
случайная
величина
rain
ствующий
узел
рис
выделен
самым
темным
цветом
подсчета
коэффициента
принятия
достаточно
лишь
рассмотреть
значения
вероятности
данных
значениях
узлов
трава
остальные
значения
вероятности
останутся
прежними
иллюстрацию
распространения
возмущений
связи
вариацией
случайной
величины
рис
подобном
простом
примере
факт
играет
большой
роли
отношение
случайных
величин
требующих
общему
количеству
активных
случайных
величин
невелико
однако
большом
объеме
данных
играет
решающую
роль
выполнении
статистического
вывода
многих
моделях
помощи
программных
ализаций
вероятностных
языков
программирования
например
скрытых
марковских
моделях
латентном
размещении
дирихле
например
простой
скрытой
марковской
модели
скрытых
даемых
величин
реализации
статистического
вывода
алгоритмом
описанным
рисунок
байесовская
сеть
виде
выполнения
вероятностной
программы
ции
одна
итерация
алгоритма
имеет
сложность
времени
хотя
желаемая
возможная
сложность
крайней
мере
log
достижения
желаемой
сложности
каждой
истории
выполнений
необходимо
отслеживать
зависимости
случайными
величинами
следует
отметить
висимости
общем
случае
могут
изменяться
вероятностных
программах
например
следующей
программе
assum
assum
gamma
assum
normal
случайная
величина
normal
зависит
случайной
величины
gamma
случайная
величина
принимает
значение
описание
структур
данных
алгоритмов
необходимых
отслеживания
мостей
режиме
реального
времени
предварительно
приведено
затем
обширно
подробно
использовании
данных
структур
данных
мов
временная
сложность
одной
итерации
алгоритма
простой
скрытой
марковской
модели
равна
log
использовать
упорядоченный
перебор
случайных
величин
временная
сложность
снизиться
рифмический
фактор
появляется
связи
необходимостью
выбирать
случайным
образом
следующий
узел
случайную
величину
вариации
простой
скрытой
марковской
модели
количество
случайных
чин
постоянно
вид
зависимости
тривиален
каждой
скрытой
случайной
величины
напрямую
зависит
одна
наблюдаемая
случайная
величина
следующая
скрытая
случайная
величина
сложных
моделях
виды
зависимостей
рены
количество
случайных
величин
меняется
одной
истории
выполнений
стороны
большого
количества
порождающих
моделей
используемых
щее
время
машинном
обучении
необходимо
время
одну
итерацию
оставалось
постоянным
росло
хотя
логарифмически
вместе
линейным
ростом
количества
наблюдений
иначе
статистический
вывод
невозможен
разумное
время
рис
показаны
результаты
применения
алгоритмов
структур
данных
ных
использовании
старого
подхода
описанного
секцию
время
итераций
алгоритма
росло
квадратично
линейным
ростом
размерности
модели
скрытых
наблюдаемых
случайных
величин
использовании
предлагаемого
подхода
время
растет
квазилинейно
рисунке
видно
благодаря
локализации
выполнения
одной
ции
стало
возможным
проводить
приближенный
статистический
вывод
параллельно
следует
отметить
пространственная
сложность
алгоритма
объем
памяти
необходимый
применения
равна
грубо
говоря
мость
хранения
памяти
зависимостей
случайными
величинами
общем
случае
эта
величина
достаточно
большой
работе
описаны
возможности
эффективного
расходования
памяти
порождающее
вероятностное
программирование
распознавании
зов
отмечено
начале
цель
вероятностного
программирования
облегчить
задачу
моделирования
порождающих
вероятностных
моделей
проведения
вывода
ром
иллюстрации
успешного
предварительного
применения
вероятностного
вания
служить
работа
которой
вероятностное
программирование
рисунок
эффективность
статистической
вывода
различных
реализациях
красный
график
соответствует
простейшему
алгоритму
описанному
котором
каждый
происходит
перевыполнение
всей
вероятностной
программы
зеленый
фик
соответствует
использованию
новых
алгоритмов
структур
данных
позволяет
производить
статистический
вывод
асимптотически
эффективно
синий
голубой
график
показывают
применение
предлагаемого
подхода
также
позволяет
производить
статистический
вывод
параллельно
крайней
мере
приближенно
рис
моделирования
вероятностной
модели
находящихся
изображении
объектов
взаимодействия
собой
байесовский
подход
интерпретации
изображений
путем
задания
априорного
распределения
расположение
объектов
связи
ними
предложен
задолго
появления
рассматриваемых
языков
программирования
именно
появлением
исследование
осуществление
данного
подхода
стало
проще
вероятностные
языки
программирования
позволяют
композиционно
компактно
представлять
вероятностные
порождающие
модели
проводить
статистический
вывод
работе
рассматриваются
примера
проблема
графической
captcha
компьютерного
теста
используемого
определения
кем
является
пользователь
человеком
знакомого
каждому
пользователю
проблема
нахождения
изображении
камеры
автомобиля
дороги
разделительной
полосы
левого
правого
оврагов
полученные
результаты
своей
эффективности
рассматриваемых
простых
примерах
уступают
другим
современным
подходам
нию
этих
задач
однако
представление
моделирование
вывод
проще
осуществляется
время
итерацийалгоритма
статистический
вывод
оптимизации
красный
предложенные
алгоритмы
структуры
данных
зел
количество
наблюдений
скрытой
модели
потока
син
потока
гол
помощью
вероятностного
программирования
различиях
church
ventur
anglican
целью
данной
главы
очевидно
подробное
описание
этих
вероятностных
языков
краткое
введение
заинтересованному
читателю
можем
порекомендовать
продолжить
свое
знакомство
вероятностным
языком
church
ventur
anglican
хотя
многое
объединяет
вероятностные
языки
некоторых
принципиальных
вещах
различаются
например
ventur
данный
момент
позиционируется
универсальная
платформа
включающая
разные
виды
алгоритмов
методов
статистического
вывода
запроектированной
возможностью
добавлять
новые
помощью
использования
базовых
компонент
методов
рамках
работы
anglican
методы
обобщенного
вывода
использованием
методов
фильтрации
частиц
church
стороны
позволяет
производить
статистический
запрос
внутри
другого
ческого
запроса
ventur
anglican
пока
делать
могут
автоматическая
генерация
вероятностных
программ
использовании
полных
тьюрингу
вероятностных
языков
программирования
включающих
функции
высших
которыми
числе
являются
языки
church
ventur
anglican
вероятностная
программа
одновременно
является
щей
моделью
записанной
процедурой
генерации
элементов
выборки
модели
путем
выполнения
исходного
кода
данной
процедуры
любая
процедура
вероятностном
программировании
является
формально
программным
кодом
который
описывает
процесс
генерации
элемента
выборки
заданных
аргументах
данной
функции
таким
образом
процедуры
вероятностных
программ
являются
конструктивным
способом
описания
ных
распределений
полные
тьюрингу
допускающие
функции
высших
порядков
вероятностные
языки
программирования
открывают
возможность
проведения
вывода
исходного
текста
самих
вероятностных
программ
задано
априорное
распределение
множестве
ходного
текста
помощью
операторов
eval
appli
грубо
говоря
необходимо
представить
вероятностную
порождающую
которая
генерировать
вероятностные
модели
виде
исходного
кода
вероятностных
программ
данная
глава
основана
работе
которая
включает
первые
ные
результаты
амбициозной
задаче
вывода
самих
порождающих
вероятностных
моделей
наличии
информации
искомом
распределении
которое
деляется
искомой
вероятностной
программой
отметим
статистический
вывод
странстве
исходного
кода
сложен
простого
подхода
построению
вероятностных
порождающих
моделей
исходного
кода
выводу
рамках
нашей
предварительной
работы
поставили
задачу
найти
помощью
статистического
вывода
предлагаемой
нами
порождающей
вероятностной
такие
вероятностные
программы
которые
будут
генерировать
выборку
элементов
жую
своим
статистическим
характеристикам
заранее
заданным
лением
эта
задача
интересна
сама
нахождение
эффективных
алгоритмов
генерации
моделирования
случайных
величин
нетривиальная
задача
процедурами
высших
порядков
называются
функции
аргументами
значениями
которых
могут
другие
функции
ученых
которой
занимаются
протяжении
десятков
лет
наши
предварительные
результаты
показывают
подобный
ный
вывод
порождающих
вероятностных
моделей
виде
вероятностных
программ
ствительно
возможен
частности
приводим
результаты
успешного
эксперимента
рамках
которого
автоматически
нашли
обобщенную
вероятностную
программу
торая
подлинно
приближенно
генерирует
случайные
величины
распределенные
закону
бернулли
произвольным
параметром
обзор
литературы
рассматриваемые
нами
идеи
относятся
разным
областям
числе
автоматизации
процесса
программирования
индуктивному
программированию
автоматическому
моделированию
компьютерному
определению
нию
плотности
распределений
подходы
решению
проблемы
включают
статистический
вывод
поиск
оптимизацию
числе
эволюционные
алгоритмы
особенности
нетическое
программирование
идеи
методы
использования
вероятностного
программирования
изучения
автоматизированного
представления
вероятностных
моделей
предлагались
ранее
насколько
автору
известно
описываемый
подход
порождению
вероятностных
программам
программой
ранее
рассматривался
качестве
ной
проблемы
достаточно
подробно
хотя
первые
шаги
исследовании
формулировке
проблемы
сделаны
работах
описание
подхода
наш
подход
описан
рамках
приближенных
байесовских
вычислений
использованием
метода
схеме
цепей
маркова
выбором
качестве
искомого
апостериорного
распределения
вероятностная
мера
измеряющая
расстояние
значения
статистик
вычисленных
соответственно
выборке
искомого
распределения
выборке
product
lambda
assum
assum
program
eval
assum
sampl
observ
normal
observ
normal
observ
normal
observ
normal
predict
predict
рисунок
вероятностная
программа
вывода
исходного
кода
вероятностной
граммы
генерации
случайных
чисел
распределенных
закону
стандартного
мального
распределения
normal
program
mean
sampl
var
ian
sampl
sampl
skew
sampl
program
лученной
путем
выполнения
исходного
кода
вероятностной
пусть
существует
распределение
параметрами
вероятностную
программу
генерации
элементов
выборки
которого
хотим
вывести
пусть
выборкой
элементов
распределения
фиксированном
значении
параметров
рассмотрим
задачу
вывода
исходного
кода
вероятностной
граммы
которая
неоднократном
выполнении
сгенерирует
выборку
ˆxj
статистически
близких
распределению
заданных
ментов
ˆxj
параметрах
пусть
статистикой
выборки
значение
стики
элементах
выборки
соответственно
пусть
вероятностная
мера
простоты
ненормированная
принимает
значения
интерпретировать
расстояние
штраф
используем
вероятностное
программирование
представления
порождающей
другие
вероятностные
программы
виде
исходного
текста
ния
статистического
вывода
пространстве
искомых
вероятностных
моделей
стического
вывода
использовали
программную
реализацию
вероятностного
языка
граммирования
anglican
которая
поддерживает
статистический
вывод
методом
частиц
методом
методу
схеме
цепей
маркова
вероятностная
представлена
рис
первой
строке
навливаем
соответствие
переменной
которая
содержать
сгенерированный
элемент
распределения
исходный
код
определенное
априорно
порождающую
процедуру
product
помощью
адаптивной
типу
подробнее
разделе
указываем
задача
вывода
данном
случае
найти
ную
программу
генерирующую
элементы
стандартного
нормального
распределения
переменная
sampl
второй
строке
представляет
описанную
выше
выборку
ятностной
примере
вычисляются
следующих
четырех
строках
вероятностной
программы
статистика
определяется
четырехмерный
вектор
включающий
соответственно
выборочные
среднее
дисперсию
коэффициент
асимметрии
коэффициент
эксцесса
борки
элементов
распределения
определенного
вероятностной
программой
полученной
распределения
мера
расстояния
определяется
плотность
многомерного
мального
распределения
средними
диагональной
ковариационной
матрицей
отметим
означает
ищем
вероятностные
программы
зультат
выполнения
которых
определяет
распределение
средним
равным
дисперсией
коэффициентами
асимметрии
эксцесса
равными
отклонения
этих
значений
помощью
квадратичной
экспоненциальной
функции
потерь
определена
эта
функция
потерь
представляет
собой
циентом
функцию
плотности
нормального
распределения
данный
пример
служит
хорошей
иллюстрацией
основных
особенностей
нашего
хода
поиска
виде
вероятностной
программы
генератора
случайных
чисел
дартного
нормального
распределения
используем
аналитическую
информацию
стандартном
нормальном
распределении
вычислении
расстояния
существует
крайней
мере
различных
ситуации
включая
данную
которых
могут
вычисляться
различными
способами
рамках
первой
ситуации
ищем
вероятностную
программу
которая
тивно
генерирует
элементы
аналитически
известных
распределений
фективностью
данном
случае
понимать
вычислительную
временную
сложность
среднее
количество
использованной
энтропии
генерации
мента
выборки
среднем
практически
ситуации
подобной
постановке
задачи
статистики
распределения
известны
аналитически
вторая
ситуация
возникает
можем
генерировать
элементы
борки
например
подобная
ситуация
возникает
генерируем
менты
апостериорного
распределения
помощью
bool
product
lambda
assum
assum
program
eval
assum
assum
program
observ
assum
program
observ
predict
predict
program
рисунок
вероятностная
программа
вывода
исходного
кода
вероятностной
программы
генерирующей
случайные
числа
распределенные
закону
бернулли
bernoulli
предпоследней
строчке
выводится
текст
вероятностной
кандидата
последней
строчке
вероятностная
выполняется
генерации
выборки
элементов
параметризации
причем
предыдущие
тренировочные
значения
параметров
содержали
true
true
лительно
метода
схеме
марковских
цепей
ваны
получить
другое
представление
апостериорного
распределения
виде
роятностной
программы
чье
априорное
распределение
точно
хотя
приблизительно
совпадать
искомым
апостериорным
третьей
ситуации
нам
заранее
дана
фиксированного
размера
выборка
хотим
найти
вероятностную
программу
которая
позволит
генерировать
выборку
произвольного
размера
дальнейшем
начали
раздел
постановки
задачи
именно
рамках
третьей
ситуации
следует
отметить
возможная
польза
представления
генератора
случайных
сел
потенциально
эффективно
быстро
генерировать
выборку
желаемого
распределения
получить
формальное
представление
желаемого
распределения
приближения
виде
исходного
кода
вероятностной
программы
виде
формальной
сущности
дальнейшие
действия
которой
производить
числе
проводить
анализ
выведенным
исходным
кодом
использовать
найденные
блоки
исходного
кода
решения
других
задач
рис
иллюстрирует
другое
важное
обобщение
решение
задачи
сформулированной
самом
начале
апостериорным
распределением
постановке
задачи
вывод
генератора
случайных
чисел
распределенных
гласно
стандартному
нормальному
распределению
параметризовали
искомое
assum
lambda
mean
std
mean
std
co
sqrt
log
assum
lambda
begin
exp
lambda
dec
begin
рисунок
найденные
записанные
людьми
исходные
коды
вероятностных
программ
слева
общего
нормального
распределения
normal
справа
распределения
пуассона
poisson
исходные
коды
входят
собранный
нами
корпус
помощью
которого
определяем
априорные
вероятности
наших
порождающих
правил
путем
подсчета
количества
встречающихся
констант
процедур
разных
видов
пределение
никаким
образом
стандартного
нормального
распределения
параметров
общем
случае
распределения
которые
хотим
представить
виде
вероятностных
программ
имеют
нетривиальную
параметризацию
собой
сути
семейство
распределений
хотим
найти
вероятностную
программу
входные
аргументы
которой
являлись
параметрами
искомого
распределения
таким
образом
эта
вероятностная
программа
позволяла
генерировать
случайные
личины
семейства
наглядности
рассмотрим
алгоритм
генерации
случайных
чисел
распределенных
закону
нормального
распределения
помощью
преобразования
представленный
виде
вероятностной
программы
рис
эта
вероятностная
процедура
параметризована
двумя
параметрами
средним
стандартным
отклонением
постановки
обобщенной
задачи
вывода
ных
вероятностных
программам
нам
необходимо
изменить
наше
искомое
апостериорное
распределение
включив
параметр
параметризующий
искомое
распределение
нам
хотелось
вывести
вероятностную
программу
которая
смогла
обобщить
возможные
значения
параметра
допущением
выберем
конечное
различных
параметризаций
ˆθi
получим
обобщение
семейства
ний
виде
вероятностной
программы
формулируем
нашу
задачу
виде
следующего
приближения
использованием
приближенных
байесовских
вычислений
рамках
метода
схеме
цепей
маркова
ˆxn
вероятностная
программа
поиска
параметризованной
вероятностной
генерирующей
случайные
числа
распределенных
закону
бернулли
bernoulli
представлена
рис
наглядным
образом
иллюстрирует
применение
данного
ния
приближения
выбранных
различных
параметризациях
параметра
деления
бернулли
каждый
генерируем
элементов
вероятностной
кандидата
аккумулируя
расстояние
штраф
искомым
распределением
ным
распределением
представляющим
вероятностную
каждом
конкретном
случае
высчитываем
расстояние
использованием
аналог
критерия
согласия
пирсона
соответствующей
статистики
виде
ˆxn
ˆxn
ˆxn
количество
элементов
выборки
ˆxn
принимающих
значение
также
соответствующее
нулевой
гипотезой
утверждающей
элементы
выборки
ˆxn
являются
элементами
выборки
распределения
bernoulli
распределение
статистики
приблизительно
распределено
закону
распределения
нашем
примере
можем
представить
находить
расстояние
данном
случае
путем
вычисления
вероятности
ложного
отклонения
нулевой
гипотезы
ˆxn
bernoulli
ложное
отклонение
нулевой
гипотезы
эквивалентно
успеху
проведении
испытания
бернулли
вероятностью
успеха
равной
грамматика
порождающие
правила
учетом
наличия
нашем
распоряжении
выразительного
вероятностного
языка
граммирования
допускающего
функции
высших
порядков
полного
тьюрингу
наше
априорное
распределение
исходном
коде
искомых
вероятностных
программ
также
статочно
выразительно
общих
чертах
оно
схоже
адаптивными
грамматиками
используемыми
имеет
отличия
частности
связанные
созданием
сред
кальными
переменными
виде
псевдокода
наше
априорное
распределение
представлено
следующим
образом
символ
означает
перейти
выражение
имя
переменной
случайно
выбираемой
среды
переменных
env
типом
type
выражение
случайную
константу
типа
type
константы
ных
типов
целочисленные
вещественные
генерируются
отдельного
каждого
типа
type
процесса
dptype
htype
базовое
ние
htype
само
общем
случае
являются
смесью
нескольких
ний
например
констант
вещественного
типа
используем
смесь
ного
распределения
normal
равномерного
непрерывного
распределения
равномерного
дискретного
распределения
множества
выражение
proceduretyp
цедура
procedur
является
случайно
выбираемой
примитивной
ной
стохастической
составной
процедурой
определенной
заранее
бальной
среде
типом
возвращаемого
значения
type
выражение
является
составной
процедурой
также
генерируемой
соответствии
процессом
дирихле
dptype
gtype
базовое
распределение
gtype
случайным
образом
генерирует
составную
процедуру
типом
щаемого
значения
type
количеством
входных
аргументов
распределенным
закону
пуассона
каждый
входной
аргумент
имеет
свой
произвольный
тип
тело
bodi
составной
процедуры
генерируется
также
случайным
образом
согласно
этим
порождающим
правилам
грамматике
учетом
введение
локальной
среды
включающей
входные
аргументы
процедуры
выражение
let
gensym
exprreal
gensym
env
gensym
означает
среду
дополненную
переменной
именем
gensym
значением
вычисляемым
соответствии
генерируемым
случайным
образом
выражением
согласно
этих
порождающих
правил
выражение
exprbool
exprtyp
exprtyp
выражение
recur
таким
образом
нужно
путать
распределением
дирихле
рекурсивный
вызов
текущей
составной
процедуры
избежание
вычислительных
ошибок
время
выполнения
сгенерированных
цедур
заменяем
примитивные
функции
аналогами
например
log
заменяется
причем
последний
возвращает
мер
заменяется
которая
случае
меняет
аргументы
местами
также
возвращает
просто
аргументы
равны
множество
типов
которые
использовали
рамках
наших
экспериментов
чало
вещественные
булевы
типы
общее
множество
примитивных
процедур
ных
нами
глобальную
среду
включало
такие
функции
вероятности
использования
порождающих
правил
задания
априорных
вероятностей
порождающих
правил
вероятностей
торой
каждое
правил
применяться
случае
возможности
применения
вручную
составили
небольшой
корпус
вероятностных
программ
которые
повторяют
денные
учеными
алгоритмы
генераторов
случайных
чисел
примеры
таких
программ
представлены
рис
заметим
требуют
наличия
одной
ской
процедуры
именно
включили
ную
среду
положительной
вероятностью
экспериментов
описанных
используя
данный
корпус
вычислили
априорные
вероятности
каждого
дающего
правила
выводе
вероятностной
программы
генерации
чайных
величин
искомого
распределения
например
распределения
бернулли
исключали
корпуса
элементы
которые
генерируют
случайные
величины
согласно
закону
распределения
вероятности
использования
порождающих
правил
помощью
распределения
дирихле
будущем
использовать
лее
обширные
корпусы
вероятностных
программ
примером
зарождающегося
подобного
корпуса
служить
эксперименты
эксперименты
разработаны
таким
образом
проиллюстрировать
вида
возможных
ситуаций
описанных
ранее
начале
проиллюстрируем
ность
нашего
априорного
распределения
исходного
кода
вероятностных
программ
рисунок
гистограммы
выборок
некоторых
порожденных
вероятностных
программ
априорного
распределения
форме
распределений
видно
наши
щие
правила
достаточно
обширны
соответствующие
порождающим
вероятностным
программам
распределения
нетривиальны
опишем
постановку
результаты
экспериментов
рамках
использования
нашего
подхода
трех
различных
ситуациях
возможности
вычисления
расстояния
выборки
сгенерированных
вероятностных
программ
иллюстрации
выразительности
нашего
априорного
распределения
исходных
кодов
вероятностных
программ
приводим
выборки
случайным
образом
сгенерированных
вероятностных
программ
априорного
распределения
шесть
выборок
виде
стограмм
шести
различных
автоматически
сгенерированных
вероятностных
мам
расположены
рис
рисунка
видно
разные
случайным
образом
сгенерированные
вероятностные
программы
определяют
общем
случае
достаточно
различные
структурно
распределения
частности
заметить
разнообразие
носителе
дисперсии
количестве
островков
носителя
высокой
вероятностью
отношению
очень
ным
пространствам
островками
вывод
вероятностных
программ
определяющих
распределения
совпадающие
приближающие
классические
одномерные
распределения
отмечено
классических
одномерных
распределений
существуют
алгоритмы
позволяющие
точно
приближенно
генерировать
любое
количество
тов
данных
параметризованных
распределений
аналитически
выведены
учеными
алгоритмы
числе
очевидно
могут
записаны
вероятностные
программы
виде
исходного
кода
провели
серию
экспериментов
проверить
возможность
вывода
вероятностных
программ
генерирующих
выборки
классических
одномерных
распределений
именно
распределения
бернулли
bernoulli
распределения
пуассона
poisson
gamma
beta
ного
нормального
распределения
normal
нормального
распределения
normal
каждого
семейства
распределений
проводили
статистический
вывод
выбирая
качестве
целевого
апостериорного
распределения
частное
распределение
маргинализированное
параметру
приближения
каждом
случае
выбирали
малое
множество
значений
параметров
определяли
стериорное
распределение
ограничениями
распределения
бернулли
близости
моментам
ожидаемым
других
рассматриваемых
распределений
отметим
задании
априорного
распределения
порождающие
правила
каждом
конкретном
случае
корпуса
исключались
вероятностные
программы
носящиеся
искомому
распределению
образцы
гистограмм
выборок
лучших
найденных
результате
вывода
ностных
программ
представлены
рис
лучшими
понимаем
вероятностные
программы
наименьшим
расстоянием
тренировочных
значениях
параметров
ответствующих
значениях
моментов
максимального
стоит
особенно
отметить
результат
эксперимента
распределением
бернулли
рамках
которого
найден
исходный
код
вероятностной
программы
статистически
линно
точно
генерирующей
выборку
семейства
распределения
бернулли
раметром
найденная
вероятностная
программа
представлена
рис
рис
представлен
выведенный
исходный
текст
вероятностной
программы
генерации
элементов
gamma
параметризованного
ром
обобщение
произвольных
эмпирических
данных
помощью
порождающего
ностного
программирования
также
проверили
наш
метод
выводе
порождающих
моделей
виде
вероятностных
программ
объяснения
настоящих
синтетических
данных
аналитическое
деление
которых
неизвестно
рисунок
зеленые
сплошные
линии
гистограммы
выборок
распределений
ветствующих
вероятностным
программам
имеющим
вероятность
орном
распределении
поиске
порождающих
моделей
соответствующих
ниям
слева
направо
сверху
вниз
bernoulli
normal
poisson
gamma
normal
beta
синие
пунктирные
линии
гистограммы
выборок
распределений
параметризация
семейства
распределений
каждом
случае
водилась
другими
значениями
параметров
которые
входили
обучающее
множество
значений
отметим
семейства
распределений
бернулли
bernoulli
ведена
вероятностная
программа
статистически
точно
генерирующая
элементы
выборки
любой
параметризации
рис
стороны
распределения
хорошее
приближение
найденными
вероятностными
программами
время
проводили
вывод
например
случае
beta
par
lambda
par
lambda
par
par
par
par
lambda
par
par
dec
par
co
par
рисунок
сверху
написанный
человеком
исходный
код
генератора
случайных
чисел
распределенных
закону
бернулли
bernoulli
внизу
две
программы
выведенные
ходные
коды
первая
двух
выведенных
вероятностных
программ
определяет
настоящее
семейство
распределений
бернулли
bernoulli
параметризованное
вторая
программа
генерирует
распределение
приближенное
распределению
бернулли
параметризованное
lambda
par
begin
exp
par
begin
lambda
dec
begin
begin
lambda
dec
exp
par
par
exp
par
lambda
рисунок
исходный
код
выведенных
вероятностных
программ
слева
распределения
gamma
справа
третьей
эмпирической
выборки
индикаторов
используемых
рассмотрения
заявок
выдачу
кредита
выборки
сгенерированные
помощью
выполнения
этих
программ
расположены
соответственно
рис
рис
последняя
гистограмма
трех
экономии
места
исходный
код
сокращен
возможно
например
путем
замены
рисунок
гистограммы
зеленые
сплошные
линии
выборок
распределений
деляемых
найденными
процессе
статистического
вывода
вероятностными
программами
аппроксимации
эмпирических
данных
синие
пунктирные
линии
трех
вещественных
показателей
базы
данных
используемой
анализа
заявок
выдачу
кредита
данного
эксперимента
выбрали
набора
данных
признаков
банк
клиентов
получения
кредита
производили
вывод
вероятностной
программы
используя
сравнения
двухвыборочного
теста
смирнова
аналогично
тому
использовали
дискретных
ний
гистограммы
выборок
лучших
найденных
вероятностных
программ
сравнении
гистограммами
истинных
эмпирическими
данными
признаков
клиентов
приведены
рис
пример
выведенной
вероятностной
программы
показан
рис
справа
вероятностных
программ
генерация
выборок
апостериорного
распределения
методом
схеме
ковских
цепей
особенно
случае
байесовского
вывода
обычно
достаточно
дорогостояща
вероятностных
программ
имеем
виду
поиск
вероятностных
грамм
априорное
распределение
которых
согласовывалось
точно
приблизительно
искомым
апостериорным
распределением
вероятностном
программировании
общем
случае
генерация
выборки
assum
theta
beta
observ
theta
true
observ
theta
true
observ
theta
true
observ
theta
true
predict
theta
predict
theta
assum
theta
assum
theta
assum
theta
assum
theta
beta
predict
theta
рисунок
слева
вероятностная
модель
распределения
той
форме
виде
вероятностной
программы
рамках
эксперимента
поставлена
задача
найти
формализацию
апостериорного
распределения
скрытого
параметра
вероятностной
программы
чье
априорное
распределение
совпадать
приближать
данное
апостериорное
справа
сверху
найденные
вероятностные
результат
вероятностных
программ
априорное
распределение
которых
приближает
заданное
апостериорное
распределение
справа
внизу
записанный
человеком
исходный
код
вероятностной
программы
чье
априорное
распределение
дает
априорным
распределением
данном
конкретном
случае
данная
вероятностная
программа
просто
выведена
аналитически
ется
сопряженным
биномиальному
общем
случае
нетривиальная
задача
лаемого
апостериорного
распределения
путем
использования
методом
аналогичным
является
единственным
доступным
средством
разумное
время
эта
проблема
стоит
острее
качестве
самых
предварительных
результатов
провели
эксперимент
ках
которого
наша
априорная
модель
моделью
распределения
несжатой
форме
априорным
распределением
скрытый
параметр
beta
использовали
алгоритм
получения
выборки
риорного
распределения
скрытого
параметра
учетом
проведения
четырех
успешных
испытаний
схеме
бернулли
bernoulli
соответствующая
вероятностная
программа
представлена
рис
затем
использовали
наш
подход
выводу
вероятностных
программ
априорное
распределение
которых
статистически
схожим
полученной
выборкой
мого
апостериорного
распределения
примеры
найденных
вероятностных
программ
даны
рис
данном
конкретном
случае
можем
аналитически
найти
записать
виде
вероятностной
программы
апостериорное
распределение
равное
beta
ким
образом
полученные
результаты
показывают
нашли
хорошее
приближение
апостериорного
распределения
обобщение
порождающего
вероятностного
программирования
отмечено
ранее
порождающие
вероятностные
модели
определяют
совместное
распределение
часто
задаваемое
сначала
помощью
распределения
затем
помощью
условного
распределения
порождающие
вероятностные
модели
гут
использоваться
либо
генерации
выборок
напрямую
либо
качестве
промежуточного
этапа
нахождения
условного
распределения
скрытых
параметров
обычно
помощью
приближенных
методов
статистического
вывода
тимизации
рамках
наших
экспериментов
описанных
выше
решали
задачу
вывода
ятностной
программы
которая
определяет
вероятностную
модель
общем
случае
метризованную
априорное
распределение
которой
соответствует
приближает
мое
распределение
заданное
аналитически
виде
выборки
виде
щего
генератора
элементов
выборки
языке
вероятностного
программирования
church
поддерживающего
проведение
статистического
запроса
внутри
другого
статистического
запроса
данная
задача
сформулирована
следующим
образом
подобно
тому
формулировали
queri
program
product
lambda
arg
eval
program
true
program
true
queri
defin
express
predic
задание
запроса
church
перечисление
типов
входных
аргументов
тип
ного
значения
процедуры
функция
сравнения
статистик
функция
извлечения
статистик
распределения
аналог
queri
возвращающий
несколько
элементов
распределения
вместо
одного
мента
значений
статистик
искомого
распределения
автор
считает
общо
нахождения
вероятностной
модели
служащей
вспомогательным
инструментом
нахождении
условного
апостериорного
распределения
можем
заинтересованы
постановке
задачи
следующим
зом
queri
product
program
eval
lambda
argn
program
program
outputm
правила
порождения
объекта
представляющего
скрытые
раметры
типов
создаваемые
помощью
процедуры
mem
объект
представляющий
скрытые
параметры
arg
чений
аргументов
output
значений
наблюдаемых
данных
значений
ожидаемых
скрытых
параметров
таким
образом
рамках
данной
формулировки
ищем
вероятностную
содержащую
скрытые
переменные
определяемые
наблюдаемые
переменные
определяемые
выполнением
program
вывод
производится
учетом
нировочных
троек
ˆti
ˆxi
дополнительная
параметризация
ˆxi
значения
наблюдаемых
переменных
ˆti
ожидаемые
значения
скрытых
переменных
следует
отметить
настоящее
время
обобщенный
статистический
вод
использованием
вероятностных
языков
программирования
производится
достаточно
медленно
решение
практических
задач
таким
образом
пока
имеет
смысла
стороны
дальнейшим
развитием
обобщенных
методов
статистического
вывода
других
решений
например
оптимизации
поиска
использовании
ных
алгоритмов
программной
реализации
структур
данных
ванным
аппаратным
обеспечением
автоматизированная
генерация
ние
порождающих
вероятностных
моделей
успешно
продуктивно
применяться
практике
заключение
первой
части
данной
работы
очень
кратко
реферативно
представлено
введение
вероятностное
программирование
примере
языков
первое
подобное
введение
русском
языке
насколько
известно
автору
второй
части
данной
работы
представлен
подход
порождению
ных
программ
обобщающих
распределения
представленные
либо
виде
выборки
либо
виде
аналитического
представления
например
виде
значения
статистик
причем
вероятностная
модель
вероятностных
моделей
также
записывается
виде
вероятностной
программы
используя
данный
подход
получены
предварительные
положительные
результаты
статистического
вывода
апостериорного
распределения
искомых
ностных
программ
методами
схеме
цепей
маркова
числе
томатически
выведена
вероятностная
программа
генерирующая
элементы
выборки
семейства
распределений
бернулли
список
использованных
источников
goodman
noah
principl
practic
probabilist
program
acm
sigplan
notic
acm
vol
church
languag
gener
model
noah
goodman
vikash
mansinghka
daniel
roy
mansinghka
vikash
selsam
daniel
perov
yura
ventur
probabilist
program
platform
programm
infer
arxiv
preprint
wood
frank
van
meent
jan
willem
mansinghka
vikash
new
approach
probabilist
program
infer
proceed
intern
confer
artiﬁci
intellig
statist
approxim
bayesian
imag
interpret
use
gener
probabilist
graphic
program
vikash
mansinghka
teja
kulkarni
yura
perov
josh
tenenbaum
advanc
neural
inform
process
system
perov
yura
wood
frank
learn
probabilist
program
статья
отправлена
конференцию
лопатников
леонид
исидорович
словарь
рераб
доп
дело
ветров
дмитрий
петрович
кропотов
дмитрий
александрович
байесовские
машинного
обучения
курс
лекций
методы
схеме
марковских
цепей
url
http
рассел
стюарт
норвиг
питер
искусственный
интеллект
современный
подход
издание
bishop
christoph
pattern
recognit
machin
learn
springer
new
york
murphi
kevin
machin
learn
probabilist
perspect
mit
press
ветров
дмитрий
петрович
кропотов
дмитрий
александрович
байесовские
методы
машинного
обучения
курс
лекций
url
http
сайт
вероятностном
программировании
url
http
абельсон
харольд
сассман
джеральд
джей
структура
интерпретация
терных
программ
добросвет
кду
freer
cameron
mansinghka
vikash
roy
daniel
probabilist
program
probabl
comput
tractabl
nip
workshop
mont
carlo
method
modern
applic
wingat
david
stuhlmuel
andrea
goodman
noah
lightweight
implement
probabilist
program
languag
via
transform
compil
николенко
сергей
игоревич
вероятностное
обучение
курс
лекций
url
http
chib
siddhartha
greenberg
edward
understand
algorithm
american
statistician
vol
зубков
шуваев
вычисление
моментов
комбинаторных
статистик
рестановочных
случайных
величин
дискретная
математика
perov
yura
mansinghka
vikash
exploit
condit
independ
eﬃcient
automat
multicor
infer
church
blei
david
andrew
jordan
michael
latent
dirichlet
alloc
journal
machin
learn
research
vol
jeﬀ
reduc
trace
jite
church
thesi
jeﬀ
massachusett
institut
technolog
captcha
use
hard
problem
secur
lui
von
ahn
manuel
blum
nichola
hopper
john
langford
advanc
cryptolog
eurocrypt
springer
goodman
tenenbaum
probabilist
model
cognit
url
http
repositori
gener
model
composit
author
edit
andrea
url
http
wood
frank
probabilist
program
tutori
machin
learn
summer
school
iceland
url
http
paig
brook
wood
frank
compil
target
probabilist
program
languag
maddison
chri
tarlow
daniel
structur
gener
model
natur
sourc
code
liang
perci
jordan
michael
klein
dan
learn
program
hierarch
bayesian
approach
marsaglia
georg
bray
thoma
conveni
method
gener
normal
variabl
vol
box
georg
muller
mervin
note
gener
random
normal
deviat
vol
devroy
luc
random
variat
gener
gulwani
sumit
kitzelmann
emanuel
schmid
ute
approach
applic
induct
program
dagstuhl
seminar
vol
url
http
look
mosh
program
evolut
gener
intellig
frontier
artifici
intellig
applic
vol
muggleton
stephen
raedt
luc
induct
logic
program
theori
method
vol
muggleton
stephen
feng
cao
eﬃcient
induct
logic
program
vol
raedt
luc
kerst
kristian
probabilist
induct
logic
program
springer
kerst
kristian
induct
logic
program
approach
statist
relat
learn
io
press
url
http
muggleton
stephen
stochast
logic
program
vol
exploit
composition
explor
larg
space
model
structur
roger
gross
ruslan
salakhutdinov
william
freeman
joshua
tenenbaum
structur
discoveri
nonparametr
regress
composit
kernel
search
david
duvenaud
jame
robert
lloyd
roger
gross
hwang
irvin
andrea
goodman
noah
induc
probabilist
program
bayesian
program
merg
gordon
andrew
agenda
probabilist
program
usabl
portabl
ubiquit
workshop
probabilist
program
democrat
machin
learn
markov
chain
mont
carlo
without
likelihood
paul
marjoram
john
molitor
vincent
plagnol
simon
vol
johnson
mark
griﬃth
thoma
goldwat
sharon
adaptor
grammar
framework
specifi
composit
nonparametr
bayesian
model
vol
knuth
donald
art
comput
program
vol
quinlan
ross
simplifi
decis
tree
vol
bach
lichman
uci
machin
learn
repositori
url
http
tenenbaum
joshua
jona
eric
mansinghka
vikash
stochast
digit
circuit
probabilist
infer
jona
eric
michael
stochast
architectur
probabilist
comput
thesi
eric
michael
jona
massachusett
institut
technolog
