method
image
reduction
based
generalization
ordered
weighted
averaging
functions∗
diego
farias
valdigleis
costa
luiz
ranyer
lopes
benjam´ın
bedregal
¶and
regivan
santiago
cid:107
august
2018
abstract
paper
propose
special
type
aggregation
function
gener-
alizes
notion
ordered
weighted
averaging
function
owa
resulting
functions
called
dynamic
ordered
weighted
averaging
functions
dy-
owas
generalization
developed
way
weight
vectors
variables
depending
input
vector
particularly
operators
gener-
alize
aggregation
functions
minimum
maximum
arithmetic
mean
median
etc
extensively
used
image
processing
ﬁeld
research
two
problems
considered
determination
methods
reduce
images
∗preprint
submitted
ieee
transactions
fuzzy
systems
†federal
university
semi-arid
ufersa
pau
dos
ferros
brazil
59.900-000
anto-
nio.diego
ufersa.edu.br
‡dimap
valdigleis
ppgsc.ufrn.br
§dimap
ranyer.lopes
gmail.com
¶dimap
bedregal
dimap.ufrn.br
cid:107
dimap
regivan
dimap.ufrn.br
∗∗dimap
department
informatics
applied
mathematics
federal
university
rio
grande
norte
ufrn
natal
brazil
59.072-970
construction
techniques
provide
noise
reduction
operators
described
able
used
cases
terms
image
reduction
apply
methodology
provided
use
noise
reduction
operators
obtained
treat
images
obtained
ﬁrst
part
paper
thus
obtaining
images
better
quality
keywords
aggregation
functions
owa
functions
image
reduction
noise
reduc-
tion
introduction
image
processing
great
applicability
several
areas
medicine
example
applied
identify
tumors
support
techniques
advancing
dental
treatments
etc
images
always
obtained
suitable
quality
detect
desired
information
various
methods
developed
order
eliminate
noise
contained
images
another
problem
addressed
image
processing
decrease
resolution
usu-
ally
aiming
reduction
memory
consumption
required
storage
several
techniques
image
reduction
literature
recently
paternain
constructed
reduction
operators
using
weighted
averaging
aggre-
gation
functions
proposed
method
consists
reduce
given
image
using
reduction
operator
build
new
image
reduced
one
analyze
quality
last
image
using
measures
psnr
msim
work
introduce
class
aggregation
functions
called
dynamic
or-
dered
weighted
averaging
function
dyowa
generalize
owa
func-
tion
introduced
yager
particular
operators
arithmetic
mean
median
maximum
minimum
cowa
provide
range
properties
idem-
potence
symmetry
homogeneity
well
two
methods
image
reduction
1these
methods
implemented
using
java
1.8.0
software
bits
windows
machine
noise
treatment
paper
structured
following
way
section
provides
basics
aggregation
functions
theory
section
introduces
dynamic
ordered
weighted
averaging
functions
shows
examples
properties
introduces
particular
owa
function
called
fundamental
work
section
provide
application
owa
image
reduction
section
show
owa
functions
able
treat
images
noise
aiming
improve
reduction
method
used
section
finally
section
section
gives
ﬁnal
remarks
work
aggregation
functions
aggregation
functions
important
mathematical
tools
applications
several
ﬁelds
information
fuzzy
decision
making
image
processing
engineering
section
introduce
together
exam-
ples
properties
also
present
special
family
aggregation
functions
called
ordered
weighted
averaging
owa
show
features
2.1
deﬁnition
examples
aggregation
functions
associate
entry
arguments
closed
interval
output
value
also
interval
formally
deﬁnition
n-ary
aggregation
function
mapping
associates
n-dimensional
vector
single
value
interval
...
...
i.e.
...
example
arithmetic
mean
arith
...
minimum
min
...
maximum
max
...
harmonic
mean
···
use
short
term
aggregation
instead
n-ary
aggrega-
tion
function
aggregations
divided
four
distinct
classes
averaging
conjunctive
disjunctive
mixed
since
paper
focus
averaging
aggregations
deﬁne
class
wider
approach
aggregation
found
deﬁnition
aggregation
called
averaging
example
arithmetic
mean
maximum
minimum
averaging
aggregation
functions
2.2
special
types
aggregation
functions
aggregation
function
idempotent
...
homogeneous
order
λx1
λx2
...
λxn
λkf
...
homogeneous
order
simply
say
homogeneous
shift-invariant
x1+r
x2+r
xn+r
...
...
monotonic
implies
strictly
monotone
whenever
i.e
cid:54
neutral
element
coordinate
input
vector
...
...
symmetric
value
changed
permutations
coordinates
i.e
...
···
permutation
...
...
absorbing
element
annihilator
aggregation
function
ele-
ment
...
xi−1
xi+1
...
zero
divisor
aggregation
function
element
vector
...
xj−1
xj+1
one
divisor
aggregation
function
element
vector
...
xj−1
xj+1
strong
negation2
aggrega-
tion
function
dual
aggregation
function
...
...
also
aggregation
function
example
functions
arith
examples
idempotent
homogeneous
shift-invariant
monotonic
symmetric
functions
elements
annihilator
respectively
arith
annihiladors
iii
arith
zero
divisors
one
divisors
dual
respect
negation
function
2.3
ordered
weighted
averaging
function
owa
ﬁeld
aggregation
functions
important
subclass
elements
parametric
called
ordered
weighted
averaging
simply
owa
owa
aggregation
function
associates
weights
components
input
vector
achieve
observe
following
deﬁnition
strong
negation
antitonic
function
deﬁnition
let
input
vector
vector
weights
assuming
permutation
cid:80
i=1
sort
i+1
i.e.
ordered
weighted
averaging
owa
function
respect
function
cid:88
owaw
follows
remove
owaw
main
properties
func-
i=1
tions
vector
weights
function
owa
idempotent
mono-
tonic
moreover
owa
strictly
increasing
weights
positive
dual
owaw
denoted
owa
vector
weights
dually
ordered
i.e
owaw
owawd
n−1
...
owa
continuous
symmetric
shift-invariant
functions
neutral
absorption
elements
except
special
case
functions
owa
2.3.1
examples
special
functions
owa
weight
vector
components
equal
owa
arith
...
owa
...
owa
exception
k-th
member
i.e
owa
called
static
owaw
given
vector
ordered
permutation
sort
median
function

k+1
k+1
owa
function
vector
weights
deﬁned
odd
cid:54
cid:100
even
cid:54
cid:100
n+1
cid:101
cid:100
n/2
cid:101
cid:101
cid:54
cid:98
n+1
cid:99
cid:100
n/2
cid:101
cid:98
n/2
cid:99
example
n-dimensional
cowa
function
owa
operator
weighted
vector
deﬁned
even
2j−1
wn/2+i
wn/2−i+1
odd
2j−1
n+1
n−1
n−1
cid:80
j=1
wn/2+i
wn/2−i+1
owa
functions
deﬁned
terms
predetermined
vector
weights
next
section
propose
generalization
concept
owa
order
relax
vector
weights
achieve
replace
vector
weights
family
functions
resulting
functions
called
dynamic
ordered
weighted
avegaring
functions
short
dyowas
dynamic
ordered
weighted
avegaring
functions
owa
deﬁning
notion
owa
functions
need
establish
notion
weight-function
deﬁnition
ﬁnite
family
functions
cid:88
called
family
weight-function
fwf
i=1
dynamic
ordered
weighted
averaging
function
simply
dyowa
associ-
ated
fwf
function
form
owaγ
cid:88
i=1
show
examples
owa
operators
respective
weight-
functions
owa
operator
associated
example
let
owaγ
arith
example
function
minimum
obtained
···
fn−1
example
similarly
function
maximum
also
type
owa
dually
deﬁned
example
vector
weights
...
function
owaw
owa
weight-functions
given
···
···
permutation
example
0.3
0.4
0.3
0.1
1.0
0.9
thus
0.3
0.3
0.4
owa
0.3
0.1
0.3
1.0
0.4
0.9
0.69
remark
example
shows
functions
owa
introduced
yager
special
cases
owa
functions
however
owa
functions
owa
example
let
sin
sin
respective
owa
function
owa
sin
sin
owa
function
3.1
properties
owa
functions
next
theorem
characterizes
owa
functions
also
aggregations
theorem
let
···
fwf
owaγ
aggregation
function
monotonic
proof
obviously
owaγ
aggregation
monotonic
function
con-
versely
owaγ
monotonic
become
aggregation
enough
show
owaγ
...
owaγ
...
follows
deﬁnition
owa
corollary
owa
aggregation
function
aggrega-
tion
type
averaging
proof
...
cid:80
i=1
...
cid:88
i=1
cid:88
cid:88
i=1
i=1
follows
cid:88
i=1
corollary
functions
type
owa
presented
examples
averaging
aggregation
functions
proof
see
functions
monotonic
proposition
every
owaγ
idempotent
proof
...
cid:88
cid:88
owaγ
i=1
i=1
property
important
tells
every
owa
idempotent
regardless
aggregation
proposition
invariant
translations
i.e
...
...
···
owaγ
shift-invariant
proof
let
...
x1+λ
x2+λ
...
xn+
owaγ
...
i=1
cid:88
cid:88
cid:88
cid:88
i=1
i=1
...
...
...
...
i=1
owaγ
...
proposition
homogeneous
order
i.e.
homogeneus
order
owaγ
homogeneous
order
proof
course
owaγ
λx1
...
λxn
...
cid:54
owaγ
λx1
...
λxn
λx1
...
λxn
λxi
cid:88
cid:88
i=1
λkfi
...
i=1
λk+1
owaγ
...
...
otherwise
cid:80
j=1

cid:80
cid:80
i=1
i=1
...
otherwise
example
10.
let
deﬁned
...

owaγ
owaγ
idempotent
homogeneous
shift-invariant
however
owaγ
monotonic
since
owaγ
0.5
0.2
0.1
0.375
owaγ
0.5
0.22
0.2
0.368.
next
deﬁnition
provides
special
fwf
used
build
owa
whose
properties
important
paper
n−1
cid:80


deﬁnition
consider
family
functions
1
|xi−m
cid:80
|xj−m
j=1
...
otherwise
fwf
i.e
let
associated
owa
computation
performed
using
following
expressions
i=1
n−1
cid:80
i=1
xi
xi|xi−m
cid:80
|xj−m
j=1
...
otherwise
example
11.
let
0.1
0.3
0.5
0.167
0.333
0.08.
proposition
weight-functions
deﬁned
deﬁnition
...
...
λx1
...
λxn
...
proof
writing
cid:48
x1+λ
...
xn+λ
x1+λ
...
xn+λ
cid:48
...
cid:48
clearly
cid:48
thus
cid:54
...
cid:80
|xj
+λ−m
cid:48
1
|xi+λ−m
cid:48
1
|xi+λ−
1
|xi−m
|xj
+λ−
cid:80
j=1
j=1
|xj−m
cid:80
cid:48
n−1
n−1
n−1
j=1
therefore
cid:48
cid:48
...
cid:48
...
case
...
immediate
check
second
property
make
cid:48
cid:48
λx1
...
λxn
note
cid:48
cid:48
λmed
cid:54
...
cid:48
cid:48
n−1
n−1
n−1
n−1
j=1
cid:80
cid:80
|λxj−m
1
|λxi−m
1
|λxi−λm
1
|λ|·|xi−m
|λ|·
cid:80
1
|xi−m
cid:80
|λxj−λm
|xj−m
|xj−m
j=1
j=1
j=1
therefore
cid:48
cid:48
cid:48
cid:48
...
cid:48
cid:48
...
case
...
also
immediately
corollary
shift-invariant
homogeneous
proof
straightforward
propositions
function
great
importance
work
since
function
well
owa
already
mentioned
provide
tools
able
reduce
size
images
deal
noise
reduction
present
properties
function
3.2
properties
addition
idempotency
homogeneity
shift-invariance
following
pro-
prerties
proposition
neutral
element
proof
suppose
neutral
element
ﬁnd
vector
weight
...
...
note
therefore
|xj−m
cid:80
1
|xi−m
1
|xi−e|
cid:16
cid:17
cid:80
|xi−e|
|x−e|
|xj−e|
j=1
j=1
n−1
n−1
n−1

cid:16
n−1
n−1
...
n−1
n−1
...
n−1
cid:17
therefore
i.e.
since
neutral
element
absurd
since
always
take
cid:54
cases
difﬁcult
show
0.5
0.5
cid:54
cid:54
proposition
absorbing
elements
thus
taking
proof
absorbing
elements
...
therefore
cid:16
cid:17
...
therefore
...
...
...
furthermore
cid:18
cid:19
therefore
para
...
...
...
prove
note
annihiladors
proposition
zero
divisors
cid:80
proof
let
consider
...
order
...
cid:54
always
take
...
also
different
zero
...
remains
possibility
terms
i=1
absurd
like
zero
divisors
para
...
cid:80
i=1
proposition
one
divisors
proof
see
...
proposition
symmetric
proof
let
...
...
permutation
easily
see
...
...
...
|xi−m
also
thus
sufﬁces
consider
case
...
cid:54
...
...
cid:54
...
|xp
...
cid:80
cid:80
i=1
i=1
n−1
...
i=1
j=1
i=1
cid:80
|xp
...
cid:80
|xp
...
|xp
...
xp
|xp
...
cid:80
n−1
cid:80
n−1
cid:80
n−1
cid:80
cid:80
|xp
...
xi|xi−m
...
|xi−m
...
cid:80
n−1
cid:80
n−1
cid:80
n−1
|xi−m
...
cid:80
i=1
i=1
j=1
j=1
i=1
i=1
i=1
j=1
...
therefore
satisﬁes
following
properties
idempotence
homogeneity
shift-invariance
symmetry
neutral
element
absorbing
elements
zero
divisors
one
divisors
remark
unfortunately
prove
monotonicity
due
complexity
suspect
true
demonstration
relegated
future
work
next
two
sections
show
suitability
owa
provide
appli-
cations
image
noise
reduction
owa
images
reduction
tools
part
work
use
functions
owa
studied
examples
deﬁnition
build
image
reduction
operators
resulting
images
compared
reduced
image
obtained
operator
function
image
matrix
represents
pixel
essence
reduction
operator
reduces
given
image
another
cid:48
cid:48
cid:48
cid:48
example

0.1
0.3
0.2
0.3
0.5
0.3
0.2
0.6
0.5
0.5
0.8
0.4
0.7

cid:55

0.1

0.6
grayscale
images
value
pixels
belong
set
255
normalized
dividing
255
think
pixels
values
range
figure
example
image
grayscale
several
possible
ways
reduce
given
image
shown
following
example
example
12.
image

0.8
0.6
0.7
0.2
0.1
0.2
0.2
0.3
0.6
0.3
0.5
0.5
0.1
0.4
0.4
0.9
0.5
0.6




0.5
0.6
reduced
another
partitioning
blocks


0.8

0.6
0.1


0.7
0.2
0.2
0.3
0.3

0.2

0.6

0.8

0.2
0.2


0.1
0.4
0.4
0.6
0.5

0.5

0.9


m∗∗
0.1
0.2
0.5
obtain
image
applying
would
obtain
applying
block
example
function
fact
apply
function
get
new
image
usually
different
previous
one
best
one
possible
answer
question
involves
method
called
magniﬁcation
extension
see
method
magniﬁes
reduced
image
another
size
original
one
magniﬁed
image
compared
original
input
image
example
13.
m∗∗
get
images
cid:48
cid:48
cid:48
simply
cloning
pixel
cid:20
cid:21
cid:55


obtain
new
images


0.8
0.8
0.2
0.2
0.8
0.8
0.2
0.2
0.6
0.6
0.6
0.6
0.2
0.2
0.2
0.2
0.1
0.1
0.2
0.2
0.1
0.1
0.2
0.2
0.5
0.5
0.5
0.5


since
size
original
image
measure
best
reduction
done
comparing
initial
image
resulting
images
compare
one
possibilities
compare
images
original
image
use
mensure
psnr
calculated
follows
log10
cid:18
cid:19
two
images
axi
maximum
possible
pixel
value
pixel
observe
j=1
i=1
closer
image
smaller
value
mse
larger
value
psnr
follows
use
owa
operators
cowa
edian
arith
reduce
size
images
grayscale
apply
following
method
method
reduce
input
images
using
cowa
arithmetic
mean
median
3in
particular
input
image
equal
mse
value
zero
psnr
inﬁnity
cid:80
cid:80
magnify
reduced
image
size
original
image
using
method
described
example
compare
last
image
original
one
using
measure
remark
general
method
applied
kind
image
work
applied
images
grayscale
size
512
512
figure
tables
present
psnr
values
input
images
output
provided
method
table
provides
results
operators
using
blocks
table
blocks
img
img
img
img
img
img
img
img
img
img
avg
29.63
33.15
29.52
31.54
27.87
40.78
27.40
26.56
28.84
24.43
29.97
cowa
29.66
33.14
29.53
31.54
27.88
40.78
27.42
26.57
28.85
24.45
29.98
arith
median
29.50
33.09
33.18
29.44
29.57
31.46
31.61
27.91
27.80
40.78
40.79
27.30
27.47
26.47
26.61
28.89
28.73
24.27
24.53
30.03
29.88
table
values
reduction
using
owas
operators
using
blocks
according
psnr
arith
provided
higher
quality
image
however
re-
duction
operators
generated
cowa
provide
quite
similar
images
given
arith
observe
although
method
simple
introduces
noise
re-
sulting
image
follows
show
operator
suitable
ﬁlter
images
noise
done
using
deﬁne
weights
used
process
convolution
new
process
used
provide
better
comparison
method
4in
paper
made
two
reductions
using
blocks
blocks
figure
original
images
owa
tools
noise
reduction
section
show
owa
operators
studied
section
iii
used
deal
images
containing
noise
img
img
img
img
img
img
img
img
img
img
avg
26.34
23.64
25.55
27.53
24.14
34.39
23.98
23.07
25.78
21.71
25.61
cowa
arith
median
26.70
26.26
22.78
23.60
24.84
25.46
27.45
26.86
23.28
24.06
33.83
34.34
23.19
23.88
22.97
22.18
25.05
25.69
20.62
21.61
25.53
24.83
26.36
23.65
25.56
27.54
24.14
34.41
23.99
23.07
25.79
21.71
25.62
table
values
reduction
using
owas
operators
using
blocks
methodology
employed
consists
analyze
previous
images
gaussian
noise
apply
ﬁlter
built
upon
operators
cowa
arith
based
convolution
method
see
compare
resulting
images
original
one
using
psnr
img
img
img
img
img
img
img
img
img
img
avg
30.96
28.16
31.33
32.33
30.39
31.66
28.97
28.51
30.03
25.97
29.83
cowa
arith
30.96
30.56
27.78
27.36
31.08
30.99
32.20
32.09
30.10
30.09
31.69
31.38
28.80
28.65
28.25
28.28
30.02
29.73
25.84
25.81
29.60
29.57
tratament
23.83
24.36
24.23
24.48
24.06
25.73
23.93
24.02
23.91
23.76
24.23
table
values
output
image
original
one
tables
iii
demonstrate
power
images
noise
listed
operators
improved
signiﬁcantly
quality
image
noise
however
exceeded
analyzed
figure
shows
example
image
gaussian
noise
img
img
img
img
img
img
img
img
img
img
avg
29.88
27.33
29.92
30.23
29.38
27.95
28.23
27.87
29.17
25.55
28.55
cowa
arith
29.97
29.40
26.74
27.04
29.79
29.55
30.06
30.08
29.27
28.96
27.56
28.03
28.14
27.84
27.57
27.70
29.22
28.76
25.44
25.39
28.26
28.39
tratament
21.19
21.48
21.32
21.51
21.30
22.36
21.26
21.28
21.25
21.41
21.44
table
values
output
image
original
one
figure
output
image
applying
ﬁlter
convolution
using
figure
image
gaussian
noise
reader
see
tables
iii
proved
excellent
operator
noise
reduction
follows
modify
method
order
provide
better
magniﬁed
image
compare
original
one
method
reduce
input
images
using
cowa
arithmetic
mean
median
figure
figure
treated
convolution
magnify
reduced
image
size
original
image
using
method
described
example
use
convolution
ﬁlter
using
last
image
compare
last
image
original
one
using
measure
tables
show
obtained
results
img
img
img
img
img
img
img
img
img
img
avg
30.60
28.68
30.89
32.74
29.22
43.88
28.05
27.39
29.36
24.94
30.57
cowa
arith
median
30.50
30.55
28.68
28.67
30.84
30.83
32.71
32.71
29.19
29.18
43.90
43.80
27.95
28.01
27.37
27.36
29.30
29.35
24.83
24.92
30.54
30.53
30.62
28.70
30.85
32.71
29.16
43.93
28.03
27.37
29.40
24.95
30.57
table
original
image
magniﬁed
image
image
reduced
blocks
since
output
convolution
using
closer
original
input
image
tables
show
process
reduction
using
efﬁcient
img
img
img
img
img
img
img
img
img
img
avg
27.44
23.91
26.86
28.87
25.15
28.13
24.68
23.78
26.45
22.27
25.75
cowa
arith
median
27.01
27.41
23.24
23.88
26.28
26.85
28.86
28.39
24.64
25.15
27.04
28.05
24.13
24.63
23.76
23.14
25.92
26.40
21.49
22.21
25.72
25.12
27.41
23.91
26.85
28.85
25.12
28.13
24.68
23.78
26.45
22.26
25.74
table
original
image
magniﬁed
image
image
reduced
blocks
final
remarks
paper
propose
generalized
form
ordered
weighted
averaging
func-
tion
called
dynamic
ordered
weighted
averaging
function
simply
dyowa
functions
deﬁned
weights
obtained
dynamically
input
vector
demonstrate
among
results
owa
functions
instances
owas
hence
functions
like
arithmetic
mean
median
maximum
minimum
cowa
also
examples
owa
second
part
work
present
particular
owa
called
show
idempotent
symmetric
homogeneous
shift-invariant
moreover
zero
divisors
one
divisors
also
neutral
elements
since
aggregation
functions
satisfy
properties
extensively
used
image
pro-
cessing
tested
usefulness
reduce
size
images
deal
noise
images
terms
image
reduction
method
showed
weakness
since
adds
noise
process
magniﬁcation
however
treatment
noise
function
improved
magniﬁcation
step
providing
evidence
function
efﬁcient
perform
image
reduction
process
figure
magniﬁcation
image
reduce
bloks
using
operator
method
figure
magniﬁcation
image
reduce
bloks
using
operator
method
figure
image
figure
magniﬁcation
image
reduce
bloks
using
operator
method
references
paternain
fernandeza
bustince
mesiar
beliakov
construction
image
reduction
operators
using
averaging
aggregation
functions
fuzzy
sets
systems
261
2015
87–111
figure
magniﬁcation
image
reduce
bloks
using
operator
method
figure
image
joseph
singh
manikandan
brain
tumor
mri
image
segmentation
detection
image
processing
international
journal
research
tecnol-
ogy
vol
2014
issn
2319-1163
solanki
jain
desai
isef
based
identiﬁcation
rct/filling
dental
caries
decayed
tooth
international
journal
image
processing
ijip
vol
2013
149-162
gonzales
woods
digital
image
processing
third
edition
pearson
2008
yager
ordered
weighted
averaging
aggregation
operators
multicriteria
decision
making
ieee
trans
syst
mancybern
1988
183-190
dubois
prade
use
aggregation
operations
information
fusion
processes
fuzzy
sets
syst
142
2004
143-161
s.-j
chen
c.-l.
hwang
fuzzy
multiple
attribute
decision
making
methods
applications
springer
berlin
heidelberg
1992
-m.
zhou
chiclana
john
garibaldi
type
owa
operators
aggregating
uncertain
information
uncertain
weight
sinduced
type
linguistic
quantiﬁers
fuzzy
sets
syst
159
2008
3281-3296
yager
gumrah
reformat
using
web
personal
evaluation
tool
pet
lexicographic
multi-criteria
service
selection
knowl
based
syst
2011
929-942
paternain
jurio
barrenechea
bustince
bedregal
szmidt
alternative
fuzzy
methods
decision-making
problems
expert
syst
appl
7729-7735
2012
bustince
galar
bedregal
koles´arov´a
mesiar
new
approach
interval-valued
choquet
integrals
problem
ordering
interval-valued
fuzzy
set
applications
ieee
fuzzy
systems
1150-1162
2013
beliakov
bustince
paternain
image
reduction
using
means
discrete
product
lattices
ieeetrans
imageprocess
2012
1070-1083
liang
aggregation
method
motor
drive
systems
eletric
power
system
research
117
2014
27-35
dubois
prade
eds
fundamental
sof
fuzzy
sets
kluwer
academic
pub-
lishers
dordrecht
2000
beliakov
pradera
calvo
aggregation
functions
guide
practition-
ers
stud
fuzziness
soft
comput
221
2007
grabisch
pap
marichal
mesiar
aggregation
functions
univer-
sity
press
cambridge
2009
baczy´nnski
jayaram
fuzzy
implications
springer
berlin
2008
yager
centered
owa
operators
soft
comput
2007
631-639
jurio
pagola
mesiar
beliakov
bustince
image
magniﬁcation
using
interval
information
ieee
trans
image
process
2011
3112-3123
yang
wright
huang
image
super-revolution
via
sparse
rep-
resentation
ieee
trans
image
processing
2010
2861-2873
yang
wright
huang
image
super-revolution
sparse
repre-
sentation
raw
image
patches
computer
vision
pattern
recoginition
2008.
cvpr
2008.
ieee
conference
ieee
2008
1-8
