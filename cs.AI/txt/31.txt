utility
hedged
assertions
emergence
shared
categorical
labels
martha
lewis
jonathan
lawry
abstract
investigate
emergence
shared
concepts
community
language
users
using
multi-agent
simulation
extend
results
showing
negated
assertions
use
devel-
oping
shared
categories
include
assertions
modiﬁed
linguistic
hedges
results
show
using
hedged
assertions
positively
affects
emergence
shared
categories
two
distinct
ways
firstly
us-
ing
contraction
hedges
like
gives
better
convergence
time
secondly
using
expansion
hedges
quite
reduces
concept
overlap
however
improvements
come
cost
slower
speed
development
introduction
evolutionary
approach
semantics
enables
development
robots
autonomous
agents
ﬂexible
mutable
concepts
could
learnt
interaction
change
time
approach
investigated
eyre
lawry
develop
model
language
evolution
based
label
se-
mantics
framework
show
using
mixture
positive
negated
assertions
enables
development
languages
shared
discriminate
effectively
elements
within
environment
extend
work
include
assertions
modiﬁed
words
quite
show
improves
performance
two
ways
use
hedge
improves
levels
convergence
attained
using
hedge
quite
reduces
amount
overlap
within
agent
label
set
describe
detail
theoreti-
cal
approach
concepts
taken
linguistic
hedges
remainder
section
section
gives
details
mathematical
com-
putational
model
used
simulations
section
gives
results
simulations
discussed
section
lastly
section
gives
conclusions
avenues
research
1.1
representation
model
concepts
model
concepts
within
label
semantics
framework
combined
prototype
theory
conceptual
spaces
model
concepts
prototype
theory
offers
alternative
classical
theory
concepts
basing
categorization
proximity
prototype
approach
based
experimental
results
human
subjects
found
view
membership
concept
matter
degree
objects
higher
membership
others
fuzzy
set
theory
object
graded
membership
concept
proposed
formalism
prototype
theory
however
numerous
objections
suitability
made
university
bristol
england
email
martha.lewis
bristol.ac.uk
j.lawry
bristol.ac.uk
conceptual
spaces
theory
renders
concepts
convex
regions
conceptual
space
geometrical
structure
quality
dimensions
distance
metric
examples
rgb
colour
cube
pictured
ﬁgure
physical
dimensions
height
breadth
depth
taste
tetrahedron
since
concepts
convex
regions
spaces
centroid
region
naturally
viewed
prototype
concept
figure
rgb
cube
represents
colours
three
dimensions
red
green
blue
colour
concept
purple
represented
region
conceptual
space
within
framework
agents
use
sets
label
semantics
random
set
approach
concepts
quantiﬁes
agent
uncertainty
extent
application
concept
refer
subjective
uncertainty
empha-
sise
concerns
deﬁnition
concepts
categories
con-
trast
stochastic
uncertainty
concerns
state
world
lawry
tang
combine
label
semantics
approach
con-
ceptual
spaces
prototype
theory
give
formalisation
con-
cepts
based
prototype
threshold
located
conceptual
space
labels
...
describe
underlying
conceptual
space
distance
metric
points
conceptual
space
could
mentioned
rgb
colour
space
labels
would
concepts
red
blue
purple
orange
labels
viewed
regions
conceptual
space
concept
blue
represented
blue
region
colour
cube
within
label
semantics
regions
speciﬁed
prototypes
thresholds
contrast
g¨ardenfors
original
approach
view
space
partitioned
voronoi
tessellation
latter
approach
taken
individual
point
conceptual
space
allocated
exactly
one
label
prototype-threshold
approach
easy
accommodate
idea
object
ac-
curately
described
one
concept
conversely
points
within
space
assigned
concept
dif-
ference
illustrated
ﬁgures
figure
conceptual
space
divided
concepts
according
voronoi
tessellation
around
prototypes
part
space
corresponds
exactly
one
concept
label
describe
element
given
probability
lies
within
neighbourhood
i.e
distance
less
µli
dεi
figure
shows
appropriateness
measure
works
setup
similar
ﬁgure
cid:90
figure
conceptual
space
divided
concepts
according
prototype-
threshold
approach
points
space
correspond
one
concept
correspond
none
model
however
agents
uncertain
exactly
thresholds
lie
illustrate
consider
concept
tall
easy
point
tall
person
point
person
tall
difﬁcult
specify
exact
threshold
tall
tall
uncertainty
concerning
threshold
lies
rep-
resented
label
semantics
framework
saying
threshold
drawn
probability
distribution
labels
associ-
ated
neighbourhoods
cid:126
cid:126
i.e
region
within
threshold
ideas
represented
ﬁgure
figure
prototype-threshold
representation
concept
concep-
tual
space
dimensions
concept
prototype
threshold
uncertainty
threshold
represented
dotted
line
neighbourhood
area
within
dotted
line
element
conceptual
space
within
threshold
appropriate
assert
element
outside
threshold
appropriate
assert
threshold
uncertain
however
probability
ﬁgure
actually
wide
enough
include
object
i.e
appropriate
describe
appropriateness
µli
figure
membership
concept
prototype
label
0.5
0.5
threshold
distribution
0.3
0.5
0.5
move
away
prototype
membership
concept
decreases
0.3
appropriateness
measure
similar
zadeh
description
fuzzy
membership
concept
1.2
linguistic
hedges
hedges
words
phrases
quite
strictly
speak-
ing
modify
domain
application
concept
partic-
ular
quite
respectively
contract
expand
domain
application
concept
example
tall
applies
fewer
people
tall
whereas
quite
tall
applies
within
fuzzy
set
theory
expect
µvery
µquite
applying
concept
tall
means
membership
concept
tall
always
less
membership
tall
anyone
described
tall
also
described
tall
zadeh
uses
operations
concentration
dilation
render
ideas
concentration
described
con
µli
µli
dilation
often
ren-
dered
dil
µli
µli
1/2
however
argue
zadeh
formulae
extent
arbitrary
since
no-
tion
taking
power
membership
value
correspond
anything
language
users
might
rather
simply
right
effects
take
semantic
approach
propose
concept
quite
rendered
considering
prototype
very/quite
equal
base
concept
threshold
hedged
concept
very/quite
respectively
smaller
larger
base
concept
approach
grounded
idea
very/quite
apply
respectively
fewer
objects
narrow-
ing
widening
threshold
achieves
natural
way
illustrated
ﬁgure
model
hedges
quite
therefore
requires
sim-
ply
vεi
qεi
implement
model
version
multi-agent
simulation
created
order
in-
vestigate
use
hedges
model
language
helps
00.10.20.30.40.50.60.70.80.9100.10.20.30.40.500.10.20.30.40.50.60.70.80.9100.10.20.30.40.500.20.40.60.8100.20.40.60.8100.20.40.60.81x1x2µl
vεi
qεi
figure
representation
quite
proto-
type
threshold
vεi
quite
prototype
threshold
qεi
notice
although
appropriate
describe
vli
also
although
appropriate
describe
qli
emergence
shared
categories
across
community
language
users
methods
2.1
overview
investigate
utility
hedged
assertions
implement
multi-
agent
simulation
version
category
game
following
shared
categories
develop
time
result
interactions
category
users
overview
game
fol-
lows
agents
use
labels
describe
conceptual
space
timestep
agents
randomly
paired
speakers
listeners
pair
shown
distinct
element
speaker
makes
assertion
element
based
label
set
listener
updates
label
set
similar
speaker
based
assertion
parameter
thought
age
speaker
update
made
speaker
com-
bination
shifting
prototype
relevant
label
changing
size
threshold
aim
number
timesteps
label
sets
across
population
converged
common
set
shared
categories
2.2
conceptual
models
agent
equipped
number
labels
point
prototypes
start
simu-
lations
uniformly
distributed
around
space
thresholds
also
randomly
initiated
considered
multiple
base
threshold
threshold
considered
multiple
common
taken
0.5
distance
metric
euclidean
agent
therefore
label
set
...
labels
hedged
form
set
la+
la∪
quite
...
hedged
concepts
prototype
ba-
sic
labels
scaled
threshold
vεi
qεi
agents
assert
positive
negated
hedged
basic
la-
bels
giving
assertion
set
kli
¬kli
...
quite
basic
basic
means
label
hedged
2.3
assertion
model
timestep
half
agents
designated
speaker
agents
make
assertions
determined
assertion
model
used.the
asser-
tion
model
based
probability
making
particular
asser-
tion
given
object
described
following
methods
calculate
posterior
probability
given
element
assertion
made
speaker
agent
as-
sertion
highest
probability
posterior
probability
given
determined
appropriateness
assertion
describe
i.e
prior
probability
asserting
ﬁrst
consider
sets
labels
appropriate
de-
scribe
probability
particular
set
labels
appropriate
describe
given
probability
mass
function
2la
one
way
determining
via
consonant
selection
function
introduced
states
deﬁnition
consonant
selection
function
given
non-zero
ap-
propriateness
measures
basic
labels
µli
...
or-
dered
µli
µli+1
...
consonant
selection
function
identiﬁes
mass
function
...
µln
...
µli
µli+1
..n
µl1
cid:54
...
ordered
labels
µli
µli+1
label
appropriate
describe
labels
must
also
appropriate
describe
quantity
µli
µli+1
cor-
responds
idea
sense
lies
thresholds
εi+1
appropriate
describe
li+1
extend
deﬁnition
case
hedged
labels
simply
con-
sidering
hedged
labels
basic
labels
explained
example
example
determining
mass
function
suppose
de-
termining
mass
function
subsets
kl1
kl2
quite
basic
given
point
illustrated
ﬁgure
figure
determining
mass
function
subsets
kl1
kl2
quite
basic
represent
prototypes
lable
dotted
lines
give
different
thresholds
according
hedges
ﬁgure
notice
quite
quite
appropriate
describe
although
different
appropriateness
measures
shown
suppose
µquite
0.9
µl2
0.7
µquite
0.3
µvery
0.1
µl1
µvery
giving
order
µquite
µl2
µquite
µvery
µl1
µvery
may
assign
probabilities
subsets
labels
according
consonant
selection
function
quite
quite
µvery
quite
quite
µl1
µvery
quite
quite
µvery
µl1
0.1
quite
quite
µquite
µvery
0.2
quite
µl2
µquite
0.4
quite
µquite
µl2
0.2
µquite
0.1
table
prior
probabilities
type
assertion
±kli
¬vl
¬ql
prior
probability
asserting
particular
label
uniform
across
hence
value
calculated
divided
giving
example
¬vl2
example
determining
posterior
probability
assertion
suppose
easy
example
want
calculate
probability
asserting
given
object
example
need
calculate
g⊆as
max
cid:88
determined
probability
mass
function
sets
labels
mass
assignment
sets
assertions
deﬁned
¬klj
klj
la+\fi
however
subset
cid:51
cid:88
deﬁnition
mass
assignment
assertions
max
deﬁned
2as
max
max
f⊆la+
deﬁned
recur-
sively
suppose
involved
example
label
set
la+
example
0.7
0.7
0.2
want
de-
termine
quite
l1|a
prior
probability
quite
0.7∗0.2
0.07.
kli
la+
kli
deﬁnition
implication
¬klj
klj
la+\fi
max
probability
assertion
made
given
object
described
calculated
summing
contain
deﬁnition
given
prior
distribution
posterior
distribu-
tion
given
object
calculated
θ|x
max
θ|a
cid:88
g⊆as
θ∈g
cid:88
g⊆as
θ∈g
cid:80
ϕ∈g
value
one
particular
label
product
two
elements
prior
probability
making
positive
assertion
negated
assertion
prior
probability
making
hedged
assertion
given
making
assertion
hedged
word
making
assertion
hedged
quite
making
basic
assertion
summarised
table
quite
l1|a
cid:88
0.07
0.07
quite
l1∈gi
max
max
max
max
0.1
cid:80
ϕ∈g4
0.2
cid:80
ϕ∈g3
max
0.07
0.1
0.54
0.2
0.4
0.07
0.048
calculated
probability
assertion
speaker
agent
makes
probable
assertion
speaker
agent
made
assertion
listener
agent
com-
putes
based
current
label
set
parameter
thought
age
speaker
agent
listener
agent
updates
label
set
moving
prototype
and/or
changing
threshold
concept
for-
mulae
updates
based
label
deﬁned
updated
cid:48
αεi
values
sought
cid:48
cid:48
max
2.4
updating
algorithms
2.4.1
case
kli
recall
µkli
||x
pi||
assumption
kbi
label
updated
cid:48
cid:48
minimising
distance
cid:48
αεi
µkl
cid:48
interpretations
measured
haussdorff
distance
two
neighbourhoods
nli
cid:48
||pi
|λ|||x
pi||
i||
|εi
cid:48
εbi
cid:48
minimise
update
set
µkl
cid:48
||x
cid:48
i||
cid:48
λ|||x
pi||
αkbi
µkl
cid:48
gives
λ|||x
pi||
kbi
||x
pi||
kbi
since
cid:48
update
always
want
dealing
positive
label
substituting
equation
obtain
nli
cid:48
|λ|||x
pi||
εbi
|λ|||x
pi||
|λ|
||x
pi||
kbi
ε||x
pi||
εbi
1−w
i.e
quantity
otherwise
||x−pi||
1−w
kbi
minimised
setting
1−w
kbi
||x−pi||
since
random
variable
choice
therefore
need
concrete
updating
rule
update
expected
values
respectively
uniform
cid:40
otherwise
therefore
calculate
cid:40
||x−pi||
||x−pi||
1−w
kbi
cid:40
otherwise
1−w
kbi
||x−pi||
otherwise
2.4.2
case
¬kli
cid:40
||x−pi||
entirely
similar
argument
obtain
||x−pi||
wkbi
otherwise
cid:40
wkbi
||x−pi||
otherwise
timestep
listener
agent
updates
relevant
label
using
quantities
2.5
performance
metrics
performance
metrics
used
measuring
average
pair-
wise
distance
label
sets
apd
average
label
over-
lap
alo
apd
measures
difference
label
sets
com-
munity
alo
indicates
extent
agent
concepts
overlap
seek
low
values
metric
apd
calculated
using
haussdorff
distance
two
neighbourhoods
given
equation
difference
label
sets
one
pair
agents
given
cid:88
i=1
number
labels
agent
refer
averaged
pairs
agents
agents
there-
distinct
agents
fore
cid:0
cid:1
pairs
giving
cid:88
cid:88
k=j+1
j=1
djk
alo
extent
labels
overlap
calculate
take
maximum
value
intersection
pair
labels
measured
min
rule
average
value
pairs
labels
overlap
within
individual
label
set
therefore
cid:88
cid:88
j=i+1
i=1
ilo
max
min
µli
µlj
averaged
across
population
cid:88
k=1
alo
ilok
ilok
siginiﬁes
agent
label
overlap
2.6
simulation
process
simulations
100
agents
run
104
timesteps
agent
weights
0.2
0.8
updated
timestep
in-
crements
1/t
0.8
agents
reborn
randomised
labels
0.2
simulations
run
reported
combi-
nation
parameters
show
0.5
0.6
performance
system
changes
low
alo
high
apd
vice
versa
approximately
0.56.
ran
simulations
slightly
extended
range
com-
parison
varying
prior
probabilities
asserting
different
hedges
basic
quite
present
results
three
sets
parameters
baseline
run
simulations
hedges
i.e
investigate
ef-
fects
using
contraction
hedges
run
simulations
parame-
ters
0.7
0.2
0.1.
expansion
hedges
use
parameters
0.1
0.2
0.7
results
results
presented
show
performance
two
metrics
104
simulation
timesteps
point
population
generally
reached
steady
state
performance
greatly
change
figure
shows
steady
state
apd
achieved
104
timesteps
range
values
0.4
0.6
three
sets
results
presented
results
using
unhedged
assertions
results
high
prior
probability
using
contraction
hedges
results
sim-
ulations
high
prior
probability
asserting
expansion
hedges
prior
probabilities
stated
2.6.
high
prior
asserting
contracted
labels
reduces
minimum
apd
achieved
0.38
0.56
0.6
0.29
0.57
ﬁgure
performing
paired
t-test
across
sim-
ulations
gives
mean
difference
values
0.097.
difference
statistically
signiﬁcant
0.001
conﬁdence
interval
0.084
0.110
median
range
results
given
ﬁgure
0.57
alo
decreases
0.92
0.89
ﬁgure
mean
value
difference
across
simulations
0.032.
statistically
signiﬁcant
0.001
conﬁdence
interval
0.029
0.035
illustrated
ﬁgure
10.
results
imply
high
prior
proba-
bility
asserting
contraction
hedges
enables
improve
conver-
gence
agents
label
sets
well
reducing
overlap
within
label
sets
slightly
figure
using
contraction
hedges
reduces
minimum
apd
box
whisker
plot
apd
104
timesteps
simulations
0.56
unhedged
0.57
high
probability
contraction
hedges
values
minimum
apd
achieved
middle
line
shows
median
value
box
shows
25th
75th
percentile
whiskers
show
range
data
excluding
outliers
crosses
show
outliers
figure
apd
104
timesteps
using
contraction
hedges
reduces
minimum
apd
achieved
0.38
0.56
0.29
0.57.
expansion
hedges
reduce
apd
0.85
0.73
0.45
high
prior
probability
asserting
expanded
labels
lower
values
alo
achieved
probability
asserting
pos-
itive
labels
0.45
decreasing
0.02
compared
0.1
ﬁgure
11.
mean
difference
values
across
simulations
0.083
statistically
signiﬁcant
0.001
conﬁdence
interval
0.078
0.089
data
represented
ﬁg-
ure
13.
value
apd
achieved
0.73
compared
0.85
unhedged
assertions
ﬁgure
mean
value
difference
across
simulations
0.12.
ﬁgure
statistically
signif-
icant
0.001
conﬁdence
interval
0.116
0.126
data
represented
ﬁgure
12.
high
prior
probability
asserting
expansion
hedges
therefore
enables
minimal
overlap
maintained
low
whilst
improving
convergence
also
examine
fast
community
agents
arrives
figure
10.
using
contraction
hedges
slightly
reduces
alo
box
whisker
plot
alo
104
timesteps
simulations
0.57.
middle
line
shows
median
value
box
shows
25th
75th
per-
centile
whiskers
show
range
data
excluding
outliers
crosses
show
outliers
steady
state
figure
shows
short
timescales
2000
bet-
ter
convergence
may
achieved
allowing
unhedged
assertions
extreme
case
ﬁgure
shows
0.5
better
per-
formance
alo
metric
achieved
7500
timesteps
although
improvement
takes
longer
time
achieve
goes
together
improved
performance
apd
achieved
similar
timescale
unhedged
model
discussion
results
show
model
language
development
across
population
hedged
assertions
improve
level
con-
vergence
shared
language
measured
average
pairwise
dif-
ference
label
sets
apd
extent
discrimina-
tory
power
individuals
label
sets
measured
average
label
0.450.50.5500.10.20.30.40.50.60.70.80.91ppapd
unhedgedcontraction
hedgesexpansion
hedgesunhedged
0.56contraction
hedged
0.570.250.30.350.4apdunhedgedcontraction
hedged0.8750.880.8850.890.8950.90.9050.910.9150.920.925pp
0.57alo
figure
11.
contraction
hedges
slightly
reduce
high
levels
alo
0.57
alo
reduced
0.92
0.89.
expansion
hedges
re-
duce
minimum
alo
0.1
unhedged
assertions
0.02
expansion
hedged
assertions
0.45.
figure
13.
expansion
hedges
reduce
minimum
alo
box
whisker
plot
alo
104
timesteps
simulations
0.45.
mid-
dle
line
shows
median
value
box
shows
25th
75th
percentile
whiskers
show
range
data
excluding
outliers
crosses
show
out-
liers
figure
12.
expansion
hedges
reduce
maximum
apd
box
whisker
plot
apd
104
timesteps
simulations
0.45.
mid-
dle
line
shows
median
value
box
shows
25th
75th
percentile
whiskers
show
range
data
excluding
outliers
crosses
show
out-
liers
overlap
alo
two
different
types
hedges
improve
perfor-
mance
distinct
ways
overall
convergence
important
high
prior
probability
asserting
contraction
hedges
used
improve
performance
apd
metric
conversely
ability
agents
discriminate
precisely
objects
environ-
ment
important
expansion
hedges
together
lower
probabilities
asserting
positive
labels
used
maintain
low
levels
alo
whilst
still
improving
performance
apd
improved
performance
two
metrics
tempered
fact
speed
steady
state
achieved
some-
slower
using
simply
unhedged
assertions
however
improvement
apd
seen
relatively
quickly
0.56
soon
unhedged
model
reached
steady
state
im-
provement
alo
using
expansion
hedges
0.5
occur
500
timesteps
well
unhedged
model
reached
steady
state
however
improvement
perfor-
figure
14.
apd
time
models
hedged
assertions
contracted
assertions
expanded
assertions
prior
probability
positive
asser-
tions
0.56.
although
ﬁnal
value
reached
lower
high
probability
making
contracted
assertions
community
agents
takes
longer
reach
value
mance
alo
goes
together
improved
performance
apd
attained
speed
unhedged
model
speed
development
shared
categories
important
two
types
hedges
would
useful
different
types
sit-
uation
depending
whether
convergence
discriminatory
power
important
might
dependent
example
struc-
ture
underlying
environment
current
simulation
ob-
jects
presented
uniformly
across
space
objects
dis-
tributed
non-uniformly
perhaps
clumping
various
regions
space
perhaps
ability
discriminate
precisely
dif-
ferent
labels
would
less
important
since
environment
provides
distinction
naturally
convergence
shared
labels
would
important
speed
important
using
contraction
hedges
still
improve
levels
convergence
relatively
short
timeframe
0.450.50.5500.10.20.30.40.50.60.70.80.91ppalo
unhedgedcontraction
hedgesexpansion
hedgesunhedgedexpansion
hedged0.720.740.760.780.80.820.840.86pp
0.45apdunhedgedexpansion
hedged0.010.020.030.040.050.060.070.080.090.10.11pp
0.45alo020004000600080001000000.10.20.30.40.50.60.70.80.91timestepapd
unhedgedcontraction
hedgesexpansion
hedges
two
distinct
ways
firstly
using
contraction
hedges
i.e
words
like
allows
improved
levels
convergence
shared
cate-
gories
whilst
slightly
improving
extent
labels
overlap
secondly
using
expansion
hedges
words
like
quite
enables
development
label
sets
discriminatory
envi-
ronment
also
better
levels
convergence
however
improvements
come
slower
speed
development
shared
labels
may
possible
improve
speeds
tuning
parameters
age
range
agents
values
hedges
used
acknowledgements
martha
lewis
gratefully
acknowledges
support
epsrc
grant
ep/e501214/1
references
bosc
dubois
hadjali
pivert
prade
adjusting
core
and/or
support
fuzzy
set-a
new
approach
fuzzy
mod-
iﬁers
fuzzy
systems
conference
2007.
fuzz-ieee
2007.
ieee
international
1–6
ieee
2007
henrietta
eyre
jonathan
lawry
language
games
vague
cate-
gories
negations
adaptive
behavior
1059712314547318
2014
g¨ardenfors
conceptual
spaces
geometry
thought
mit
press
2004.
hampton
inheritance
attributes
natural
concept
conjunctions
memory
cognition
55–71
1987
hampton
conceptual
combinations
fuzzy
logic
concepts
fuzzy
logic
eds.
belohlavek
klir
mit
press
2011
kamp
partee
prototype
theory
compositionality
cog-
nition
129–191
1995
lawry
framework
linguistic
modelling
artiﬁcial
intelligence
155
1-2
1–39
2004
lawry
tang
uncertainty
modelling
vague
concepts
prototype
theory
approach
artiﬁcial
intelligence
173
1539–
1558
2009
martha
lewis
jonathan
lawry
label
semantics
approach
linguistic
hedges
international
journal
approximate
reasoning
1147–1163
2014
d.n
osherson
e.e
smith
adequacy
prototype
theory
theory
concepts
cognition
35–58
1981
rosch
cognitive
representations
semantic
categories.
journal
experimental
psychology
general
104
192
1975
e.e
smith
d.n
osherson
conceptual
combination
proto-
type
concepts
cognitive
science
337–361
1984
luc
steels
need
evolutionary
semantics
2011
advances
artiﬁcial
intelligence
14–25
2011
luc
steels
tony
belpaeme
al.
coordinating
perceptually
grounded
categories
language
case
study
colour
behavioral
brain
sciences
469–488
2005
l.a.
zadeh
fuzzy
sets
information
control
338–353
1965
l.a.
zadeh
fuzzy-set-theoretic
interpretation
linguistic
hedges
journal
cybernetics
1972
figure
15.
alo
time
models
hedged
assertions
contracted
assertions
expanded
assertions
prior
probability
positive
asser-
tions
0.5.
although
ﬁnal
value
reached
lower
high
probability
using
expansion
hedges
community
agents
takes
longer
reach
value
may
even
reach
lower
value
still
figure
16.
apd
time
models
hedged
assertions
contracted
assertions
expanded
assertions
prior
probability
positive
asser-
tions
0.5.
lower
apd
achieved
high
prior
probability
asserting
expansion
hedges
similar
timescale
unhedged
model
many
parameters
simulation
bear
in-
vestigation
distribution
objects
environment
men-
tioned
likely
effect
performance
two
metrics
current
simulations
hedge
values
0.5
used
increasing
decreasing
values
could
impact
performance
would
perhaps
allowing
agents
difference
values
range
allowed
also
affects
performance
0.01
0.99
agents
longer
achieve
high
levels
convergence
0.55
results
shown
weight
ranges
may
positively
affect
performance
however
conclusions
investigated
utility
hedged
assertions
develop-
ment
shared
language
shown
allowing
agents
make
hedged
assertions
improves
ability
develop
common
categories
020004000600080001000000.10.20.30.40.50.60.70.80.91timestepalo
unhedgedcontraction
hedgesexpansion
hedges020004000600080001000000.10.20.30.40.50.60.70.80.91timestepapd
unhedgedcontraction
hedgesexpansion
hedges
