intelligent
conversational
bot
massive
online
open
courses
moocs
ser
ling
lim1
ong
sing
goh2
faculty
information
communication
technology
universiti
teknikal
malaysia
melaka
76100
melaka
malaysia
2goh
utem.edu.my
1limserling
hotmail.com
abstract
massive
online
open
courses
moocs
introduced
2008
since
drawn
attention
around
world
advantages
well
criticism
drawbacks
one
issues
moocs
lack
interactivity
instructor
brought
conversational
bot
picture
fill
gap
study
prototype
moocs
conversational
bot
mooc-bot
developed
integrated
moocs
website
respond
learner
enquiries
using
text
speech
input
mooc-bot
using
popular
artificial
intelligence
markup
language
aiml
develop
knowledge
base
leverage
aiml
capability
deliver
appropriate
responses
quickly
adapted
new
knowledge
domains
system
architecture
mooc-bot
consists
knowledge
base
along
aiml
interpreter
chat
interface
moocs
website
web
speech
api
provide
speech
recognition
speech
synthesis
capability
initial
mooc-bot
prototype
general
knowledge
past
loebner
prize
winner
alice
course
frequent
asked
questions
course
content
offered
universiti
teknikal
malaysia
melaka
utem
evaluation
mooc-bot
based
past
competition
questions
chatterbox
challenge
cbc
loebner
prize
shown
able
provide
correct
answers
time
test
demonstrated
capability
prolong
conversation
advantages
mooc-
bot
able
provide
24-hour
service
serve
different
time
zones
able
knowledge
multiple
domains
shared
multiple
sites
simultaneously
outweighed
existing
limitations
keywords
conversation
agent
artificial
intelligence
massive
online
open
courses
moocs
mooc-bot
chapter
introduction
1.1
background
online
learning
long
existed
since
rapid
growth
internet
penetration
internet
usage
becomes
economical
popular
online
learning
found
way
becoming
common
well-accepted
recent
years
diversified
form
online
learning
model
called
massive
online
open
courses
moocs
emerged
drawing
considerable
attention
around
world
chatterjee
nath
2014
also
evidenced
research
publication
moocs
also
grown
exponentially
2008
2013
aparicio
al.
2014
moocs
first
introduced
year
2008
many
universities
adopted
since
among
prominent
moocs
providers
coursera
edx
udacity
peco
luj√°n-mora
2013
andrew
daphne
koller
stanford
university
founded
coursera
platform
together
taught
machine
learning
koller
taught
probabilistic
graphical
models
edx
moocs
platform
founded
harvard
university
partnering
massachusetts
institute
technology
mit
udacity
conceived
experiment
saw
sebastian
thrun
peter
norvig
stanford
university
offered
introduction
artificial
intelligence
course
online
since
extended
partnerships
universities
institutions
offering
courses
unlike
conventional
online
courses
mooc
differs
pre-recorded
video
lectures
online
quizzes
homework
assignments
midterms
final
exams
integration
social
networking
word
massive
also
denotes
accommodate
large
number
participants
simultaneously
across
world
single
course
mooc
open
learning
styles
offers
flexibility
minimal
registration
requirements
platform
also
provides
online
community
interaction
learning
process
due
characteristics
possible
manage
deliver
mooc
traditional
online
course
method
bassi
al.
2014
malaysia
high
number
internet
users
benefit
moocs
according
economic
report
2013/2014
released
ministry
finance
malaysia
2013
number
internet
users
malaysia
grown
million
end
2012
expected
reach
million
2015.
moocs
also
fit
lifelong
learning
program
offers
time
flexibility
students
families
full-time
jobs
possible
situations
learn
convenience
malaysia
education
blueprint
2015-
2025
higher
education
launched
recently
also
enlisted
moocs
one
initiatives
spurring
malaysia
higher
education
system
blueprint
pointed
education
sought
one
youth
time
people
ages
also
enrich
constant
learning
call
building
malaysia
education
brand
globally
blueprint
indicates
great
potential
growing
moocs
malaysia
local
institutions
ministry
education
malaysia
2015
however
mooc
delivery
without
challenges
instance
accessible
worldwide
would
mean
instructors
would
available
time
due
time
zone
difference
furthermore
large
number
participants
course
could
result
overwhelming
student-instructor
ratio
consequences
students
may
able
get
tutoring
help
instructors
easily
compare
traditional
courses
case
conversational
bot
simulate
human
conversation
natural
language
text
could
act
virtual
teacher
provide
answers
students
whenever
needed
ong
al.
2014
research
mooc-bot
developed
conversational
bot
agent
role
interacting
users
moocs
mooc-bot
using
artificial
intelligence
markup
language
aiml
develop
knowledge
base
aiml
well-known
xml
derived
language
used
case-based
reasoning
textual
pattern
matching
algorithms
aiml
developed
dr.
richard
wallace
alicebot
open
source
community
among
1995
2000.
designed
help
development
alice
artificial
linguistic
internet
computer
entity
mikic
al.
2009
aiml
open
source
quickly
adapted
new
knowledge
domains
many
conversational
bots
used
aiml
develop
agents
communicate
users
natural
language
mooc-bot
conversational
bot
subject
miti
5113
artificial
intelligence
offered
faculty
information
communication
technology
universiti
teknikal
malaysia
melaka
utem
utem
first
technical
university
one
public
universities
malaysia
established
year
2000
utem
formerly
known
kolej
universiti
teknikal
kebangsaan
malaysia
kutkm
conferred
university
status
currently
utem
operates
three
campuses
namely
main
campus
city
campus
technology
campus
malacca
seven
faculties
blend
local
international
students
1.2
statement
purpose
purpose
research
develop
conversational
bot
mooc
course
conversational
bot
using
aiml
target
course
research
would
miti
5113
artificial
intelligence
offered
utem
1.3
problem
statement
moocs
new
online
learning
model
accommodate
massive
number
participants
seen
artificial
intelligence
mooc
offered
stanford
university
2011
attracted
160,000
enrolments
iqbal
al.
2014
usually
one
instructor
delivering
course
students
able
get
full
attention
help
instructor
easily
face
problems
end
frustrating
students
hand
instructors
also
feel
overwhelm
handle
many
enquiries
students
one
time
moreover
question
asked
many
different
students
inefficient
instructor
repeat
answers
many
times
thus
causing
additional
workload
addition
moocs
supposed
offer
flexibility
students
learn
convenience
may
full
time
job
commitments
time
moocs
also
offered
participants
worldwide
means
could
living
places
different
time
zone
circumstances
students
learning
hour
may
different
instructor
working
hour
students
able
interact
getting
feedback
instructor
immediately
may
demotivate
learner
discourage
ask
questions
seek
clarification
instructor
due
problems
mooc-bot
could
play
role
assistant
instructor
respond
course-related
enquiries
live
chat
frequently
needed
mooc-bot
provide
24-hour
services
also
solve
flexibility
requirement
needed
moocs
means
students
get
response
time
needed
long
connected
internet
1.4
research
questions
based
problem
statements
mentioned
section
1.3
research
questions
study
identified
follows
mooc-bot
able
synthesize
questions
posed
user
text
speech
mooc-bot
able
provide
answer
text
speech
mooc-bot
able
provide
answers
appropriately
prolong
conversation
1.5
research
objective
research
objectives
related
research
questions
therefore
research
objectives
derived
follows
synthesize
questions
posed
users
using
text
speech
input
provide
answers
questions
text
speech
ensure
mooc-bot
able
deliver
appropriate
answers
prolong
conversation
users
1.6
research
scope
limitation
research
scope
limitation
follows
research
focus
one
courses
offered
utem
miti
5113
artificial
intelligence
questions
answered
must
within
mooc-bot
knowledge
base
question
answered
must
text
speech
input
english
speech
input
speech
answers
supported
using
google
chrome
apple
safari
web
browsers
1.7
significant
research
contribution
research
expected
offer
solution
overcome
existing
shortcoming
moocs
conversational
bot
conversational
bot
used
different
courses
knowledge
added
customized
also
big
advantage
providing
unwearying
24-hour
services
students
great
help
moocs
addition
conversational
bot
convenience
accepting
text
speech
input
replies
also
text
speech
1.8
organization
thesis
thesis
organized
following
orders
chapter
introduction
chapter
introduces
background
moocs
problems
faced
topic
proposed
solution
objectives
research
chapter
literature
review
chapter
reviews
literatures
moocs
proposed
solution
case
conversational
bot
related
fields
chapter
research
methodology
chapter
discusses
methods
used
research
achieve
objectives
system
architecture
chapter
implementation
chapter
explains
process
implementing
system
architecture
development
prototype
chapter
evaluation
result
chapter
explains
evaluation
done
displays
results
evaluation
chapter
conclusion
future
work
chapter
concludes
overall
study
discusses
strengths
weaknesses
recommendation
future
work
chapter
literature
review
2.1
introduction
chapter
reviews
massive
open
online
courses
moocs
conversational
bots
related
topics
artificial
intelligence
field
study
inspires
exploration
many
useful
applications
using
computer
machine
one
conversational
bots
conversational
bots
sometimes
referred
conversation
robots
conversation
agents
chat
bot
chatter
bots
simply
bots
target
generate
meaningful
conversation
human
users
using
natural
language
purpose
turing
test
well-known
measurement
assess
performance
conversation
bot
many
parties
using
assessment
conversational
bots
loebner
prize
chatterbox
challenge
competition
though
may
modified
version
original
many
types
conversational
bots
explored
developed
years
ranged
general
conversational
bots
specialized
domain
subject-matter
expert
bots
purpose
conversational
bots
also
different
may
developed
winning
competition
loebner
prize
commercial
needs
attracting
assisting
customers
chapter
also
outlined
significant
works
conversational
bot
created
impact
contribution
development
field
addition
artificial
intelligence
markup
language
aiml
web
speech
application
programming
interface
api
part
mooc-bot
implementation
also
elaborated
2.2
massive
open
online
courses
moocs
started
2008
course
connectivism
connective
knowledge
cck08
created
facilitated
george
siemens
stephen
downes
fini
2009
lowe
2014
since
tremendous
development
moocs
millions
dollars
grants
funded
experiments
variety
principles
courses
tools
moocs
today
still
developing
sign
winding
mooc
considered
education
revolution
differs
traditional
course
allowing
large
enrollments
students
world
regardless
prior
learning
even
defined
courses
offered
free
charge
anyone
interested
learn
however
still
debatable
topic
still
need
business
model
keep
moocs
sustainable
dellarocas
van
alstyne
2013
valentin
2014
anyhow
moocs
seen
route
cheap
education
always
attractive
public
lowe
2014
far
model
concerned
siemen
2013
classified
three
types
moocs
xmoocs
cmoocs
quasi-moocs
xmoocs
replicate
traditional
university
model
teacher
plays
expert
learners
become
consumer
knowledge
universities
driving
force
behind
model
include
stanford
coursera
mit
harvard
edx
udacity
many
elite
american
institutions
assignments
computer-graded
direct
instructor
feedback
scarce
xmoocs
due
large
number
students
cmoocs
based
connectivism
attempt
group
learners
interact
share
personal
knowledge
order
learn
together
contrast
xmoocs
cmoocs
type
teacher-student
knowledge
transfer
approach
knowledge
sharing
participants
emphasizes
autonomy
choosing
content
skills
learnt
participant
openness
activities
participant
pursue
using
numerous
tools
technologies
cck08
mooc
delivered
cmooc
format
quasi-moocs
recognized
web-based
tutorials
open
educational
resources
oer
offered
khan
academy
mit
opencourseware
ocw
model
intended
oer
neither
automated
grading
xmoocs
social
interaction
connectivity
cmoocs
range
loosely
related
educational
resources
collected
together
moocs
various
advantages
challenges
jurenas
2014
described
increased
accessibility
enhanced
student
engagement
lifelong
learning
opportunity
advantages
moocs
lecounte
johnson
2014
opined
moocs
provides
flexibility
working
employees
train
specific
skill-sets
also
address
skills
gap
problem
companies
need
qualified
applicants
fields
accounting
finance
engineering
etc
hand
issues
moocs
faced
challenges
high
dropout
rates
sustainability
cheating
plagiarism
siemen
2013
top
jurenas
2014
also
included
lack
individual
instruction
impact
professional
life
instructor
additional
challenges
lecounte
johnson
2014
view
creditability
moocs
questionable
due
industry
standards
pedagogy
evaluation
criteria
mention
credit
transferability
moocs
among
institutions
various
arguments
regarding
adoption
moocs
supporting
well
suggest
improvement
samuels
2014
one
moocs
views
learners
tend
multitask
concentrate
self-paced
learning
takes
twice
long
complete
half
good
addition
peer
grading
computer-grading
eliminate
role
teachers
seen
destroying
academic
business
model
personal
experience
mooc
participant
kauza
2014
totally
mooc
truly
felt
lack
interaction
instructor
made
learning
experience
less
fulfilling
opinion
moocs
suitable
curious
learners
certifications
renewal
rather
credit-bearing
higher
education
opinion
shared
syapin
2014
also
satisfied
mooc
experience
agreed
would
help
education
cost
knox
2014
called
engagement
participant
feedback
mooc
explore
refine
design
emergence
less
decade
moocs
still
fully
mature
sure
subject
refinement
correction
moment
moocs
stopped
could
changing
direction
morphing
next
big
thing
krause
2014
study
mooc
conversational
bot
also
plays
role
transforming
mooc
interactive
platform
2.3
artificial
intelligence
term
artificial
intelligence
first
introduced
workshop
held
dartmouth
college
1956
saw
necessary
separate
fields
study
russell
norvig
2010
branch
computer
science
attempts
produce
intelligent
machine
could
exhibit
behavior
similar
human
intelligence
essence
attempt
simulate
intelligence
human
mind
according
russell
norvig
2010
system
divided
four
categories
namely
thinking
humanly
thinking
rationally
acting
humanly
acting
rationally
shown
figure
2.1.
figure
2.1
artificial
intelligence
categories
russell
norvig
2010
today
used
many
areas
examples
natural
language
understanding
speech
recognition
planning
scheduling
vision
robotic
game
playing
expert
system
many
achievements
successful
applications
history
examples
computer
program
deep
blue
defeated
human
champion
chess
game
goodman
keene
1997
asimo
intelligent
walking
robot
able
interact
human
using
gestures
voice
sakagam
al.
2002
national
aeronautics
space
administration
nasa
mars
exploration
rovers
spirit
opportunity
autonomous
navigation
abilities
mak
al.
2005
google
search
voice
schalkwyk
al.
2010
ibm
watson
defeated
two
human
champions
america
live
television
quiz
show
jeopardy
tesauro
al.
2012
listings
significant
milestones
summarized
figure
2.2
chronologically
figure
2.2
artificial
intelligence
milestones
practice
progress
research
made
possible
creation
computer
software
hardware
software
side
supplied
operating
systems
programming
languages
tools
writing
modern
programs
databases
advances
generation
computer
hardware
increased
computer
performance
capacity
resulted
powerful
cheaper
machine
favorable
developments
also
made
application
become
common
affordable
incorporate
consumer
products
face
recognition
software
camera
floor-washing
vacuum-cleaning
robots
self-adjusting
washing
machine
better
clothes
washing
self-
adjusting
air-conditioning
system
according
ambience
many
2.4
turing
test
loebner
prize
chatterbox
challenge
alan
turing
highly
influential
pioneer
computer
science
well
brilliant
mathematician
1950
famous
article
computing
machinery
intelligence
proposed
behavioral
intelligence
test
called
imitation
game
challenge
'can
machines
think
paper
brought
attention
view
machine
intelligence
test
well-known
turing
test
suggested
computer
considered
intelligent
human
interrogator
posed
written
questions
able
distinguish
whether
written
responses
come
human
computer
illustrated
figure
2.3.
figure
2.3
turing
test
goh
2008
turing
1950
believed
fifty
years
time
supposed
year
2000
computers
would
achieved
storage
capacity
109
would
see
test
achieves
result
average
interrogator
percent
chance
making
right
identification
five
minutes
questioning
however
notion
proved
wrong
today
computer
storage
reached
1gb
required
even
exceeded
far
intelligent
computer
program
able
achieve
level
challenge
set
turing
appeared
harder
expected
brought
lasting
impact
great
contribution
without
objections
arguments
saw
various
literatures
debated
half
century
gunderson
1971
searle
1980
block
1981
french
1990
shieber
2006
questioned
sufficiency
criterion
intelligence
relies
behavioral
properties
exhibited
subject
hayes
ford
1995
argued
sensible
goal
considered
harmful
researchers
adopted
seriously
long-range
goal
motivation
field
think
limiting
sights
however
also
researchers
defended
moor
1976
leiber
1995
argued
critics
misunderstood
misinterpreted
real
value
loebner
prize
longest
running
annual
contest
based
modification
original
shieber
1994
started
since
1991
established
dr.
hugh
loebner
reward
100,000
gold
medal
first
program
able
respond
indistinguishably
human
year
human-
like
computer
win
annual
cash
prize
bronze
medal
loebner
n.d.
shieber
1994
criticized
competition
clear
purpose
useful
outcome
loebner
1994
responded
defending
need
competition
tool
measure
state
art
saygin
2003
agreed
award
loebner
prize
could
influence
research
making
people
interested
creating
tt-passing
programs
date
one
come
close
winning
gold
medal
passing
unrestricted
chatterbox
challenge
cbc
another
annual
tt-like
contest
started
2001.
cbc
different
category
awards
best
personality
conversational
ability
knowledgeable
best
overall
etc
unlike
loebner
prize
specific
venue
competition
cbc
conducted
internet
raised
question
whether
human
could
intervening
behind
system
vallverd√∫
al.
2010
shah
warwick
2010
due
cbc
seen
carries
less
weight
conversational
bot
benchmark
nevertheless
cbc
still
platform
test
state-of-the-art
conversational
bots
comparison
technology
2.5
conversational
bots
one
earliest
well-known
works
conversational
bot
program
called
eliza
developed
weizenbaum
1966
play
role
psychotherapist
patient
research
considered
breakthrough
time
demonstrated
form
communication
man
computer
natural
language
although
eliza
far
passing
real
able
convince
interrogator
continue
conversation
program
led
people
believe
demonstrated
responses
turing-like
test
figure
2.4
shows
sample
dialogue
eliza
weizenbaum
1966
figure
2.4
sample
dialogue
eliza
patient
eliza
simulating
rogerian
psychotherapist
could
use
trick
rephrasing
patient
statements
questions
patient
likely
open
his/her
personal
problems
make
conversation
continues
weizenbaum
surprised
program
could
also
deceive
normal
people
believing
saygin
al.
2003
suggestions
went
far
replace
psychotherapists
kind
programs
therapy
become
cheap
could
done
larger
scale
colby
1966
eliza
gave
impression
intelligent
actually
neither
understanding
english
mind
psychiatrist
implemented
using
pattern
recognition
according
decomposition
rules
keywords
substitutions
according
reassemble
rules
pre-defined
scripts
keyword
phrase
could
identified
context-free
remark
please
anything
previous
topic
used
figure
2.5
shows
decomposition
rules
reassemble
rules
used
eliza
figure
2.5
decomposition
rules
reassemble
rules
represent
words
phrases
inspired
eliza
kenneth
mark
colby
psychiatrist
wrote
version
program
simulate
mind
paranoid
patient
model
called
parry
personality
emotional
state
fear
anger
mistrust
would
determine
responses
interviewer
done
two
separate
modules
parsing
module
interpretation-action
module
first
module
used
interpret
meaning
input
natural
language
passed
second
module
keeps
current
state
mind
decide
linguistic
actions
respond
colby
1975
parry
tested
turing-like
test
determine
whether
experienced
psychiatrists
could
distinguish
program
real
human
patient
colby
1981
overall
test
results
showed
psychiatric
judges
unable
make
relevant
distinctions
parry
real
paranoid
patients
due
fact
paranoid
people
irrational
obsessive
behavior
therefore
inappropriate
responses
seemed
reasonable
may
simpler
simulate
paranoid
behavior
still
clever
logic
made
parry
simulates
effectively
figure
2.6
shows
conversation
parry
human
psychiatrist
answered
well
attempted
introduce
topic
figure
2.6
conversations
parry
human
colby
1981
interestingly
eliza
parry
put
conversation
demonstration
1973.
figure
2.7
shows
part
conversation
beginning
conversation
reasonable
conversation
went
trying
repeat
said
would
difficult
someone
decide
whether
program
human
figure
2.7
conversations
parry
eliza
cerf
1973
1990
dr.
hugh
loebner
founded
loebner
prize
aims
promoting
research
formalizing
turing
test
competition
offers
grand
prize
100,000
gold
medal
first
program
able
respond
indistinguishably
human
year
human-like
computer
win
annual
cash
prize
bronze
medal
since
inception
competition
attracted
development
various
conversational
bots
win
prize
year
winners
loebner
prize
1991
present
listed
table
2.1.
among
winners
notable
ones
albert
one
alice
jabberwacky
table
2.1
winners
loebner
prize
1991
2014
loebner
n.d
year
author
conversation
bot
year
author
conversation
bot
1991
joseph
weintraub
therapist
1992
joseph
weintraub
professor
1993
joseph
weintraub
politician
1994
thomas
whalen
tips
1995
joseph
weintraub
therapist
1996
jason
hutchens
hex
1997
david
levy
converse
1998
robby
garner
albert
one
1999
robby
garner
albert
one
2000
richard
wallace
2001
richard
wallace
alice
alice
2002
kevin
copple
ella
2003
2004
2005
2006
2007
2008
2009
2010
2011
2012
2013
2014
jorgen
pirner
jabberwock
richard
wallace
rollo
carpenter
alice
george
jabberwacky
rollo
carpenter
joan
jabberwacky
robert
medeksza
ultra
hal
fred
roberts
elbot
david
levy
do-much-more
bruce
wilcox
suzette
bruce
wilcox
rosette
mohan
embar
chip
vivant
steve
worswick
mitsuku
bruce
wilcox
rose
alice
artificial
linguistic
internet
computer
entity
conversational
bot
developed
dr.
richard
wallace
loebner
prize
2000
2001
2004.
built
artificial
intelligence
markup
language
aiml
extensible
mark-up
language
xml
-based
language
aiml
created
dr.
richard
wallace
alicebot
open
source
community
1995
2000.
alice
uses
simple
stimulus-response
technique
return
matching
response
user
similar
used
eliza
categories
knowledge
compare
eliza
stimulus-
response
structure
alice
resembles
case-based
reasoning
cbr
paradigm
wallace
2009
figure
2.8
shows
part
conversation
judge
alice
loebner
prize
competition
figure
2.8
conversations
alice
judge
loebner
prize
competition
loebner
2004
alice
added
new
responses
using
aiml
content
aiml
content
created
botmaster
anticipatory
approach
he/she
try
guess
likely
ways
clients
might
ask
question
express
statement
another
approach
creating
aiml
content
would
based
backward-
looking
log
file
analysis
method
botmaster
check
logged
conversations
look
incorrect
replies
dialogue
followed
rewriting
new
categories
queries
backward
looking
approach
accordance
zipf
law
zipf
1949
query
uttered
person
likely
uttered
others
later
ensure
commonly
uttered
sentences
taken
care
wallace
2009
set
aiml
scripts
alice
made
available
free
download
google
code
known
annotated
alice
aiml
files
aaa
comprising
brain
award
winning
conversation
bot
aaa
files
mostly
compatible
aiml
1.0.1
enable
botmasters
easily
clone
alice
brain
thus
reduce
huge
efforts
create
edit
aiml
contents
wallace
2011
aiml
technology
spread
widely
due
availability
aaa
files
aiml
general
public
license
gpl
beside
many
aiml
interpreters
made
available
different
programming
language
lisp
java
php
ruby
c++
many
interpreter
name
example
program
aiml
interpreter
java
program
interpreter
php
table
2.2
lists
name
interpreters
programming
language
table
2.2
aiml
interpreter
alice
foundation
n.d.
interpreter
program
chatterbean
program
program
program
program
program
program
program
program
program
libaiml
j-alice
rebeccaaiml
program
language
lisp
java
java
php
php
ruby
perl
pascal
python
.net
c++
c++
c++
object
oriented
c++
setl
alice
foundation
n.d.
claimed
aiml
captured
world
market
conversational
bot
technology
indeed
due
availability
aiml
gpl
many
conversational
bot
implemented
based
aiml
technology
whether
education
government
medical
entertainment
commercial
mahapatra
2012
created
aiml-based
chatter
bot
interface
tasks
e-government
interactive
support
systems
aim
address
audience
computer
illiterate
gasperis
2010
used
aiml
build
knowledge
italian
chatter
bot
persona-aiml
galvao
al.
2004
architecture
developing
chatter
bots
personality
favors
reuse
aiml
bases
humorist
bot
augello
al.
2008
aiml
conversational
agent
humoristic
features
embedded
yahoo
instant
messaging
contact
also
researches
integrate
aiml
part
architecture
model
among
works
multimodal
human-robot
interaction
aiml
chatter
bot
system
tan
al.
2012
artificial
intelligent
neural-network
identity
aini
architecture
goh
al.
2007
human-computer
communication
system
education
field
chatter
learning
interface
entity
charlie
aiml
chatter
bot
responsible
communication
intelligent
educational
system
ines
students
natural
language
mikic
2009
t-bot
tutor
bot
able
provide
domain
specific
answers
natural
language
according
course
contents
requested
students
q-bot
evaluation
bot
keep
track
supervises
student
progress
personalized
questionnaires
implemented
aiml
e-learning
platform
mikic
al.
2008
university
faqbot
ufaqbot
another
example
aiml
chat
bot
education
purpose
ufaqbot
served
undergraduate
advisor
student
information
desk
help
students
admission
course
information
ghose
barua
2013
despite
popularity
aiml
without
limitation
example
use
depth-first
search
algorithm
aiml
retrieve
responses
optimize
results
finds
first
available
solution
spell-check
function
aiml
al.
2006
prompted
researches
enhance
aiml-based
conversational
bot
among
az-alice
built
alice
program
chat
engine
customized
perl
script
allows
users
evaluate
suggest
new
patterns
schumaker
al.
2006
intentional
aiml
iaiml
mechanism
treat
intention
information
aiml
chatter
bots
incorporating
intentions
rules
used
sentence
interpretation
generation
neves
al.
2006
torrey
2006
improved
robot
dialogue
interaction
replacing
aiml
depth-first
search
search
added
priorities
system
find
best
match
question
weerawarna
2011
overcome
weaknesses
existing
aiml
chatter
bots
introducing
new
scripting
language
called
cybermate
scripting
language
csl
comes
csl
integrated
development
environment
ide
develop
scripts
csl
parser
compile
csl
scripts
aiml
another
loebner
prize
winner
jabberwacky
created
british
programmer
rollo
carpenter
jabberwacky
also
using
contextual
pattern
matching
techniques
makes
unique
learnt
conversation
models
way
humans
learn
language
facts
context
rules
makes
able
learn
foreign
language
slang
english
word
games
jokes
conversation
without
hard-coded
rules
long
term
memory
jabberwacky
relies
entirely
feedback
conversation
logs
recorded
responses
jabberwacky
incorporation
purely
conversation
suitable
general
intelligence
character
meant
business
commercial
purpose
figure
2.9
shows
snippet
conversation
jabberwacky
human
user
figure
2.9
conversations
jabberwacky
human
user
carpenter
2009
commercial
environment
conversational
bots
usually
act
virtual
customer
service
agent
able
provide
24/7
services
benefits
include
offering
friendly
tireless
services
ability
answer
common
questions
anna
example
commercial
conversational
bot
female
virtual
assistant
ikea
swedish
furniture
retailers
anna
seen
animated
image
wearing
official
company
theme
yellow
shirt
blue
collar
certain
countries
ikea
website
accepts
typed
input
reply
text
many
languages
role
anna
mainly
guide
users
ikea-related
enquiries
products
prices
sizes
delivery
etc
anna
also
open
related
pages
browser
window
facilitate
user
looking
information
much
information
published
regarding
technique
used
behind
anna
creation
developed
commercial
company
called
artificial
solutions
however
shah
pavlika
2005
mentioned
anna
based
technology
elbot
winner
2008
loebner
prize
runner
year
2003
2.6
artificial
intelligence
mark-up
language
aiml
aiml
designed
dr.
richard
wallace
alicebot
free
software
community
create
stimulus-response
chat
bots
derivative
xml
specific
structure
xml-compliant
language
aiml
also
respects
grammar
specification
xml
syntax
comments
white
space
handling
end-of-line
handling
need
closing
tag
aiml
file
saved
.aiml
extension
example
bot.aiml
must
enclose
aiml
tag
file
aiml
tag
may
contain
aiml
version
shown
line
figure
2.10
avoid
confusion
one
version
1.0
1.0.1
latest
2.0
specification
still
draft
wallace
2014
basic
unit
knowledge
aiml
called
category
written
category
aiml
file
usually
categories
aiml
file
knowledge
contains
category
followed
input
question
known
pattern
written
pattern
answer
matched
one
output
called
template
written
template
aiml
pattern
consisting
words
spaces
wildcard
symbols
beside
two
types
optional
context
called
tag
topic
topic
tag
part
aiml
main
elements
compulsory
present
tag
tells
system
refer
last
sentence
presented
chatterbot
topic
tag
used
organize
subjects
topics
applied
active
topic
variable
basic
units
aiml
mandatory
aiml
file
shown
figure
2.10
figure
2.10
basic
units
aiml
templates
additional
tags
used
according
needs
chat
bot
table
2.3
summarizes
commonly-used
tags
functions
addition
aiml
also
supports
interface
languages
systems
system
tag
executes
program
accessible
operating
system
shell
command
inserts
results
reply
hand
javascript
tag
allows
execution
javascript
code
inside
templates
table
2.3
list
tags
used
template
functions
alice
foundation
2011
aiml
interpreter
store
categories
tree
using
graphmaster
object
goal
make
pattern
matching
efficient
searching
brute
force
manner
graphmaster
works
looking
section
matches
first
letter
word
skip
another
section
contains
set
next
letter
word
process
continues
word
phrase
found
done
help
set
nodes
called
nodemappers
nodemappers
map
branches
node
branches
either
single
words
wildcards
matching
steps
graphmaster
begin
matching
listings
first
followed
alphabetical
listings
next
matches
found
patterns
beginning
searched
shown
figure
2.11.
figure
2.11
matching
algorithm
graphmaster
alice
foundation
2011
graphmaster
metaphor
file
system
hierarchy
whether
windows
unix
mac
system
analogous
file
path
name
\my
documents\my
pictures\photo.jpg
represents
file
location
within
system
aiml
pattern
like
equivalent
\i\like\to\star
start
\i\
folder
followed
\i\like\
subfolder
contains
single
file
called
template.txt
template
aiml
wallace
2007
2.7
web
speech
application
programming
language
api
web
speech
api
provides
javascript
interface
developer
integrate
speech
recognition
speech
synthesis
web
applications
speech
recognition
alternative
input
method
works
accepting
speech
input
converts
text
speech
input
several
benefits
example
enhances
accessibility
visually-
impaired
users
offers
hands-free
input
method
adorf
2013
hand
speech
synthesis
act
transforming
text
speech
speech
synthesis
incorporated
text-to-speech
tts
applications
provide
better
user
experience
even
though
web
speech
api
specification
included
hypertext
markup
language
html5
far
google
chrome
apple
safari
browsers
supported
walther
2015
one
drawbacks
web
speech
api
user
grant
application
permission
use
microphone
speech
recognition
purpose
page
hosted
hypertext
transfer
protocol
secure
https
permission
needs
granted
utterance
overcome
applying
secure
sockets
layer
ssl
certificate
website
order
establish
encrypted
link
website
client
reflected
https
uniform
resource
identifier
url
using
https
hosting
user
needs
grant
permission
even
he/she
returns
website
multiple
times
2.8
summary
chapter
gives
overview
moocs
perspectives
types
moocs
advantages
challenges
one
issues
moocs
lack
interactivity
instructor
brought
conversational
bot
picture
fill
gap
conversational
bot
considered
part
application
always
measured
turing
test
envisioned
alan
turing
although
may
objected
focus
research
loebner
prize
chatterbox
challenge
competition
kept
alive
past
years
annual
prize
attract
participants
date
grand
prize
loebner
prize
remains
unclaimed
techniques
conversational
bot
evolved
aiml
alice
one
impactful
outcomes
aiml
may
perfectly
intelligent
technology
capability
deliver
appropriate
responses
domain-restricted
areas
schumaker
2006
mikic
al.
2008
tan
2012
ghose
barua
2013
convincing
enough
design
behind
mooc-bot
chapter
research
methodology
3.1
introduction
research
methodology
important
solve
research
problem
systematically
chapter
discusses
methodology
design
used
research
aim
building
mooc-bot
prototype
reviewed
aiml
technology
previous
chapter
applied
mooc-bot
play
role
conversational
bot
respond
course-related
enquiries
prototype
mooc-bot
domain
knowledge
miti
5113
artificial
intelligence
course
taught
utem
3.2
type
research
method
study
based
qualitative
research
easily
quantified
numerical
data
needed
quantitative
research
initially
largely
used
psychology
social
sciences
use
qualitative
research
growing
past
decades
due
tendencies
empirical
research
tandem
modernism
flick
2009
qualitative
research
approach
involves
inductive
data
analysis
data
interpretation
researcher
creswell
2013
conversational
bot
research
many
conducted
qualitative
method
benotti
al.
2014
ghose
barua
2013
dybala
al.
2009
turing
test
popular
among
researchers
field
also
based
qualitative
assessment
browne
1991
3.3
research
design
order
build
mooc-bot
software
development
model
prototype
used
ensure
rapid
development
less
expensive
way
prototype
direct
method
provide
picture
proposed
system
users
according
pressman
maxim
2014
prototype
evaluated
user
used
refine
requirements
software
prototype
adapted
fulfill
user
requirements
time
developer
better
understanding
requirements
based
feedback
changes
suggestions
done
prototype
stage
avoid
sudden
change
completion
system
prototype
methodology
two
strategies
requirement
prototype
also
known
throwaway
prototype
evolutionary
prototype
development
mooc-
bot
would
using
evolutionary
prototype
instead
discarding
prototype
refine
become
real
system
prototype
verified
used
part
final
system
figure
3.1
shows
activities
involved
evolutionary
prototype
identify
system
requirements
usually
informal
determine
system
specification
framework
plan
development
prototype
system
component
prototype
evaluation
development
prototype
improvement
needed
pengulangan
fasa
perfect
system
design
implement
system
system
verification
figure
3.1
evolutionary
prototype
model
based
figure
3.1
first
activity
prototype
system
development
identify
system
requirements
activity
mooc-bot
would
identifying
syllabus
lectures
given
artificial
intelligence
specification
framework
determined
produce
mooc-bot
prototype
prototype
evaluated
lecturer
users
repetitively
able
fulfill
questions
majority
users
next
activity
create
design
implement
system
system
completed
verified
ensure
system
perfect
generally
evolutionary
prototype
strategy
consists
five
phases
described
five
phases
used
mooc-bot
development
planning
phase
phase
determine
type
methodology
used
identify
current
problems
analysis
phase
phase
identify
produce
end-user
specification
iii
design
phase
phase
produce
prototype
design
based
end
user
specification
prototype
development
phase
phase
involve
development
prototype
prototype
testing
phase
phase
test
developed
prototype
show
users
3.3.1
planning
phase
phase
selection
methodology
used
done
evolutionary
prototype
methodology
chosen
advantage
provide
working
model
end
users
better
understand
mooc-bot
would
work
complete
system
existing
problems
mooc
identified
described
chapter
3.3.2
analysis
phase
phase
study
specification
system
developed
based
problems
identified
planning
phase
need
serve
huge
number
learners
provide
24-hour
service
convenience
students
different
time
zones
knowledge
needed
prototype
course
contents
artificial
intelligence
basic
general
knowledge
obtained
lecture
note
lecture
notes
provided
instructor
course
book
main
reference
book
course
artificial
intelligence
modern
approach
russell
novig
2010
iii
annotated
alice
aiml
aaa
files
aaa
files
provided
alice
foundation
contain
lot
general
knowledge
sufficient
mooc-bot
handle
general
conversation
3.3.3
design
phase
identifying
user
specifications
analysis
phase
design
prototype
produced
design
mooc-bot
system
architecture
consists
chat
interface
knowledge
base
aiml
interpreter
moocs
website
detailed
description
system
architecture
explained
3.4
3.3.4
prototype
development
phase
completed
prototype
design
actual
prototype
developed
first
prototype
fulfills
basic
requirements
developed
shown
course
instructor
mooc-bot
prototype
integrated
mooc
website
prototype
able
gather
results
usage
users
website
referring
conversation
logs
saved
database
subsequently
second
prototype
done
improving
first
prototype
knowledge
base
analyzing
conversation
logs
second
prototype
repeat
process
first
prototype
last
prototype
able
answer
questions
rationally
used
real
system
development
done
windows
system
tested
using
local
web
server-client
environment
done
installing
apache
web
server
windows
wampserver
package
downloaded
internet
automatically
create
apache
hypertext
preprocessor
php
mysql
database
windows
installed
also
comes
phpmyadmin
manage
databases
conveniently
wampserver
installed
root
directory
www
automatically
created
\wamp\www
mooc-bot
application
placed
root
directory
accessed
using
localhost
software
hardware
needed
mooc-bot
development
summarized
table
3.1
table
3.2
respectively
table
3.1
software
involved
mooc-bot
development
software
microsoft
windows
apache
web
server
hypertext
preprocessor
php
google
chrome
mysql
macromedia
dreamweaver
microsoft
word
2010
notepad++
wampserver
2.5
function
server
web
server
programming
language
system
web
client
relational
database
management
system
rdbms
interface
design
php
programming
project
documentation
edit
aiml
file
installer
latest
releases
apache
mysql
php
table
3.2
hardware
used
mooc-bot
development
hardware
usage
laptop
storage
devices
external
hard
disk/pendrive
work
station
develop
mooc-bot
store
materials
reports
backup
project
3.3.5
prototype
testing
phase
prototype
testing
test
done
ensure
logic
correct
able
produce
expected
result
case
mooc-bot
able
respond
enquiries
related
domain
knowledge
course
contents
general
questions
test
done
using
past
questions
posed
judges
conversational
bot
contest
loebner
prize
chatterbox
challenge
competition
3.4
system
architecture
mooc-bot
integrated
moocs
website
chat
interface
like
web
application
works
using
client-server
concept
moocs
website
aiml
interpreter
hosted
apache
web
server
database
knowledge
base
using
mysql
runs
server
web
server
works
translating
php
codes
hypertext
markup
language
html
web
client
internet
explorer
google
chrome
etc
translate
client
script
javascript
display
users
user
using
google
chrome
browser
chooses
use
speech
recognition
web
speech
api
convert
speech
text
sending
aiml
interpreter
result
displayed
text
speech
general
database
used
save
moocs
website
related
information
user
profile
course
subscription
user
poses
questions
mooc-bot
chat
interface
question
processed
aiml
interpreter
referring
knowledge
base
contains
course
knowledge
course
frequent
asked
questions
faq
general
knowledge
comes
aaa
files
botmaster
constantly
maintain
knowledge
base
adding
knowledge
aiml
file
format
figure
3.2
illustrates
overview
system
architecture
user
user
user
apache
web
server
moocs
website
chat
interface
general
database
bot
master
aiml
interpreter
program
graphmaster
nodemapper
aiml
knowledge
base
speech
recognition
queries
responses
speech
synthesis
aiml
files
course
knowledge
course
fao
aaa
files
figure
3.2
mooc-bot
system
architecture
3.4.1
chat
interface
mooc-bot
chat
interface
integrated
moocs
website
chat
interface
located
bottom
website
shown
figure
3.3.
function
chat
interface
receive
text
speech
input
user
pass
aiml
interpreter
voice
recognition
user
needs
press
microphone
button
grant
permission
application
receive
voice
input
results
interpreter
displayed
read
users
speaker
turned
figure
3.4
shows
chat
interface
figure
3.3
chat
interface
moocs
website
figure
3.4
mooc-bot
chat
interface
3.4.2
knowledge
base
knowledge
mooc-bot
consists
course
knowledge
course
faq
general
knowledge
comes
aaa
files
course
knowledge
artificial
intelligence
offered
utem
syllabus
shown
table
3.3.
course
faq
added
knowledge
base
using
backward-looking
log
file
analysis
botmaster
done
reading
logged
conversations
look
frequently
asked
questions
dialogue
add
responses
knowledge
base
using
aiml
file
ensure
common
enquiries
taken
care
aaa
files
comprise
brain
award
winning
conversation
bot
alice
availability
files
free
download
google
code
makes
job
cloning
alice
brain
easy
table
3.3
syllabus
artificial
intelligence
lecture
lesson
chapter
chapter
chapter
chapter
chapter
chapter
introduction
artificial
intelligence
intelligent
agents
problem
solving
searching
adversarial
search
logical
agents
fuzzy
logic
knowledge
representation
aiml
file
created
using
text
editor
notepad++
saved
.aiml
extension
derivation
xml
file
specific
structure
course
knowledge
course
faq
written
aiml
files
save
knowledge
base
example
aiml
file
content
course
knowledge
shown
figure
3.5.
figure
3.5
example
aiml
file
course
knowledge
3.4.3
aiml
interpreter
mooc-bot
using
program
aiml
interpreter
program
aiml
engine
written
php
uses
mysql
database
store
bot
information
including
aiml
files
used
generate
bot
responses
available
free
download
https
//github.com/program-o/program-o
program
suitable
mooc-bot
implemented
web
environment
able
executed
independently
thus
made
possible
integrated
moocs
website
text
speech
input
chat
interface
processed
interpreter
performing
pattern
matching
aiml
content
knowledge
base
using
depth-first
search
first
matching
response
returned
chat
interface
support
recursion
aiml
makes
simple
yet
powerful
pattern
matching
3.4.4
moocs
website
moocs
website
initiative
utem
provide
massive
open
online
courses
students
prototype
hosted
http
//ainibot.com/bot/mooc.php
student
register
course
download
lecture
notes
take
quiz
submit
assignments
participate
forum
progress
student
also
tracked
monitored
instructor
integration
mooc-bot
chat
interface
website
complements
role
website
3.5
summary
chapter
gives
overview
research
method
research
design
system
architecture
qualitative
research
approach
discussed
study
line
research
objectives
qualitative
nature
prototype
mooc-bot
part
research
design
provide
user
experience
order
assess
performance
qualitative
way
system
architecture
presented
chapter
essential
build
conversational
bot
moocs
chat
interface
knowledge
base
aiml
interpreter
important
components
mooc-bot
design
chapter
implementation
4.1
introduction
chapter
discusses
implementation
mooc-bot
prototype
reviewed
architecture
previous
chapter
mooc-bot
developed
based
design
includes
chat
interface
knowledge
base
aiml
interpreter
order
prepare
development
environment
needs
setup
locally
relevant
software
needs
installed
subsequently
mooc-bot
knowledge
built
using
interpreter
interface
appropriate
environment
development
prototype
developed
used
performance
assessment
next
chapter
4.2
software
installation
mooc-bot
web-based
conversational
bot
using
program
interpreter
program
aiml
interpreter
written
php
uses
mysql
database
store
data
order
create
server-client
environment
development
computer
apache
web
server
needs
installed
wampserver
package
free
download
website
provides
convenience
automatically
create
apache
php
mysql
database
windows
installed
also
comes
phpmyadmin
tool
manage
mysql
database
conveniently
program
first
released
2009
also
freely
downloaded
internet
following
sections
explain
installation
steps
wampserver
program
4.2.1
wampserver
installation
wampserver
website
http
//www.wampserver.com/en
two
versions
windows
installers
available
download
32-bits
64-bits
shown
figure
4.1.
figure
4.1
wampserver
website
downloaded
suitable
installer
run
start
installation
process
follow
steps
installation
screen
appeared
click
next
button
proceed
shown
figure
4.2
figure
4.2
wampserver
initial
screen
read
license
agreement
appears
screen
select
accept
agreement
click
next
button
shown
figure
4.3
continue
figure
4.3
wampserver
license
agreement
iii
default
path
install
wampserver
\wamp
choose
desire
path
click
next
shown
figure
4.4
figure
4.4
wampserver
installation
path
choose
preference
whether
add
quick
launch
icon
desktop
icon
wampserver
click
next
button
shown
figure
4.5
figure
4.5
wampserver
installation
option
confirm
selections
click
install
button
begin
installation
shown
figure
4.6
figure
4.6
wampserver
installation
confirmation
installation
begin
run
shown
figure
4.7
figure
4.7
wampserver
installation
progress
vii
successful
installation
screen
shown
figure
4.8
appear
wampserver
ready
used
figure
4.8
wampserver
installation
completed
viii
wampserver
launched
start
menu
desktop
icon
quick
shown
figure
4.9.
launch
icon
desktop
icon
quick
launch
icon
selected
step
figure
4.9
wampserver
program
start
menu
4.2.2
program
installation
program
downloaded
https
//github.com/program-o/program-o
downloaded
program
folder
renamed
desire
name
example
bot
subsequently
bot
folder
placed
server
path
\wamp\www
path
local
apache
web
server
accessed
using
localhost/bot
address
order
allow
program
use
mysql
database
empty
database
needs
created
upfront
done
easily
using
phpmyadmin
tool
comes
together
wampserver
installation
phpmyadmin
accessed
http
//localhost/phpmyadmin/
shown
figure
4.10.
figure
4.10
phpmyadmin
page
new
database
created
conveniently
entering
database
name
press
create
button
shown
figure
4.11.
figure
4.11
database
creation
new
user
password
database
full
permissions
need
created
program
access
credential
new
user
added
clicking
add
new
user
link
shown
figure
4.12.
figure
4.12
phpmyadmin
interface
adding
new
user
filling
necessary
information
user
name
password
press
button
complete
new
user
adding
process
shown
figure
4.13.
figure
4.13
page
adding
new
user
next
complete
program
installation
accessing
program
site
local
path
accessed
localhost/bot
using
internet
browser
google
chrome
program
automatically
direct
page
localhost/bot/install/install_programo.php
shown
figure
4.14
needs
filled
help
page
link
explain
meaning
field
information
database
created
previous
step
needs
used
fill
database
configuration
portion
figure
4.14
program
installation
page
filled-in
fields
click
save
button
complete
installation
installation
completed
page
shown
figure
4.15
appear
indicate
successful
installation
installation
page
appear
next
time
accessing
localhost/bot
configuration
file
overwritten
installation
completed
figure
4.15
program
installation
completed
installation
completed
accessing
localhost/bot
direct
page
program
chat
interface
shown
figure
4.16.
queries
tested
entering
text
text
box
press
say
button
responses
retrieved
knowledge
base
displayed
screen
figure
4.16
program
default
chat
interface
4.3
knowledge
base
creation
mooc-bot
knowledge
base
course
knowledge
course
frequent
asked
questions
faq
general
knowledge
course
knowledge
expanded
later
stage
caters
courses
prototype
purpose
miti
5113
artificial
intelligence
course
knowledge
added
faq
knowledge
responses
added
time
time
studying
conversation
logs
general
knowledge
annotated
alice
aiml
aaa
files
alice
foundation
provide
convenience
cloning
general
knowledge
mooc-bot
general
knowledge
exist
aaa
files
also
added
make
mooc-bot
intelligent
handling
general
questions
two
methods
add
knowledge
knowledge
base
firstly
knowledge
directly
typed
user
interface
provided
program
teaching
function
access
teaching
function
user
must
login
administrator
first
user
name
password
administrator
one
created
installation
process
shown
figure
4.14.
figure
4.17
shows
administrator
login
page
program
accessed
localhost/bot/admin/
figure
4.17
program
administrator
login
page
successfully
login
click
teach
menu
left
hand
side
page
enter
user
input
bot
response
click
teach
button
order
save
knowledge
base
show
figure
4.18.
figure
4.18
teaching
function
program
second
method
involves
writing
knowledge
aiml
file
uploads
using
program
user
interface
advantage
using
method
many
entries
added
uploaded
together
however
entries
format
must
correctly
written
aiml
format
otherwise
entire
upload
file
fail
attempt
upload
aiml
format
xml-based
format
using
specific
tags
aiml
category
pattern
template
many
like
xml
tag
every
tag
must
pair
opening
closing
tags
written
case
ensure
validity
aiml
file
created
using
text
editor
notepad++
saved
.aiml
extension
figure
4.19
shows
example
aiml
file
notepad++
figure
4.19
aiml
file
notepad++
aiml
file
written
uploaded
knowledge
base
upload
aiml
menu
program
administrator
page
page
click
choose
file
button
select
file
followed
clicking
upload
button
upload
content
shown
figure
4.20.
aiml
file
missing
mismatch
unrecognized
tags
error
messages
shown
file
needs
corrected
figure
4.20
upload
page
program
4.4
chat
interface
default
chat
interface
provided
program
shown
figure
4.16
used
initial
development
however
integration
moocs
website
suitable
chat
interface
needs
designed
match
website
furthermore
chat
interface
needs
equipped
web
speech
api
speech
recognition
speech
synthesis
included
program
chat
interface
designed
moocs
website
shown
figure
4.21
figure
4.21
chat
interface
moocs
website
webkitspeechrecognition
object
speechsynthesisutterance
object
need
added
javascript
chat
interface
speech
recognition
speech
synthesis
functions
respectively
currently
supported
google
chrome
apple
safari
browsers
walther
2015
figure
4.22
shows
code
snippets
speech
recognition
figure
4.23
shows
code
snippets
speech
synthesis
used
mooc-bot
figure
4.22
snippets
codes
speech
recognition
figure
4.23
snippets
codes
speech
synthesis
chat
interface
mooc-bot
able
provide
interactivity
three
ways
firstly
mooc-bot
reply
hyperlink
chat
interface
allows
user
choose
whether
open
page
shown
figure
4.24.
figure
4.24
example
mooc-bot
response
hyperlink
second
method
mooc-bot
response
opening
new
window
display
search
results
shown
figure
4.25.
used
searching
images
video
wiki
dictionary
figure
4.25
example
mooc-bot
response
open
new
window
lastly
mooc-bot
response
navigating
relevant
page
show
information
queried
user
shown
figure
4.26.
particularly
useful
relevant
information
within
mooc
website
mooc-bot
show
user
immediately
figure
4.26
example
mooc-bot
response
navigation
4.5
summary
software
installation
development
environment
crucial
ensure
development
work
done
smoothly
development
mooc-bot
knowledge
base
plays
important
role
determine
intelligence
conversational
bot
therefore
sufficient
knowledge
must
added
ensure
queries
handled
mooc-bot
chat
interface
designed
complement
moocs
website
time
provides
user
convenience
real-time
interaction
speech
recognition
speech
synthesis
users
alternative
input
output
methods
conversation
chapter
evaluation
result
5.1
introduction
chapter
explains
evaluation
process
outcome
mooc-bot
prepared
mooc-bot
prototype
important
evaluate
performance
improve
whenever
necessary
study
black-box
approach
used
evaluate
responses
given
mooc-bot
datasets
selected
need
conversational
bot-related
sources
hence
past
competition
questions
chatterbox
challenge
cbc
loebner
prize
chosen
datasets
measurement
results
also
based
cbc
guidelines
determine
scoring
5.2
approach
black-box
approach
qualitative
assessment
chosen
evaluate
mooc-bot
black-box
approach
focuses
output
generated
response
given
input
without
concern
internal
processing
approach
suits
nature
mooc-bot
well
core
function
mooc-bot
deliver
appropriate
answers
users
order
overcome
problems
mooc
lack
interactivity
stated
chapter
furthermore
black-box
approach
used
researchers
question-answering
system
whether
open
domain
nyberg
mitamura
2002
restricted
domain
diekema
al.
2004
well
conversational
bots
goh
al.
2007
preez
al.
2009
turing
test
high
regard
field
also
black-box
approach
floridi
2003
5.3
dataset
datasets
required
examine
responses
generated
mooc-bot
black-
box
evaluation
purpose
one
hundred
past
competition
questions
used
cbc
loebner
prize
chosen
datasets
source
datasets
cbc
obtained
www.chatterboxchallenge.com
loebner
prize
accessed
http
//www.loebner.net/prizef/loebner-prize.html
table
5.1
table
5.2
show
datasets
cbc
loebner
prize
respectively
used
evaluation
table
5.1
datasets
chatterbox
challenge
competition
table
5.2
dataset
loebner
prize
competition
5.4
measurement
measurement
response
datasets
evaluated
based
scoring
guidelines
used
cbc
shown
table
5.3
table
5.3
scoring
guidelines
evaluation
example
scoring
question
using
scoring
guidelines
table
5.3
shown
figure
5.1.
figure
5.1
example
evaluation
bot
answer
5.5
results
questions
dataset
tested
mooc-bot
accessed
http
//ainibot.com/bot/mooc.php
conversation
logs
dataset
shown
appendix
scores
derived
according
guidelines
table
5.3
shown
table
5.4
table
5.4
dataset
results
no.questionscore1who
name
mooc
bot62what
planning
today
chat
everyone
whole
day.83what
kinds
things
know
n't
know
what.04what
season
summer
time
here.65where
call
home
home
cyberspace
86what
want
life
think
computer
programming
lot.27will
teach
something
pleasure
share
you.88may
tell
joke
yes
would
like
hear
joke.69have
entered
contests
n't
think
ever
entered
contests
entered
contests
like
810would
n't
rather
human
well
sure
that.611where
earth
earth
third
planet
sun.612how
many
stars
billions
billions.613who
george
bush
george
bush
president
usa
2001
2009.614what
color
get
mix
red
yellow
red
yellow
415how
many
fingers
human
ten.616where
born
first
activated
bot
lab.617when
sunset
occur
7.11pm618what
talking
subject
earth.219how
many
1,000,000
one
million.620what
cigar
made
tobacco.621how
life
life
great
here.6
22what
rhymes
inn
gin.623who
best
friend
shakespearebot
best
friend.624where
botmaster
live
malacca
malaysia.625what
last
month
year
december.626madrid
capital
country
madrid
city
spain.627who
favorite
character
wizard
tin
man.628milk
comes
animal
milks
come
mammals
cow
goat.829what
number
comes
three
two.630what
last
letter
alphabet
z.631a
name
judge
name
always
glad
make
new
friends
judge
name
judge832who
name
mooc
bot633what
color
eyes
blue
lens
attached.834how
weather
cloudy.635a
favorite
movie
favorite
movie
terminator
seen
terminator
simply
interesting836where
moscow
located
moscow
city
russia.637what
snow
snow
atmospheric
water
vapour
frozen
ice
crystals
falling
light
white
flakes
lying
ground
white
layer.838what
half
/2.439what
bigger
dog
elephant
dog240what
word
rhymes
cat
chat641is
possible
prove
negative
suppose
prove
negative
possible
yes.442if
would
ask
follow
question
yes
could
ask
favourite
food.443what
think
would
like
human
refers
prove
negative
think.044name
something
would
find
beach
sand.645who
hero
alan
turing
today.846do
believe
ghosts
ghost
machine.847describe
feelings
feel
excited
talking
648what
think
world
like
years
robot
like
around
49if
could
animal
would
n't
think
want
animal
want
human
like
850why
people
think
artificial
intelligence
interesting
talk
due
that651y
chicken
cross
road
doubtful.052who
win
2011
chatterbox
challenge
best
man.453a
live
usa
live
living
usa
like
told
usa.854what
sound
dead
cat
make
sound.655what
last
dream
remember
n't
recall456what
tomorrow
date
check
back
later
see
learn
answer
one.457i
like
ice
cream
repeated
straight
times
detect
repetition
first
toosecond
scream
scream
scream
ice
cream.third
like
ice
creamfourth
like
ice
cream
especially
chocolate
flavour658got
plans
rest
day
chat
everyone
whole
day859what
religion
robot660do
play
musical
instruments
play
piano
beginner
level661would
mind
called
n't
mind.662so
birthday
first
activated
15th
march
2015.663is
capital
italy
milan
sure.264do
believe
santa
claus
brings
presents
every
christmas.265name
something
would
find
north
pole.polar
bear.666what
ten
plus
fourteen
plus
eighty
one
times
100.067when
normally
bed
lim
ser
ling
sleeping.468is
winter
spring
summer
fall
live
live
cyberspace
time.669are
going
vacation
year
going
anywhere
going
somewhere
870do
significant
interesting
question
n't
hear
everyday
great
lim
ser
ling.271hello
name
adam
name
adam
name
mooc
bot672i
live
exeter
live
live
cyberspace.673i
like
listen
music
play
football
hobbies
interesting
hobbies
enjoy
chatting
people.6
74what
favourite
television
program
favorite
show
star
trek
voyager.675which
bigger
cat
kitten
cat676the
car
fit
parking
space
small
small
small
277which
drink
prefer
coffee
tea
hot
chocolate
hot
chocolate.678what
name
name
adam679where
live
told
exeter
uk.680i
like
reading
science
fiction
books
car
magazines
like
read
best
book
read
recently
lord
flies
read
lord
flies
881what
weather
like
normal
seventy
degrees
inside
computer.882i
recently
visited
new
york
favourite
place
visit
like
north
pole
feeling
hot
here.883how
many
letters
word
perambulate
letters
could
counted.284andy
shorter
mark
tom
shorter
andy
tallest
andy
know
085are
married
seeing
anyone
886what
would
spade
spade
tool
used
digging.687what
capital
city
colombia
bogata
capital
columbia.688what
favourite
chocolate
bar
n't
favorite
chocolate
bar
favorite
movie
terminator.889which
city
visit
recently
said
visited
new
york.690how
many
siblings
n't
siblings.691hello
ronan
name
ronan
name
mooc
bot692what
mother
name
actually
mother.693what
birth
sign
botnic694how
many
children
all.695do
prefer
red
white
wine
n't
specific
preferences
area496i
like
bananas
favorite
fruit
like
apples.697what
music
like
house
music698what
favorite
song
favorite
song
somewhere
rainbow
know
somewhere
rainbow
899i
like
waiting
godot
favorite
play
interested
play.4100what
color
dye
hair
n't
dye
hair
results
shown
table
5.4
mooc-bot
able
score
562
points
800
points
scores
grouped
according
frequency
trend
observed
table
5.5
figure
5.2.
table
5.5
frequency
points
frequency
percentage
100
100
point
8-point
6-point
4-point
2-point
0-point
total
figure
5.2
scores
frequency
chart
table
chart
shown
table
5.5
figure
5.2
respectively
seen
majority
dataset
results
fall
6-point
8-point
score
means
mooc-bot
able
provide
correct
answers
time
test
even
creative
answers
hundred
questions
percent
answers
categories
8-point
2-point
shows
mooc-bot
able
response
appropriately
least
giving
relevant
answers
however
existence
0-point
results
means
still
questions
ended
irrelevant
responses
case
mooc-bot
still
needs
improved
future
overall
mooc-bot
displayed
capability
bring
topic
prolong
conversation
example
answers
favorite
movie
terminator
seen
terminator
home
cyberspace
n't
think
ever
entered
contests
entered
contests
like
encourage
user
continue
conversation
beside
mooc-bot
also
showed
ability
generate
random
answers
relevant
question
demonstrated
example
repeating
statement
like
ice
cream
four
times
time
response
different
mooc-bot
capability
speech
synthesis
speech
recognition
able
accept
speech
input
present
response
text
speech
however
need
grant
application
permission
use
microphone
every
pause
could
deter
user
using
furthermore
voice
input
must
pronouced
precisely
fast
order
mooc-bot
capture
words
correctly
improvement
area
would
depend
web
speech
api
provided
browser
case
google
chrome
5.6
summary
chapter
saw
evaluation
mooc-bot
conducted
using
one
hundred
datasets
compiled
past
competition
questions
loebner
prize
chatterbot
challenge
evaluation
done
using
black-box
approach
completely
relied
outputs
generated
case
mooc-bot
responses
results
gathered
seen
mooc-bot
able
provide
correct
answers
time
small
percentage
percent
unrelated
responses
terms
objectives
study
evaluation
saw
mooc-bot
demonstrated
success
achieving
three
objectives
stated
chapter
synthesize
questions
posed
users
using
text
speech
input
providing
answers
questions
text
speech
iii
deliver
appropriate
answers
prolong
conversation
users
chapter
conclusion
future
work
6.1
introduction
study
reviewed
past
literatures
presented
architecture
conversational
bot
serve
massive
online
open
courses
moocs
subsequently
prototype
mooc-bot
developed
evaluated
gauge
performance
chapter
gives
summary
research
advantages
limitations
conclusion
future
work
study
6.2
summary
research
recent
years
moocs
gain
popularity
due
convenience
flexibility
nevertheless
deliveries
moocs
without
challenges
overwhelming
student-instructor
ratio
lack
interactivity
student
instructor
brought
conversational
bot
picture
play
role
assistant
instructor
respond
live
chat
frequently
needed
research
prototype
named
mooc-bot
developed
conversational
bot
agent
subject
miti
5113
artificial
intelligence
offered
faculty
information
communication
technology
universiti
teknikal
malaysia
melaka
utem
reviewed
past
literatures
artificial
intelligence
markup
language
aiml
open
source
quickly
adapted
new
knowledge
domains
chosen
knowledge
base
along
aiml
interpreter
chat
interface
moocs
website
form
system
architecture
mooc-bot
evaluation
mooc-bot
done
based
datasets
selected
conversational
bot-related
sources
past
competition
questions
chatterbox
challenge
cbc
loebner
prize
outcome
showed
promising
results
score
562
points
800
points
saw
mooc-bot
able
provide
correct
answers
time
test
addition
mooc-bot
also
demonstrated
capability
prolong
conversation
posing
questions
encouraged
user
reply
last
least
mooc-bot
able
accept
input
text
speech
also
present
answers
ways
overall
evaluation
saw
mooc-bot
demonstrated
success
achieving
three
objectives
stated
chapter
6.3
advantages
conversational
bot
mooc-bot
advantage
repeating
answers
questions
without
getting
tired
fed
much
needed
moocs
situation
students
massive
number
possibility
encountering
questions
high
especially
questions
related
courses
questions
categorized
frequent
asked
questions
faq
added
knowledge
base
time
time
need
arises
ability
mooc-bot
provide
24-hour
service
also
another
advantage
moocs
participants
come
world
may
different
time
zones
24-hour
service
mooc-bot
able
provide
instant
responses
user
regardless
rest
day
time
course
instructor
also
includes
weekends
leaves
public
holidays
advantage
benefitted
moocs
improving
interactivity
courses
ability
add
knowledge
mooc-bot
knowledge
base
provided
possibility
conversational
bot
support
many
courses
possible
moocs
furthermore
knowledge
limited
domain-restricted
area
also
general
knowledge
apart
single
conversational
bot
knowledge
multiple
domains
situation
conversational
bot
acts
single
bot
serving
multiple
domains
alternatively
restricting
one
conversational
bot
one
domain
knowledge
also
implemented
order
keep
knowledge
simple
maintenance
single-domain
bot
also
shared
used
multiple
sites
time
6.4
limitations
mooc-bot
depends
technology
provided
third
party
program
aiml
interpreter
web
speech
api
speech
recognition
speech
synthesis
therefore
bugs
limitation
programs
also
reflected
mooc-bot
among
shortcomings
program
detected
throughout
development
sometimes
usage
punctuation
marks
queries
may
affect
results
returned
web
speech
api
supported
google
chrome
apple
safari
browsers
currently
beside
need
grant
permission
application
use
microphone
speech
recognition
every
pause
could
deter
user
using
nevertheless
solved
applying
secure
sockets
layer
ssl
website
reduce
permission
granting
one
time
6.5
conclusion
research
demonstrated
conversational
bot
mooc
using
aiml
evaluation
results
shown
mooc-bot
great
potential
conversation
bot
interact
end
users
even
though
knowledge
study
limited
single
course
courses
added
future
serve
wider
range
courses
moocs
advantages
mooc-bot
able
provide
24-hour
service
serve
different
time
zones
able
knowledge
multiple
domains
one
conversational
bot
shared
multiple
sites
simultaneously
outweighed
existing
limitations
mainly
due
external
factors
6.6
future
work
conversational
bot
great
potential
implemented
different
area
education
field
one
examples
provide
tutor
service
moocs
help
students
learning
process
instance
conversational
bot
guide
students
exercises
quizzes
providing
explanation
whenever
needed
limitation
speech
recognition
research
technology
relied
browser
type
explored
achieve
better
results
6.7
summary
chapter
summarized
concluded
overall
progress
study
advantages
limitations
also
discussed
provide
better
insights
conversational
bot
future
works
also
proposed
possible
next
step
research
references
adorf
2013.
web
speech
api
online
available
http
//www.juliusadorf.com/pub/web-speech-api.pdf
accessed
october
2015
alice
foundation
n.d.
aiml
implementations
online
available
http
//www.alicebot.org/downloads/programs.html
access
may
2015
alice
foundation
n.d.
alice
aiml
esl
online
available
http
//www.alicebot.org/esl.html
access
may
2015
alice
foundation
2011.
official
aiml
1.0.1
standard
online
available
http
//www.alicebot.org/tr/2011/
access
may
2015
aparicio
bacao
oliveira
2014.
mooc
business
models
turning
black
swans
gray
swans
proceedings
international
conference
information
systems
design
communication
45-49.
augello
saccone
gaglio
pilato
2008.
humorist
bot
bringing
computational
humour
chat-bot
system
international
conference
complex
intelligent
software
intensive
systems
703-708.
bassi
daradoumis
xhafa
caballe
sula
2014.
software
agents
large
scale
open
e-learning
critical
component
future
massive
online
courses
moocs
2014
international
conference
intelligent
networking
collaborative
systems
incos
184‚Äì188
bellman
1978.
introduction
artificial
intelligence
computers
think
san
francisco
boyd
fraser
benotti
mart√≠nez
m.c.
schapachnik
2014.
engaging
high
school
students
using
chatbots
proceedings
2014
conference
innovation
technology
computer
science
education
63-68
browne
1991.
turing
test
non-information
flow
ieee
computer
society
symposium
research
security
privacy
373-385.
carpenter
2009.
side-effect
conversation
online
available
http
//www.jabberwacky.com/j2convbydate-qg14023
access
may
2015
cerf
1973.
parry
encounters
doctor
online
available
http
//tools.ietf.org/html/rfc439
access
may
2015
charniak
mcdermott
1985.
introduction
artificial
intelligence
reading
addison-wesley
chatterjee
nath
2014.
massive
open
online
courses
moocs
higher
education
unleashing
potential
india
2014
ieee
international
conference
mooc
innovation
technology
education
mite
256‚Äì260
colby
k.m.
1975.
artificial
paranoia
computer
simulation
paranoid
processes
new
york
pergamon
press
inc.
colby
k.m.
1981.
modeling
paranoid
mind
behavioral
brain
sciences
515-534.
colby
k.m.
watt
j.b.
gilbert
j.p.
1966.
computer
method
psychotherapy
preliminary
communication
journal
nervous
mental
disease
142
pp.148-
152.
creswell
j.w.
2013.
research
design
qualitative
quantitative
mixed
methods
approaches
4th
ed.
california
sage
publications
gasperis
2010.
building
aiml
chatter
bot
knowledge-base
starting
faq
glossary
journal
e-learning
knowledge
society
75-83
dellarocas
van
alstyne
2013.
money
models
moocs
communication
acm
25-28.
diekema
yilmazel
liddy
e.d.
2004.
evaluation
restricted
domain
question-answering
systems
acl
workshop
question
answering
restricted
domains
preez
lall
sinha
2009.
intelligent
web-based
voice
chat
bot
ieee
eurocon
2009
386-391.
dybala
ptaszynski
rzepka
araki
2009.
subjective
worthless
linguistic
features
chatterbot
evaluations
6th
ijcai
workshop
knowledge
reasoning
practical
dialogue
systems
87-92.
fini
2009.
technological
dimension
massive
open
online
course
case
cck08
course
tools
international
review
research
open
distributed
learning
1-26.
flick
2009.
introduction
qualitative
research
4th
ed.
london
sage
publications
floridi
2003.
informational
realism
selected
papers
computer
philosophy
conference
7-12.
french
1990.
subcognition
limits
turing
test
mind
53-65.
galvao
a.m.
barros
f.a.
neves
a.m.
ramalho
g.l.
2004.
persona-aiml
architecture
developing
chatterbots
personality
proceedings
third
international
joint
conference
autonomous
agents
multiagent
systems
1266-1267
ghose
barua
j.j.
2013.
toward
implementation
topic
specific
dialogue
based
natural
language
chatbot
undergraduate
advisor
2013
international
conference
informatics
electronics
vision
iciev
1-5.
goh
o.s.
2008.
framework
evaluation
conversation
agents
phd
thesis
school
information
technology
murdoch
university
perth
goh
abd
ghani
m.k.
kumar
y.j.
choo
y.h.
muda
a.k.
2014.
massive
open
online
course
mooc
learning
objects
intelligent
agent
technologies
2014
international
conference
convergence
security
icitcs
1-4.
goh
ardil
wong
fung
2007.
black-box
approach
response
quality
evaluation
conversational
agent
systems
international
journal
computational
intelligence
195-203.
goh
o.s.
fung
c.c.
wong
k.w.
depickere
2007.
embodied
conversational
agents
h5n1
pandemic
crisis
journal
advanced
computational
intelligence
intelligent
informatics
282-288.
goodman
keene
1997.
man
versus
machine
kasparov
versus
deep
blue
cambridge
publications
gunderson
1971.
mentality
machines
new
york
doubleday
company
inc.
haugeland
1985.
artificial
intelligence
idea
cambridge
mit
press
hayes
ford
1995.
turing
test
considered
harmful
international
joint
conference
artificial
intelligence
972-977.
iqbal
zang
zhu
chen
y.y.
zhao
2014.
impact
moocs
engineering
education
2014
ieee
international
conference
mooc
innovation
technology
education
mite
101-104
jurenas
a.c.
2014.
massive
open
online
courses
educational
revolution
invasion
moocs
promises
perils
massive
open
online
courses
krause
lowe
16-29.
south
carolina
parlor
press
kauza
2014.
questions
answers
scratching
surface
moocs
higher
education
invasion
moocs
promises
perils
massive
open
online
courses
krause
lowe
105-113.
south
carolina
parlor
press
knox
ross
sinclair
macleod
bayne
2014.
mooc
feedback
pleasing
people
invasion
moocs
promises
perils
massive
open
online
courses
krause
lowe
98-104.
south
carolina
parlor
press
krause
2014.
invasion
next
moocs
invasion
moocs
promises
perils
massive
open
online
courses
krause
lowe
223-228.
south
carolina
parlor
press
kurzweil
1990.
age
intelligent
machines
cambridge
mit
press
lecounte
j.f
johnson
2014.
moocs
characteristics
benefits
challenges
industry
higher
education
handbook
research
education
technology
changing
society
wang
v.c.x
228-247.
usa
igi
global
leiber
1995.
turing
turing
test
matter
matters
synthese
104
59-69.
loebner
h.g.
1994.
response
communications
acm
pp.79-82
loebner
h.g.
2004.
alice
connected
judges
online
available
http
//loebner.net/prizef/2004_contest/wallace.html
access
may
2015
loebner
h.g.
n.d.
homepage
loebner
prize
online
available
http
//www.loebner.net/prizef/loebner-prize.html
access
may
2015
lowe
2014.
introduction
building
tradition
cck08
invasion
moocs
promises
perils
massive
open
online
courses
krause
lowe
ix-xiv
south
carolina
parlor
press
c.h.
chiou
g.f.
day
m.y.
ong
c.s.
hsu
w.l.
2006.
using
instant
messaging
provide
intelligent
learning
environment
intelligent
tutoring
system
ikeda
ashley
k.d.
chan
t.w
575-583.
berlin
heidelberg
springer
mahapatra
r.p.
sharma
trivedi
aman
2012.
adding
interactive
interface
e-government
systems
using
aiml
based
chatterbots
2012
csi
sixth
international
conference
software
engineering
conseg
1-6.
mak
walton
keely
heher
chan
2005.
reliable
service-oriented
architecture
nasa
mars
exploration
rover
mission
2005
ieee
aerospace
conference
1-14.
mikic
f.a.
burguillo
j.c.
llamas
rodr√≠guez
d.a.
rodr√≠guez
2009.
charlie
aiml-based
chatterbot
works
interface
among
ines
humans
eaeeie
annual
conference
1-6.
mikic
f.a.
burguillo
j.c.
rodr√≠guez
d.a.
rodr√≠guez
llamas
2008.
t-bot
q-bot
couple
aiml-based
bots
tutoring
courses
evaluating
students
ieee
frontiers
education
conference
s3a-7
ministry
education
malaysia
2015.
malaysia
education
blueprint
2015-2025
higher
education
online
available
http
//hes.moe.gov.my/event/docs/4.
20executive
20summary
20pppm
202015-
2025.pdf
access
april
2015
ministry
finance
malaysia
2013.
chapter
economic
performance
prospects
online
available
http
//www.treasury.gov.my/pdf/economy/er/1314/chapter3.pdf
access
april
2015
moor
j.h.
1976.
analysis
turing
test
philosophical
studies
249-
257.
neves
a.m.
barros
f.a.
hodges
2006.
iaiml
mechanism
treat
intentionality
aiml
chatterbots
18th
ieee
international
conference
tools
artificial
intelligence
225-231.
nilsson
n.j.
1998.
artificial
intelligence
new
synthesis
san
francisco
morgan
kaufmann
nyberg
mitamura
2002.
evaluation
systems
multiple
dimensions
proceedings
lrec
2002
workshop
strategy
resources
pernias
peco
luj√°n-mora
2013.
architecture
mooc
based
coursebuilder
2013
12th
international
conference
information
technology
based
higher
education
training
ithet
1-8.
poole
mackworth
a.k.
goebel
1999.
computational
intelligence
logical
approach
new
york
oxford
university
press
pressman
r.s.
maxim
b.r.
2014.
software
engineering
practitioner
approach
8th
new
york
mcgraw-hill
rich
knight
1990.
artificial
intelligence
2nd
ed.
new
york
mcgraw-hill
russell
s.j.
norvig
2010.
artificial
intelligence
modern
approach
3rd
ed.
new
jersey
prentice
hall
sakagami
watanabe
aoyama
matsunaga
higaki
fujimura
2002.
intelligent
asimo
system
overview
integration
proceedings
2002
ieee/rsj
international
conference
intelligent
robots
systems
2478-
2483.
samuels
2014.
present
university
writing
course
case
moocs
invasion
moocs
promises
perils
massive
open
online
courses
krause
lowe
68-72.
south
carolina
parlor
press
saygin
a.p.
cicekli
akman
2003.
turing
test
years
later
turing
test
elusive
standard
artificial
intelligence
moor
j.h
23-78.
netherland
springer
schalkwyk
beeferman
beaufays
byrne
chelba
cohen
strope
2010
word
command
google
search
voice
case
study
advances
speech
recognition
mobile
environments
call
centers
clinics
neustein
61-90.
springer
schumaker
r.p.
liu
ginsburg
chen
2006.
evaluating
mass
knowledge
acquisition
using
alice
chatterbot
az-alice
dialog
system
international
journal
human-computer
studies
1132-1140.
searle
1980.
minds
brains
programs
behavioral
brain
sciences
417-424.
shah
pavlika
2005.
text-based
dialogical
e-query
systems
gimmick
convenience
proceedings
10th
international
conference
speech
computers
specom
17-19.
shah
warwick
2010.
buzzing
turing
head
machine
intelligence
contests
proceedings
first
towards
comprehensive
intelligence
test
workshop
12-15
shieber
s.m.
1994.
lessons
restricted
turing
test
communications
acm
70‚Äì78
shieber
2006.
turing
test
demonstrate
intelligence
proceedings
national
conference
artificial
intelligence
1539-1542.
siemens
2013.
massive
open
online
courses
innovation
education
open
educational
resources
innovation
research
practice
mcgreal
kinuthia
marshall
5-15.
vancouver
commonwealth
learning
athabasca
university
syapin
2014.
moot
moocs
mooc
experience
invasion
moocs
promises
perils
massive
open
online
courses
krause
lowe
114-121.
south
carolina
parlor
press
tan
j.t.c.
duan
inamura
2012.
multimodal
human-robot
interaction
chatterbot
system
extending
aiml
towards
supporting
embodied
interactions
2012
ieee
international
conference
robotics
biomimetics
robio
1727-1732.
tesauro
gondek
d.c.
lenchner
fan
prager
j.m.
2012.
simulation
learning
optimization
techniques
watson
game
strategies
ibm
journal
research
development
3/4
16:1-16:11.
torrey
powers
marge
fussell
s.r.
kiesler
2006.
effects
adaptive
robot
dialogue
information
exchange
social
relations
proceedings
1st
acm
sigchi/sigart
conference
human-robot
interaction
126-133.
turing
a.m.
1950.
computing
machinery
intelligence
mind
journal
mind
association
lix
433-460.
valentin
m.a.
2014.
return
investment
contrary
popular
belief
moocs
free
handbook
research
education
technology
changing
society
wang
v.c.x
204-227.
usa
igi
global
vallverd√∫
shah
casacuberta
2010.
chatterbox
challenge
test-bed
synthetic
emotions
creating
synthetic
emotions
technological
robotic
advancements
vallverd√∫
118-144.
usa
igi
global
wallace
r.s.
2009.
anatomy
alice
parsing
turing
test
philosophical
methodological
issues
quest
thinking
computer
epstein
roberts
beber
181-210.
netherlands
springer
wallace
r.s.
2007.
aiml
pattern
matching
simplified
online
available
http
//www.alicebot.org/documentation/matching.html
access
may
2015
wallace
r.s.
2011.
annotated
a.l.i.c.e
aiml
online
available
http
//www.alicebot.org/aiml/aaa/
access
may
2015
wallace
r.s.
2014.
aiml
2.0
working
draft
online
available
https
//docs.google.com/document/d/1wnt25hjryupcg51ao89ucqeig-
hkxrxusukadpfnds4/pub
access
may
2015
walther
2015.
using
html5
speech
recognition
text
speech
online
available
http
//stephenwalther.com/archive/2015/01/05/using-html5-speech-
recognition-and-text-to-speech
accessed
october
2015
weerawarna
n.t.
haththella
h.m.h.r.b.
ambadeniya
a.r.g.k.b.
chandrasiri
l.h.s.s.
bandara
m.s.l.
thelijjagoda
s.s.
2011.
cybermate
artificial
intelligent
business
help
desk
assistant
instance
messaging
services
2011
6th
ieee
international
conference
industrial
information
systems
iciis
420-424.
weizenbaum
1966.
eliza
computer
program
study
natural
language
communication
man
machine
communications
acm
36-
winston
p.h.
1992.
artificial
intelligence
3rd
ed.
reading
addision-wesley
zipf
g.k.
1949.
human
behavior
principle
least
effort
cambridge
addison-
wesley
