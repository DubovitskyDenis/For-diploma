end-to-end
goal-driven
web
navigation
rodrigo
nogueira
tandon
school
engineering
new
york
university
rodrigonogueira
nyu.edu
kyunghyun
cho
courant
institute
mathematical
sciences
new
york
university
kyunghyun.cho
nyu.edu
abstract
propose
goal-driven
web
navigation
benchmark
task
evaluating
agent
abilities
understand
natural
language
plan
partially
observed
environments
challenging
task
agent
navigates
website
represented
graph
consisting
web
pages
nodes
hyperlinks
directed
edges
ﬁnd
web
page
query
appears
agent
required
sophisticated
high-level
reasoning
based
natural
languages
efﬁcient
sequential
decision-making
capability
succeed
release
software
tool
called
webnav
automatically
transforms
website
goal-driven
web
navigation
task
example
make
wikinav
dataset
constructed
english
wikipedia
extensively
evaluate
different
variants
neural
net
based
artiﬁcial
agents
wikinav
observe
proposed
goal-driven
web
navigation
well
reﬂects
advances
models
making
suitable
benchmark
evaluating
future
progress
furthermore
extend
wikinav
question-
answer
pairs
jeopardy
test
proposed
agent
based
recurrent
neural
networks
strong
inverted
index
based
search
engines
artiﬁcial
agents
trained
wikinav
outperforms
engined
based
approaches
demonstrating
capability
proposed
goal-driven
navigation
good
proxy
measuring
progress
real-world
tasks
focused
crawling
question-answering
introduction
recent
years
many
exciting
advances
building
artiﬁcial
agent
trained
one
learning
algorithm
solve
many
relatively
large-scale
complicated
tasks
see
e.g.
much
works
target
tasks
computer
games
atari
games
racing
car
game
successes
stimulated
researchers
apply
similar
learning
mechanism
language-based
tasks
multi-user
dungeon
mud
games
instead
visual
perception
agent
perceives
state
world
written
description
set
actions
allowed
agent
either
ﬁxed
dependent
current
state
type
task
efﬁciently
evaluate
agent
ability
planning
also
language
understanding
however
notice
mud
games
exhibit
complex
nature
natural
languages
full
extent
instance
largest
game
world
tested
narasimhan
uses
vocabulary
1340
unique
words
largest
game
tested
uses
2258
words
furthermore
description
state
time
step
almost
always
limited
visual
description
current
scene
lacking
use
higher-level
concepts
present
natural
languages
paper
propose
goal-driven
web
navigation
large-scale
alternative
text-based
games
evaluating
artiﬁcial
agents
natural
language
understanding
planning
capability
proposed
goal-driven
web
navigation
consists
whole
website
graph
web
pages
nodes
hyperlinks
directed
edges
agent
given
query
consists
one
sentences
taken
randomly
selected
web
page
graph
navigates
network
starting
predeﬁned
starting
node
ﬁnd
target
node
query
appears
unlike
text-based
games
task
utilizes
existing
text
resulting
large
vocabulary
truly
natural
language
description
state
furthermore
task
challenging
action
space
greatly
changes
respect
state
agent
release
software
tool
called
webnav
converts
given
website
goal-driven
web
navigation
task
example
use
provide
wikinav
built
english
wikipedia
design
artiﬁcial
agents
based
neural
networks
called
neuagents
trained
supervised
learning
report
respective
performances
benchmark
task
well
performance
human
volunteers
observe
difﬁculty
task
generated
webnav
well
controlled
two
control
parameters
maximum
number
hops
starting
target
node
length
query
furthermore
extend
wikinav
additional
set
queries
constructed
jeopardy
questions
refer
wikinav-jeopardy
evaluate
proposed
neuagents
three
search-based
strategies
simplesearch
apache
lucene
google
search
api
result
terms
document
recall
indicates
neuagents
outperform
search-based
strategies
implying
potential
proposed
task
good
proxy
practical
applications
question-answering
focused
crawling
goal-driven
web
navigation
task
goal-driven
web
navigation
characterized
world
agent
navigates
represented
graph
graph
consists
set
nodes
i=1
set
directed
edges
connecting
nodes
node
represents
page
website
turn
represented
natural
language
text
exists
edge
going
page
hyperlink
points
one
nodes
designated
starting
node
navigation
begins
target
node
one
whose
natural
language
description
contains
query
may
one
target
node
time
step
agent
reads
natural
language
description
current
node
agent
landed
point
whole
world
consisting
nodes
edges
structure
map
graph
structure
without
natural
language
description
visible
agent
thus
making
task
partially
observed
agent
reads
description
current
node
take
one
actions
available
set
possible
actions
deﬁned
union
outgoing
edges
stop
action
thus
making
agent
state-dependent
action
space
edge
corresponds
agent
jumping
next
node
stop
action
corresponds
agent
declaring
current
node
one
target
nodes
edge
represented
description
next
node
words
deciding
action
take
equivalent
taking
peek
neighboring
node
seeing
whether
node
likely
lead
ultimately
target
node
agent
receives
reward
chooses
stop
action
task
uses
simple
binary
reward
cid:26
otherwise
constraints
clear
exists
ultimate
policy
agent
succeed
every
trial
traverse
graph
breadth-ﬁrst
agent
ﬁnds
node
query
appears
avoid
kind
degenerate
policies
task
includes
set
four
rules/constraints
agent
follow
edges
node
agent
ﬁnite
memory
size
smaller
agent
moves
hops
away
table
dataset
statistics
wikinav-4-*
wikinav-8-*
wikinav-16-*
wikinav-jeopardy
wikinav-4-*
wikinav-8-*
wikinav-16-*
wikinav-jeopardy
train
valid
test
6.0k
20k
20k
12m
20k
20k
113k
10k
10k
query
size
comes
least
two
hops
away
starting
node
ﬁrst
constraint
alone
prevents
degenerate
policies
breadth-ﬁrst
search
forcing
agent
make
good
decisions
possible
node
second
one
constraints
ensure
agent
cheat
using
earlier
trials
reconstruct
whole
graph
structure
test
time
store
entire
world
memory
training
third
constraint
optional
computational
consideration
fourth
constraint
included
agent
allowed
read
content
next
node
webnav
software
part
work
build
release
software
tool
turns
website
goal-driven
web
navigation
task.1
call
tool
webnav
given
starting
url
webnav
reads
whole
website
constructs
graph
web
pages
website
nodes
node
assigned
unique
identiﬁer
text
content
node
cleaned
version
actual
html
content
corresponding
web
page
webnav
turns
intra-site
hyperlinks
set
edges
addition
transforming
website
graph
webnav
automatically
selects
queries
nodes
texts
divides
training
validation
test
sets
ensure
overlap
among
three
sets
making
target
node
query
selected
belongs
one
generated
example
deﬁned
tuple
query
web
page
found
following
randomly
selected
path
words
webnav
starts
starting
page
random-walks
graph
predeﬁned
number
steps
nh/2
case
reaches
target
node
selects
query
query
consists
sentences
selected
among
top-5
candidates
target
node
highest
average
tf-idf
thus
discouraging
webnav
choosing
trivial
query
evaluation
purpose
alone
enough
use
query
example
however
include
one
target
node
among
potentially
many
target
nodes
one
path
starting
node
target
node
among
many
possible
connecting
paths
exploited
training
agent
used
evaluating
trained
agent
wikinav
benchmark
task
webnav
built
benchmark
goal-driven
navigation
task
using
wikipedia
target
website
used
dump
ﬁle
english
wikipedia
september
2015
consists
ﬁve
million
web
pages
built
set
separate
tasks
different
levels
difﬁculty
varying
maximum
number
allowed
hops
size
query
refer
task
wikinav-nh-nq
task
generate
training
validation
test
examples
pages
half
many
hops
away
starting
page
maximum
number
hops
allowed.2
use
category
main
topic
classiﬁcations
starting
node
source
code
datasets
publicly
available
https
//drive.google.com/folderview
id=
0b5lbsf7ochjqufhwq242bzdltwc
usp=sharing
limit
artiﬁcial
limit
chose
computational
reasons
table
sample
query-answer
pairs
wikinav-jeopardy
answer
query
last
years
life
galileo
house
arrest
espousing
man
theory
winter
1971-72
record
1,122
inches
snow
fell
washington
rainier
paradise
ranger
station
state
company
accutron
watch
introduced
1960
guarantee
accuracy
within
one
minute
month
copernicus
bulova
minimal
cleanup
procedure
excluded
meta
articles
whose
titles
start
wikipedia
hyperlink
leads
web
page
outside
wikipedia
removed
advance
together
following
sections
references
external
links
bibliography
partial
bibliography
table
present
basic
per-article
statistics
english
wikipedia
evident
statistics
world
wikinav-nh-nq
large
complicated
even
cleanup
procedure
ended
fairly
small
dataset
wikinav-4-*
large
wikinav-8-*
wikinav-16-*
see
table
details
hyperlinks
words
462.5
990.2
132881
avg
var
max
min
4.29
13.85
300
table
per-page
statistics
english
wikipedia
4.1
related
work
wikispeedia
work
indeed
ﬁrst
notice
possibility
website
possibly
whole
web
world
intelligent
agents
explore
achieve
certain
goal
one
relevant
recent
work
perhaps
wikispeedia
west
proposed
following
game
called
wikispeedia
game
world
nearly
identical
goal-driven
navigation
task
proposed
work
speciﬁcally
converted
wikipedia
schools
contains
approximately
4,000
articles
2008
graph
whose
nodes
articles
directed
edges
hyperlinks
graph
pair
nodes
randomly
selected
provided
agent
agent
goal
start
ﬁrst
node
navigate
graph
reach
second
node
similarly
wikinav
agent
access
text
content
current
nodes
immediate
neighboring
nodes
one
major
difference
target
given
whole
article
meaning
single
target
node
wikispeedia
may
multiple
target
nodes
proposed
wikinav
description
see
goal-driven
web
navigation
generalization
re-framing
wikispeedia
first
constrain
query
contain
less
information
making
much
difﬁcult
agent
navigate
target
node
furthermore
major
research
question
west
leskovec
understand
humans
navigate
ﬁnd
information
looking
whereas
work
fully
focused
proposing
automatic
tool
build
challenging
goal-driven
tasks
designing
evaluating
artiﬁcial
intelligent
agents
wikinav-jeopardy
jeopardy
wikinav
one
potential
practical
applications
utilizing
goal-drive
navigation
question-answering
based
world
knowledge
task
query
question
agent
navigates
given
information
network
e.g.
website
retrieve
answer
section
propose
describe
extension
wikinav
query-target
pairs
constructed
actual
jeopardy
question-answer
pairs
refer
extension
wikinav
wikinav-jeopardy
ﬁrst
extract
question-answer
pairs
archive3
300k
pairs
keep
pairs
whose
answers
titles
wikipedia
articles
leaving
133k
pairs
divide
pairs
113k
training
10k
validation
10k
test
examples
carefully
http
//www.j-archive.com
ensuring
article
appears
one
partition
additionally
shufﬂe
original
pairs
ensure
train
test
examples
different
episodes
training
pair
ﬁnd
one
path
starting
node
main
topic
classiﬁcation
target
node
include
supervised
learning
reference
average
number
hops
target
node
5.8
standard
deviation
1.2
maximum
minimum
respectively
see
table
sample
query-answer
pairs
neuagent
neural
network
based
agent
6.1
model
description
core
function
core
neuagent
parametric
function
fcore
takes
input
content
current
node
query
returns
hidden
state
agent
parametric
function
fcore
implemented
either
feedforward
neural
network
fff
fff
take
account
previous
hidden
state
agent
recurrent
neural
network
frec
frec
ht−1
refer
two
types
agents
neuagent-ff
neuagent-rec
respectively
neuagent-ff
use
single
tanh
layer
use
long
short-term
memory
lstm
units
recently
become
facto
standard
neuagent-rec
based
new
hidden
state
neuagent
computes
probability
distribution
outgoing
edges
probability
outgoing
edge
proportional
similarity
hidden
state
j|˜p
exp
cid:0
cid:62
cid:1
note
neuagent
peeks
content
next
node
considering
vector
representation
addition
outgoing
edges
also
allow
agent
stop
probability
∅|˜p
exp
cid:0
cid:62
cid:1
figure
graphical
illustration
single
step
performed
baseline
model
neuagent
stop
action
vector
trainable
parameter
case
neuagent-rec
unnormalized
probabilities
conditioned
history
sequence
actions
nodes
selected
agent
far
apply
softmax
normalization
unnormalized
probabilities
obtain
probability
distribution
possible
actions
current
node
neuagent
selects
next
action
based
action
probability
distribution
eqs
stop
action
chosen
neuagent
returns
current
node
answer
receives
reward
one
correct
zero
otherwise
agent
selects
one
outgoing
edges
moves
selected
node
repeats
process
reading
acting
see
fig
single
step
described
neuagent
content
representation
neuagent
represents
content
node
vector
work
use
continuous
bag-of-words
vector
document
cid:88
k=1
word
vector
pretrained
continuous
bag-of-words
model
word
vectors
ﬁxed
throughout
training
query
representation
case
query
consider
two
types
representation
ﬁrst
one
continuous
bag-of-words
bow
vector
used
representing
content
node
one
dynamic
representation
based
attention
mechanism
attention-based
query
representation
query
ﬁrst
projected
set
context
vectors
context
vector
k-th
query
word
cid:48
rd×d
cid:48
respectively
trainable
weight
matrix
pretrained
word
vector
window
size
context
vector
scored
time
step
fatt
ht−1
w.r.t
previous
hidden
state
neuagent
scores
normalized
positive
sum
one
i.e.
normalized
scores
used
coefﬁcients
computing
weighted-sum
query
words
result
query
representation
time
exp
cid:80
|q|
l=1
exp
k+u/2
cid:88
cid:48
cid:48
cid:48
=k−u/2
|q|
cid:88
k=1
|q|
kck
later
empirically
compare
two
query
representations
6.2
inference
beam
search
neuagent
trained
number
approaches
using
solving
proposed
task
naive
approach
simply
let
agent
make
greedy
decision
time
step
i.e.
following
outgoing
edge
highest
probability
arg
maxk
log
better
approach
exploit
fact
agent
allowed
explore
outgoing
edges
per
node
use
simple
forward-only
beam
search
beam
width
capped
beam
search
simply
keeps
likely
traces
terms
log
time
step
6.3
training
supervised
learning
|p∗|
cid:88
paper
investigate
supervised
learning
train
agent
follow
example
trace
included
training
set
step
see
case
cost
per
training
example
csup
log
∅|p∗
log
k|p∗
per-example
training
cost
fully
differentiable
respect
parameters
neural
network
use
stochastic
gradient
descent
sgd
algorithm
minimize
cost
whole
training
set
gradients
computed
backpropagation
allows
entire
model
trained
end-to-end
fashion
query-to-target
performance
optimized
directly
k=1
human
evaluation
one
unique
aspect
proposed
task
difﬁcult
average
person
trained
speciﬁcally
ﬁnding
information
navigating
information
network
number
reasons
behind
difﬁculty
first
person
must
familiar
via
training
graph
structure
network
often
requires
many
months
years
training
second
person
must
in-depth
knowledge
broad
range
topics
order
make
connection
via
different
concepts
themes
topics
query
target
node
third
trial
requires
person
carefully
read
whole
content
nodes
navigates
time-consuming
exhausting
job
asked
ﬁve
volunteers
try
four-sentence-long
queries4
randomly
selected
test
sets
wikinav-
datasets
given
two
hours
allowed
preliminary
study
volunteers
found
queries
shorter
able
solve
enough
trials
meaningful
statistics
table
average
reward
neuagents
humans
test
sets
wikinav-nh-nq
fcore
fff
frec
frec
frec
layers
units
512
tanh
512
lstm
2048
lstm
2048
lstm
humans
bow
bow
bow
att
4.7
5.1
10.9
15.8
21.5
22.0
17.7
22.9
1.2
1.7
8.0
12.5
40.0
41.1
35.8
41.7
9.2
9.2
19.9
24.5
1.9
2.1
13.9
17.8
45.1
44.8
39.5
46.8
14.5
12.9
13.3
28.1
34.2
8.8
2.9
3.6
21.9
28.2
5.0
choose
maximum
number
explored
edges
per
node
neuagents
also
given
option
give
average
reward
computed
fraction
correct
trials
queries
presented
results
analysis
8.1
wikinav
report
table
performance
neuagent-ff
neuagent-rec
models
test
set
nine
wikinav-
datasets
addition
proposed
neuagents
also
report
results
human
evaluation
clearly
observe
level
difﬁculty
indeed
negatively
correlated
query
length
positively
correlated
maximum
number
allowed
hops
latter
may
considered
trivial
size
search
space
grows
exponentially
respect
former
former
negative
correlation
conﬁrms
indeed
easier
solve
task
information
query
conjecture
agent
requires
in-depth
understanding
natural
languages
planning
overcome
lack
information
query
ﬁnd
path
toward
target
node
neuagent-ff
neuagent-rec
shares
similar
performance
maximum
number
allowed
hops
small
neuagent-rec
vs.
performs
consistently
better
higher
indicates
access
history
helps
long-term
planning
tasks
also
observe
larger
deeper
neuagent-rec
signiﬁcantly
outperforms
smaller
one
target
node
away
starting
node
best
performing
model
used
attention-based
query
representation
especially
difﬁculty
task
increased
supports
claim
proposed
task
goal-driven
web
navigation
challenging
benchmark
evaluating
future
progress
fig
present
example
attention
weights
query
words
dynamically
evolve
model
navigates
toward
target
node
human
participants
generally
performed
worse
neuagents
attribute
number
reasons
first
neuagents
trained
speciﬁcally
target
domain
wikipedia
human
participants
second
observed
volunteers
rapidly
exhausted
reading
multiple
articles
sequence
words
ﬁnd
proposed
benchmark
webnav
good
benchmark
machine
intelligence
comparing
human
intelligence
figure
visualization
attention
weights
test
query
horizontal
axis
corresponds
query
words
vertical
axis
articles
titles
visited
1918
kentuchy
derbycategory
kentuchy
derby
racescategory
kentuchy
derbycategory
sports
events
louisville
kentuchycategory
sports
events
citycategory
sports
eventscategory
sportscategory
main
topic
classificationsthekentuchyderbywastherunningofthe
kentuchyderbytheracetookplacemay1918.fullresultspayoutthewinnerreceivedapurseof
15,000
8.2
wikinav-jeopardy
settings
test
best
model
previous
experiment
neuagent-rec
layers
2048
lstm
units
attention-based
query
representation
wikinav-jeopardy
evaluate
two
training
strategies
ﬁrst
strategy
straightforward
supervise
learning
train
neuagent-rec
wikinav-jeopardy
scratch
strategy
pretrain
neuagent-rec
ﬁrst
wikinav-16-4
ﬁnetune
wikinav-jeopardy
compare
proposed
neuagent
three
search
strategies
ﬁrst
one
simplesearch
simple
inverted
index
based
strategy
simplesearch
scores
wikipedia
article
tf-idf
weighted
sum
words
co-occur
articles
query
returns
top-k
articles
second
use
lucene
popular
open
source
information
retrieval
library
default
conﬁguration
whole
wikipedia
dump
lastly
use
google
search
api5
restricting
domain
wikipedia.org
system
evaluated
document
recall
recall
vary
40.
case
neuagent
run
beam
search
width
set
returns
ﬁnal
nodes
compute
document
recall
table
recall
wikinav-jeopardy
cid:63
pretrained
wikinav-16-4
pre
cid:63
cid:88
model
neuagent
neuagent
simplesearch
lucene
google
recall
recall
recall
13.9
18.9
5.4
6.3
14.0
20.2
23.6
12.6
14.7
22.1
33.2
38.3
28.4
36.3
25.9
result
analysis
table
report
results
wikinav-jeopardy
proposed
neuagent
clearly
outperforms
three
search-based
strategies
pretrained
wikinav-16-4
superiority
pretrained
neuagent
apparent
number
candidate
documents
constrained
small
implying
neuagent
able
accurately
rank
correct
target
article
although
neuagent
performs
comparably
search-based
strategy
even
without
pretraining
beneﬁt
pretraining
much
larger
wikinav
clear
emphasize
search-based
strategies
access
nodes
input
query
neuagent
hand
observes
nodes
visits
navigation
success
clearly
demonstrates
potential
using
proposed
neuagent
pretrained
dataset
compiled
proposed
webnav
task
focused
crawling
interesting
problem
much
content
available
internet
either
hidden
dynamically
generated
conclusion
work
describe
large-scale
goal-driven
web
navigation
task
argue
serves
useful
test
bed
evaluating
capabilities
artiﬁcial
agents
natural
language
understanding
planning
release
software
tool
called
webnav
compiles
given
website
goal-driven
web
navigation
task
example
construct
wikinav
wikipedia
using
webnav
extend
wikinav
jeopardy
questions
thus
creating
wikinav-jeopardy
evaluate
various
neural
net
based
agents
wikinav
wikinav-jeopardy
results
show
sophisticated
agents
better
performance
thus
supporting
claim
task
well
suited
evaluate
future
progress
natural
language
understanding
planning
furthermore
show
agent
pretrained
wikinav
outperforms
two
strong
inverted-index
based
search
engines
wikinav-jeopardy
empirical
results
support
claim
usefulness
proposed
task
agents
challenging
applications
focused
crawling
question-answering
https
//cse.google.com/cse/
acknowledgments
thanks
support
facebook
google
google
faculty
award
2016
nvidia
gpu
center
excellence
2015-2016
funded
coordenação
aperfeicoamento
pessoal
nível
superior
capes
references
manuel
álvarez
juan
raposo
alberto
pan
fidel
cacheda
fernando
bellas
víctor
carneiro
deepbot
focused
crawler
accessing
hidden
web
content
proceedings
3rd
international
workshop
data
enginering
issues
e-commerce
services
conjunction
acm
conference
electronic
commerce
pages
18–25
acm
2007
dzmitry
bahdanau
kyunghyun
cho
yoshua
bengio
neural
machine
translation
jointly
learning
align
translate
iclr
2015
2014
soumen
chakrabarti
martin
van
den
berg
byron
dom
focused
crawling
new
approach
topic-speciﬁc
web
resource
discovery
computer
networks
:1623–1640
1999
jianshu
chen
xiaodong
jianfeng
gao
lihong
deng
mari
ostendorf
deep
reinforcement
learning
unbounded
action
space
arxiv
preprint
arxiv:1511.04636
2015
sepp
hochreiter
jürgen
schmidhuber
long
short-term
memory
neural
computation
1735–1780
1997
jan
koutník
jürgen
schmidhuber
faustino
gomez
evolving
deep
unsupervised
convolu-
tional
networks
vision-based
reinforcement
learning
proceedings
2014
conference
genetic
evolutionary
computation
pages
541–548
acm
2014
tomas
mikolov
kai
chen
greg
corrado
jeffrey
dean
efﬁcient
estimation
word
representations
vector
space
arxiv
preprint
arxiv:1301.3781
2013
volodymyr
mnih
koray
kavukcuoglu
david
silver
andrei
rusu
joel
veness
marc
bellemare
alex
graves
martin
riedmiller
andreas
fidjeland
georg
ostrovski
human-level
control
deep
reinforcement
learning
nature
518
7540
:529–533
2015
karthik
narasimhan
tejas
kulkarni
regina
barzilay
language
understanding
text-
based
games
using
deep
reinforcement
learning
arxiv
preprint
arxiv:1506.08941
2015
sebastian
risi
julian
togelius
neuroevolution
games
state
art
open
challenges
arxiv
preprint
arxiv:1410.7326
2014
david
rumelhart
geoffrey
hinton
ronald
williams
learning
representations
back-
propagating
errors
nature
pages
323–533
1986
robert
west
jure
leskovec
automatic
versus
human
navigation
information
networks
icwsm
2012
robert
west
jure
leskovec
human
wayﬁnding
information
networks
21st
interna-
tional
world
wide
web
conference
pages
619–628
acm
2012
robert
west
joelle
pineau
doina
precup
wikispeedia
online
game
inferring
semantic
distances
concepts
ijcai
pages
1598–1603
2009
