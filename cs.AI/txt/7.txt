complexity
shift
bribery
committee
elections∗
robert
bredereck1
piotr
faliszewski2
rolf
niedermeier1
nimrod
talmon3†
1tu
berlin
berlin
germany
robert.bredereck
rolf.niedermeier
tu-berlin.de
2agh
university
science
technology
krakow
poland
faliszew
agh.edu.pl
3ben-gurion
university
sheva
israel
talmonn
bgu.ac.il
abstract
given
election
preferred
candidate
budget
shift
bribery
problem
asks
whether
win
election
shifting
higher
voters
preference
orders
course
shifting
comes
price
depending
voter
extent
shift
one
must
exceed
given
budget
study
parameterized
computational
com-
plexity
shift
bribery
multiwinner
voting
rules
winning
election
means
part
winning
committee
focus
well-established
sntv
bloc
k-borda
chamberlin-courant
rules
well
approximate
variants
chamberlin-courant
rule
since
original
rule
np-hard
compute
show
shift
bribery
tends
harder
multiwinner
setting
single-winner
one
showing
settings
shift
bribery
easy
single-winner
cases
hard
hard
approximate
multiwinner
ones
moreover
show
non-monotonicity
rules
based
approximation
algorithms
chamberlin-courant
rule
sometimes
affects
complex-
ity
shift
bribery
introduction
study
computational
complexity
campaign
management—modeled
shift
bribery
problem—for
case
multiwinner
elections
shift
bribery
problem
want
ensure
candidate
winning
committee
convincing
voters—at
given
price—
rank
favorably
particular
models
campaigns
based
direct
meetings
∗an
extended
abstract
paper
appeared
title
complexity
shift
bribery
committee
elections
proceedings
30th
aaai
conference
artiﬁcial
intelligence
aaai
pages
2452–2458
†most
work
done
author
afﬁliated
berlin
voters
campaigner
presents
positive
features
candidate
works
see
also
works
cary
magrino
xia
faliszewski
interpretations
bribery
problems
complexity
campaign
management
relatively
well-studied
single-winner
elections
studied
multiwinner
setting
yet
however
studies
manipulation
control
multiwinner
elections
goal
multiwinner
election
pick
committee
candidates
based
pref-
erences
voters
candidates
might
example
form
country
next
parliament
group
people
shortlisted
job
opening
set
items
company
offers
cus-
tomers
see
overview
faliszewski
papers
boutilier
skowron
elkind
varied
description
applications
multiwinner
voting
since
election
results
affect
voters
candidates
quite
signiﬁcantly
expect
run
campaigns
achieve
desirable
results
person
running
parliament
would
want
promote
political
platform
job
candidate
would
want
convince
department
qualities
study
standard
ordinal
model
voting
voter
ranks
candidates
one
likes
best
one
likes
least
focus
rules
based
either
borda
scores
candidates
t-approval
scores
brieﬂy
put
candidates
voter
gives
borda
score
preferred
candidate
score
next
one
voter
gives
t-approval
score
top-t
candidates
score
ones
basic
multiwinner
rules
simply
pick
candidates
highest
scores
example
sntv
uses
1-approval
scores
bloc
uses
k-approval
scores
k-borda
uses
borda
scores
rules
may
good
shortlisting
tasks
seem
perform
well
cases
committee
needs
varied
represent
voters
proportionally
see
overview
faliszewski
work
elkind
case
may
prefer
rules
chamberlin-courant
family
rules
try
ensure
every
voter
represented
well
member
committee
see
section
exact
deﬁnition
stv
rule
unfortunately
winners
sntv
bloc
k-borda
rules
polynomial-time
com-
putable
case
chamberlin-courant
rules
procaccia
boutilier
show
np-hardness
deal
problem
two
ways
first
exact
fpt
algorithms
computing
chamberlin-courant
winners
example
case
voters
second
good
polynomial-time
approximation
algorithms
due
boutilier
skowron
following
caragiannis
elkind
consider
approximation
algorithms
voting
rules
right
societies
may
use
place
original
hard-to-compute
ones
idea
shift
bribery
problem
follows
given
election
preferred
candidate
want
ensure
winner
case
member
winning
committee
shifting
forward
votes
appropriate
cost
without
exceeding
given
budget
costs
shifting
correspond
investing
resources
convincing
voters
candidate
high
quality
example
company
choosing
products
continue
selling
manager
responsible
given
product
may
wish
prepare
demonstration
company
higher
management
similarly
person
running
parliament
would
invest
money
meetings
voters
appropriate
leaﬂets
thus
view
shift
bribery
model
type
campaign
management
nonetheless
also
appealing
interpretations
bribery
problems
example
cary
magrino
xia
studied
margin
victory
problem
form
destructive
bribery
goal
ensure
given
candidate
win
changing
votes
possible
fewer
votes
need
changed
likely
given
election
tampered
similarly
faliszewski
suggested
amount
bribery
needed
ensure
given
candidate
wins
good
measure
well
candidate
performed
election
fewer
changes
votes
necessary
closer
given
candidate
victory
indeed
faliszewski
argue
measure
might
appealing
candidates
scores
measure-of-
success
interpretation
applies
work
well
shift
bribery
introduced
elkind
since
number
researchers
studied
shift
bribery
e.g.
schlotter
bredereck
kacz-
marczyk
faliszewski
maushagen
related
campaign
management
prob-
lems
e.g.
dorn
schlotter
baumeister
faliszewski
knop
naturally
problem
also
resembles
bribery
problems
original
bribery
problem
faliszewski
studied
mattei
mattei
goldsmith
klapper
point
reader
overview
faliszewski
rothe
details
references
single-winner
elections
shift
bribery
relatively
easy
problem
speciﬁcally
polynomial-time
solvable
t-approval
rules
borda
rule
np-hard
good
polynomial-time
approximation
algorithm
exact
fpt
algorithms
multiwinner
setting
situation
quite
different
main
ﬁndings
research
follows
see
also
table
section
computational
complexity
shift
bribery
multiwinner
rules
strongly
depends
setting
general
cases
candidates
ﬁnd
exact
fpt
algorithms
cases
preferred
candidate
shifted
positions
ﬁnd
hardness
results
even
though
cases
often
easy
single-winner
setting
computational
complexity
case
voters
strongly
depends
un-
derlying
scoring
rule
generally
rules
based
t-approval
scores
complexity
shift
bribery
tends
lower
analogous
rules
based
borda
scores
study
multiwinner
rules
stv
rule
monroe
rule
rules
approval
elections
see
e.g.
works
brams
kilgour
aziz
lackner
skowron
order
keep
set
rules
small
able
compare
results
single-winner
setting
however
mention
maushagen
considered
shift
bribery
round-based
rules
including
stv
faliszewski
considered
prob-
lems
analogous
shift
bribery
case
approval-based
multiwinner
rules
preliminaries
elections
voting
rules
integer
set
election
consists
set
candidates
collection
voters
voter
associated
preference
order
i.e.
ranking
candidates
decreasing
order
appreciation
voter
example
writing
mean
likes
best
write
posv
denote
position
candi-
date
voter
preference
order
e.g.
preceding
example
would
posv
write
subset
candidates
description
preference
order
mean
listing
members
ﬁxed
easily
computable
order
put
preference
order
mean
listing
members
reverse
ﬁxed
order
let
election
candidates
voters
borda
score
candidate
vote
posv
borda
score
election
pv∈v
single-winner
borda
rule
elects
candidate
highest
borda
score
several
candidates
tie
winners
deﬁne
t-approval
score
follows
candidate
voter
ranks
among
pv∈v
top
positions
otherwise
set
deﬁne
single-winner
t-approval
rule
analogously
borda
rule
multiwinner
voting
rule
function
given
election
integer
|c|
outputs
set
k-element
subsets
size-k
subset
called
committee
member
called
winning
committee
natural
task
arises
considering
multiwinner
voting
rules
task
de-
ciding
whether
given
candidate
among
winners
resp
part
winning
committee
refer
task
winner
determination
problem
sometimes
winner
deter-
mination
procedures
studied
literature
consider
slightly
different
goals
e.g
computing
score
winning
committee
however
polynomial-time
fpt
winner
determination
procedures
rules
study
paper
modiﬁed
solve
winner
determination
consider
following
rules
election
committee
size
sntv
bloc
k-borda
compute
score
candidate
output
committee
candidates
highest
scores
committees
several
sntv
bloc
use
respectively
1-approval
k-approval
scores
k-borda
uses
borda
scores
rules
winners
computed
polynomial
time.1
chamberlin-courant
rules
rules
committee
candidate
representative
voters
rank
highest
among
members
score
committee
sum
scores
voters
give
representatives
highest-scoring
committees
win
borda-cc
uses
borda
scores
t-approval-cc
uses
t-approval
scores
win-
ner
determination
rules
np-hard
fpt
parameterized
number
voters
candidates
may
exponentially
many
winning
committees
easy
compute
score
check
subset
candidates
extended
winning
committee
greedy-borda-cc
-approximation
algorithm
borda-cc
rule
due
boutilier
approximation
sense
score
committee
output
algorithm
least
fraction
score
winning
committee
borda-cc
algorithm
starts
empty
set
executes
iterations
one
adding
candidate
maximizes
borda-cc
score
example
always
picks
borda
winner
ﬁrst
iteration
greedy-borda-cc
always
outputs
unique
winning
committee
greedy-approval-cc
works
way
greedy-borda-cc
uses
t-approval
scores
instead
borda
scores
-approximation
algorithm
t-approval-cc
re-
fer
t-approval-greedy-cc
m·w
lambert
function
log
ptas-cc
main
part
skowron
al.
polynomial-time
approxi-
mation
scheme
borda-cc
parameterized
complexity
parameterized
problem
declare
part
input
e.g.
number
voters
parameter
parameterized
problem
ﬁxed-parameter
tractable
fpt
algorithm
solves
|i|o
time
|i|
size
given
instance
encoding
value
parameter
computable
function
hierarchy
classes
hard
parameterized
problems
fpt
widely
believed
problem
hard
one
classes
fpt
notions
hardness
completeness
parameterized
classes
deﬁned
parameterized
reductions
paper
sufﬁces
use
standard
polynomial-time
many-one
reductions
guarantee
value
parameter
problem
reduce
exclusively
depends
value
parameter
problem
reduce
parameterized
problem
solved
polynomial
time
assumption
parameter
constant
say
recall
membership
fpt
additionally
requires
degree
polynomial
constant
independent
parameter
problem
np-hard
even
constant
value
parameter
say
para-np-hard
details
parameterized
complexity
point
books
cygan
downey
fellows
flum
grohe
niedermeier
shift
bribery
let
multiwinner
rule
r-shift
bribery
problem
given
election
candidates
voters
preferred
candidate
committee
size
voter
price
functions
see
integer
budget
goal
ensure
belongs
least
one
winning
committee
according
rule
achieve
goal
allowed
shift
forward
preference
orders
voters
however
voter
price
function
2if
tie
several
candidates
assume
algorithm
breaks
according
prespeciﬁed
order
3our
approach
natural
extension
non-unique
winner
model
world
single-winner
rules
naturally
one
might
alternatively
require
member
winning
committees
put
even
demanding
goal
would
involve
candidates
shift
positions
forward
vote
pay
assume
price
functions
nondecreasing
i.e.
cost
less
shift
candidate
farther
shift
nearer
cost
shifting
zero
i.e.
bredereck
considered
several
different
families
price
functions
paper
focus
two
unit
price
functions
voter
holds
all-or-nothing
price
functions
voter
holds
voter-dependent
value
shift
action
vector
natural
numbers
voter
specify
many
positions
shift
shift
action
write
shift
denote
election
obtained
shifting
appropriate
number
positions
forward
vote
i=1
i=1
call
price
functions
voters
write
denote
total
cost
applying
shift
action
deﬁne
number
unit
shifts
formally
deﬁne
r-shift
bribery
follows
deﬁnition
let
multiwinner
voting
rule
instance
r-shift
bribery
consists
election
preferred
candidate
committee
size
collection
price
functions
voters
integer
budget
ask
whether
shift
action
committee
shift
refer
shift
action
successful
shift
action
write
opt
denote
cost
least
expensive
successful
shift
action
following
bredereck
consider
natural
parameterizations
number
voters
number
candidates
minimum
number
unit
shifts
successful
shift
action
summarize
results
well
previously
known
ones
table
reminder
paper
structured
follows
section
present
ﬁndings
applying
multiwinner
context
whole
section
present
speciﬁc
results
voting
rules
sntv
bloc
k-borda
section
present
results
chamberlin-courant
rules
approximate
variants
conclude
section
discussion
outlook
general
results
start
discussion
providing
several
results
either
apply
whole
classes
multiwinner
rules
including
many
focus
proven
using
general
easily
adaptable
techniques
results
form
baseline
research
regarding
speciﬁc
rules
first
note
rules
study
shift
bribery
unit
price
func-
tions
fpt
parameterized
number
candidates
result
follows
applying
standard
technique
modeling
problem
integer
linear
program
invoking
lenstra
theorem
conjecture
using
milp
technique
bredereck
voting
rule
r-winner
r-shift
bribery
determination
candidates
voters
shifts
t-approval
borda
sntv
bloc
k-borda
borda-cc
approval-cc
greedy-approval-cc
ptas-cc
greedy-borda-cc
np-h♠
fpt
fpt
fpt♦
fpt
0/1-pr
fpt-as♦
thm
fpt♦
prop
fpt
0/1-pr
prop
thm
fpt-as
prop
cor
1+cor
para-np-h♠
fpt
prop
cor
thm
fpt
thm
table
overview
complexity
results
shift
bribery
problem
reference
also
mention
complexity
winner
determination
problem
results
cell
apply
voting
rules
listed
leftmost
column
span
height
cell
results
case
unit
price
functions
exceptions
marked
fpt
0/1-pr
all-or-nothing
price
functions
many
results
extend
price
functions
list
fpt-as
stands
fpt
approximation
scheme
see
proposition
note
variants
-hard
also
results
marked
follow
work
elkind
follow
work
bredereck
follow
works
procaccia
boutilier
follow
work
betzler
folklore
results
general
toolbox
n-fold
integer
programming
see
work
knop
application
n-fold
ips
regarding
bribery
problems
also
possible
generalize
result
all-or-nothing
price
functions
even
general
price
functions
note
following
theorem
mention
sntv
bloc
since
see
next
section
problem
even
polynomial-time
solvable
theorem
parameterized
number
candidates
shift
bribery
unit
prices
fpt
k-borda
approval-cc
borda-cc
greedy-approval-cc
ptas-cc
greedy-borda-
order
prove
theorem
introduce
algorithmic
scheme
similar
dorn
schlotter
single-winner
swap
bribery
make
use
fact
integer
linear
programs
ilps
solved
fpt
time
respect
number
integer
variables
fol-
lowing
famous
result
lenstra
later
improved
kannan
fredman
tarjan
ﬁrst
introduce
scheme
basic
ilp
formulation
show
extend
ilp
algorithmic
scheme
works
k-borda
proving
lemma
approval-cc
borda-cc
proving
lemma
greedy-approval-cc
ptas-cc
greedy-borda-cc
proving
lemma
idea
scheme
guess
members
winning
committee
verify
guess
solving
ilp
precisely
try
possible
winning
committees
outer
loop
algorithm
call
corresponding
ilp
less
potential
winning
committees
contain
round-based
rules
greedy-approval-
ptas-cc
greedy-borda-cc
furthermore
guess
function
mapping
position
committee
speciﬁc
candidate
allows
specify
round
member
joined
committee
according
round-based
rules
realized
additional
factor
running
time
let
denote
set
ﬁrst
members
according
function
different
preference
orders
ordering
arbitrarily
speak
i-th
preference
order
describe
main
components
ilps
introduce
integer
variable
represents
number
voters
originally
i-th
preference
order
j-th
one
bribery
add
following
constraints
ensuring
original
vote
turned
exactly
one
bribed
vote
mean
number
voters
prior
bribery
i-th
preference
order
add
following
constraint
ensuring
cost
bribery
action
ex-
ceed
budget
cost
mean
number
unit
shifts
necessary
transform
i-th
preference
order
j-th
one
transformation
impossible
cost
introduce
integer
variable
represents
number
voters
j-th
preference
order
bribery
ensure
variable
correct
values
introduce
following
constraint
describes
basic
ilp
extended
proofs
following
lemmas
lemma
parameterized
number
candidates
k-borda
shift
bribery
fpt
proof
ensure
member
k-borda
winning
committee
guarantee
members
winning
committee
may
larger
borda
scores
hence
candidate
add
following
constraint
base
ilp
mean
borda
score
candidate
receives
i-th
preference
order
ﬁnishes
description
extended
ilp
lemma
parameterized
number
candidates
approval-cc
shift
bribery
borda-cc
shift
bribery
fpt
proof
ensure
member
approval-cc
respectively
borda-cc
winning
com-
mittee
guarantee
committee
larger
approval
score
respectively
borda
score
guessed
committee
hence
committee
add
following
constraint
base
ilp
ensuring
bribed
election
score
based
variables
least
high
score
mean
score
assigned
voter
i-th
preference
order
committee
note
values
precomputed
polynomial
time
constants
point
view
ilp
ﬁnishes
description
extended
ilp
lemma
parameterized
number
candidates
shift
bribery
fpt
greedy-
approval-cc
ptas-cc
greedy-borda-cc
proof
since
ptas-cc
special
case
greedy-approval-cc
sufﬁces
describe
exten-
sion
ilp
greedy-approval-cc
greedy-borda-cc
ensure
member
winning
committee
greedy-approval-cc
respec-
tively
greedy-borda-cc
guarantee
candidate
joins
committee
j-th
round
maximizes
score
committee
among
candidates
added
j-th
round
hence
round
add
following
constraint
basic
ilp
ensuring
bribed
election
score
least
large
score
j−1
previous
lemma
mean
score
assigned
voter
i-th
preference
order
committee
j−1
ﬁnishes
description
extended
ilp
proofs
lemma
lemma
lemma
complete
proof
theorem
second
general
result
note
parameterization
number
voters
provide
strong
general
fpt
approximation
scheme
candidate-monotone
rules
candidate
monotonicity
notion
introduced
elkind
requires
member
winning
com-
mittee
shifted
forward
vote
candidate
still
belongs
possibly
different
winning
committee
proposition
consider
parameterization
number
voters
let
candidate-monotone
multiwinner
rule
fpt
algorithm
winner
determination
every
positive
constant
number
fpt
algorithm
given
instance
r-shift
bribery
arbitrary
price
functions
outputs
successful
shift
action
cost
opt
proof
bredereck
show
fpt
algorithm
parameterized
number
voters
given
instance
shift
bribery
positive
value
possible
shift
action
tries
shift
action
~s′
cost
~s′
greater
algorithm
also
works
multiwinner
rules
among
rules
considered
work
greedy-borda-cc
greedy-approval-cc
ptas-cc
candidate-monotone
see
work
elkind
argument
regarding
greedy-borda-cc
thus
result
applies
remaining
rules
case
all-or-nothing
prices
strengthen
result
exact
fpt
algo-
rithm
voters
let
proposition
consider
parameterization
candidate-monotone
multiwinner
rule
fpt
algorithm
winner
determination
fpt
algorithm
r-shift
bribery
all-or-nothing
price
functions
number
proof
since
candidate-monotone
all-or-nothing
prices
every
vote
shift
candidate
forward
shift
top
effect
sufﬁces
try
subsets
voters
subset
check
whether
shifting
forward
vote
subset
ensures
victory
without
exceeding
budget
using
similar
approach
solve
shift
bribery
rules
based
approval
scores
even
arbitrary
price
functions
even
round-based
ones
trick
approval
scores
voter
either
shift
candidate
right
lowest
approved
position
shift
thus
trying
subsets
voters
sufﬁces
proposition
fpt
algorithm
shift
bribery
approval-cc
greedy-
approval-cc
ptas-cc
parameterization
number
voters
arbitrary
price
functions
finally
using
smart
brute-force
provide
algorithms
shift
bribery
parameterized
either
number
voters
number
unit
shifts
rules
efﬁciently
computed
given
setting
proposition
consider
parameterization
number
voters
every
multiwinner
rule
algorithm
winner
determination
algorithm
shift
bribery
arbitrary
price
functions
proof
voter
guess
amount
preferred
candidate
shifted
since
maximum
amount
voters
possibilities
check
possibility
check
preferred
candidate
member
winning
committee
time
proposition
consider
parameterization
number
unit
shifts
every
multiwinner
rule
polynomial-time
algorithm
winner
determination
algorithm
shift
bribery
arbitrary
price
functions
proof
idea
proof
similar
behind
proposition
let
number
unit
shifts
perform
let
number
voters
view
solution
vector
length
entry
i-th
position
name
voter
whose
preference
order
apply
i-th
unit
shift
try
vectors
test
shift
action
deﬁnes
within
budget
ensures
preferred
candidate
winning
committee
sntv
bloc
k-borda
move
results
speciﬁc
voting
rules
sntv
bloc
k-borda
rules
pick
candidates
highest
1-approval
k-approval
borda
scores
respectively
one
might
suspect
efﬁcient
algorithms
corresponding
single-winner
rules
would
translate
multiwinner
setting
case
sntv
bloc
k-borda
situation
intricate
side
effect
research
resolve
complexity
borda-shift
bribery
parametrized
number
voters
left
open
bredereck
ﬁrst
show
shift
bribery
polynomial-time
solvable
sntv
bloc
brieﬂy
put
idea
guess
ﬁnal
score
preferred
candidate
compute
set
candidates
higher
scores
given
committee
size
easy
compute
cheapest
way
ensure
candidates
smaller
score
guessed
score
ensuring
indeed
obtains
guessed
score
rely
fact
rules
vote
sufﬁces
consider
one
possible
shift
action
either
shifting
preferred
candidate
top
vote
case
sntv
shifting
preferred
candidate
ﬁrst
approved
position
case
bloc
proposition
sntv-shift
bribery
bloc-shift
bribery
polynomial-time
solv-
able
arbitrary
price
functions
proof
use
algorithm
sntv
bloc
consider
input
instance
election
preferred
candidate
committee
size
algorithm
proceeds
follows
ﬁrst
step
guess
ﬁnal
score
would
successful
bribery
denoted
endscore
since
polynomially
many
possibilities
simply
branch
possible
values
endscore
implement
ﬁrst
step
consider
set
candidates
whose
scores
greater
endscore
clear
ensure
winning
committee
need
decrease
score
candidates
contains
candidates
need
decrease
scores
candidates
end
sort
candidates
cost
decreasing
score
appropriate
shifts
equal
endscore
pick
candidates
besides
expensive
ones
since
bribed
voter
one
decrease
score
exactly
one
candidate
deﬁnes
shift
action
shift
action
guarantee
score
endscore
4in
fact
long
version
bredereck
refers
short
version
work
resolving
open
question
complement
shifting
lowest
approved
position
sufﬁciently
many
cheapest
votes
ensure
score
endscore
thus
computed
shift
action
within
budget
accept
otherwise
try
another
guess
endscore
try
possibilities
without
accepting
reject
situation
k-borda
different
elkind
shown
shift
bribery
np-hard
borda
holds
k-borda
show
borda-shift
bribery
-hard
parameterization
number
voters
resolving
previously
open
case
immediately
implies
hardness
results
borda-based
rules
theorem
parameterized
number
voters
borda
shift
bribery
-hard
even
unit
price
functions
proof
give
parameterized
reduction
-hard
multicolored
independent
set
problem
given
graph
vertex
one
colors
multi-
colored
independent
set
asks
whether
vertices
pairwise-distinct
colors
two
connected
edge
let
input
instance
without
loss
gen-
erality
assume
number
vertices
color
edges
vertices
color
write
denote
set
vertices
denote
set
edges
every
color
write
denote
set
vertices
color
vertex
write
denote
set
edges
incident
vertex
write
denote
degree
i.e.
let
maxu∈v
highest
degree
vertex
form
instance
borda-shift-bribery
follows
let
candidate
set
d′′
d′′
sets
special
dummy
candidates
vertex
let
set
dummy
candidates
let
sv∈v
set
sv∈v
i′6=i
specify
d′′
later
vertex
deﬁne
partial
prefer-
ence
order
color
deﬁne
partial
preference
order
ranks
ﬁrst
members
vertex
candidates
colors
edge
candidates
corresponding
edges
incident
vertex
color
dummy
vertices
ﬁnally
candidates
d′′
use
unit
price
functions
set
budget
set
d′′
consist
dummy
candidates
create
following
voters
color
introduce
four
voters
voters
following
preference
orders
←−−−−
←−−−−−
←−−−−
q−1
voters
except
candidates
d′′
ranked
last
votes
well
preference
orders
reverses
respectively
create
voter
preference
order
d′′
voter
preference
order
obtained
ﬁrst
reversing
shifting
member
one
position
forward
shifting
positions
back
let
score
prior
executing
shift
actions
simple
calculations
show
candidate
score
candidate
d′′
score
see
sufﬁces
consider
voters
voters
preference
orders
symmetric
respect
candidates
except
d′′
always
ranked
last
show
possible
ensure
victory
election
bribery
cost
multicolored
independent
set
size
adjacent
si+1
move
certainly
passes
pair
votes
vertex
color
set
pair
voters
case
show
multicolored
independent
set
successful
shift
action
cost
election
let
multicolored
independent
set
color
let
shift
ends
right
front
ends
right
front
way
passes
every
vertex
candidate
every
cid:17
edge
candidate
cid:16
st∈
shift
action
costs
b/h
every
pair
voters
total
costs
exactly
clearly
ensures
passes
every
vertex
candidate
score
finally
since
chose
vertices
independent
set
every
edge
candidate
also
score
pass
edge
vertices
colors
pair
voters
case
show
successful
shift
action
instance
multicolored
independent
set
note
shift
action
cost
gives
score
thus
shift
action
successful
cause
candidates
lose
point
claim
successful
shift
bribery
use
exactly
b/h
unit
shifts
every
pair
voters
let
color
every
successful
shift
action
decrease
score
every
vertex
candidate
votes
pass
vertex
candidates
without
exceeding
budget
spend
fewer
b/h
units
budget
vertex
candidate
corresponding
vertex
pass
effect
lose
point
winner
thus
know
successful
shift
action
spends
b/h
units
budget
every
pair
voters
candidate
shifted
right
front
candidate
shifted
right
front
neither
assume
color
vertex
selected
given
pair
voters
call
vertex
si+1
vertex
vertices
selected
would
vertex
candidate
pass
pair
voters
selected
pair
votes
pass
edge
candidates
however
means
successful
shift
action
selected
vertices
form
independent
set
two
vertices
selected
edge
connecting
would
pass
candidate
either
pairs
votes
since
votes
pass
without
exceeding
budget
case
would
points
would
points
would
lose
effect
following
corollary
discuss
borda-based
rules
later
corollary
parameterized
number
voters
k-borda-shift
bribery
-hard
corollary
shows
fpt
approximation
scheme
proposition
presumably
replaced
fpt
algorithm
proposition
also
know
k-borda-shift
bribery
fpt
all-or-nothing
prices
parameterization
number
voters
next
result
perhaps
even
surprising
theorem
turns
k-borda-
shift
bribery
-hard
also
parameterization
number
unit
shifts
whereas
borda-shift
bribery
fpt
parameterization
end
describe
parameter-
ized
reduction
clique
theorem
parameterized
number
unit
shifts
k-borda
shift
bribery
-hard
proof
provide
parameterized
reduction
-complete
clique
problem
given
graph
ask
whether
set
pairwise
adjacent
vertices
given
instance
clique
problem
create
instance
k-borda
shift
bribery
follows
set
budget
cid:0
candidate
set
cid:1
2+h3
use
unit
price
functions
set
size
committee
sets
contain
dummy
candidates
speciﬁed
follows
edge
graph
let
set
dummy
candidates
let
set
dummy
candidates
set
cid:16
se∈e
cid:17
deﬁne
contain
dummy
candidates
form
set
voters
follows
edge
introduce
voter
preference
order
voter
whose
preference
order
reverse
candidates
shifted
bottom
positions
introduce
two
voters
preference
order
preference
order
←−−−
vertex
candidates
score
election
denote
candidate
score
remaining
candidates
score
lower
note
cid:1
edges
otherwise
certainly
contain
size-h
clique
assume
cid:0
intuitively
shifting
top
positions
votes
corresponding
size-h
clique
way
ensure
victory
remains
shown
correctness
construction
precisely
show
contains
clique
size
successful
shift
action
instance
borda-shift
bribery
case
assume
clique
size
successful
bribery
shift
front
voters
corresponding
edges
inside
clique
gives
addi-
tional
points
causes
vertex
clique
lose
points
effect
vertex
candidates
score
higher
vertex
candidates
score
since
candidates
already
lower
scores
belongs
least
one
winning
committee
case
note
join
winning
committee
least
vertex
candidates
lose
points
without
exceeding
budget
pass
vertex
candidates
votes
simple
arithmetic
see
within
given
budget
shift
pass
cid:1
votes
shift
vertex
candidates
cid:0
cid:1
edges
top
position
successful
shift
action
passes
vertices
corresponding
cid:0
lead
vertex
candidates
losing
least
points
fact
exactly
points
edges
form
size-h
clique
chamberlin-courant
variants
move
chamberlin-courant
rules
approximate
variants
rules
try
ﬁnd
committee
every
voter
represented
well
member
commit-
tee
recall
winner
determination
borda-cc
approval-cc
np-hard
solved
efﬁciently
approximate
variants
extent
difference
computational
complexity
also
reﬂected
ﬁndings
shift
bribery
note
many
results
cc-based
rules
see
also
table
section
follow
results
previous
sections
parameterizations
number
candidates
theorem
gives
fpt
results
cc-based
rules
parameterization
number
voters
proposition
fpt
results
approval-cc
greedy-approval-cc
ptas-cc
inherit
-hardness
borda-cc
greedy-borda-cc
theorem
since
rules
coin-
cide
single-winner
borda
rule
case
committee
size
corollary
shift
bribery
parameterized
number
voters
-hard
borda-cc
greedy-borda-cc
even
unit
price
functions
proposition
fpt
approximation
scheme
borda-cc
how-
ever
since
proposition
strongly
relies
candidate
monotonicity
rule
apply
greedy-borda-cc
indeed
conjecture
constant-factor
fpt
approximation
algorithm
greedy-borda-cc-shift
bribery
parameterized
number
voters
far
could
prove
case
weighted
elections
i.e.
case
voter
integer
weight
counts
separate
voters
computing
result
election
computation
parameter
one
hand
one
could
say
using
weighted
votes
goes
spirit
parameterization
number
voters
extent
agree
hand
however
fpt
results
parameterization
number
voters
including
fpt
approximation
scheme
proposition
hold
weighted
case
parameterized
reduction
multicolored
clique
problem
obtain
following
theorem
unless
fpt
greedy-borda-cc-shift
bribery
weighted
votes
α-approximable
constant
even
fpt
time
respect
number
voters
even
unit
price
functions
proof
ﬁrst
prove
-hardness
problem
argue
proof
implies
claimed
inapproximability
result
give
reduction
multicolored
clique
problem
case
regular
graphs
-complete
parameter
solution
size
see
e.g.
work
mathieson
szeider
lemma
3.2
end
let
input
graph
let
size
desired
clique
number
vertex
colors
use
following
notation
color
let
set
vertices
color
vertex
write
denote
set
edges
incident
since
regular
let
common
degree
vertices
i.e.
vertex
pair
distinct
colors
write
denote
set
edges
vertices
color
vertices
color
make
following
observation
regarding
greedy-borda-cc
iteration
picks
candidate
highest
score
score
computed
follows
let
set
candidates
already
selected
greedy-borda-cc
point
consider
candidate
voter
let
candidate
ranks
highest
voter
gives
max
posv
posv
points
i.e.
number
points
adding
would
increase
score
representative
score
candidate
given
iteration
sum
scores
receives
voters
form
instance
greedy-borda-cc-shift
bribery
follows
candidates
let
candidate
set
preferred
candidate
direct
competitor
sense
either
committee
bar
candidate
see
explanation
set
dummy
candidates
throughout
construction
introduce
many
dummy
candidates
give
special
names
end
construction
clear
add
polynomially
many
ensure
bar
candidate
always
chosen
ﬁrst
committee
so—in
essence—the
scores
candidates
computed
relative
thus
describe
preference
order
list
top
parts
voters
preference
orders
candidate
candidate
ranked
last
every
vote
explicitly
require
something
else
also
use
following
notation
descriptions
preference
orders
number
writing
preference
order
mean
introducing
new
dummy
candidates
put
following
positions
preference
order
every
preference
order
ranked
thus
selected
receive
points
voters
voters
introduce
following
voters
four
large
numbers
much
bigger
much
bigger
much
bigger
provide
exact
values
later
voter
weight
one
unless
speciﬁed
otherwise
color
introduce
two
vertex-score
voters
following
preference
orders
←−−
two
vertex-selection
voters
following
preference
orders
←−−
pair
distinct
colors
introduce
two
edge-score
voters
following
preference
orders
←−−−−
two
edge-selection
voters
following
preference
orders
←−−−−
edge-selection
voters
weight
voters
non-unit
weights
color
introduce
two
veriﬁcation
voters
following
preference
orders
←−−−−
←−−−−
introduce
following
two
voters
p/p′-score
voters
following
preference
orders
let
total
weight
voters
introduced
far
clearly
polynomially
upper-
bounded
input
size
multicolored
clique
instance
introduce
←−−−−
pairs
voters
preference
orders
refer
voters
bar-score
voters
assume
internal
tie-breaking
prefers
p′—we
could
modify
construction
slightly
way
round
prices
voters
set
budget
|e|
cid:0
cid:1
cid:1
use
unit
committee
size
budget
set
committee
size
cid:0
claim
appropriate
choice
possible
ensure
winning
committee
multicolored
size-h
clique
argue
case
idea
general
idea
show
every
shift
action
even
zero-vector
means
bribing
voters
costs
leads
committee
contains
bar
candidate
color
one
candidate
corresponding
vertex
color
color
pair
one
candidate
corresponding
edge
incident
vertex
color
vertex
color
candidate
selected
vertices
edges
encode
multicolored
clique
otherwise
committee
contains
furthermore
combination
vertices
edges
selected
within
given
budget
successful
shift
action
multicolored
clique
size
exists
correctness
observe
due
bar-score
voters
irrespective
shift
within
budget
greedy-borda-cc
ﬁrst
choose
thus
point
compute
score
candidates
relative
later
rounds
selected
members
committee
limited
number
interactions
shifted
indicating
iteration
would
change
appropriate
shifts
cid:1
rounds
ﬁrst
describing
situation
describe
next
cid:0
ﬁrst
iteration
selected
color
every
vertex
score
vertex-score
voters
vertex-selection
voters
veriﬁcation
voters
points
ﬁrst
bracket
come
vertex-score
voters
second
bracket
vertex-selection
voters
last
bracket
veriﬁcation
voters
since
much
larger
every
non-vertex
candidate
signiﬁcantly
lower
score
thus
next
rounds
color
greedy-borda-cc
adds
committee
one
vertex
candidate
color
note
soon
picks
vertex
candidate
color
scores
vertex
candidates
color
immediately
drop
least
scores
much
low
selected
following
rounds
shifting
candidate
vertex-selection
votes
color
vertex
possible
ensure
exactly
vertex
selected
sufﬁces
ensure
every
vertex
candidate
color
loses
one
point
due
passing
costs
shifts
|−h
total
words
assume
iterations
greedy-
borda-cc
picks
one
vertex
candidate
color
shift
action
cost
possible
choose
precisely
ones
next
cid:0
cid:1
iterations
greedy-borda-cc
picks
one
edge
candidate
pair
colors
counting
veriﬁcation
voters
pair
colors
every
edge
candidate
connecting
vertices
colors
score
edge-score
voters
edge-selection
voters
points
ﬁrst
bracket
come
edge-score
voters
points
second
bracket
come
edge-selection
voters
every
candidate
receives
less
points
veriﬁcation
voters
since
much
larger
since
shifting
forward
votes
edge-selection
voters
possible
remove
points
scores
one
edge
candidate
possible
precisely
select
members
added
committee
shift
action
total
cost
|e|
cid:0
cid:1
analogously
case
vertices
whenever
candidate
selected
ones
lose
many
points
chance
selected
following
iterations
ﬁnal
iteration
algorithm
either
selects
candidate
score
whereas
score
depends
vertex
edge
candidates
far
introduced
committee
disregarded
committee
members
selected
would
score
receives
points
p/p′-score
voters
points
every
color
veriﬁcation
voters
however
take
account
candidates
selected
preceding
rounds
color
loses
points
veriﬁcation
voters
true
since
whenever
candidate
committee
compute
score
relative
vertex
candidate
relative
points
lost
due
committee
members
already
selected
then—by
tie-breaking—p
would
win
however
pair
colors
committee
contained
edge
connected
vertices
committee
would
lose
least
one
point
veriﬁcation
voters
either
color
color
least
one
veriﬁcation
voters
would
rank
ahead
vertex
candidates
committee
would
selected
means
ends
committee
due
appropriate
shift
action
select
vertices
edges
corresponding
multicolored
clique
proves
correctness
reduction
appropriate
choice
discussed
next
values
one
could
pick
tight
precise
values
correctness
proof
sufﬁces
take
say
cid:0
cid:1
|e|
finally
discuss
inapproximability
result
implied
reduction
inapproximability
observe
fact
proof
gives
inapproximability
result
reason
given
constant
factor
could
increase
factor
would
impossible
pass
bar
candidate
votes
even
spend
times
necessary
budget
effect
succeed
would
still
ﬁnd
multicolored
clique
parameterization
number
unit
shifts
borda-cc
approval-cc
para-np-hard
due
hardness
winner
determination.5
greedy-approval-cc
ptas-
greedy-borda-cc
obtain
-hardness
results
inapproximability
results
theorem
parameterized
total
number
unit
shifts
shift
bribery
-hard
even
case
unit
prices
greedy-borda-cc
greedy-approval-cc
ptas-cc
unless
fpt
cases
problem
α-approximable
constant
proof
first
show
result
greedy-approval-cc
t-approval
satisfaction
function
implies
result
ptas-cc
second
show
proof
idea
adapted
obtain
result
greedy-borda-cc
greedy-approval-cc
reduce
set
cover
problem
-hard
parameter-
ized
set
cover
size
given
set
elements
family
subsets
integer
set
cover
asks
whether
subset
sets
whose
union
let
instance
set
cover
collection
sets
universe
solution
size
construct
greedy-approval-cc
shift
bribery
instance
follows
important
candidates
element
introduce
two
element
candidates
analogously
set
introduce
two
set
candidates
furthermore
introduce
preferred
candidate
candidate
dummy
candidates
voter
speciﬁed
later
introduce
dummy
candidates
dummy
candidate
approved
exactly
one
voter
intro-
duced
important
candidates
much
higher
scores
dummy
ones
dummy
candidate
join
winning
committee
irrespective
shifts
preferred
candidate
reason
introducing
dummy
candidates
ensure
even
though
use
t-approval
scores
construct
voter
approves
number
important
candidates
remaining
t−t′
top
positions
ﬁlled
dummy
candidates
committee
size
budget
set
budget
equal
size
set
cover
committee
size
|s|
idea
idea
reduction
construct
election
greedy-approval-cc
rule
ﬁrst
simulates
process
choosing
sets
set
cover
instance
chooses
elements
universe
covered
5the
literature
speaks
hardness
computing
score
winning
committee
one
show
deciding
whether
given
candidate
winning
committee
np-hard
well
indeed
formally
shown
bredereck
form
preference
orders
voters
prior
shifting
preferred
candidate
ﬁrst
iterations
greedy-approval-cc
would
choose
candidates
next
iterations
would
choose
candidate
ﬁnally
would
choose
however
set
shift
one
position
one
vote
instead
selecting
greedy-approval-cc
choose
appropriate
round
call
set
selected
element
selected
set
contains
greedy-approval-
select
instead
appropriate
round
end
select
sets
cover
elements
universe
greedy-approval-cc
choose
instead
intuitively
candidates
correspond
sets
included
set
cover
solution
candidates
correspond
sets
used
solution
candidates
correspond
elements
covered
candidates
correspond
covered
ones
specifying
voters
specify
preference
order
voter
purposes
sufﬁces
provide
set
important
candidates
voter
approves
i.e.
ranks
top
positions
indicate
one
candidates
ranked
t-th
position
right
push
candidate
approved
area
enter
him-
remaining
top
positions
ﬁlled
dummy
voters
ranked
1-st
position
put
last
position
preference
order
impossible
shift
approved
position
within
budget
candidates
mentioned
far
ranked
arbitrary
order
top
positions
top
positions
1-st
one
voters
set
voters
contains
|s|
many
s-voters
|s|
many
s-u
-voters
many
-voters
set
one
s-voter
approves
dummy
candidates
single
unit
shift
preferred
candidate
push
approved
area
take
place
set
element
one
s-u-voter
approves
provided
dummy
candidates
element
one
u-voter
approves
auxiliary
voters
allow
appropriately
set
number
approvals
candidate
|s|5
voters
approve
dummy
candidates
additional
voters
approve
dummy
candidates
|s|4
voters
approve
dummy
candidates
additional
voters
approve
dummy
candidates
|s|2
voters
approve
dummy
candidates
additional
voters
approve
dummy
candidates
convention
set
voters
rank
last
position
thus
expensive
bribe
shift
approved
position
construction
computed
polynomial
time
parameter
number
unit
shifts
upper-bounded
budget
identical
set
cover
size
prove
correctness
reduction
let
brieﬂy
discuss
properties
election
prior
shifting
scores
ties
unbribed
election
first
consider
scores
candidates
ﬁrst
round
voting
rule
listed
set
candidate
candidate
|s|5
approvals
element
candidate
candidate
|s|4
approvals
candidate
|s|2
approvals
candidate
|s|2
approvals
set
tie-breaking
order
greedy-approval-cc
candidate
preferred
candidate
candidate
preferred
candidate
one
verify
unbribed
election
candidates
join
committee
follow-
ing
order
ﬁnally
see
note
pair
candidates
approved
almost
sets
voters
soon
one
joins
committee
loses
nearly
approvals
chance
joining
committee
furthermore
candidates
corresponding
sets
higher
numbers
approvals
corresponding
elements
within
groups
numbers
approvals
decrease
indices
respective
sets
elements
increase
finally
tie-breaking
ensures
greedy-approval-cc
chooses
candidates
candidate
scores
following
text
often
speak
scores
candidates
given
round
always
clear
context
score
candidate
number
voters
approve
candidate
approve
candidate
already
included
committee
preceding
rounds
impact
shifting
shift
actions
affect
result
election
within
given
budget
regard
set
voters
let
sj1
sjh
can-
didates
originally
approved
bribed
set
voters
instead
approving
call
sj1
sj2
sjh
selected
sets
applying
corresponding
shift
actions
decrease
score
candidate
sjℓ
one
increase
score
one
verify
effect
greedy-approval-cc
select
sjℓ
instead
sjℓ
join
committee
respective
round
observe
sjℓ
6the
reduction
adapted
work
given
tie-breaking
one
voter
approves
sjℓ
means
score
ss∈s
decreased
least
one
ﬁrst
|s|
candidates
joined
committee
hence
sjℓ
joins
committee
instead
sjℓ
also
joins
instead
finally
observe
candidates
joined
committee
score
decreased
number
candidates
joined
committee
instead
due
-voters
correctness
show
subset
sets
whose
union
successful
set
shift
actions
cost
case
assume
set
sets
whose
union
bribing
s-voter
approve
instead
costs
successfully
makes
winner
discussion
impact
shift
actions
immediately
conclude
ﬁrst
rounds
committee
contains
candidates
score
|s|2
score
|s|2
thus
ﬁnal
round
included
committee
instead
case
assume
shift
action
cost
makes
join
committee
since
gain
points
lose
least
points
ﬁnal
round
however
important
candidates
approved
together
voters
element
candidates
decrease
score
candidates
must
join
committee
instead
candidates
discussion
impact
shift
actions
possible
union
selected
sets
inapproximability
slight
modiﬁcation
construction
obtain
ﬁxed-
parameter
inapproximability
let
considered
approximation
ratio
first
note
even
within
budget
one
afford
bribe
set
voters
voters
ranked
last
fewer
candidates
last
position
vote
t-th
one
add
sufﬁciently
many
never-approved
dummy
candidates
second
introduce
another
pair
important
candidates
let
set
voters
additionally
approve
next
introduce
|s|3
voters
approve
dummy
candidates
|s|
voters
approve
dummy
candidates
|s|
voters
approve
dummy
candidates
|s|
voters
approve
dummy
candidates
finally
set
tie-breaking
preferred
increase
committee
size
one
ﬁrst
|s|
rounds
greedy-approval-cc
procedure
proceed
original
construction
long
set
voters
bribed
candidate
join
committee
round
|s|
consequence
candidate
loses
almost
points
chance
join
committee
candidate
loses
additional
approvals
introduced
|s|
new
voters
approve
last
round
proceeds
original
construction
however
one
bribes
set
voters
candidate
join
committee
round
|s|+
keeps
additionally
introduced
approvals
chance
join
committee
last
round
follows
even
budget
one
make
become
member
winning
committee
one
selects
subset
sets
whose
union
greedy-borda-cc
case
greedy-borda-cc
also
give
reduction
set
cover
problem
basic
idea
construction
similar
proof
greedy-
approval-cc
however
implement
idea
also
use
concepts
proof
theorem
use
notational
conventions
proof
theorem
use
bar
candidate
way
given
instance
set
cover
denoting
given
sets
universe
construct
greedy-borda-cc
shift
bribery
instance
follows
form
following
set
candidates
introduce
preferred
candidate
opponent
bar
candidate
set
introduce
two
candidates
element
introduce
candidates
introduce
sufﬁciently
many
dummy
candidates
let
sufﬁciently
large
numbers
much
larger
much
larger
much
larger
specify
values
later
introduce
following
voters
set
introduce
two
set-score
voters
preference
orders
set
introduce
two
set-selection
voters
preference
orders
element
introduce
two
element-score
voters
preference
orders
introduce
veriﬁcation
voter
element
set
introduce
covering
voter
preference
order
candidate
introduce
exactly
many
ﬁller
voters
preference
orders
form
relative
candidates
receive
score
veriﬁcation
covering
ﬁller
voters
taken
together
introduce
two
p/p′-score
voters
preference
orders
let
number
voters
introduced
far
clearly
polynomially
upper-bounded
size
input
instance
introduce
pairs
voters
preference
orders
←−−−−
refer
voters
bar-score
voters
set
committee
size
set
budget
use
unit
price
functions
internal
tie-breaking
precedes
pre-
cedes
precedes
correctness
proof
analogous
greedy-approval-cc
see
let
ana-
lyze
greedy-borda-cc
proceeds
just-constructed
election
proof
theorem
clear
ﬁrst
iteration
picks
due
values
next
iterations
greedy-borda-cc
either
adds
committee
adds
committee
shift
action
cost
h—by
shifting
forward
votes
set-selection
voters—we
select
candidates
introduced
committee
indeed
need
introduce
increase
score—in
ﬁnal
iteration—by
next
iterations
greedy-borda-cc
picks
either
one
verify
picks
exactly
candidates
preceding
iterations
picked
least
one
candidate
due
covering
voters
ﬁnal
iteration
greedy-borda-cc
either
picks
picks
former
one
exactly
managed
pick
candidates
sj1
sjh
candidates
since
loses
points
veriﬁcation
voters
score
score
gets
points
set
selection
voters
tie-breaking
prefers
happens
applied
shift
action
ensured
selection
candidates
correspond
set
cover
ss∈s
easy
see
values
complete
proof
greedy-borda-cc
case
need
pick
values
sufﬁce
proves
-hardness
shift-bribery
greedy-borda-cc
see
inapproxima-
bility
result
one
use
extension
construction
works
analogously
extension
proof
greedy-approval-cc
conclusion
studied
complexity
shift
bribery
two
families
multiwinner
rules
one
repre-
sented
sntv
bloc
k-borda
rules
pick
best
candidates
according
appropriate
single-winner
scoring
rules
another
chamberlin-courant
rules
approximate
vari-
ants
focus
providing
good
representatives
shown
low
complexity
sntv
bloc
like
single-winner
rules
based
shown
shift
bribery
signiﬁcantly
harder
solve
k-borda
single-winner
variant
borda
situation
even
dramatic
chamberlin-courant
family
rules
addition
-hardness
results
also
obtain
inapproximability
results
focused
case
want
ensure
candidate
membership
winning
committee
would
also
natural
require
membership
winning
committees
fact
results
hold
model
well
via
simple
tweaks
particular
results
greedy-
borda-cc
greedy-approval-cc
ptas-cc
already
setting
rules
al-
ways
produce
single
committee
putting
even
demanding
bribery
goal
involving
one
candidate
become
part
winning
committee
left
future
studies
areas
future
research
also
include
studying
bribery
problems
multiwinner
settings
partial
preference
orders
studying
mul-
tiwinner
rules
based
condorcet
criterion
hardness
winner
determination
rules
see
works
sekar
aziz
furthermore
fpt
algorithms
respect
parameter
number
candidates
rely
integer
linear
programming
formulations
seems
challenging
replace
algorithms
direct
combinatorial
algorithms
give
better
understanding
problems
potentially
better
running
times
reﬂects
gen-
eral
challenge
context
parameterized
algorithms
computation
social
choice
key
question
acknowledgments
authors
supported
part
dfg
project
paws
369/10
ncn
project
dec-2012/06/m/st1/00358
nimrod
talmon
berlin
supported
dfg
research
training
group
methods
discrete
structures
grk
1408
piotr
faliszewski
vis-
berlin
supported
cost
action
ic1205
friedrich
wilhelm
bessel
research
award
alexander-von-humboldt
foundation
bonn
germany
references
aziz
brill
conitzer
elkind
freeman
walsh
justiﬁed
representation
approval-based
committee
voting
proceedings
29th
aaai
conference
artiﬁcial
intelli-
gence
aaai
pages
784–790
aaai
press
2015
aziz
gaspers
gudmundsson
mackenzie
mattei
walsh
computational
aspects
multi-winner
approval
voting
proceedings
14th
international
conference
autonomous
agents
multiagent
systems
aamas
pages
107–115
acm
2015
aziz
elkind
faliszewski
lackner
skowron
condorcet
principle
multi-
winner
elections
shortlisting
proportionality
proceedings
26th
international
joint
conference
artiﬁcial
intelligence
ijcai
pages
84–90
2017
baumeister
faliszewski
lang
rothe
campaigns
lazy
voters
truncated
ballots
proceedings
11th
international
conference
autonomous
agents
multiagent
systems
aamas
pages
577–584
ifaamas
2012
betzler
slinko
uhlmann
computation
fully
proportional
representation
journal
artiﬁcial
intelligence
research
47:475–519
2013
brams
kilgour
satsifaction
approval
voting
fara
leech
salles
editors
voting
power
procedures
essays
honour
dan
felsenthal
mosh´e
machover
pages
323–
346.
springer
2014
bredereck
chen
faliszewski
guo
niedermeier
woeginger
parameterized
algo-
rithmics
computational
social
choice
nine
research
challenges
tsinghua
science
technology
:358–373
2014
bredereck
chen
faliszewski
nichterlein
niedermeier
prices
matter
pa-
proceedings
28th
aaai
conference
artiﬁcial
rameterized
complexity
shift
bribery
intelligence
aaai
pages
1398–1404
aaai
press
2014
bredereck
faliszewski
niedermeier
skowron
talmon
elections
candi-
dates
prices
weights
covering
problems
proceedings
4th
international
conference
algorithmic
decision
theory
adt
volume
9346
lncs
pages
414–431
2015
bredereck
chen
nichterlein
faliszewski
niedermeier
prices
matter
param-
eterized
complexity
shift
bribery
information
computation
251:140–164
2016
bredereck
faliszewski
niedermeier
talmon
large-scale
election
campaigns
combi-
natorial
shift
bribery
journal
artiﬁcial
intelligence
research
55:603–652
2016
bredereck
faliszewski
niedermeier
talmon
complexity
shift
bribery
committee
proceedings
30th
aaai
conference
artiﬁcial
intelligence
aaai
pages
elections
2452–2458
2016
bredereck
faliszewski
kaczmarczyk
niedermeier
skowron
talmon
robustness
among
multiwinner
voting
rules
proceedings
10th
international
symposium
algorithmic
game
theory
sagt
volume
10504
lncs
pages
80–92
springer
2017
caragiannis
kaklamanis
karanikolas
procaccia
socially
desirable
approximations
dodgson
voting
rule
acm
transactions
algorithms
article
2014
cary
estimating
margin
victory
instant-runoff
voting
presented
2011
electronic
voting
technology
workshop/workshop
trustworthy
elections
2011
chamberlin
courant
representative
deliberations
representative
decisions
proportional
representation
borda
rule
american
political
science
review
:718–733
1983
cygan
fomin
kowalik
lokshtanov
marx
pilipczuk
pilipczuk
saurabh
parameterized
algorithms
springer
2015
dorn
schlotter
multivariate
complexity
analysis
swap
bribery
algorithmica
:126–
151
2012
downey
fellows
fundamentals
parameterized
complexity
springer
2013
elkind
faliszewski
approximation
algorithms
campaign
management
proceedings
6th
international
workshop
internet
network
economics
wine
volume
6484
lncs
pages
473–482
springer
2010
elkind
faliszewski
slinko
swap
bribery
proceedings
2nd
international
sym-
posium
algorithmic
game
theory
sagt
volume
5814
lncs
pages
299–310
springer
2009
elkind
faliszewski
skowron
slinko
properties
multiwinner
voting
rules
proceed-
ings
13th
international
conference
autonomous
agents
multiagent
systems
aamas
pages
53–60
ifaamas
may
2014
elkind
faliszewski
skowron
slinko
properties
multiwinner
voting
rules
social
choice
welfare
:599–632
2017
faliszewski
rothe
control
bribery
voting
brandt
conitzer
endriss
lang
procaccia
editors
handbook
computational
social
choice
chapter
cambridge
university
press
2015
faliszewski
hemaspaandra
hemaspaandra
hard
bribery
elections
journal
artiﬁcial
intelligence
research
35:485–532
2009
faliszewski
reisch
rothe
schend
complexity
manipulation
bribery
campaign
management
bucklin
fallback
voting
autonomous
agents
multi-agent
systems
1091–1124
2015
faliszewski
skowron
slinko
talmon
multiwinner
voting
new
challenge
social
choice
theory
endriss
editor
trends
computational
social
choice
access
foundation
2017
faliszewski
skowron
talmon
bribery
measure
candidate
success
complexity
results
approval-based
multiwinner
rules
proceedings
16th
international
conference
autonomous
agents
multiagent
systems
aamas
pages
6–14
2017
flum
grohe
parameterized
complexity
theory
springer
2006
fredman
tarjan
fibonacci
heaps
uses
improved
network
optimization
algorithms
journal
acm
:596–615
1987
hemmecke
onn
romanchuk
n-fold
integer
programming
cubic
time
mathematical
programming
137
1-2
:325–341
2013
kaczmarczyk
faliszewski
algorithms
destructive
shift
bribery
proceedings
15th
international
conference
autonomous
agents
multiagent
systems
aamas
pages
305–313
ifaamas
2016
kannan
minkowski
convex
body
theorem
integer
programming
mathematics
operations
research
:415–440
1987
knop
kouteck´y
mnich
voting
bribing
single-exponential
time
proceedings
34th
international
symposium
theoretical
aspects
computer
science
stacs
volume
lipics
pages
46:1–46:14.
schloss
dagstuhl–leibniz-zentrum
fuer
informatik
2017
lackner
skowron
consistent
approval-based
multi-winner
rules
proceedings
19th
acm
conference
electronic
commerce
pages
47–48
2018
lenstra
integer
programming
ﬁxed
number
variables
mathematics
operations
research
:538–548
1983
boutilier
budgeted
social
choice
consensus
personalized
decision
making
proceedings
22nd
international
joint
conference
artiﬁcial
intelligence
ijcai
pages
280–286
aaai
press
2011
magrino
rivest
shen
wagner
computing
margin
victory
irv
elections
presented
2011
electronic
voting
technology
workshop/workshop
trustworthy
elections
2011
mathieson
szeider
editing
graphs
satisfy
degree
constraints
parameterized
approach
journal
computer
system
sciences
:179–191
2012
mattei
goldsmith
klapper
complexity
bribery
manipulation
tournaments
proceedings
25th
international
florida
artiﬁcial
intelligence
uncertain
information
research
society
conference
flairs
pages
549–554
aaai
press
2012
mattei
pini
rossi
venable
bribery
voting
combinatorial
domains
easy
proceedings
11th
international
conference
autonomous
agents
multiagent
systems
aamas
pages
1407–1408
ifaamas
2012
maushagen
neveling
rothe
selker
complexity
shift
bribery
iterative
elections
proceedings
17th
international
conference
autonomous
agents
multiagent
systems
aamas
pages
1567–1575
2018
meir
procaccia
rosenschein
zohar
complexity
strategic
behavior
multi-
winner
elections
journal
artiﬁcial
intelligence
research
33:149–178
2008
monroe
fully
proportional
representation
american
political
science
review
:925–940
1995
niedermeier
invitation
fixed-parameter
algorithms
oxford
university
press
2006
procaccia
rosenschein
zohar
complexity
achieving
proportional
representation
social
choice
welfare
:353–362
2008
schlotter
faliszewski
elkind
campaign
management
approval-driven
voting
rules
algorithmica
:84–115
2017
sekar
sikdar
xia
condorcet
consistent
bundling
social
choice
proceedings
16th
international
conference
autonomous
agents
multiagent
systems
aamas
pages
33–41
ifaamas
2017
skowron
faliszewski
slinko
achieving
fully
proportional
representation
approximability
results
artiﬁcial
intelligence
222:67–103
2015
skowron
faliszewski
lang
finding
collective
set
items
proportional
multirep-
resentation
group
recommendation
artiﬁcial
intelligence
241:191–216
2016
xia
computing
margin
victory
various
voting
rules
proceedings
13th
acm
conference
electronic
commerce
pages
982–999
acm
press
2012
