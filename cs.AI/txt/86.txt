knowledge
representation
meta-model
rule-based
modelling
signalling
networks
adrien
basso-blandin
lip
ens
lyon
lyon
france
walter
fontana
harvard
medical
school
boston
usa
russ
harmer
cnrs
lip
ens
lyon
lyon
france
adrien.basso-blandin
ens-lyon.fr
walter
hms.harvard.edu
russell.harmer
ens-lyon.fr
study
cellular
signalling
pathways
deregulation
disease
states
cancer
large
extremely
complex
task
indeed
systems
involve
many
parts
processes
studied
piecewise
literatures
data
consequently
fragmented
distributed
sometimes—at
least
apparently—inconsistent
makes
extremely
difﬁcult
build
signiﬁcant
explanatory
models
result
effects
systems
brought
many
interacting
factors
poorly
understood
rule-based
approach
modelling
shown
promise
representation
highly
combinatorial
systems
typically
found
signalling
many
proteins
composed
multiple
binding
domains
capable
simultaneous
interactions
and/or
peptide
motifs
controlled
post-translational
modiﬁcations
however
rule-based
approach
requires
highly
detailed
in-
formation
precise
conditions
every
interaction
rarely
available
one
single
source
rather
conditions
must
painstakingly
inferred
curated
hand
information
contained
many
papers—each
contains
part
story
paper
introduce
graph-based
meta-model
attuned
representation
cellular
signalling
networks
aims
ease
massive
cognitive
burden
rule-based
curation
process
meta-model
generalization
used
kappa
bngl
allows
ﬂexible
representation
knowledge
various
levels
granularity
particular
allows
deal
information
either
little
much
detail
respect
strict
rule-based
meta-model
approach
provides
basis
gradual
aggregation
fragmented
biological
knowledge
extracted
literature
instance
meta-model
deﬁne
automated
translation
executable
kappa
programs
introduction
propose
knowledge
representation
meta-model
enable
study
dynamics
cellular
signalling
networks
particular
consequences
mutations
dynamics
aim
therefore
construct
description
logic-based
terminology
ontology
general
kind
static
concepts
perform
inference
kind
erk
enzyme
phosphorylates
kinase
build
representation
dynamics
support
inference
time-evolution
systems
rather
seek
represent
individual
protein-protein
interaction
ppi
constitutes
signalling
network
formal
rule
expresses
known
empirically
necessary
conditions
ppi
occur
rules
resemble
kappa
bngl
need
respect
stringent
meta-model
imposed
formalisms
wherein
bonds
must
occur
explicitly
speciﬁed
sites
relevant
factors—such
protein
conformation
post-translational
modiﬁcations
ptms
generally
presence
absence
key
residues—are
opaquely
encoded
monolithic
states
attached
sites
rules
automatically
assembled
bona
ﬁde
rule-based
kappa
models
simulated
subjected
static
analysis
whose
causal
structure
examined
detail
c.a
mu˜noz
p´erez
eds
developments
computational
models
eptcs
204
2016
47–59
doi:10.4204/eptcs.204.5
meta-model
rule-based
modelling
need
two-phase
approach
rule-based
modelling
signalling
networks
arises
pertinent
information
dispersed
across
literature
way
given
paper
typically
contains
fragments
nuggets
partial
mechanistic
knowledge
multiple
ppis
nuggets
appear
given
ppi
many
papers
basic
currency
ﬁrst
phase
i.e
curation
process
must
nuggets
corresponding
rules
generalized
meta-model
opposed
rules
strict
rule-based
meta-model
curation
process
focusses
directly
ppis
themselves—as
would
necessarily
direct
curation
rules—but
rather
extracting
nuggets
identifying
ppis
refer
incrementally
aggregating
detailed
nuggets
enables
model-agnostic
curation
process
avoids
hard-wiring
invariants
might
true
one
context
model
another
e.g
one
particular
model
two
physically-overlapping
binding
sites
protein
could
represented
single
formal
site
open
world
evolving
curated
knowledge
must
kept
formally
separate
may
need
distinguishable
model
typically
third
physical
binding
site
later
discovered
overlaps
one
second
instantiation
phase
model
building
process
concerns
passage
curated
knowledge
purely
formal
representation
step
produce—from
given
state
knowledge—
strict
rule-based
model
invariants
may
hard-wired
warranted
knowledge
phase
begins
speciﬁcation
proteins
represented
determines
nuggets
apply
proteins
site
conﬂict
invariants
implied
knowledge
question
ﬁrst
point
important
notion
agent
represents
single
gene
product
neighbourhood
sequence
space
design
decision
central
approach
enables
represent
interactions
depend
certain
key
residues
way
effects
loss-
gain-of-function
mutations
automatically
determined
inspecting
whether
particular
protein
appropriate
key
residues
resolves
dangling
question
earlier
work
meta
kappa
5,10
able
capture
effects
loss-
gain-
of-function
mu-
tations
second
point
critical
order
formal
representation
match
physical
constraints
present
curated
knowledge
necessarily
left
open
kr—as
discussed
instructive
compare
approach
embodied
production
rule-based
expert
systems
mycin
descendants
saw
gradual
drift
away
considering
rule
independent
element
towards
view
designed
maintained
coherent
whole
viewpoint
may
entirely
appropriate
domain
human
experts
reasonably
expected
agree
points
domain
characterized
large
dispersed
fragmented
body
knowledge
single
human
expert
hope
master
expert
opinion
reasonably
expected
converge
towards
consensus
advocate
approach
seek
reproduce
augment
human
expert
consensus
rather
positions
tool
discovery
starting
purely
objective
nuggets
knowledge
enables
aids
human
expert
investigate—and
hopefully
resolve—areas
apparent
real
incoherence
comparing
dynamic
consequences
various
collections
independently-conceived
rules
particular
system
seek
ﬁgure
correct
necessary
conditions
nugget
even
less
seeks
impose
pre-conceived
structure
kappa
model
implied
contents
speciﬁcation
system
indeed
basic
philosophy
approach
summarized
taking
input
partial
empirical
knowledge
system
producing
output
various
consequences
knowledge
e.g
necessary
conditions
ppis
causal
structure
pathways
system
contains
sense
computer
science
perspective
workﬂow
may
seem
backward
partial
knowledge
behaviour
system
seek
determine
speciﬁcation
approach
thus
intrinsically
oriented
towards
systems
synthetic
biology
shares
precisely
aim
basso-blandin
overview
paper
section
describe
graphical
formalism
deﬁne
meta-model
formalize
notions
nuggets
aggregation
section
illustrate
ideas
simple
examples
section
describe
instantiation
process
taking
given
state
knowledge
chosen
collection
proteins
formal
rule-based
kappa
model
conclude
section
remarks
prototype
implementation
directions
future
work
graphical
formalism
section
ﬁrst
introduce
notion
simple
graph
second
independent
simple
graph
structure
nodes
provides
ﬂexible
general
starting
point
previous
works
site
graphs
rule-based
modelling
permitted
kinds
nodes
edges
hard-wired
introduce
particular
graph—our
meta-model—which
use
type
graphs
reintroduce
previously
hard-wired
constraints
transparent
fashion
2.1
structured
graphs
structured
graph
deﬁned
ﬁnite
set
nodes
two
simple
directed
graph
structures
i.e
binary
relations
function
assigning
node
possibly
empty
set
possible
values
graph
structure
allows
formalize
notion
node
may
belong
another
e.g
node
representing
region
protein
belongs
node
representing
protein
question
graph
structure
represents
links
nodes
indeed
deﬁnition
much
common
essential
intuition
underlying
bi-graphs
although
purposes
structuring
relation
reﬂects
hierarchical
organization
nodes
rather
space
move
node
non-empty
represents
ﬁxed
variable
attribute
whose
possible
values
elements
e.g
particular
amino
acid
certain
point
protein
sequence
presence
absence
post-translational
modiﬁcation
like
phosphorylation
various
notions
site
graph
line
work
deﬁnition
rule-based
modelling
language
kappa
terms
graph
rewriting
correspond
constrained
variants
general
deﬁnition
principal
present
novelty
avoid
hard-wiring
various
kinds
nodes
exist—agents
sites
—and
hierarchical
structure
instead
proposes
homogeneous
space
nodes
structure
capture
arbitrary
relationships
nodes
particular
choice
meta-model
made
section
2.3
assigns
dag
structure
indeed
correspond
generalized
notion
hierarchical
organization
2.2
homomorphisms
homomorphism
cid:48
structured
graphs
function
cid:48
-edges
-edges
preserved
values
preserved
i.e
cid:48
structured
graphs
homomorphisms
form
category
sgrph
homomorphism
mono
underlying
node
function
injective
category
sgrph
pull-backs
push-outs
pull-back
complements
monos
possesses
structure
required
support
general
sesqui-push-out
rewriting
sub-category
monos
multi-sums
states
meta-model
rule-based
modelling
given
category
object
slice
category
objects
arrows
arrows
cid:48
cid:48
arrows
cid:48
cid:48
given
structured
graph
sgrph/t
thought
category
structured
graphs
typed
standard
categorical
reasoning
establishes
slice
category
construction
preserves
categorical
structure
importantly
hierarchical
structure
edges
constrain
objects
sgrph/t
choice
base
object
reintroduces
ﬂexible
manner
kinds
conditions
constraints
hard-wired
previously
proposed
deﬁnitions
site
graphs
next
section
make
choice
knowledge
representation
deﬁning
speciﬁc
graph
types
slice
category
sense
possible
models
wish
consider
i.e
meta-model
section
2.4
introduce
nuggets
particular
class
structured
graphs
exist
sgrph/m
however
general
procedure
deﬁning
desired
class
graphs
choice
base
object
could
applied
many
situations
provides
unifying
framework
discussing
broad
class
related
distinct
graphical
formalisms
including
sorting
disciplines
2.3
meta-model
deﬁne
concrete
structured
graph
serves
meta-model
speciﬁes
various
kinds
nodes
exist
values—if
any—they
take
deﬁnes
hierarchical
structure
dotted
arrows
nodes
ﬁnally
speciﬁes
ways
edges
placed
solid
arrows
names
nodes
agent
bnd
part
formalism
convenient
labelling
purposes
discussion
nodes
jagged
outlines
non-empty
set
possible
values
i.e
attributes
flag
bnd
assigned
set
0,1
booleans
loc
identiﬁes
position
residue
sequence
assigned
set
positive
integers
identiﬁes
amino
acids
assigned
standard
20-element
set
one-letter
amino
acid
codes
i.e
letters
except
int
speciﬁes
sequence
interval
uses
set
pairs
cid:96
positive
integers
specify
sets
form
z+|
cid:96
empty
cid:96
bnd
brk
mod
specify
rate
constants
actions
assigned
set
positive
reals
important
note
mod
actions
target
ﬂags
reﬂects
fact
ﬂags
represent
pieces
state
modiﬁed
within
system
reiﬁed
eventual
kappa
model
attributes
system
although
may
play
rˆole
instantiation
process
leading
kappa
model
either
appear
model
alternatively
appear
way
tested
never
modiﬁed
agentregreslocbndmodtssaaflagis_bndbnd_rcbrk_rcmod_rcint
basso-blandin
typing
formally
designates
nodes
either
agent
reg
ion
res
idue
one
ﬁxed
attributes
loc
ﬂag
binding
action
bnd
modiﬁcation
action
mod
ource
bnd
mod
arget
mod
mapping
implies
graph
structure
must
respect
restrictions
imposed
i.e
regions
residues
belong
agents
nothing
belongs
attributes
ﬂags
sources
targets
belong
respective
actions
moreover
dag
must
also
dag
typed
finally
edge
structure
must
also
respect
restrictions
imposed
means
agents
regions
engage
binding
actions
ﬂags
targeted
modiﬁcation
actions
meta-model
provides
foundation
rigorous
ontology
kinds
information
pertinent
rule-based
descriptions
signalling
networks
i.e
proteins
agents
domains
binding
sites
regions
key
amino
acid
locations
key
residues
however
present
framework
remains
purely
formal
means
enforce
correct
semantic
usage
ontology
plan
augment
framework
system
appropriate
annotations
order
able
carry
semantic
checking
reasoning
return
point
later
2.4
nuggets
let
motivate
particular
choice
meta-model
made
previous
section
considering
typical
nugget
knowledge
molecular
biology
egfr
binds
sh2
domain
grb2
provided
egfr
phosphorylated
residue
grb2
serine
would
naturally
represented
following
structured
graph
dotted
arrows
represented
implicitly
nesting
agent
egfr
state
phos
value
meaning
true
agent
grb2
region
sh2
residue
unimportant
name
located
position
sequence
required
serine
value
note
region
speciﬁed
egfr
meta-model
explicitly
allows
fact
bnd
action
either
agent
region
source
formally
speaking
nugget
connected
graph
typed
way
node
one
copy
possible
attributes
attributes
ﬂags
uniquely
speciﬁed
value
relation
transitive-closed
exactly
one
action
node
speciﬁed
value
bnd
ﬂag
unique
action
principal
action
nugget
necessarily
bnd
actions
represent
required
presence
absence
corresponding
bonds
order
principal
action
possible
ask
bnd
exactly
two
sources
mod
one
source
one
target
least
one
two
asking
connected
constraints
motivated
domain-speciﬁc
considerations
due
course
handled
via
semantic
checking
bndegfrgrb2sh2phos:1aa
sloc:90
meta-model
rule-based
modelling
representation
language
thus
generalization
typically
used
rule-based
modelling
principal
differences
action
rule
represented
explicitly
node
graph
binding
actions
act
directly
agents
rather
necessarily
via
sites/regions
iii
static
at-
tributes
dynamic
ﬂags
represented
values
associated
persistent
nodes
rather
mutually
exclusive
sets
nodes
draw
distinction
ﬂags
attributes
order
make
explicit
difference
things
modiﬁed
system
e.g
phosphorylation
status
residue
things
either
modiﬁed
system
e.g
identity
amino
acid
modiﬁed
external
mutation
event
pure
meta-data
e.g
uniprot
ids
latter
points
iii
important
order
able
represent
biological
knowledge
faithfully
possible
knowledge
often
stated
piecemeal
incomplete
fashion
prevent
able
formalize
example
site
one
end
bond
unknown
represented
need—as
would
standard
rule-
based
modelling—to
create
ﬁctitious
site
second
example
could
use
attributes
provide
transparent
representation
detailed
structural
information
e.g
key
residues
protein
cases
binding
interaction
depends
multiple
ptms
otherwise
opaquely
encoded
return
point
section
2.6
introduce
notion
nugget
aggregation
depends
critically
explicit
representation
actions
nodes
2.5
models
site
graph
pre-model
collection
nuggets
iff
arrow
factors
words
graph
typed
meta-model
types
nuggets
indeed
thought
summary
statement
collection
nuggets
refer
pair
model
note
given
collection
nuggets
may
assigned
many
different
pre-models
choice
affects
nuggets
interpreted
import
particular
choice
identiﬁes
nodes
one
nugget
correspond
another
example
node
labelled
egfr
label
exist
formalism
second
nugget
also
speaks
agent
egfr
need
way
say
two
nodes
pre-model
gives
precisely
possibility
two
agents
mapped
node
i.e
nodes
provide
labels/names
nodes
nuggets
means
two
different
pre-models
collection
nuggets
completely
different
meanings
particular
provide
two
uninteresting
extremes
interesting
cases
lying
general
two
components
model
evolve
together
add
information
discuss
brieﬂy
section
2.6.
let
note
necessity
pre-model
partially
arises
order
enforce
minimal
seman-
tic
coherence
formal
framework
semantic
annotations
uniquely
identify
agents
could
potentially
use
them—instead
pre-model—to
solve
cross-nugget
identiﬁcation
problem
however
chosen
take
different
approach
provide
ﬂexible
notion
agent
general
site
graph—and
particular
pre-model—the
attribute
residue
may
assigned
set
one-letter
codes
order
express
fact
agent
represents
general
neigh-
bourhood
sequence
space
rather
unique
sequence
ﬂexibility
affords
possibility
organizing
knowledge
minor
variants
protein
using
single
agent
rather
prosaically
pre-empts
need
deﬁne
name
lots
tedious
variants
point
matches
everyday
practice
biology
example
wild-type
rasw
mutant
rasg12v
thought
ras
—they
differ
one
two
small
although
possibly
signiﬁcant
ways
basso-blandin
notion
model
therefore
ﬁrst
step
towards
full
semantic
layer
knowledge
repre-
sentation
scheme
semantic
annotations
made
level
pre-models
individual
nuggets
minimize
amount
needed
annotation
importantly
ease
maintenance
semantic
coherence
across
entire
current
collection
nuggets
noted
approach
grounding
differs
traditional
approaches
used
biopax
insist
upon
formal
entity
corresponding
unique
physical
entity
indeed
approach
design
particularly
attuned
representation
signalling
networks
less
constrained
biopax
framework
far
broader
applicability
bear
far
stronger
semantic
burden
2.6
aggregation
suppose
point
time
model
obtain
new
nugget
cid:48
always
possibility
simply
add
cid:48
yielding
new
collection
cid:48
nuggets
might
necessitate
updating
underlying
pre-model
cid:48
event
cid:48
contains
entirely
novel
nodes
edges
pre-model
update
speciﬁed
co-span
glueing
cid:48
cid:48
multi-sum
cid:48
speciﬁes
exactly
nodes
edges
cid:48
already
existed
added
cid:48
important
note
identiﬁcation
nodes
cid:48
already
existed
includes
action
nodes
means
co-span
may
identify
action
cid:48
pre-
existing
alternatively
action
cid:48
may
newly
added
might
result
cid:48
cid:48
two
distinct
actions
involving
agents
situation
may
may
desirable
sometimes
example
two
proteins
indeed
bind
two
distinct
ways
however
could
also
case
cid:48
actually
brought
new
information
single
binding
interaction
would
rather
use
update
pre-existing
nugget
update
amounts
assumption
nuggets
cid:48
represent
interaction
mechanism
necessarily
mean
two
nuggets
refer
exactly
agents
since
mechanisms
shared
across
families
proteins
return
point
section
describing
formal
process
aggregation
wish
update
nugget
information
contained
cid:48
need
specify
two
things
new
information
brought
cid:48
deprecated
information
removed
former
speciﬁed
choice
co-span
monos
cid:48
cid:48
multi-sum
cid:48
latter
speciﬁed
mono
cid:48
part
wish
preserve
cases
canonical
choice
co-span
given
intuitive
uni-
ﬁcation
cid:48
cases
non-trivial
automorphisms
cid:48
uniﬁcation
process
may
non-deterministic
choice
becomes
necessary
pull-back
complement
deﬁnes
graph
containing
precisely
new
information
cid:48
deprecated
information
removed
formally
exactly
step
graph
rewriting
taking
event
nothing
removed
i.e
identity
rewriting
step
degenerates
simply
reﬁnement
speciﬁed
cid:48
cid:48
step
rewriting
also
propagated
pre-model
resulting
new
model
cid:48
cid:48
unlike
case
adding
cid:48
cid:48
clearly
number
nuggets
meta-model
rule-based
modelling
examples
aggregation
nugget
update
consider
updating
example
nugget
section
2.4
information
contained
cid:48
i.e
egfr
binds
grb2
provided
egfr
phosphorylated
y1092
choose
deprecate
anything
original
nugget
obtain
instead
specify
phos
ﬂag
removed
would
obtain
also
possibility
specifying
phos
ﬂag
egfr
moved
residue
location
1092
slightly
different
rewrite
would
result
revised
nugget
immediately
would
additionally
maintain
pre-model
mod
actions
already
known
act
upon
ﬂag
rewrite
reﬂects
common
model
update
situation
arises
ﬁner-grained
empirical
data
allows
precise
assignment
pieces
state
protein
constituent
parts
possibility
immediate
consequence
built-in
ﬂexibility
provided
dag
structure
meta-model
also
depends
transitive-closure
respect
dag
required
nuggets
phos:1bndegfrgrb2aa
yloc:1092loc:1092phos:1bndegfrgrb2aa
ysh2aa
sloc:90phos:1loc:1092phos:1bndegfrgrb2aa
ysh2aa
sloc:90
basso-blandin
nugget
aggregation
uniﬁcation
also
partial
update
previous
nugget
i.e
tyrosine-phosphorylated
shc
binds
sh2
domain
grb2
unifying
grb2
bnd
nodes
obtain
note
contextual
conditions
grb2
occur
original
nugget
propagated
process
aggregation
newly
added
interaction
shc
typical
example
use
framework
tool
discovery—at
level
necessary
conditions
ppis—which
renders
completely
transparent
similarity
style
reasoning
ubiquitous
molecular
biology
note
also
fusing
two
bnd
nodes
force
egfr
shc
target
source
unique
bnd
node
nugget
disjunctive
interpretation
giving
rise
two
distinct
kappa
rules
read
modulo
contextual
conditions
egfr
shc
binds
sh2
domain
grb2
importance
translation
kappa
agents
assigned
one
site
bnd
action
participate
uniﬁed
grb2
nodes
leaving
two
bnd
nodes
distinct
grb2
would
given
two
sites
one
bind
egfr
shc
conﬂict
two
generated
kappa
rules
however
merging
bnd
nodes
would
receive
one
site
giving
rise
intrinsic
conﬂict
two
generated
rules
let
consider
instantiation
process
detail
phos:1bndshcgrb2aa
ysh2bndbndgrb2sh2egfrphos:1shcphos:1aa
yaa
yloc:1092aa
sloc:90
meta-model
rule-based
modelling
model
instantiation
section
illustrate
formal
sites
reiﬁed
starting
running
example
leading
strict
rule-based
model
reﬂects
exactly
constraints
warranted
knowledge
reﬂects
general
philosophy
absence
information
contrary
always
draw
general
conclusions
possible
two
bnd
actions
considered
independent
unless
evidence
contrary
way
achieve
pragmatically
cognitively
convenient
separation
concerns
whereby
knowledge
integrated
aggregated
learn
eventual
consequences
future
kappa
model
determined
model
generation
time
fully
automatic
instantiation
procedure
produces
executable
kappa
model
4.1
agent
variants
consider
following
pre-model
types
various
example
nuggets
previous
section
agent
grb2
choice
amino
acids
location
serine
aspartic
acid
moreover
bnd
action
grb2
egfr
shc
depends
action
occur
serine
aspartic
acid
present
residue
must
reiﬁed
formal
site
kappa
two
possible
internal
states
never
modiﬁed
rule
system
4.2
site
conﬂict
invariants
two
ways
bnd
actions
give
rise
conﬂicts
firstly
case
aggregated
nugget
is—by
hypothesis—an
intrinsic
conﬂict
disjuncts
reﬂects
fact
consider
use
mechanism
bind
partner
compete
binding
site
partner
secondly
two
bnd
actions
may
speciﬁed
sequence
intervals
deﬁning
physical
footprints
overlap
case
binding
mechanisms
differ
obvious
reason
two
binding
partners
occupy
space
time
extrinsic
conﬂict
also
known
steric
occlusion
bndbndgrb2sh2egfrphos:1shcphos:1aa
yaa
yloc:1092aa
dloc:90bnd
basso-blandin
ﬁrst
case
need
reify
single
formal
site
disjuncts
compete
second
case
two
overlapping
regions
still
general
reiﬁed
two
distinct
formal
sites
however
must
also
keep
track
fact
sites
conﬂict
note
however
conﬂict
relation
symmetric
transitive
general
necessarily
merge
two
conﬂicting
sites
one
may
also
conﬂict
third
site
hand
clique
conﬂicting
sites
conﬂated
single
formal
site
subsequent
optimization
phase
pre-model
intrinsic
conﬂict
egfr
shc
bind
grb2
however
extrinsic
conﬂict
grb2
shc
bind
egfr
absence
overlapping
interval
information
assume
two
binding
actions
independent
overall
therefore
obtain
following
strict
rule-based
model
note
binding
actions
include
formal
sites
residues
also
become
formal
sites
single
pieces
binary
generally
n-ary
state
case
grb2
residue
location
considered
state
default—but
overridden
state
represent
mutated
protein
refer
actions
graph
pre-rules
differ
standard
kappa
rules
possibility
shown
retaining
intrinsic
conﬂicts
disjunctive
rules
4.3
kappa
last
phase
automatic
instantiation
procedure
effects
ﬁnal
compilation
executable
kappa
speciﬁes
agent
signatures
multiplies
disjunctive
rules
provides
context-less
unbinding
rule
binding
action
agent
signatures
agent
egfr
bshc
bgrb2
agent
shc
begfr
bgrb2
agent
grb2
rgsh2
rs90~s~d
state
residue
rs90
speciﬁed
discussed
default
note
also
sites
bgrb2
egfr
shc
distinct
sites
name
still
belong
different
agents
bndbndgrb2egfry1092phosshcyphoss90dbnd
meta-model
rule-based
modelling
three
binding
actions
translated
kappa
rules
follows
intrinsic
conﬂict
egfr
shc
captured
competition
rgsh2
site
grb2
egfr
bgrb2
grb2
rgsh2
rs90~s
egfr
bgrb2
grb2
rgsh2
rs90~s
egfr
bgrb2
grb2
rgsh2
egfr
bgrb2
grb2
rgsh2
shc
bgrb2
grb2
rgsh2
rs90~s
shc
bgrb2
grb2
rgsh2
rs90~s
shc
bgrb2
grb2
rgsh2
shc
bgrb2
grb2
rgsh2
egfr
bshc
shc
begfr
egfr
bshc
shc
begfr
egfr
bshc
shc
begfr
egfr
bshc
shc
begfr
case
introduced
sequence
interval
overlap
two
binding
actions
concerning
egfr
would
acquire
site
conﬂict
requiring
maintain
invariant
one
bshc
bgrb2
bound
given
time
egfr
bshc
bgrb2
shc
begfr
egfr
bshc
bgrb2
shc
begfr
egfr
bshc
bgrb2
grb2
rgsh2
rs90~s
egfr
bshc
bgrb2
grb2
rgsh2
rs90~s
conclusion
presented
meta-model
representation
kind
knowledge
required
build
rule-
based
models
cellular
signalling
networks
transparently
include
mutational
variants
proteins
order
investigate
dynamic
consequences
framework
provides
generalization
usual
strict
rule-based
meta-model
particular
represents
actions
rules
explicitly
nodes
enables
key
notion
aggregation
serves
source
biologically-plausible
inference
presentation
entirely
mathematical
framed
terms
graph
rewriting
formal-
ism
considered
speciﬁcation
actual
system
currently
building
prototype
implementation
framework
including
automatic
translation
collection
nuggets
bona
ﬁde
kappa
whose
implementation
details
discussed
forthcoming
paper
instantiation
process
guarantees
concrete
agent
generated
must
unique
value
attributes
manifesting
unmodiﬁable
states
resulting
kappa
intrinsic
extrinsic
conﬂicts
sites
propagated
formal
kappa
model
ﬁrst
point
implies
rule
testing
wild-type
value
attribute
would
apply
concrete
agent
mutated
residue
conversely
rule
tests
non-wild-type
value
would
apply
concrete
agent
unless
undergone
appropriate
mutation
enables
transparent
account
loss-
gain-of-function
mutations
side-steps
various
difﬁculties
concerning
gain-of-
function
mutations
encountered
original
meta
kappa
project
5,10
second
point
relieves
modeller
keep
track
conﬂict
invariants
must
maintained
separates
distinct
concerns
open
world
closed
world
particular
model
finally
framework
presented
remains
entirely
formal
although
obviously
mind
interpretation
terms
signalling
networks
actually
embody
domain-speciﬁc
knowledge
particular
although
used
suggestive
names
nodes
examples
actual
signiﬁcance
could
arbitrarily
renamed
without
affecting
content
knowledge
representation
generated
kappa
models
plan
address
issue
introducing
semantic
annotations
nodes—as
pure
meta-data
attributes—that
would
allow
express
domain-speciﬁc
properties
region
sh2
domain
residue
must
serine
threonine
automatic
rewrites
expressing
update
and/or
aggregation
nuggets
could
determined
basso-blandin
grounding
process
opens
possibility
performing
second
level
semantic
checking
nuggets
already
veriﬁed
syntactically
well-formed
checks
could
purely
routine
e.g
binding
actions
exactly
two
participants
kinase
phosphorylate
protein
serine/threonine
kinase
phosphorylate
tyrosine
residue
however
principally
envisage
semantic
annotations
means
perform
automatic
rewriting
make
certain
default
aggrega-
tion
decisions
e.g
sh2
domain
bind
one
phospho-tyrosine
ligand
time
envisage
particular
focus
numerous
domain-domain
domain-ligand
ppis
occur
signalling
networks
nature
embody
highly
generic
binding
mechanisms
constrained
relatively
simple—but
tedious
error-prone
write
by-hand—intrinsic
conﬂict
conditions
acknowledgement
work
sponsored
defense
advanced
research
projects
agency
darpa
army
research
ofﬁce
grant
numbers
w911nf-14-1-0367
w911nf-
15-1-0544.
views
opinions
and/or
ﬁndings
contained
report
authors
interpreted
representing
ofﬁcial
views
policies
either
expressed
implied
defense
advanced
research
projects
agency
department
defense
references
bruce
buchanan
edward
shortliffe
1984
rule-based
expert
systems
mycin
experiments
stanford
heuristic
programming
project
addison-wesley
william
clancey
1993
notes
epistemology
rule-based
expert
system
artiﬁcial
intelligence
197–204
doi:10.1016/0004-3702
90186-f.
andrea
corradini
tobias
heindel
frank
hermann
barbara
k¨onig
2006
sesqui-pushout
rewriting
graph
transformations
springer
30–45
doi:10.1007/11841883
vincent
danos
j´erˆome
feret
walter
fontana
russ
harmer
jonathan
hayman
jean
krivine
chris
thompson-walsh
glynn
winskel
2012
graphs
rewriting
pathway
reconstruction
rule-based
models
fsttcs
2012-iarcs
annual
conference
foundations
software
technology
theo-
retical
computer
science
276–288
doi:10.4230/lipics.fsttcs.2012.276
vincent
danos
j´erˆome
feret
walter
fontana
russ
harmer
jean
krivine
2009
rule-based
modelling
model
perturbation
transactions
computational
systems
biology
springer
116–137
doi:10.1007/978-3-642-04186-0
vincent
danos
russ
harmer
ricardo
honorato-zimmer
2013
thermodynamic
graph-rewriting
concur
2013–concurrency
theory
springer
380–394
doi:10.1007/978-3-642-40184-8
vincent
danos
russ
harmer
glynn
winskel
2013
constraining
rule-based
dynamics
types
math-
ematical
structures
computer
science
272–289
doi:10.1017/s0960129512000114
emek
demir
2010
biopax
community
standard
pathway
data
sharing
nature
biotechnology
935–942
doi:10.1038/nbt.1666
yves
diers
1978
familles
universelles
morphismes
technical
report
universit´e
des
sciences
tech-
niques
lille
russ
harmer
2009
rule-based
modelling
tunable
resolution
electronic
proceedings
theoretical
computer
science
65–72
doi:10.4204/eptcs.9.8
william
hlavacek
james
faeder
michael
blinov
richard
posner
michael
hucka
wal-
ter
fontana
2006
rules
modeling
signal-transduction
systems
science
stke
2006
344
re6
doi:10.1126/stke.3442006re6
