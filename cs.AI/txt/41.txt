using
social
networks
aid
homeless
shelters
dynamic
inﬂuence
maximization
uncertainty
extended
version
amulya
yadav
hau
chan1
albert
jiang1
haifeng
eric
rice
milind
tambe
university
southern
california
los
angeles
90089
1trinity
university
san
antonio
78212
amulyaya
haifengx
ericr
tambe
usc.edu
hchan
xjiang
trinity.edu
abstract
paper
presents
healer
software
agent
recommends
sequential
intervention
plans
use
homeless
shelters
or-
ganize
interventions
raise
awareness
hiv
among
homeless
youth
healer
sequential
plans
built
using
knowl-
edge
social
networks
homeless
youth
choose
intervention
participants
strategically
maximize
inﬂuence
spread
rea-
soning
uncertainties
network
previous
work
presents
inﬂuence
maximizing
techniques
choose
intervention
participants
address
three
real-world
issues
completely
fail
scale
real-world
sizes
han-
dle
deviations
execution
intervention
plans
iii
constructing
real-world
social
networks
expensive
process
healer
han-
dles
issues
via
four
major
contributions
healer
casts
inﬂuence
maximization
problem
pomdp
solves
us-
ing
novel
planner
scales
previously
unsolvable
real-
world
sizes
healer
allows
shelter
ofﬁcials
modify
rec-
ommendations
updates
future
plans
deviation-tolerant
manner
iii
healer
constructs
social
networks
homeless
youth
low
cost
using
facebook
application
finally
show
hardness
results
problem
healer
solves
healer
deployed
real
world
early
spring
2016
currently
undergoing
testing
homeless
shelter
categories
subject
descriptors
i.2.11
distributed
artiﬁcial
intelligence
multiagent
systems
general
terms
algorithms
hiv
prevention
keywords
pomdp
inﬂuence
maximization
social
networks
multi-step
planning
introduction
hiv-aids
kills
million
people
worldwide
every
year
usa
alone
aids
kills
around
10,000
people
per
annum
hiv
extremely
high
incidence
among
homeless
youth
likely
engage
high
hiv-risk
behaviors
e.g.
unprotected
appears
proceedings
15th
international
conference
autonomous
agents
multiagent
systems
aamas
2016
john
thangarajah
karl
tuyls
stacy
marsella
catholijn
jonker
eds
may
9–13
2016
singapore
copyright
cid:13
2016
international
foundation
autonomous
agents
multiagent
systems
www.ifaamas.org
rights
reserved
sexual
activity
injection
drug
use
sub-populations
fact
previous
studies
show
homeless
youth
10x
greater
risk
hiv
infection
stably
housed
populations
thus
attempt
eradicating
hiv
crucially
depends
success
minimizing
rates
hiv
infection
among
homeless
youth
result
many
homeless
shelters
organize
intervention
camps
homeless
youth
order
raise
awareness
hiv
preven-
tion
treatment
practices
intervention
camps
consist
day-long
educational
sessions
participants
pro-
vided
information
hiv
prevention
measures
however
due
ﬁnancial/manpower
constraints
shelters
organize
limited
number
intervention
camps
moreover
camp
shelters
manage
small
groups
youth
∼3-4
time
emotional
behavioral
problems
youth
makes
management
bigger
groups
difﬁcult
thus
shelters
prefer
series
small
sized
camps
organized
sequentially
result
shelter
intervene
entire
target
home-
less
youth
population
instead
tries
maximize
spread
awareness
among
target
population
via
word-of-mouth
inﬂu-
ence
using
limited
resources
disposal
achieve
goal
shelter
uses
friendship
based
social
network
tar-
get
population
strategically
choose
participants
lim-
ited
intervention
camps
unfortunately
shelters
job
complicated
lack
complete
knowledge
social
net-
work
structure
friendships
network
known
certainty
whereas
uncertainty
friendships
thus
shelters
face
important
challenge
need
se-
quential
plan
choose
participants
sequentially
orga-
nized
interventions
plan
must
address
four
key
points
must
deal
network
structure
uncertainty
needs
take
account
new
information
uncovered
interventions
reduces
uncertainty
understanding
network
iii
plan
needs
deviation
tolerant
sometimes
homeless
youth
may
refuse
intervention
participant
thereby
forcing
shelter
modify
plan
intervention
approach
address
challenge
gathering
information
social
net-
works
homeless
youth
usually
costs
thousands
dollars
many
months
time
paper
model
shelters
problem
introducing
dynamic
inﬂuence
maximization
uncertainty
dime
problem
sequential
selection
intervention
participants
un-
der
network
uncertainty
dime
sets
apart
pre-
vious
work
inﬂuence
maximization
mostly
focuses
single
shot
choices
additionally
previous
work
psinet
pomdp
based
tool
proposed
solving
problem
three
limitations
first
psinet
completely
fails
scale
problem
requirements
running
slowly
memory
runs
slowly
moderate-sized
net-
works
runs
memory
network
scaled
worse
still
even
moderate
sized
networks
runs
memory
number
participants
intervention
increased
shown
later
second
psinet
explicitly
allow
ofﬁ-
cials
modify
recommended
plans
participants
refuse
attend
intervention
third
psinet
requires
entire
social
net-
works
homeless
youth
input
homeless
shelters
lack
money/time/manpower
required
generate
input
networks
paper
build
new
software
agent
healer
hierarchical
ensembling
based
agent
plans
effective
reduction
hiv
spread
provide
end-to-end
solution
dime
problem
healer
addresses
psinet
shortcomings
via
four
contributions
first
healer
casts
dime
problem
partially
observable
markov
decision
process
pomdp
solves
using
heal
hierarchical
ensembling
algorithm
planning
novel
pomdp
planner
quickly
generates
high-
quality
recommendations
intervention
participants
home-
less
shelter
ofﬁcials
heal
uses
hierarchical
ensembling
heuris-
tic
ensure
low
memory
utilization
thereby
enabling
scale
heal
hierarchically
subdivides
original
pomdp
two
lay-
ers
top
layer
graph
partitioning
techniques
used
divide
original
pomdp
intermediate
pomdps
second
level
intermediate
pomdps
sim-
pliﬁed
sampling
uncertainties
network
structure
repeatedly
get
sampled
pomdps
iii
finally
use
aggregation
techniques
combine
solutions
simpler
pomdps
order
gen-
erate
overall
solution
original
pomdp
simulations
show
even
small
settings
heal
achieves
100x
speed
improvement
solution
quality
psinet
larger
problems
psinet
unable
run
heal
con-
tinues
provide
high
quality
solutions
quickly
second
healer
tolerates
deviations
execution
intervention
plans
periodi-
cally
receives
feedback
shelter
ofﬁcials
executed
plans
reasons
deviations
recommended
plans
up-
dates
plan
accordingly
maximize
solution
quality
third
healer
quickly
gathers
information
homeless
youth
social
network
low
cost
interacting
youth
via
face-
book
application
fourth
analyze
several
novel
theoretical
as-
pects
dime
problem
illustrates
hardness
computers
homeless
shelter
healer
deployed
emergency
resource
shelf
homeless
shelter
figure
facilities
collaborating
homeless
shelter
deploy
healer
real-world
pilot
study
collabo-
ration
homeless
shelter
name
withheld
anonymity
provides
food
lodging
homeless
youth
aged
12-25.
provide
facilities
∼55-60
homeless
youth
every
day
also
operate
on-site
medical
clinic
free
hiv
hepatitis-c
testing
provided
healer
reviewed
ofﬁcials
collaborating
homeless
shelter
feedback
positive
currently
preparing
register
100
youth
deployment
healer
shelter
best
knowledge
pilot
study
represents
ﬁrst
real-world
evalu-
ation
sequential
inﬂuence
maximization
algorithms
expect
deployment
commence
early
spring
2016
related
work
first
discuss
work
related
inﬂuence
maximization
many
algorithms
ﬁnding
seed
sets
nodes
maximize
inﬂuence
spread
networks
however
algorithms
assume
uncertainty
network
structure
se-
lect
single
seed
set
contrast
select
several
seed
sets
se-
quentially
work
select
intervention
participants
also
problem
takes
account
uncertainty
network
structure
inﬂuence
status
network
nodes
i.e.
whether
node
in-
ﬂuenced
finally
unlike
use
different
diffusion
model
explain
later
golovin
introduced
adaptive
submodularity
discussed
adaptive
sequential
selection
similar
problem
proved
greedy
algorithm
1/e
approximation
guarantee
however
unlike
work
assume
uncertainty
network
structure
also
problem
cast
adaptive
stochastic
optimization
framework
inﬂuence
function
adaptive
submodu-
lar
see
section
greedy
algorithm
loses
approximation
guarantees
next
discuss
literature
social
work
general
ap-
proach
interventions
use
peer
change
agents
pca
i.e.
peers
bring
change
attitudes
engage
homeless
youth
interventions
studies
use
network
charac-
teristics
choose
pcas
notable
exception
valente
proposed
selecting
intervention
participants
highest
degree
centrality
ties
homeless
youth
however
previous
studies
show
degree
centrality
per-
forms
poorly
account
potential
overlaps
inﬂu-
ence
two
high
degree
centrality
nodes
ﬁnal
ﬁeld
related
work
planning
reward/cost
opti-
mization
focus
literature
monte-carlo
sampling
based
online
pomdp
solvers
since
approach
allows
signiﬁcant
scale-up
pomcp
solver
uses
monte-
carlo
uct
tree
search
online
pomdp
planning
also
somani
present
despot
algorithm
improves
worst
case
performance
pomcp
initial
experiments
pomcp
despot
showed
run
memory
even
small
sized
networks
recent
paper
introduced
psinet-w
sampling
based
online
pomdp
planner
discussed
psinet
shortcomings
section
remedy
particular
show
later
healer
scales
whereas
psinet
fails
healer
algorithmic
approach
also
offers
signif-
icant
novelties
comparison
psinet
see
section
6.1
fur-
ther
recent
paper
looks
extension
problem
considering
case
nodes
network
known
ahead
time
opposed
work
assume
edges
known
ahead
time
however
unlike
work
consider
sequential
selection
node
subsets
healer
design
explain
high-level
design
healer
consists
two
major
components
facebook
application
gathering
information
social
networks
dime
solver
solves
dime
problem
introduced
section
ﬁrst
ex-
plain
healer
components
explain
healer
design
facebook
application
healer
gathers
information
so-
cial
ties
homeless
youth
social
network
interacting
youth
via
facebook
application
choose
facebook
gath-
ering
information
young
show
∼80
home-
uncertain
network
uncertain
network
directed
graph
nodes
|e|
edges
edge
set
consists
two
disjoint
subsets
edges
set
certain
edges
i.e.
friendships
certain
set
uncertain
edges
i.e.
friendships
un-
certain
note
uncertainties
friendships
exist
be-
cause
healer
facebook
application
misses
links
people
friends
real
life
facebook
model
uncertainty
missing
edges
every
uncertain
edge
existence
probability
associated
represents
likelihood
existence
uncertain
edge
example
uncertain
edge
i.e.
unsure
whether
node
node
friend
0.75
implies
friend
0.75
chance
addition
edge
certain
uncertain
propagation
proba-
bility
associated
propagation
probability
0.5
directed
edge
denotes
node
inﬂuenced
i.e.
information
hiv
prevention
inﬂuences
node
i.e.
gives
information
node
0.5
probability
subsequent
time
step
full
inﬂuence
model
deﬁned
graph
relevant
values
represents
uncertain
net-
work
serves
input
dime
problem
figure
shows
uncertain
network
nodes
edges
dashed
solid
edges
represent
uncertain
edge
numbers
certain
edge
numbers
edges
respectively
next
explain
inﬂuence
diffusion
model
use
healer
figure
uncertain
network
inﬂuence
model
use
variant
independent
cascade
model
standard
independent
cascade
model
nodes
get
inﬂuenced
round
get
single
chance
inﬂu-
ence
un-inﬂuenced
neighbors
time
fail
spread
inﬂu-
ence
single
chance
spread
inﬂuence
neighbors
future
rounds
model
different
assume
nodes
get
multiple
chances
inﬂuence
un-inﬂuenced
neighbors
succeed
inﬂuencing
neighbor
given
time
step
cid:48
stop
inﬂuencing
neighbor
future
time
steps
otherwise
fail
step
cid:48
try
inﬂu-
ence
next
round
variant
independent
cascade
shown
empirically
provide
better
approximation
real
inﬂuence
spread
standard
independent
cascade
model
assume
nodes
get
inﬂuenced
cer-
tain
time
step
remain
inﬂuenced
future
time
steps
explain
healer
generates
uncertain
social
network
figure
healer
design
less
youth
active
facebook
ﬁxed
number
home-
less
youth
register
facebook
application
healer
parses
facebook
contact
lists
registered
homeless
youth
generates
social
network
youth
healer
adds
link
two
people
people
friends
facebook
registered
facebook
application
un-
fortunately
uncertainty
generated
network
friend-
ship
links
people
friends
real-life
facebook
captured
healer
previously
homeless
shelters
gathered
social
network
infor-
mation
via
tedious
face-to-face
interviews
homeless
youth
process
cost
thousands
dollars
many
months
time
healer
facebook
application
allows
homeless
shelters
quickly
generate
partial
homeless
youth
social
network
low
cost
facebook
application
tested
collab-
orating
homeless
shelter
positive
feedback
dime
solver
dime
solver
takes
approximate
social
network
generated
healer
facebook
application
input
solves
dime
problem
formally
deﬁned
section
using
new
algorithm
explained
section
6.1
healer
pro-
vides
solution
dime
problem
series
recommen-
dations
intervention
participants
homeless
shelter
ofﬁcials
healer
design
healer
design
shown
figure
be-
gins
facebook
application
constructing
uncertain
net-
work
explained
healer
sense-reason-act
cycle
repeats
following
process
interventions
reasons
different
long-term
plans
solve
dime
problem
acts
providing
dime
solution
recommen-
dation
intervention
participants
homeless
shelter
ofﬁcials
ofﬁcials
may
choose
use
healer
recommendation
selecting
intervention
participants
upon
interven-
tion
completion
healer
senses
feedback
conducted
intervention
ofﬁcials
feedback
includes
new
obser-
vations
network
e.g.
uncertainties
links
may
resolved
intervention
participants
interviewed
shelter
ofﬁcials
explained
section
healer
uses
feed-
back
update
improve
future
recommendations
network
generation
first
explain
model
inﬂuence
spread
uncertain
so-
cial
networks
describe
healer
generates
social
network
using
facebook
application
4.1
background
represent
social
networks
directed
graphs
consisting
nodes
directed
edges
node
represents
person
social
network
directed
edge
two
nodes
say
represents
node
considers
node
his/her
friend
assume
directed-ness
edges
sometimes
homeless
shelters
as-
sess
inﬂuence
friendship
much
uni-directional
account
uni-directional
follower
links
facebook
oth-
erwise
friendships
encoded
two
uni-directional
links
4.2
healer
facebook
application
healer
generates
uncertain
network
using
face-
book
application
generate
network
uncertain
edges
using
well
known
link
prediction
techniques
kronem
infer
existence
probabilities
possible
missing
edges
present
network
iii
deciding
threshold
probability
consultation
homeless
shelter
ofﬁcials
add
missing
edge
uncertain
edge
inferred
existence
probability
asking
homeless
shelter
ofﬁcials
provide
estimates
network
edges
choosing
rice
show
real-world
homeless
youth
networks
relatively
sparse
thus
shelter
ofﬁcials
choose
threshold
probability
value
number
uncertain
edges
get
added
make
input
uncertain
network
overly
dense
next
introduce
dime
problem
dime
problem
provide
background
information
helps
de-
ﬁne
precise
problem
statement
dime
show
hardness
results
problem
statement
given
uncertain
network
input
healer
runs
rounds
corresponding
number
interventions
organized
homeless
shelter
round
healer
chooses
nodes
youth
intervention
participants
participants
assumed
inﬂuenced
post-intervention
certainty
upon
inﬂuencing
chosen
nodes
healer
observes
true
state
uncer-
tain
edges
friendships
out-going
selected
nodes
translates
asking
intervention
participants
1-hop
so-
cial
circles
within
homeless
shelter
capabilities
round
inﬂuence
spreads
network
according
inﬂuence
model
time
steps
begin
next
round
represents
time
duration
two
succes-
sive
intervention
camps
rounds
healer
ob-
serve
nodes
get
inﬂuenced
time
steps
healer
knows
explicitly
chosen
nodes
intervention
partici-
pants
past
rounds
inﬂuenced
informally
given
uncertain
network
integers
de-
ﬁned
healer
ﬁnds
online
policy
choosing
exactly
nodes
successive
rounds
interventions
maximizes
inﬂuence
spread
network
end
rounds
provide
notation
deﬁning
healer
policy
for-
mally
let
s.t
|a|
denote
set
sized
subsets
represents
set
possible
choices
healer
make
every
time
step
let
denote
healer
choice
ith
time
step
upon
making
choice
healer
observes
uncertain
edges
adjacent
nodes
updates
understanding
network
let
denote
uncertain
network
resulting
gi−1
observed
additional
edge
information
formally
deﬁne
history
length
tuple
past
choices
observations
cid:104
ai−1
cid:105
denote
s.t
cid:54
set
possible
histories
length
less
equal
finally
deﬁne
i-step
policy
function
takes
histories
length
less
equal
outputs
node
choice
current
time
step
provide
explicit
problem
statement
dime
problem
dime
problem
given
input
uncertain
net-
work
integers
deﬁned
denote
expected
total
number
inﬂuenced
nodes
end
round
given
-length
history
previ-
ous
observations
actions
along
action
cho-
sen
time
let
eht
∼πt
denote
expec-
tation
random
variables
cid:104
at−1
cid:105
chosen
according
drawn
according
distribution
uncertain
edges
gi−1
revealed
ob-
jective
dime
ﬁnd
optimal
-step
policy
argmaxπt
eht
∼πt
next
show
hardness
results
dime
problem
first
analyze
value
complete
information
dime
characterize
computational
hardness
dime
value
information
characterize
impact
in-
sufﬁcient
information
uncertain
edges
achieved
solution
value
show
algorithm
dime
able
pro-
vide
good
approximation
full-information
solution
value
i.e.
best
solution
achieved
w.r.t
underlying
ground-truth
network
even
inﬁnite
computational
power
figure
counter-example
theorem
5.1
theorem
5.1.
given
uncertain
network
nodes
algorithm
dime
problem
guarantee
n−1+
approximation
ull
full-
information
solution
value
proof
prove
statement
providing
counter-
example
form
speciﬁc
ground
truth
network
exist
algorithm
guarantee
n−1+
approx-
imation
ull
consider
input
dime
problem
uncertain
network
nodes
cid:0
cid:1
uncertain
edges
be-
tween
nodes
i.e.
completely
connected
uncertain
net-
work
consisting
uncertain
edges
example
shown
figure
let
0.5
edges
uncertain
network
i.e.
edges
propagation
existence
probability
let
i.e.
select
single
node
one
shot
single
round
consider
star
graph
ground
truth
network
nodes
propagation
probability
edges
star
graph
shown
figure
algorithm
dime
problem
would
select
single
node
uncertain
network
uniformly
random
equal
probability
1/n
information
nodes
symmetrical
expectation
algorithm
achieve
expected
reward
1/n
1/n
...
1/n
1/n
1/n
however
given
ground
truth
network
get
ull
always
select
star
node
goes
inﬁnity
best
achieve
n−1
approximation
ull
thus
algorithm
achieve
n−1+
approximation
ull
computational
hardness
analyze
hardness
computation
dime
problem
next
two
theorems
theorem
5.2.
dime
problem
np-hard
proof
consider
case
degenerates
standard
inﬂuence
maximization
problem
shown
np-hard
thus
dime
problem
also
np-hard
np-hard
problems
exhibit
nice
properties
enable
ap-
proximation
guarantees
golovin
introduced
adaptive
submodularity
analog
submodularity
adaptive
settings
presence
adaptive
submodularity
ensures
simply
greedy
algorithm
provides
1/e
approximation
guarantee
w.r.t
optimal
solution
deﬁned
uncertain
network
how-
ever
show
next
dime
cast
adaptive
stochastic
optimization
framework
inﬂuence
function
adaptive
submodular
greedy
algorithm
1/e
approximation
guarantee
theorem
5.3.
inﬂuence
function
dime
adaptive
submodular
observations
upon
taking
pomdp
action
observe
ground
reality
uncertain
edges
outgoing
nodes
cho-
sen
action
consider
s.t
represents
ordered
set
uncertain
edges
observed
take
action
pomdp
obser-
vation
upon
taking
action
deﬁned
fe|e
i.e.
f-values
observed
uncertain
edges
example
taking
action
figure
values
i.e.
f-values
uncertain
edges
1-hop
social
circle
nodes
would
observed
rewards
reward
cid:48
taking
action
state
reaching
state
cid:48
number
newly
inﬂuenced
nodes
cid:48
formally
cid:48
cid:107
cid:48
cid:107
cid:107
cid:107
cid:107
cid:48
cid:107
number
inﬂuenced
nodes
cid:48
initial
belief
state
distribution
states
support
consists
states
cid:104
cid:105
s.t
i.e.
states
network
nodes
un-inﬂuenced
assume
nodes
un-inﬂuenced
begin
inside
support
dis-
tributed
independently
according
computation
exact
transition
probabilities
cid:48
requires
considering
possible
paths
graph
inﬂuence
could
spread
number
nodes
network
worst
case
moreover
large
social
networks
size
transition
observation
probability
matrix
prohibitively
large
due
ex-
ponential
sizes
state
action
space
transition
observation
probabilities
initial
belief
state
therefore
instead
storing
huge
transition/observation
ma-
trices
memory
follow
paradigm
large-scale
online
pomdp
solvers
using
generative
model
cid:48
transition
observation
probabilities
gen-
erative
model
allows
generate
on-the-ﬂy
samples
exact
distributions
cid:48
o|a
cid:48
low
computa-
tional
costs
given
initial
state
action
taken
generative
model
simulates
random
process
inﬂuence
spread
generate
random
new
state
cid:48
observation
obtained
reward
simulation
random
process
in-
ﬂuence
spread
done
playing
propagation
probabilities
i.e.
ﬂipping
weighted
coins
probability
according
inﬂuence
model
generate
sample
cid:48
observation
sam-
ple
determined
cid:48
finally
reward
sample
cid:107
cid:48
cid:107
cid:107
cid:107
deﬁned
simple
design
generative
model
allows
signiﬁcant
scale
speed
seen
previous
work
also
experimental
results
section
tion
6.1
ﬁnd
optimal
policy
6.1
healer
dime
solver
solve
pomdp
using
novel
algorithm
described
sec-
dime
problem
initial
experiments
pomcp
solver
showed
ran
memory
node
graphs
similarly
psinet-w
simply
unable
scale
real
world
demands
shown
experiments
hence
propose
heal
new
heuris-
tic
based
online
pomdp
planner
solving
dime
problem
scales
collaborating
shelter
real
world
demands
6.1.1
heal
heal
solves
original
pomdp
using
novel
hierarchi-
cal
ensembling
heuristic
creates
ensembles
imperfect
smaller
pomdps
two
different
layers
hierarchical
manner
see
figure
heal
top
layer
creates
ensemble
smaller
sized
intermediate
pomdps
subdividing
original
uncer-
tain
network
several
smaller
sized
partitioned
networks
us-
ing
graph
partitioning
techniques
partitioned
figure
failure
adaptive
submodularity
proof
deﬁnition
adaptive
submodularity
requires
expected
marginal
increase
inﬂuence
picking
addi-
tional
node
less
observation
expectation
taken
random
states
consistent
current
observation
show
case
dime
problem
consider
path
nodes
three
directed
edges
see
figure
let
i.e.
propagation
probability
i.e.
inﬂuence
stops
two
round
small
enough
set
uncertainty
comes
incomplete
knowledge
ex-
istence
edges
let
exists
exists
since
nodes
inﬂuenced
since
uncertain
node
inﬂuenced
probability
therefore
since
surely
inﬂuenced
inﬂuenced
probability
respectively
hand
since
surely
inﬂuenced
since
exists
inﬂuenced
probability
since
inﬂuenced
result
combining
equation
know
dime
adaptive
submodular
heal
dime
problem
solver
theorems
show
dime
hard
problem
difﬁcult
even
obtain
reasonable
approximations
model
dime
pomdp
two
reasons
first
pomdps
good
dime
conduct
several
interventions
sequentially
similar
sequential
pomdp
actions
partial
observability
similar
pomdps
due
uncertain-
ties
network
structure
inﬂuence
status
nodes
second
pomdp
solvers
recently
shown
great
promise
generating
near-optimal
policies
efﬁciently
explain
map
dime
onto
pomdp
pomdp
state
problem
pair
binary
tuples
cid:104
cid:105
lengths
|eu|
respectively
intuitively
denotes
inﬂuence
status
network
nodes
denotes
node
inﬂuenced
otherwise
moreover
denotes
existence
uncertain
edges
denotes
ith
uncertain
edge
exists
reality
otherwise
every
choice
subset
nodes
pomdp
action
formally
s.t.|a|
example
figure
one
possible
action
actions
states
1-ε
algorithm
tasp
solver
input
uncertain
network
parameters
output
best
node
action
create
ensemble
different
pomdps
expectation
argmaxj
return
evaluate
k_n
ode_act
indstep
tree
_reward
simulatestep
k_n
ode_act
pdatestep
tree
_reward
k_n
ode_act
algorithm
evaluate
step
input
instantiated
network
number
simulations
nsim
output
ranked
ordering
actions
tree
initialize_k_level_t
ree
counter
counter
nsim
get_all_leaf_v
alues
tree
return
removed
probability
get
instantiated
net-
work
uncertain
edges
repeat
sampling
process
get
variable
parameter
different
instantiated
networks
different
instantiated
networks
mapped
onto
dif-
ferent
pomdps
form
ensemble
sampled
pomdps
sampled
pomdp
shares
action
space
deﬁned
input
partitioned
network
different
pomdps
differ
sampling
uncertain
edges
note
member
ensemble
pomdp
even
though
sampling
uncertain
edges
re-
moves
uncertainty
portion
pomdp
states
still
partial
observability
portion
pomdp
state
step
called
evaluate
step
instantiated
net-
work
generate
list
rewards
ith
ele-
ment
gives
long
term
reward
achieved
taking
ith
action
instantiated
network
step
ﬁnd
expected
reward
taking
ith
action
taking
reward
expectation
across
lists
generated
previous
step
e.g.
αδ1
i.e.
rewards
taking
1st
action
instantiated
networks
occurs
probabilities
respectively
expected
reward
20.
note
found
multiplying
existence
probabilities
uncertain
edges
kept
removed
finally
step
action
argmaxj
returned
tasp
next
discuss
evaluate
step
step
evaluate
step
algorithm
generates
list
single
in-
stantiated
network
algorithm
works
similarly
instantiated
networks
instantiated
network
eval-
uate
step
uses
nsim
use
210
number
simulations
evaluate
long
term
reward
achieved
taking
actions
network
due
combinatorial
action
space
evaluate
step
uses
uct
driven
approach
strategically
choose
ac-
tions
whose
long
term
rewards
calculated
uct
used
solve
pomdps
algorithms
suffer
cid:1
branching
factor
number
nodes
picked
per
αδ2
cid:0
round
number
network
nodes
exploit
structure
domain
creating
k-level
uct
tree
branching
factor
explained
k-level
tree
allows
storing
reward
values
smaller
sized
node
subsets
well
instead
figure
hierarchical
decomposition
heal
networks
mapped
onto
pomdp
intermediate
pomdps
form
top
layer
ensemble
pomdp
solvers
bottom
layer
intermediate
pomdp
solved
us-
ing
tasp
tree
aggregation
sequential
planning
novel
pomdp
planner
subdivides
pomdp
another
en-
semble
smaller
sized
sampled
pomdps
member
bottom
layer
ensemble
created
randomly
sampling
uncertain
edges
partitioned
network
get
sampled
network
uncertain
edges
sampled
network
mapped
onto
sampled
pomdp
finally
solutions
pomdps
bottom
top
layer
ensembles
aggregated
using
novel
tech-
niques
get
solution
heal
original
pomdp
heal
uses
several
novel
heuristics
first
uses
novel
two-
layered
hierarchical
ensembling
heuristic
second
uses
graph
partitioning
techniques
partition
uncertain
network
generates
partitions
minimize
edges
going
across
parti-
tions
ensuring
partitions
similar
sizes
since
partitions
almost
disconnected
solve
partition
sep-
arately
third
solves
intermediate
pomdp
par-
tition
creating
smaller-sized
sampled
pomdps
via
sampling
uncertain
edges
solved
using
novel
tree
search
algorithm
avoids
exponential
branching
factor
seen
psinet
fourth
uses
novel
aggregation
techniques
com-
bine
solutions
smaller
pomdps
rather
simple
plural-
ity
voting
techniques
seen
previous
ensemble
techniques
heuristics
enable
scale
real-world
sizes
ex-
pense
sacriﬁcing
performance
guarantees
instead
solving
one
huge
problem
solve
several
smaller
problems
how-
ever
heuristics
perform
well
practice
simulations
show
even
smaller
settings
heal
achieves
100x
speed
psinet
providing
improvement
solution
quality
larger
problems
psinet
unable
run
heal
continues
provide
high
solution
quality
elaborate
heuristics
ﬁrst
explaining
tasp
solver
6.1.2
bottom
layer
tasp
explain
tasp
new
pomdp
solver
solves
intermediate
pomdp
heal
bottom
layer
given
interme-
diate
pomdp
uncertain
network
deﬁned
input
tasp
goes
four
steps
see
algorithm
first
step
makes
intermediate
pomdp
tractable
creating
ensemble
smaller
sized
sampled
pomdps
member
ensemble
created
sampling
uncertain
edges
input
network
get
instantiated
network
uncertain
edge
input
network
randomly
kept
probability
algorithm
findstep
input
level
deep
tree
tree
output
action
set
size
nodes
act
act
tree_node
tree.root
is_leaf
tree_node
alse
return
act
abnode
get_u
cb_at_n
ode
node
next_node
ask_u
abnode
act
act
next_node
tree_node
tree_node.branch
next_node
sized
subsets
helps
guiding
uct
search
better
algorithm
takes
instantiated
network
creates
afore-
mentioned
k-level
tree
network
ﬁrst
level
tree
branches
one
network
node
branch
ﬁrst
level
branches
second
tree
level
one
network
node
except
node
covered
ﬁrst
level
similarly
every
branch
mth
level
branches
level
theoretically
tree
grows
exponentially
how-
ever
values
usually
small
practice
e.g.
level
tree
leaf
node
represents
particular
pomdp
action
network
nodes
similarly
every
non-leaf
tree
node
represents
subset
network
nodes
tree
node
maintains
value
represents
average
long
term
reward
achieved
taking
pomdp
actions
size
contain
subset
example
figure
tree
node
rep-
resents
average
long
term
reward
achieved
taking
pomdp
actions
since
contain
subset
begin
nodes
tree
initialized
step
running
nsim
number
simulations
generate
good
estimates
values
tree
node
node
k-level
tree
runs
ucb1
implementa-
tion
multi-armed
bandit
arms
multi-armed
bandit
running
tree
node
correspond
child
branches
node
k-level
tree
recall
child
branch
corresponds
network
node
overall
goal
multi-armed
bandits
running
tree
construct
pomdp
action
size
traversing
path
root
leaf
whose
reward
cal-
culated
simulation
explained
algorithm
every
simulation
consists
three
steps
find
step
step
simulate
step
step
update
step
step
find
step
find
step
takes
k-level
tree
instantiated
network
ﬁnds
node
action
used
simulate
step
algorithm
details
process
ﬁnding
node
action
found
traversing
path
root
node
leaf
node
one
edge/arm
time
initially
begin
root
node
empty
action
set
size
steps
node
visit
way
root
leaf
use
multi-
armed
bandit
denoted
abnode
step
choose
tree
node
visit
next
network
node
add
action
set
get
node
action
upon
reaching
leaf
simulate
step
simulate
step
takes
node
action
find
step
evaluate
long
term
reward
taking
ac-
tion
called
act
instantiated
network
assuming
interventions
remain
i.e.
already
conducted
inter-
ventions
simulate
step
ﬁrst
uses
action
act
generative
model
generate
reward
remaining
in-
terventions
simulate
step
uses
rollout
policy
randomly
select
node
actions
used
generative
model
generate
future
rewards
finally
long
term
reward
returned
simulate
step
...
rt0−1
update
step
update
step
uses
long
term
reward
re-
turned
simulate
step
update
relevant
values
k-level
tree
updates
values
nodes
traversed
order
ﬁnd
node
action
find
step
first
get
tree
leaf
node
corresponding
node
action
re-
turned
find
step
update
values
ancestors
including
root
leaf
node
running
find
simulate
evaluate
nsim
sim-
ulations
return
values
leaf
nodes
list
recall
ﬁnd
expected
reward
taking
ith
action
taking
expectation
rewards
across
lists
fi-
nally
tasp
returns
action
argmaxj
6.1.3
top
layer
using
graph
partitioning
explain
heal
top
layer
use
metis
state-of-the-art
graph
partitioning
technique
subdivide
original
uncertain
network
different
partitioned
networks
partitioned
networks
form
ensemble
intermediate
pomdps
figure
heal
tasp
invoked
intermediate
pomdp
independently
solutions
aggre-
gated
get
ﬁnal
dime
solution
try
two
different
partition-
ing/aggregation
techniques
leads
two
variants
heal
partition
variant
heal
given
uncertain
network
parameters
input
ﬁrst
partition
un-
certain
network
partitions
round
invoke
bottom
layer
tasp
algorithm
select
node
clusters
singly
selected
nodes
clus-
ters
give
action
nodes
given
shelter
ofﬁ-
cials
execute
based
observation
uncertain
edges
ofﬁcials
get
executing
action
update
partition
networks
input
intermediate
pomdps
either
replacing
observed
uncertain
edges
certain
edges
edge
observed
exist
reality
removing
uncertain
edge
altogether
edge
observed
exist
reality
list
node
actions
algorithm
generates
serves
online
policy
use
homeless
shelter
partition
variant
heal-t
given
uncertain
network
parameters
input
ﬁrst
partition
uncertain
network
partitions
tasp
picks
nodes
ith
partition
ith
round
experimental
results
section
analyze
heal
heal-t
performance
variety
settings
experiments
run
2.33
ghz
12-core
intel
machine
ram
experiments
averaged
100
runs
use
metric
indirect
inﬂuence
throughout
section
number
nodes
indirectly
in-
ﬂuenced
intervention
participants
example
node
network
selecting
nodes
interventions
horizon
nodes
lower
bound
strategy
inﬂuenced
cer-
tainty
however
total
number
inﬂuenced
nodes
might
say
thus
indirect
inﬂuence
ex-
periments
propagation
existence
probability
values
network
edges
uniformly
set
0.1
0.6
respectively
done
based
ﬁndings
kelly
al.
however
relax
parameter
settings
later
section
experiments
statistically
signiﬁcant
bootstrap-t
0.05
baselines
use
two
algorithms
baselines
use
psinet-w
benchmark
relevant
previous
al-
gorithm
shown
outperform
heuristics
used
prac-
tice
however
also
need
point
comparison
psinet-
solution
quality
runtime
network
network
figure
solution
quality
runtime
real
world
networks
figure
scale
number
nodes
picked
per
round
scale
previous
algorithm
inﬂuence
maxi-
mization
literature
accounts
uncertain
edges
uncertain
net-
work
state
solving
problem
sequential
selection
nodes
in-fact
show
even
standard
greedy
algorithm
approximation
guarantees
problem
adaptive
submodular
thus
modify
greedy
replacing
uncertain
network
certain
network
uncertain
edge
replaced
certain
edge
propagation
probability
run
greedy
algorithm
certain
network
use
greedy
algorithm
baseline
best
known
algorithm
known
inﬂuence
maximization
analyzed
many
previous
papers
datasets
use
four
real
world
social
networks
homeless
youth
provided
collaborators
four
networks
friendship
based
social
networks
homeless
youth
living
dif-
ferent
areas
big
city
usa
name
withheld
anonymity
ﬁrst
second
networks
homeless
youth
living
two
large
areas
denoted
preserve
anonymity
respec-
tively
two
networks
∼150-170
nodes
400-450
edges
created
surveys
interviews
homeless
youth
conducted
collaborators
living
areas
third
fourth
networks
relatively
small-sized
online
social
networks
youth
created
facebook
nodes
120
edges
myspace
107
nodes
803
edges
contact
lists
re-
spectively
healer
deployed
anticipate
even
larger
networks
e.g.
250-300
nodes
ones
hand
also
show
run-time
results
artiﬁcial
networks
sizes
solution
quality/runtime
comparison
compare
indirect
inﬂuence
run-times
heal
heal-t
psinet-w
four
real-world
networks
set
since
psinet-w
fails
scale
beyond
shown
later
fig-
ure
shows
indirect
inﬂuence
different
algorithms
four
networks
x-axis
shows
four
networks
y-axis
shows
indirect
inﬂuence
achieved
different
algo-
rithms
ﬁgure
shows
heal
outperforms
algo-
rithms
every
network
achieves
∼70
improvement
psinet-w
networks
iii
achieves
∼25
im-
provement
heal-t.
difference
heal
algorithms
signiﬁcant
facebook
myspace
mys
networks
heal
already
inﬂuencing
almost
nodes
two
relatively
small
networks
thus
experiments
come
focus
networks
figure
shows
run-time
algorithms
four
net-
works
x-axis
shows
four
networks
y-axis
log
scale
shows
run-time
seconds
ﬁgure
shows
heal
achieves
100x
speed-up
psinet-w
psinet-w
run-time
increases
exponentially
increasing
network
sizes
iii
heal
runs
slower
heal-t
achieves
indirect
inﬂuence
hence
heal
algorithm
choice
next
check
psinet-w
run-times
become
worse
larger
networks
lack
larger
real-world
datasets
create
relatively
large
artiﬁcial
watts-strogatz
networks
model
pa-
solution
quality
maximum
relative
gain
figure
horizon
scale
maximum
gain
network
rameters
0.1
figure
11a
shows
run-time
algorithms
watts-strogatz
networks
x-axis
shows
size
networks
y-axis
log
scale
shows
run-time
seconds
ﬁgure
shows
psinet-w
fails
scale
beyond
180
nodes
whereas
heal
runs
within
minutes
thus
psinet-
fails
scale-up
network
sizes
importance
scale
results
psinet-w
fail
scaling
larger
network
sizes
even
fails
scale-up
increasing
number
nodes
picked
per
round
real-world
net-
works
figures
show
indirect
inﬂuence
achieved
heal
heal-t
greedy
psinet-w
net-
works
respectively
scale
values
x-axis
shows
increasing
values
y-axis
shows
indirect
inﬂu-
ence
ﬁgures
show
psinet-w
heal-t
fail
scale
handle
respec-
tively
thereby
fulﬁlling
real
world
demands
heal
out-
performs
algorithms
difference
heal
greedy
increases
linearly
increasing
values
also
case
heal
runs
less
40.12
seconds
network
34.4
seconds
network
thus
figures
show
psinet-w
best
performing
algorithm
previous
work
fails
scale
increasing
network
nodes
increasing
values
even
moderate
sized
networks
runs
slowly
more-
heal
best
performing
algorithm
runs
quickly
provides
high-quality
solutions
scale-up
real-world
de-
mands
since
heal
greedy
scale
analyze
performance
detail
scaling
horizon
figure
shows
heal
greedy
in-
direct
inﬂuence
network
varying
horizons
see
ap-
pendix
network
results
x-axis
shows
increasing
hori-
zon
values
y-axis
shows
indirect
inﬂuence
ﬁgure
shows
relative
difference
heal
greedy
increases
signiﬁcantly
increasing
values
next
scale
values
increased
horizon
settings
ﬁnd
maximum
attainable
solution
quality
difference
heal
greedy
figure
shows
indirect
inﬂuence
achieved
heal
greedy
networks
x-axis
shows
two
networks
y-axis
shows
indirect
inﬂuence
ﬁgure
shows
settings
heal
achieves
∼110
indirect
inﬂuence
greedy
i.e.
0.1
0.2
0.3
0.7
0.6
0.5
increase
greedy
45.62
48.95
29.5
44.37
24.56
55.18
30.85
28.21
deviation
tolerance
figure
deviation
tolerance
heal
greedy
0.1
0.2
0.3
0.7
16.85
0.6
12.46
0.5
8.11
loss
heal
solution
24.42
0.0
11.58
21.02
18.26
10.53
artiﬁcial
networks
figure
artiﬁcial
networks
sensitivity
analysis
2-fold
improvement
two
real-world
networks
heal
greedy
figure
10b
shows
percentage
increase
indirect
inﬂuence
achieved
heal
greedy
varying
values
columns
rows
figure
10b
show
vary-
ing
values
respectively
values
inside
table
cells
show
percentage
increase
indirect
inﬂuence
achieved
heal
greedy
algorithms
plan
using
values
example
0.7
0.1
heal
achieves
45.62
indirect
inﬂuence
greedy
ﬁgure
shows
heal
continues
outperform
greedy
across
varying
values
thus
variety
settings
heal
dominates
greedy
terms
indirect
inﬂuence
run-time
deviation
tolerance
show
heal
tolerance
deviation
replacing
ﬁxed
number
actions
recommended
heal
randomly
selected
actions
figure
10a
shows
variation
indirect
inﬂuence
achieved
heal
increasing
number
random
deviations
recommended
actions
x-axis
shows
increasing
number
deviations
y-axis
shows
indirect
inﬂuence
example
random
deviations
i.e.
two
recommended
actions
replaced
random
actions
heal
achieves
100.23
indirect
inﬂuence
ﬁgure
shows
heal
highly
deviation-tolerant
sensitivity
analysis
finally
test
robustness
heal
solutions
network
see
appendix
network
results
allowing
error
heal
understanding
values
consider
case
0.1
0.6
values
heal
plans
wrong
thus
heal
plans
solutions
using
0.1
0.6
solutions
evaluated
different
correct
values
get
estimated
solutions
estimated
solutions
compared
true
solutions
achieved
heal
planned
correct
values
figure
11b
shows
percentage
difference
indirect
inﬂuence
true
estimated
solutions
varying
values
example
heal
plans
solutions
wrong
0.1/p
0.6
values
instead
correct
0.3/p
0.5
values
suffers
8.11
loss
ﬁgure
shows
heal
relatively
robust
errors
understanding
values
suffers
average-case
loss
conclusion
ticipants
sequentially
deployed
interventions
orga-
nized
homeless
shelters
spread
awareness
hiv
preven-
tion
practices
among
homeless
youth
extremely
impor-
tant
problem
homeless
youth
high-risk
hiv
∼10
homeless
youth
hiv
positive
previous
work
tries
solve
problem
simply
fails
scale
real
world
sizes
demands
runs
memory
large
networks
in-
creased
number
intervention
participants
runs
slowly
moderate
sized
networks
paper
develop
healer
new
software
agent
solving
problem
scales
real
world
demands
healer
casts
problem
pomdp
uses
completely
novel
suite
algorithms
heal
tasp
evaluate
achieve
100x
speedup
state-of-the-art
algorithms
outperforming
terms
solution
quality
runs
previous
algorithms
scale
also
healer
saves
homeless
shelters
thousands
dollars
many
months
time
generating
uncertain
networks
low
cost
using
facebook
application
finally
show
novel
theoretical
hardness
results
problem
healer
solves
healer
fully
ready
deployed
real
world
collaboration
homeless
shelter
shelter
ofﬁcials
tested
healer
components
feedback
positive
healer
de-
ployment
expected
commence
early
spring
2016.
extended
version
aamas
2016
paper
name
conference
version
please
refer
references
borgs
brautbar
chayes
lucier
maximizing
social
inﬂuence
nearly
optimal
time
proceedings
twenty-fifth
annual
acm-siam
symposium
discrete
algorithms
soda
pages
946–957
siam
2014
cdc
hiv
surveillance
report
www.cdc.gov/hiv/pdf/g-l/hiv_
surveillance_report_vol_25.pdf
mar
2013
cohen
delling
pajor
werneck
sketch-based
inﬂuence
maximization
computation
scaling
guarantees
proceedings
23rd
acm
international
conference
conference
information
knowledge
management
pages
629–638
acm
2014
j.-p.
cointet
roth
realistic
knowledge
diffusion
models
journal
artiﬁcial
societies
social
simulation
2007
council
hiv/aids
among
persons
experiencing
homelessness
risk
factors
predictors
testing
promising
testing
strategies
www.nhchc.org/wp-content/uploads/2011/
09/infocus_dec2012.pdf
dec.
2012
dibangoye
shani
chaib-draa
a.-i
mouaddib
topological
order
planner
pomdps
international
joint
conference
artiﬁcial
intelligence
ijcai
2009
eck
l.-k.
soh
ask
sense
share
hoc
information
gathering
proceedings
2015
international
conference
autonomous
agents
multiagent
systems
pages
367–376
international
foundation
autonomous
agents
multiagent
systems
2015
golovin
krause
adaptive
submodularity
theory
applications
active
learning
stochastic
optimization
journal
artiﬁcial
intelligence
research
42:427–486
2011.
paper
focuses
important
problem
selecting
par-
kelly
murphy
sikkema
mcauliffe
pomdp
planning
regularization
advances
neural
information
processing
systems
pages
1772–1780
2013
tang
xiao
shi
inﬂuence
maximization
near-optimal
time
complexity
meets
practical
efﬁciency
proceedings
2014
acm
sigmod
international
conference
management
data
pages
75–86
acm
2014
unaids
report
global
aids
epidemic
www.unaids.org/en/resources/campaigns/
20121120_globalreport2012/globalreport/
mar
2012
valente
pumpuang
identifying
opinion
leaders
promote
behavior
change
health
education
behavior
2007
yadav
chan
jiang
rice
tambe
using
social
networks
aid
homeless
shelters
dynamic
inﬂuence
maximization
uncertainty
extended
version
proceedings
fiftienth
international
conference
autonomous
agents
multiagent
systems
aamas
2016
2016
yadav
marcolino
rice
petering
winetrobe
rhoades
tambe
carmichael
preventing
hiv
spread
homeless
populations
using
psinet
proceedings
twenty-seventh
conference
innovative
applications
artiﬁcial
intelligence
iaai-15
2015
yan
guo
yang
inﬂuence
maximizing
local
inﬂuenced
community
detection
based
multiple
spread
model
advanced
data
mining
applications
pages
82–95
springer
2011
young
rice
online
social
networking
technologies
hiv
knowledge
sexual
risk
testing
behaviors
among
homeless
youth
aids
behavior
:253–260
2011.
roffman
solomon
winett
kalichman
randomised
controlled
community-level
hiv-prevention
intervention
sexual-risk
behaviour
among
homosexual
men
cities
lancet
350
9090
:1500
1997
kempe
kleinberg
tardos
maximizing
spread
inﬂuence
social
network
proceedings
ninth
acm
sigkdd
international
conference
knowledge
discovery
data
mining
pages
137–146
acm
2003
kim
leskovec
network
completion
problem
inferring
missing
nodes
edges
networks
proceedings
siam
conference
data
mining
siam
2011
kocsis
szepesvári
bandit
based
monte-carlo
planning
machine
learning
ecml
2006
pages
282–293
springer
2006
lasalle
karypis
multi-threaded
graph
partitioning
parallel
distributed
processing
ipdps
2013
ieee
27th
international
symposium
pages
225–236
ieee
2013
leskovec
krause
guestrin
faloutsos
vanbriesen
glance
cost-effective
outbreak
detection
networks
proceedings
13th
acm
sigkdd
international
conference
knowledge
discovery
data
mining
pages
420–429
acm
2007
marcolino
lakshminarayanan
yadav
tambe
simultaneous
inﬂuencing
mapping
social
networks
proceedings
fiftienth
international
conference
autonomous
agents
multiagent
systems
short
paper
aamas
2016
2016
puterman
markov
decision
processes
discrete
stochastic
dynamic
programming
john
wiley
sons
2009
rice
positive
role
social
networks
social
networking
technology
condom-using
behaviors
homeless
young
people
public
health
reports
125
:588
2010
rice
barman-adhikari
milburn
monro
position-speciﬁc
hiv
risk
large
network
homeless
youths
american
journal
public
health
102
:141–147
2012
rice
fulginiti
winetrobe
montoya
plant
kordic
sexuality
homelessness
los
angeles
public
schools
american
journal
public
health
102
2012
rice
tulbert
cederbaum
adhikari
milburn
mobilizing
homeless
youth
hiv
prevention
social
network
analysis
acceptability
face-to-face
online
social
networking
intervention
health
education
research
:226
2012
ross
pineau
paquet
chaib-draa
online
planning
algorithms
pomdps
journal
artiﬁcial
intelligence
research
pages
663–704
2008
schneider
zhou
laumann
new
hiv
prevention
network
approach
sociometric
peer
change
agent
selection
social
science
medicine
125:192–202
2015
silver
veness
monte-carlo
planning
large
pomdps
advances
neural
information
processing
systems
pages
2164–2172
2010
somani
hsu
lee
despot
online
