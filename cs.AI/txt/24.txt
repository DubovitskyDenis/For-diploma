decision
aids
adversarial
planning
military
operations
algorithms
tools
turing-test-like
experimental
validation
alexander
kott
ray
budd
larry
ground
lakshmi
rebbapragada
john
langston
abstract
use
intelligent
decision
aids
help
alleviate
challenges
planning
complex
operations
describe
integrated
algorithms
tool
capable
translating
high-level
concept
tactical
military
operation
fully
detailed
actionable
plan
producing
automatically
human
guidance
plans
realistic
degree
detail
human-like
quality
tight
interleaving
several
algorithms
planning
adversary
estimates
scheduling
routing
attrition
consumption
estimates
comprise
computational
approach
tool
although
originally
developed
army
large-unit
operations
technology
generic
also
applies
number
domains
particularly
critical
situations
requiring
detailed
planning
within
constrained
period
time
paper
focus
particularly
engineering
tradeoffs
design
tool
experimental
evaluation
reminiscent
turing
test
tool
performance
compared
favorably
human
planners
quest
new
processes
tools
army1
exploring
significant
computerization
military
planning
process
...
army
must
create
fast
new
planning
processes
establish
new
division
labor
man
machine
decision
aids
quickly
offer
suggestions
test
alternative
courses
actions
reasons
exploring
potential
benefits
decision
aids
multifaceted
process
planning
army
operation
remains
relatively
cumbersome
inflexible
slow
life
death
decisions
made
relatively
meager
staff
perhaps
3-4
individuals
working
imperfect
information
significant
time
constraints
success
typically
depends
one
ability
synchronize
movement
units
concentration
firepower
effects
precise
moment
time
tools
available
planners
generally
limited
rudimentary
decision
aids
analyzing
terrain
battlefield
office
automation
tools
help
record
decisions
planners
bring
varying
degrees
knowledge
experience
prejudices
process
planning
process
frequently
involves
disagreements
estimation
outcomes
enemy
reactions
attrition
consumption
supplies
fundamental
complexity
synchronization
effective
utilization
multiple
heterogeneous
assets
performing
numerous
inter-dependent
heterogeneous
tasks
course
action
development
evaluation
tool
cadet
tool
producing
automatically
human
guidance
detailed
tasks
required
translate
basic
concept
fully
formed
actionable
plan
key
step
military
standard
decision
making
process
step
involves
taking
proposed
courses
action
friendly
forces
developed
previous
step
initially
expressed
high-level
concepts
expanding
hundreds
supporting
tasks
required
accomplish
intended
objective
concurrently
friendly
course
action
tested
views
expressed
paper
authors
necessarily
reflect
army
agency
u.s.
government
likely
and/or
dangerous
courses
action
available
enemy
intent
analysis
called
wargaming
military
produce
analytical
baseline
commander
choose
best
course
action
process
particularly
challenging
relatively
large
complex
unit
division
actions
12,000
soldiers
3,000
weapons
must
coordinated
produce
desired
effect
wargaming
potential
tactical
course
action
large
unit
typically
involves
staff
3-4
persons
in-depth
knowledge
friendly
enemy
tactics.2
input
effort
comes
usually
unit
commander
form
two
doctrinally
defined
products
course
action
coa
sketch
e.g.
fig
course
action
statement
high-level
specification
operation
effect
sketch
statement
comprise
set
high-
level
actions
goals
sequencing
referring
largely
movements
objectives
friendly
forces
e.g.
task
force
arrow
attacks
along
axis
bull
complete
destruction
2nd
red
battalion.
typically
unit
commander
develop
minimum
three
courses
action
consideration
distinguishable
one
another
force
composition
application
designation
main
supporting
efforts
utilization
terrain
resources
human
planner
applies
knowledge
art
war
creation
courses
action
may
generally
assumed
surface
feasible
input
working
team
several
hours
typically
hours
members
planning
staff
examine
elements
friendly
course
action
coa
detail
process
involves
planning
scheduling
detailed
tasks
required
accomplish
specified
coa
allocation
tasks
diverse
forces
comprising
division
brigade
assignment
suitable
military
formalized
process
military
decision
making
process
mdmp
cadet
tool
focuses
course
action
analysis
phase
mdmp
locations
routes
estimates
friendly
enemy
battle
losses
attrition
predictions
enemy
actions
reactions
etc
outcome
process
usually
recorded
synchronization
matrix
type
gantt
chart
time
periods
constitute
columns
functional
classes
actions
battlefield
operating
systems
rows
see
fig
examples
include
maneuver
logistics
military
intelligence
etc
content
plan
recorded
largely
matrix
cells
includes
tasks
actions
multiple
subunits
assets
friendly
force
objectives
manner
execution
expected
timing
dependencies
synchronization
routes
locations
availability
supplies
combat
losses
enemy
situation
actions
etc
although
immediate
product
may
look
like
prescriptive
schedule
purpose
coa
analysis
process
certainly
impose
rigid
script
battle
rather
purpose
ascertain
feasibility
coa
assess
likelihood
success
particular
enemy
coa
identify
range
probable
actions
points
synchronization
participants
comparing
results
wargames
possible
courses
action
commander
selects
best
coa
terms
accomplishing
desired
intent
effective
application
resources
final
product
executable
coa
translated
synchronized
operational
plan
cadet
used
complex
difficult
time-consuming
process
course
action
development
evaluation
tool
cadet
assists
military
planners
rapidly
translating
initial
high-level
coa
detailed
battle
plan
wargaming
plan
determine
feasible
working
planner
series
user/computer
actions
system
details
resources
schedules
elaborates
analyzes
coa
brief
human
planner
defines
high-level
coa
via
user
interface
e.g.
fig
enables
enter
information
comparable
conventional
coa
sketch
statement
e.g.
fig
coa-entry
interface
transforms
input
cadet
proper
collection
formal
assertions
and/or
objects
including
typically
order
2-20
high-level
tasks
fig
outlines
input
cadet
essentially
electronic
representation
traditional
sketch-and-
statement
describes
friendly
enemy
units
control
measures
e.g.
boundaries
areas
network
traversable
terrain
e.g.
mobility
corridors
high-level
scheme
maneuver
represented
set
activities
including
estimates
enemy
activities
temporal
relationships
activities
entities
numerous
attributes
addition
shown
take
default
value
specified
explicitly
human
planner
definition
coa
transferred
cadet
proceeds
expand
high-level
specification
detailed
plan/schedule
operation
within
expansion
process
cadet
decomposes
friendly
tasks
detailed
actions
determines
necessary
supporting
relations
allocates
schedules
tasks
friendly
assets
takes
account
dependencies
tasks
availability
assets
estimates
enemy
actions
reactions
devises
friendly
counter-actions
estimates
paths
movements
timing
requirements
force
attrition
supply
consumption
resulting
detailed
scheduled
wargamed
plan
often
consists
500
detailed
actions
wealth
supporting
detail
e.g.
fig
completed
process
largely
automatically
seconds
mid-level
laptop
computer
cadet
displays
results
user
e.g.
fig
synchronization
matrix
and/or
animated
movements
map-based
interface
user
reviews
results
may
either
change
original
specification
coa
directly
edit
detailed
plan
satisfactory
product
reached
typically
within
minutes
user
utilizes
present
analysis
courses
action
commander
produce
operational
orders
tool
make
claims
producing
optimal
plan
indeed
highly
dependent
quality
coa
sketch
statement
originated
unit
commander
provide
strong
measure
plan
technical
feasibility
short
amount
time
tool
helping
speed
along
application
science
war
unit
commander
time
available
apply
brainpower
art
war
general
george
patton
jr.
recognized
need
speed
optimality
asserted
good
plan
violently
executed
better
perfect
plan
next
week
recently
several
efforts
utilized
planning
capability
cadet
defense
advanced
research
projects
agency
darpa
used
cadet
command
post
future
program
army
battle
command
battle
laboratories
used
complement
capabilities
course
action
tools
developed
fort
leavenworth
fort
huachuca.3
time
cadet
apparently
first
far
tool
demonstrated
generate
army
battle
plans
realistic
degree
detail
completeness
multiple
battle
operating
systems
large
scale
scope
associated
large
complex
organizations
army
division
brigade
related
domain
small-unit
operations
tate
described
mature
work
experimental
evaluations
discussed
later
cadet-assisted
planner
performed
dramatically
faster
conventional
human-only
planning
staff
comparable
quality
planning
products
although
originally
developed
army
large-unit
operations
cadet
largely
generic
applied
broad
range
tasks
require
interleaving
planning
resource
scheduling
spatial
movements
knowledge-based
tool
cadet
adapted
new
application
domain
changing
knowledge
base
particular
already
built
exploratory
demonstrations
battle
command
battle
lab-leavenworth
chose
cadet
key
element
integrated
course
action
critiquing
evaluation
system
icces
program
battle
command
battle
lab-huachuca
integrated
cadet
military
intelligence
system
called
source
analysis
system-light
provide
planner
intelligence
assets
wargame
enemy
courses
action
friendly
courses
action
tasks
intelligence
collection
using
scouts
unmanned
aerial
vehicles
combat
tasks
robotic
forces
responses
terrorism
incidence
urban
environment
key
requirements
challenges
problem
domain
needs
problem
domain
clearly
allow
one
focus
useful
decision
aid
narrow
slice
problem
e.g.
planning
scheduling
routing
strong
dependencies
exist
aspects
overall
problem
example
considering
coupling
planning
scheduling
activities
military
unit
may
differ
dramatically
depending
whether
timing
arrival
location
occurs
merely
minutes
arrival
adversary
units
activities
planning
timing
scheduling
associated
move
unit
affect
suitable
route
e.g.
unit
may
take
circuitous
route
order
avoid
detection
enemy
unit
expected
threaten
area
certain
time
period
route
turn
affects
timing
activities
performed
unit
e.g.
unit
may
bypass
enemy
unit
perform
passage
friendly
lines
require
set
logistics-related
activities
supply
unit
enroute
attrition
losses
personnel
equipment
enemy
actions
breakdowns
consumption
supplies
fuel
ammunition
depend
strongly
activities
movements
unit
turn
attrition
consumption
affect
suitability
feasibility
certain
activities
unit
perform
obviously
overall
decision-making
process
must
also
include
elements
adversarial
reasoning
determination
enemy
actions
reactions
friendly
actions
interestingly
presence
adversary
tends
exacerbate
multi-directional
coupling
exists
different
aspects
problem
planning
scheduling
routing
adversary
prediction
attrition
consumption
estimation
pervasive
nature
coupling
suggests
strong
integration
unification
associated
computational
processes
required
also
significant
breadth
coverage
terms
functional
classes
tasks
must
explored
planned
decision
aid
maneuver
tasks
central
battle
functions
logistics
military
intelligence
interdependent
maneuver
tasks
must
analyzed
close
integration
spite
complexity
implicit
multiple
interdependent
problem
aspects
speed
extremely
important
envision
user
would
approach
tool
like
cadet
somewhat
similarly
spreadsheet
would
enter
modify
key
elements
coa
expect
see
recalculated
details
plan
almost
instantaneously
multiple
iterations
modifications
recalculations
reasonable
user
field
conditions
expect
fast
response
order
seconds
performance
must
achieved
laptop
computer
perhaps
even
handheld
computer
rapidly
changing
elements
tactics
often
evolving
operations
unfold
differences
styles
procedures
different
units
commanders
also
imperative
provide
decision
aid
means
modify
knowledge
base
literally
field
conditions
end
user
non-
programmer
given
cadet
likely
framework
larger
deployed
system
style
implementation
user
interface
important
make
decision
aid
largely
independent
user
interface
assumptions
reason
important
provide
convenient
flexible
means
interfacing
decision-aid
component
systems
including
case
two
systems
share
common
ontology
possible
approaches
criteria
tradeoffs
given
challenges
outlined
previous
section
adopted
following
set
primary
criteria
selecting
technical
approach
solving
cadet
problem
suitable
technical
approach
must
integrate
closely
subproblems
planning
resource
scheduling
movement
routing
approach
must
frugal
terms
knowledge
base
required
covering
broad
range
actions
effects
present
domain
adversarial
reasoning
must
integral
component
technical
approach
must
comply
intended
concept
application
use
system
must
provide
automated
battle
planning
within
constraints
user
high-level
plan
concept
within
established
doctrinal
rules
understandable
user
armed
criteria
let
evaluate
alternative
approaches
potentially
applicable
cadet
problem
planning
central
theme
cadet
application
appropriate
explore
applicability
classical
planning
techniques
extensions
broad
field
approaches
world
represented
state
model
actions
lead
one
state
another
objective
problem
solver
find
sequence
actions
lead
initial
state
goal
state
states
recent
surge
advances
field
originated
powerful
graphplan
solver
cadet
needs
perspective
approaches
meet
several
criteria
first
need
resource
scheduling
movements
routing
within
planning
process
although
active
area
research
temporal
planning
classical
planning
model
extended
account
temporal
constraints
cover
issues
involved
resource-constrained
scheduling
e.g.
second
applied
realistic
problems
state
model
becomes
excessively
large
difficult
build
leads
strong
arguments
practical
problems
best
solved
knowledge-
based
planning
rather
classical
planning
approaches
e.g..
approach
discussed
later
cadet
integrates
closely
resource
allocation
scheduling
within
interleaved
planning-scheduling
process
uses
frugal
knowledge
representation
typical
knowledge-based
planning
require
explicit
state
action
model
cadet
approach
comes
tradeoffs
enjoy
theoretical
rigor
optimality
provable
properties
characteristic
many
approaches
built
classical
planning
example
practical
extension
classical
planning
sipe-2
avoids
many
limitations
classical
planning
adopting
flexible
potentially
frugal
representational
scheme
approach
also
demonstrated
successes
loose
integration
resource
scheduler
opis
like
cadet
development
sipe-2
motivated
challenges
military
planning
problem
exploring
applicability
sipe-2
cadet
problem
note
sipe-2
restricted
limited
integration
scheduling
especially
may
relate
time-space
routing
requirements
cadet
lack
provisions
integrated
adversarial
reasoning
cadet
routing
resource
scheduling
tightly
integrated
adversarial
reasoning
part
overall
planning
process
adopt
sipe-2
could
availed
rich
facilities
available
integration
components
support
automated
plan
monitoring
reactive
plan
repair
extensive
user
interfaces
knowledge-base
authoring
tools
however
felt
less
critical
cadet
application
requirements
tight
integration
scheduling
routing
adversarial
actions
prominent
among
approaches
specific
emphasis
adversarial
actions
adversarial
planner
state-based
application-independent
hierarchical-task-network
planner
adversarial
reasoning
process
models
army
action-reaction-counteraction
coa
planning
protocol
problem
solver
determines
adversary
likely
counteraction
searching
actions
would
negate
precondition
action
although
originally
developed
military
applications
recently
applied
control
robotic
space
applications
variety
adverse
conditions
breakdowns
analogous
military
adversary
applicability
approach
cadet
faces
concerns
respect
least
three
criteria
explicit
encoding
actions
pre-
post-conditions
demands
rather
expensive
state-based
representation
scheme
resource
scheduling
integral
part
even
though
temporal
planning
doubtful
users
would
comfortable
solution
process
automatically
determines
suitable
counteractions
manner
may
transparent
user
although
use
would
provided
cadet
system
inherent
execution
monitoring
reactive
repair
mechanisms
critical
considerations
cadet
application
different
class
approaches
planning
adversarial
environments
based
game-
theoretic
techniques
examples
include
recent
work
application
battle
planning
control
problem
formulated
game
goal
determine
strategy
optimizes
objectives
players
resulting
solution
represents
plan
action
players
attractive
terms
explicit
rigorous
treatment
problem
adversarial
aspects
game-theoretic
approaches
fail
meet
cadet
criteria
cadet
solution
must
comply
high-level
strategy
formulated
user
difficult
accomplish
compliance
within
solution
automatically
generates
strategy
cited
approaches
effective
problems
formulated
terms
spatial
moves
weapon
firings
many
actions
within
cadet
different
nature
e.g.
coordination
units
lend
readily
board
game
representation
declining
use
game-theoretic
approaches
tradeoff
cadet
significant
capability
generate
automatically
sophisticated
temporal-spatial
strategy
actions
must
rely
user
define
high-level
strategy
cadet
technical
approach
perhaps
fundamental
engineering
choices
basic
functional
focus
concept
user
operation
tool
cadet
focuses
course
action
analysis
time-
consuming
aspect
military
decision
making
process
researchers
e.g.
addressing
different
preceding
phase
process
interesting
challenging
problem
generating
high-level
maneuver
coa
addressing
style
interactions
human
decision
aid
de-emphasize
mixed-initiative
incremental
style
even
though
cadet
allows
style
favor
rapid
style
generating
complete
plan
high-level
coa
followed
manual
modifications
motivations
include
desire
minimize
time-
consuming
aspects
mixed-initiative
process
avoid
significant
dependencies
style
user
interfaces
eliminate
additional
complexity
still
poorly
understood
issues
mixed
initiative
already
complex
problem
integration
multiple
problem
aspects
integration
multiple
distinct
problems
within
overall
process
achieved
via
algorithm
tightly
interleaved
incremental
planning
routing
time
estimating
scheduling
estimates
attrition
consumption
adversarial
reaction
estimation
interleaving
approach
descends
conceptually
similar
interleaving
applied
design
domain
shown
fig
hierarchical
task
network-like
planning
step
produces
incremental
group
tasks
applying
domain-specific
expansion
rules
fig
activities
current
state
plan
require
hierarchical
decomposition
intuition
behind
interleaved
incremental
approach
relatively
small
incremental
expansion
adequately
informed
preceding
decisions
time
avoids
forcing
extensive
commitments
future
decisions
consistent
intuition
observed
large
small
increments
tend
produce
solutions
lower
quality
cadet
typical
increment
amounts
10-20
activities
order
number
activities
completed
plan
incremental
expansion
process
controlled
mechanism
leads
algorithm
focus
significant
constrained
tasks
first
fig
limit
decomposition
limited
incremental
set
tasks
scheduling
step
performs
temporal
constraint
propagation
lateral
vertical
within
hierarchy
partially
domain-knowledge
driven
process
figure
schedules
newly
added
activities
available
resources
time
periods
shown
figure
temporal
constraint
propagation
component
scheduling
sub-process
performs
analysis
temporal
constraints
adjusts
possible
scheduling
times
constrained
activity
temporal
representation
activity
consists
interval
possible
start
times
interval
possible
end
times
minimum
maximum
duration
temporal
constraint
establishes
relationship
start
end
time
two
activities
example
constraint
seize
starts
00:30
02:00
secure
starts
establishes
requirement
scheduled
start
time
seize
activity
must
occur
minutes
hours
earlier
scheduled
start
time
secure
activity
propagation
temporal
constraint
sets
possible
start
end
interval
constrained
activity
intersection
initial
possible
interval
interval
produced
applying
temporal
constraint
activity
relationship
interleaving
approach
also
meets
users
desire
see
process
unfolded
allows
user
desired
control
number
task
expansions
users
could
step
entire
process
bite-size
expansions
consisting
sub-tasks
time
could
intervene
interim
modifications
however
significance
mode
user
operation
overestimated
indeed
typically
users
would
step
process
times
became
familiar
system
confident
conclusions
would
thereafter
choose
fully
expand
plan
without
performing
step-wise
expansion
respect
scheduling
sub-process
although
originally
planned
use
multi-
decompositional
version
constrained
heuristic
search
led
eventually
prefer
much
simpler
computationally
inexpensive
scheduling
heuristics
combine
domain-
independent
estimate
degree
activity
constrained
earliest-first
rule
domain-specific
ranking
activity
priorities
choice
driven
partly
rigorous
performance
requirements
partly
fact
simpler
approach
tended
produce
results
understandable
users
generally
given
compound
complexity
imposed
need
tight
interleaving
multiple
diverse
problem-solving
processes
cadet
prudent
avoid
unnecessary
complexity
within
individual
processes
interleaving
mechanism
also
used
integrate
incremental
steps
routing
attrition
consumption
estimates
version
dijkstra
routing
algorithm
used
search
suitable
routes
terrain
represented
efficiently
parameterized
network
trafficable
terrain
optimization
specified
respect
number
factors
overall
speed
movement
cover
concealment
estimates
attrition
developed
special
version
dupuy
algorithm
calibrated
respect
estimates
military
professionals
desire
minimize
complexity
combined
problem-solving
process
also
played
role
decision
use
no-backtracking
approach
minor
exceptions
however
even
important
considerations
nature
problem
role
user
found
user
would
often
find
way
mitigate
permit
infeasibilities
among
temporal
constraint
infeasibilities
far
numerous
others
include
insufficient
supplies
unfavorable
strength
ratios
engagements
means
unique
situation
rely
insights
highly
detailed
knowledge
well
beyond
limits
cadet
knowledge
base
furthermore
resolutions
infeasibilities
user
usually
best
done
user
see
whole
picture
plan
example
reviewing
constraint
violation
user
might
say
willing
accept
risk
particular
situation
order
achieve
objective
perhaps
surprising
military
conflict
opponents
applying
every
effort
win
problem
solution
often
found
constraint
boundaries
also
found
infeasibilities
often
point
need
modifications
original
coa
i.e.
sketch-and-statement
level
problem
statement
human-generated
outside
cadet
purview
considerations
led
dismiss
backtracking-based
approach
would
largely
useless
instead
cadet
continues
solution
process
even
infeasibility
found
generates
complete
albeit
infeasible
solution
displays
solution
user
infeasibilities
highlighted
lets
user
make
appropriate
changes
planning
dynamic
enemy
adversarial
aspects
planning-scheduling
problems
addressed
via
incremental
expansion
mechanism
cadet
accounts
adversarial
activity
several
ways
first
allows
commander
staff
specify
likely
actions
enemy
automated
planning
proceeds
taking
account
parallel
friendly
enemy
actions
cadet
automatically
infers
using
knowledge
base
using
expansion
technique
used
hierarchical
task
network
planning
possible
reactions
counteractions
provides
resources
timing
necessary
incorporate
overall
plan
adopted
action-reaction-counteraction
arc
heuristic
technique
used
traditional
coa
analysis
phase
military
decision
making
process
action-reaction-counteraction
arc
approach
action
possible
either
friendly
enemy
warrants
examination
potential
reactions
followed
analysis
determine
exists
counter-action
used
minimize
impact
reaction
negate
effects
completely
arc
technique
augmented
parallel
planning
friendly
enemy
forces
consider
example
activity
called
forward
passage
lines
see
figures
unit
force
passes
lines
defense
manned
friendly
unit
engages
enemy
performing
activity
unit
passed
passing
unit
susceptible
enemy
artillery
fire
therefore
cadet
knowledge
base
includes
method
process
expanding
activity
fig
postulates
enemy
suitable
forces
react
attacking
fire
passing
unit
method
searches
enemy
artillery
units
within
range
location
passage
lines
creates
hypothetic
enemy
reaction
activity
artillery
fire
performed
available
enemy
unit
turn
triggers
generation
counteraction
activities
counteraction
activities
may
viewed
proactive
measures
mitigate
risks
friendly
force
commander
anticipating
effort
enemy
concentrate
artillery
fires
passage
lines
preplans
appropriate
counter-battery
fires
ready
execute
short
notice
enabling
respond
vigorously
within
seconds
enemy
reaction
achieve
effect
cadet
artillery
fire
activity
includes
method
generating
counteractions
military
intelligence
activity
locating
enemy
artillery
performing
artillery
fire
counter-
battery
fire
activity
attacking
artillery
unit
artillery
fire
activity
undergoes
expansion
process
method
searches
suitable
units
available
creates
assigns
counteraction
activities
allocation
step
fig
reaction
counteraction
activities
execute
respective
methods
estimate
attrition
consumption
resulting
execution
activities
note
reaction
definition
limited
single
possible
reaction
described
example
possible
define
knowledge
base
set
possible
reactions
one
several
selected
based
state
battlefield
acr
involve
explicit
search
sense
explicitly
explore
multiple
alternative
moves
decision
point
involve
backtracking
except
user-driven
backtracking
discussed
section
integration
multiple
problem
aspects.
instead
process
proceeds
linear
depth-first
fashion
fig
every
newly
generated
action
arc
method
activity
one
specified
within
produces
activity
activities
representing
enemy
reaction
reaction
activity
turn
trigger
similar
generation
counteraction
activities
prevent
process
continuing
indefinitely
algorithm
terminates
heuristically
fixed
depth
i.e.
action
followed
reaction
followed
counteraction
point
chain
ends
counteraction
followed
yet
another
counter-
counter-action
justification
termination
heuristic
found
experience
domain
experts
well
experimental
observation
going
beyond
depth
produces
excessive
level
details
without
contributing
value
solution
user
effect
cumulative
level
uncertainty
reaction
actually
happen
battle
unfolds
counteraction
actually
applicable
becomes
high
planning
level
detail
unproductive
even
seemingly
short
cutoff
depth
solutions
often
complex
non-obvious
user
arc
process
search
optimal
solution
guarantee
one
rather
intent
produce
solution
consistent
user
expectations
doctrinal
training
produced
much
faster
accurately
manual
process
clearly
suboptimal
solution
occur
arc
algorithm
example
reaction
produced
arc
method
may
turn
highly
vulnerable
specific
set
circumstances
counteraction
case
reaction
would
unlikely
employed
intelligent
enemy
large
portion
plan
becomes
erroneous
although
arc
guarantee
optimality
produces
solutions
quality
experts
find
comparable
human
experts
section
experimental
evaluation
rules
generate
reactions
counteractions
embody
expert
knowledge
probability
generating
grossly
suboptimal
solution
minimized
rules
generate
reaction
implicitly
account
probable
counteractions
emphasized
problem
addressed
arc
directly
comparable
game
formulation
particular
action
reactions
comparable
moves
sequential
game
need
occur
sequential
order
e.g
reaction
may
fact
executed
prior
action
counteraction
prior
reaction
see
fig
nevertheless
game-theoretic
analogy
appropriate
sense
ideal
planner
cadet
would
explore
entire
game
tree
appropriate
pruning
applied
order
assured
optimality
particular
action
compare
arc
approach
however
trades
optimality
speed
transparency
solution
knowledge
representation
object-oriented
fashion
cadet
knowledge
base
hierarchy
classes
activities
see
fig
13.
class
activities
e.g.
fig
contains
number
procedures
methods
responsible
computing
conditions
applicability
expansion
method
generating
sub-activities
activity
depending
factors
available
assets
terrain
location
type
enemy
forces
e.g.
fig
10c
adding
temporal
constraints
estimating
timing
resources
required
activity
e.g.
fig
10d
10e
10g
10h
finding
suitable
routes
locations
e.g.
fig
10f
etc
multiple
rules
within
procedure
e.g.
see
fig
10c
explicitly
ordered
practice
expensive
terms
development
maintenance
costs
part
knowledge
base
rules
responsible
expansion
activities
find
great
variability
procedures
used
evaluate
preconditions
expansion
expansion
simple
others
complex
many
example
refer
qualitative
geographic
temporal
relations
units
force
features
battlefield
require
significant
computations
using
general-purpose
programming
operators
consider
fig
example
complex
expansion
procedure
applies
common
class
activities
military
units
advances
battlefield
along
axis
advance
route
performing
advance
sub-activities
auxiliary
activities
unit
largely
defined
battlefield
state
along
route
traversed
example
advancing
units
may
encounter
enemy
units
obstacles
require
resupply
procedure
described
fig
generates
ordered
set
activities
based
projected
estimated
future
time
points
state
battlefield
generation
activity
updates
projected
state
use
generation
future
activities
although
procedure
includes
elements
sequencing
time-dependent
effects
actual
scheduling
activities
generated
delayed
execution
scheduling
algorithm
see
fig
fig
expansion
procedure
parameterized
allow
generation
variety
actions
based
upon
requirements
specific
activity
modeled
example
reaction
encountering
enemy
unit
different
advance
performed
purpose
seizing
objective
compared
advance
performed
purposes
feint
attack
class
activity
one
expansion
procedure
e.g.
fig
10c
even
though
number
different
sets
expanded
activities
may
result
application
given
expansion
procedure
depending
circumstances
example
procedure
described
fig
10c
produces
different
expansions
depending
whether
unit
within
suitable
distance
desired
minefield
location
needs
move
toward
location
whether
unit
enough
mines
hand
needs
replenish
stocks
different
approach
would
encode
alternative
expansions
independent
rules
let
search
process
determine
applicable
rules
depending
preconditions
downstream
outcomes
found
preferable
handle
alternative
expansions
within
single
procedure
number
expansions
domain
tends
modest
easily
explicitly
controlled
within
single
procedure
also
consistent
desire
avoid
search
backtracking
discussed
detail
section
integration
multiple
problem
aspects.
cadet
includes
module
knowledge
base
maintenance
allows
non-
programmer
add
new
units
knowledge
over-write
old
ones
relatively
simple
point-and-click
fashion
clear
need
allow
end-users
ability
modify
field
environments
assumption
user
programmer
even
extent
entering
spreadsheet-like
function
although
necessarily
limited
decision
eliminate
direct
programming
features
maintenance
tool
allow
end-user
enter
potentially
majority
required
activity
classes
albeit
clearly
user
interfaces
minimal
set
necessary
user
interface
features
developed
consisted
mainly
interface
patterned
synchronization
matrix
fig
allowing
user
click
cell
activity
browse
related
network
domain-relevant
objects
e.g.
units
performing
activity
location
unit
etc.
reason
minimal
interface
expect
cadet
deployed
stand-alone
user
interface
rather
part
larger
framework
existing
interface
even
important
realization
presentation
paradigms
accepted
practice
military
decision
making
necessarily
good
basis
user
interfaces
tool
like
cadet
series
experiments
discussed
shortly
found
particular
although
synchronization
matrix
accepted
way
recording
results
coa
analysis
users
cadet
difficulty
comprehending
synchronization
matrix
generated
computer
tool
even
though
presented
conventional
presumably
familiar
manner
one
possible
explanation
synchronization
matrix
works
well
mechanism
short-hand
recording
one
mental
process
however
synchronization
matrix
nearly
effective
used
present
results
someone
else
e.g.
cadet
reasoning
problem
exacerbated
fact
cadet-generated
matrices
unusually
detailed
therefore
large
making
difficult
users
navigate
within
large
volume
information
experimental
evaluation
planning
cadet
compare
purely
manual
planning
desired
know
difference
tool
would
make
put
hands
military
staff
planner
course
interviewing
experienced
military
planners
purpose
knowledge
acquisition
offered
varying
opinions
concerning
potential
usefulness
tool
hands
staff
planner
described
tactical
planning
art
science
dismissed
attempt
automate
portions
process
thought
process
would
greatly
benefit
planners
minimal
experience
field
still
others
questioned
degree
tool
would
avoid
generating
predictable
enemy
products
argued
plan
produced
part
whole
computerized
system
would
inevitably
involve
simplistic
predictable
approach
concerns
addressed
via
experiment
experiment
involved
five
different
scenarios
brigade-sized
offensive
operations
nine
judges
army
marine
field
grade
officers
colonel
lieutenant
colonel
major
mostly
active
duty
four
types
planning
products
scenario
three
individual
grades
judges
asked
assign
products
brigade
commonly
lowest
level
dedicated
planning
cell
within
headquarters
staff
time
even
relatively
low
echelon
military
relying
improvements
decision
support
tools
improve
tactical
decision
making
without
increasing
size
battlefield
staffs
five
scenarios
obtained
several
exercises
conducted
army
recent
years
scenarios
differed
significantly
terrain
mix
friendly
forces
nature
opposing
forces
scheme
maneuver
scenario/coa
located
original
coa
sketches
assigned
planning
staff
original
hand-written
synchronization
matrices
produced
planning
staff
cases
original
coa
statement
unavailable
reconstructed
based
sketch
synchronization
matrix
although
specific
records
many
officers
involved
planning
sessions
many
hours
sessions
lasted
participants
observers
similar
exercises
estimated
typically
performed
team
4-5
officers
period
3-4
hours
amounting
total
person-hours
per
planning
product
taking
five
synchronization
matrices
produced
human
staff
transcribed
original
handwritten
spreadsheets
computerized
spreadsheet
order
make
visually
less
distinct
computer-generated
ones
set
matrices
referred
hand-human
meaning
produced
hand
retaining
original
human-made
style.
matrices
edited
make
look
machine-generated
rationale
minimize
possibility
biases
evaluators
favor
computerization
disguise
involved
standardization
terms
abbreviations
uniform
style
elimination
spelling
errors
etc
however
essential
content
remained
unaltered
set
matrices
referred
hand-machine
meaning
produced
hand
disguised
machine-looking
style.
using
scenarios
coas
used
cadet
generate
detailed
plan
synchronization
matrix
matrices
reviewed
edited
surrogate
user
retired
army
officer
editing
rather
light
cases
involved
changing
deleting
entries
matrix
reflected
expected
mode
operation
cadet
expected
used
automatically
rather
collaboration
human
decision-maker
cadet
used
as-is.
attempt
made
customize
tailor
extend
cadet
knowledge
base
scenarios
time
generate
products
involved
less
minutes
cadet
execution
minutes
review
post-editing
total
0.4
person-hours
per
product
although
also
took
certain
amount
time
enter
sketch-and-statement
information
cadet
consider
time
realistic
digital
environment
sketch-and-
statement
information
would
transmitted
planning
staff
digital
format
resulting
matrices
transferred
computerized
spreadsheet
given
visual
style
hand-human
hand-machine
sets
set
referred
computer-
machine
meaning
produced
computer
support
retaining
original
machine-made
style.
computer-machine
matrices
edited
give
human-made
look
without
changing
content
particular
common
spelling
errors
introduced
human
inconsistencies
terminology
abbreviations
etc
rationale
elicit
experiments
differences
evaluations
might
result
computer-aversion
set
referred
computer-human
meaning
produced
computer
support
disguised
human-made
style.
nine
judges
evaluators
products
recruited
primarily
active
duty
officers
army
marines
mainly
colonel
lieutenant-colonel
ranks
two
recently
retired
senior
officers
extensive
experience
current
military
doctrine
total
evaluation
packages
prepared
judges
package
consisted
sketch
statement
synchronization
matrix
questionnaire
instructed
judges
grade
products
avoid
evaluation
biases
assignments
packages
judges
fully
randomized
judge
asked
evaluate
packages
judges
told
means
products
created
furthermore
avoid
biases
could
arise
direct
comparison
products
judge
never
received
two
packages
related
scenario
judge
asked
review
package
provide
grades
one
grade
characterizes
correctness
feasibility
plan
reflected
synchronization
matrix
scale
1-10
one
grade
characterizes
completeness
thoroughness
plan
reflected
synchronization
matrix
scale
1-10
one
qualitative
grade
compares
plan
typical
products
see
today
army
practice
ranging
much
worse
much
better
instructions
judges
worded
way
associated
grade
typical
quality
found
today
practice
data
showed
significant
scatter
fig.12
mean
values
series
ranged
3.9-
5.0
standard
deviations
ranged
1.6-2.4.
judges
comments
also
demonstrated
significant
differences
opinion
regarding
product
find
bias
computerized-looking
products
judges
strongly
disliked
larger
detailed
synchronization
matrices
produced
cadet
judges
comments
appeared
assumed
highly
detailed
products
generated
conventional
process
staff
officers
wasting
time
attention
going
excessive
unusual
level
detail
perhaps
suggests
merely
reducing
size
level
details
shown
synchronization
matrix
easily
done
automatically
one
could
improve
grades
given
cadet
products
overall
results
fig.12
demonstrated
cadet
performed
par
human
staff
difference
cadet
human
performance
statistically
insignificant
taking
mean
grades
five
scenarios
cadet
earned
4.2
humans
earned
4.4
standard
deviation
2.0
insignificant
difference
finally
comparing
undisguised
results
i.e.
series
cadet
earned
mean
grade
4.4
humans
earned
3.9
although
difference
still
rather
small
conclusion
cadet
helps
produce
complex
planning
products
dramatically
almost
two
orders
magnitude
faster
yet
without
loss
quality
compared
conventional
manual
process
experiments
realistic
setting
another
experimental
exploration
placed
cadet
component
realistic
setting
integrated
suite
decision
aids
suitable
performing
complete
cycle
army
brigade
decision-making
sponsored
performed
army
battle
command
battle
lab
set
experiments
approximated
use
battle
planning
aids
group
officers
brigade
command
post
experimenters
focused
broader
issues
associated
potential
negative
impacts
tools
creative
aspects
art
war
tools
encourage
excessive
fixation
analytical
aspects
command
book
numbers
detract
intuitive
adaptive
art-like
aspects
military
command
decision-making
make
plans
actions
predictable
enemy
experiments
involved
two
teams
consisting
eight
army
officers
majors
lieutenant
colonels
battle
command
battle
laboratory-leavenworth
facilities
fort
leavenworth
kansas
subjects
combat
arms
branches
variety
tactical
experience
11-23
years
active
service
one
team
performed
typical
process
decision-making
using
traditional
manual
method
team
accomplished
tasks
support
decision
aids
particularly
cadet
observations
processes
teams
comparison
products
dispelled
concerns
quality
products
generated
teams
comparable
even
though
computer-aided
team
completed
tasks
much
faster
evidence
decision
aids
would
way
encourage
cookbook
approach
contrary
allow
planners
explore
rapidly
broader
range
possible
courses
action
including
unconventional
potential
tools
encourage
greater
ingenuity
creativity
adaptivity
lessons
learned
future
directions
cadet
tool
developed
generate
army
battle
plans
realistic
degree
detail
completeness
multiple
battle
operating
systems
large
scale
scope
associated
complex
organizations
army
division
brigade
cadet
performs
dramatically
faster
conventional
human-only
planning
staff
comparable
quality
planning
products
cadet
shows
promise
reaching
state
military
decision-maker
commander
staff
planner
uses
field
conditions
part
integrated
suite
tools
available
rugged
highly
portable
computer
device
would
use
routinely
perform
planning
tactical
operations
issue
operational
plans
orders
monitor
modify
plans
operation
executed
situation
evolves
cadet
technology
designed
particular
application
domain
military
operations
planning
results
experiments
well
interest
cadet
technology
expressed
several
organizations
within
military
offer
evidence
technology
likely
value
primary
intended
application
domain
military
planning
domain
large
market
broad
range
sub-domains
problems
e.g.
pre-operation
planning
in-execution
management
simulation
training
military
robotics
etc
major
amount
funding
dedicated
annually
introducing
improving
intelligent
applications
many
leverage
cadet
technology
outside
military
applications
world
cadet
technical
approach
may
also
considered
use
domains
require
either
close
integration
planning
scheduling
movement
routing
explicit
planning
potential
adverse
effects
actions
appropriate
precautions
i.e.
kind
adversarial
reasoning
former
category
may
include
example
construction
industry
planning
especially
multiple
geographically
dispersed
projects
latter
category
may
include
law
enforcement
disaster
response
exploratory
prototype
using
cadet
already
constructed
business
campaign
planning
market
penetration
new
product
release
marketing
campaigns
etc
industrial
space
robotics
compare
adversarial
planner
used
space
robotics
application
cadet-like
approach
may
also
serve
component
solution
much
broader
problem
society-wide
activities
e.g.
international
interventions
involve
military
also
long-term
political
economic
social
ideological
processes
number
practical
lessons
learnt
adopting
developing
simple
transparent
concept
user
operation
helps
increase
probability
user
acceptance
reduce
developmental
risks
training
requirements
concept
necessarily
coincide
fact
likely
significantly
different
established
ways
performing
similar
processes
manual
fashion
problem
battle
planning
instructive
example
real-world
problem
distinct
computational
problems
closely
coupled
lend
useful
decomposition
one
effective
practical
approach
problems
tight
interleaving
incremental
planning
scheduling
routing
attrition
consumption
calculations
given
complexity
interleaving
multiple
diverse
computational
problem-solving
processes
prudent
developers
reduce
technical
risks
using
less
complicated
algorithms
individual
processes
computationally
inexpensive
algorithms
often
trade
optimality
speed
help
assure
almost
instantaneous
response
user
important
military
applications
action-reaction-counteraction
arc
heuristic
practical
robust
technique
integrating
adversarial
considerations
planning
process
conventional
presentation
paradigms
rooted
manual
procedures
always
suitable
basis
effective
user
interface
rigorous
separation
architectural
conceptual
problem
solving
components
user
interaction
mechanisms
allows
integration
variety
user-
interface
paradigms
key
gaps
must
overcome
realize
full
potential
tools
military
decision-making
commonly
requires
collaboration
multiple
officers
distinct
functions
responsibilities
expertise
near-future
warfare
officers
often
collaborate
dispersed
battlefield
communicating
tactical
internet
possibly
asynchronously
tools
like
cadet
must
support
forms
collaboration
effective
human-machine
interfaces
remain
challenging
especially
complex
multi-
dimensional
information
plans
execution
military
operations
high-tempo
high-stress
environments
physically
challenging
field
conditions
today
common
paradigms
map-based
visualizations
spatial
information
synchronization
matrix
temporal
visualization
necessarily
promising
directions
different
approaches
ought
explored
presentation
cadet
products
requires
qualitatively
different
user
interfaces
visualization
mechanisms
experiments
suggest
users
difficulties
comprehending
computer-generated
synchronization
matrix
even
though
presented
conventional
familiar
manner
perhaps
synchronization
matrix
functions
well
mechanism
short-hand
recording
one
mental
process
however
synchronization
matrix
nearly
useful
used
present
results
someone
else
e.g.
computer
tool
reasoning
combat
planners
must
able
plan
rapidly
communicate
orders
subordinates
clearly
react
without
delay
changes
situation
planning
tools
like
cadet
give
commander
ability
accelerate
cycle
recognition
re-planning
reaction
i.e.
capability
continuous
re-planning
execution
acknowledgements
work
described
paper
supported
funding
army
cecom
daab
07-96-c-
d603
cadet
sbir
phase
daab
07-97-c-d313
cadet
sbir
phase
daab
07-99-c-
k510
cadet
enhancements
darpa
daab07-99-c-k508
command
post
future
tradoc
bcbl-h
gs-35-0559j/dabt63-00-f-1247
tradoc
bcbl-l
provided
additional
funding
daab
07-99-c-k510
maj
rasch
army
bcbl-l
provided
important
advice
cadet
team
references
wass
czege
biever
six
compelling
ideas
road
future
army
army
magazine
vol.51
no.2
43-48
2001
department
army
field
manual
101-5
staff
organization
operations
headquarters
washington
d.c.
1997
rasch
kott
forbus
incorporating
military
decision
making
experiment
ieee
intelligent
systems
2003
18-26
hayes
schlabach
fox-ga
planning
support
tool
assisting
military
planners
dynamic
uncertain
environment
integrating
planning
scheduling
execution
dynamic
uncertain
environments
bergmann
kott
eds.
aaai
press
1998
tate
levine
jarvis
dalton
using
planning
technology
army
small
unit
operations
proceedings
fifth
international
conference
artificial
intelligence
planning
systems
2000
wilkins
desimone
applying
planner
military
operations
planning
fox
zweben
eds
intelligent
scheduling
685
709.
calif.
morgan
kaufmann.
1994
kott
saks
multi-decompositional
approach
integration
planning
scheduling
applied
perspective
integrating
planning
scheduling
execution
dynamic
uncertain
environments
bergmann
kott
eds.
aaai
press
1998
bohman
staffsim
interactive
simulation
rapid
real
time
course
action
analysis
u.s.
army
brigade
staffs
thesis
naval
postgraduate
school
monterey
1999
kewley
embrecht
fuzzy-genetic
decision
optimization
positioning
military
combat
units
proceedings
ieee
international
conference
systems
man
cybernetics
october
11-14
jolla
california
1998
3658
3664
atkin
westbrook
cohen
capture
flag
military
simulation
meets
computer
games
proceedings
aaai
spring
symposium
series
computer
games
1999
pp.1-5
kott
agin
fawcett
configuration
tree
solver
technology
automated
design
configuration
asme
journal
mechanical
design
114
187-
195
sathi
fox
goyal
kott
resource
configuration
allocation
case
study
constrained
heuristics
search
ieee
expert
:26-35
1992
kott
saks
mercer
new
technique
enables
dynamic
replanning
aeromedical
evacuation
magazine
v.2
n.1
pp.43-54
1999
dupuy
attrition
forecasting
battle
casualties
equipment
losses
modern
war
hero
books
fairfax
1990
wass
czege
using
information
technologies
reduce
army
echelons
army
vol
april
2002
8-10
e.w
dijkstra
note
two
problems
connexion
graphs
numerische
mathematik
1:269
271
1959
g.s
patton
war
knew
quoted
department
army
field
manual
22-100
army
leadership
know
headquarters
washington
d.c.
1999
chapter
organizational
leadership
department
army
field
manual
71-123
tactics
techniques
combined
arms
heavy
forces
armored
brigade
battalion
task
force
headquarters
washington
d.c.
1992
blum
furst
fast
planning
planning
graph
analysis
proceedings
ijcai-
1995
pp.1636-1642
morgan
kaufmann
wilkins
des
jardins
call
knowledge-based
planning
magazine
:99-
115
2001
wilkins
myers
multiagent
planning
architecture
proceedings
aips-98
154
162
june
1998
wilkins
myers
common
knowledge
representation
plan
generation
reactive
execution
journal
logic
computation
:731–761
1995
applegate
elsaesser
sanborn
architecture
adversarial
planning
ieee
transactions
systems
man
cybernetics
volume
number
january
1990
martin
schreckenghost
helping
humans
agents
distributed
space
operations
7th
international
symposium
artificial
intelligence
robotics
automation
space
nara
japan
2003
cruz
jr.
simaan
gacic
liu
moving
horizon
game
theoretic
approaches
control
strategies
military
operation
ieee
transactions
aerospace
electronic
systems
vol
july
2002
989-999
stilman
linguistic
geometry
2000
kluwer
academic
publishers
smith
frank
jonsson
bridging
gap
planning
scheduling
knowledge
engineering
review
2000
sadeh
kott
models
techniques
dynamic
demand-
responsive
transportation
planning
technical
report
cmu-ri-tr-96-09
robotics
institute
carnegie
mellon
university
pittsburgh
may
1996
kott
ground
langston
estimation
battlefield
attrition
course
action
analysis
decision
support
system
67th
military
operations
research
society
symposium
west
point
military
academy
1999
kott
corpac
compoex
technology
assist
leaders
planning
executing
campaigns
complex
operational
environments
12th
international
command
control
research
technology
symposium
2007
figure
example
partial
sketch
statement
course
action
figure
example
synchronization
matrix
partial
produced
conventional
manual
process
starting
sketch
statement
fig.1
products
usually
drawn
hand
preprinted
template
synchronization
matrix
recently
commonly
produced
personal
computer
using
conventional
programs
office
presentation
graphics
spreadsheets
figure
coa
sketch
developed
one
several
coa-editing
tools
used
data-entry
interfaces
cadet
sketch
typically
includes
symbols
friendly
enemy
units
assembly
areas
objectives
mobility
corridors
axes
attacks
etc
figure
example
input
cadet
representation
traditional
sketch
statement
units
force
unit
blue-bn-1
blue
infantry
battalion
initallocationcoordinates
...
strength
1.00
unit
red-co-1
red
armor
company
initiallocationcoordinates
...
strength
0.80
...
typically
total
5-50
units
control
measures
controlmeasure
sword
type
objectivearea
boundarypoints
...
controlmeasure
'mc-1
type=mobility
corridor
trafficability
high
segmentpoints
...
...
typically
50-500
entities
activities
activity
'seize-1
type=seizeobjective
blue
candidateunits
blue-bn-1
blue-bn-4
...
objectivearea
sword
activity
'attack-1
type=attack
blue
targets
red-co-1
intent
attrit
...
typically
2-20
activities
including
blue
red
activities
temporal
constraints
constraint
seize-1
ends
range
0min
2hours
attack-1
starts
...
typically
2-20
constraints
figure
planners
face
need
perform
detailed
logistical
analysis
including
projected
ordnance
fuel
consumption
supply
chain
planning
several
echelons
graphs
show
results
logistical
analysis
attrition
estimation
single
unit
course
plan
figure
display
logistics
analysis
attrition
estimates
resources
together
human
planner
attention
drawn
shortage
ammunition
red
black
cells
without
human
intervention
planning
process
unit
become
critically
low
ammunition
time
poltow
bgm-71f120mm
mortar25mm
shell1-42
consumption/attrition
calculationsweapons
systempersonnelpol120mm
heat-mp-t
m830sabot
120mm
apfsds-t
m829a1120mm
mortar1-43
consumption/attrition
calculationsweapons
systempersonnelpol120mm
heat-mp-t
m830sabot
120mm
apfsds-t
m829a1120mm
mortarres
consumption/attrition
calculationsweapons
systempersonnelpol87
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
figure
cadet
takes
sketch
statement
input
produces
detailed
plan/schedule
hundreds
tasks
usage
resources
risks
losses
actions
enemy
routing
time
figure
main
output
cadet
large
synchronization
table
small
fraction
typical
product
shown
shows
function
time
recommended
tasks
friendly
force
projected
activities
enemy
status
resources
participating
units
force
figure
algorithms
used
produce
plan
produce
partial
plan
planning
complete
actlist
list
unexpanded
unallocated
activities
producepartialplan
actlist
procedure
produceplan
procedure
producepartialplan
activities
integer
maxcount
13.
newactivitycount
newactivitycount
maxcount
highestpriorityact
gethighestpriorityact
highestpriorityact
requires
expansion
newacts
expand
highestpriorityact
newactivitycount
newacts
newactivitycount
newacts
propagatetimeconstraints
highestpriorityact
foreach
activity
act
newacts
propagatetimeconstraints
act
highestpriorityact
ready
scheduling
highestpriorityact
gethighestpriorityact
schedule
highestpriorityact
figure
algorithm
describing
general
steps
activity
expansion
value
returned
set
activities
generated
expansion
function
expand
activity
expandingact
time
earlieststarttime
battlefieldstate
activities
11.
projection
battlefield
state
earlieststarttime
candidateresources
calculatecandidateresources
s.allresources
startpt
calculatestartpoint
candidateresources
earlieststarttime
endpt
calculateendpoint
startpt
endpt
apath
calculatepath
startpt
endpt
s.directedgraph
earlieststarttime
advanceacts
advance
candidateresources
apath
earlieststarttime
update
reflect
projected
effects
advanceacts
newacts
additional
activities
reaction
counteraction
derived
expandingact
create
time
constraints
expandingact
newacts
advanceacts
return
newacts
advanceacts
figure
retrieve
highest
priority
activity
function
gethighestpriorityact
activities
activity
highestpriorityact
null
foreach
activity
act
act
temporally
restricted
highestpriorityact
calculatepriority
act
calculatepriority
highestpriorityact
calculatepriority
act
calculatepriority
highestpriorityact
act.latestendtime
highestpriorityact.latestendtime
highestpriorityact
act
return
highestpriorityact
figure
propagate
temporal
constraints
activity
procedure
propagatetimeconstraints
activity
fromact
11.
foreach
constraint
fromact.allconstraints
toact
tc.getotheractivity
fromact
propagated
propagation
cycle
toact
scheduled
timing
interval
start
end
fromact
constrained
interval
possible
start
times
toact
interval
possible
end
times
toact
effects
applied
value
produces
value
outside
interval
becomes
intersection
interval
produced
application
effects
valid
becomes
intersection
interval
produced
application
propagatetimeconstraints
toact
figure
algorithm
used
schedule
activity
procedure
schedule
resources
candidateresources
activity
acttoschedule
10.
acttoschedule
scheduled
candidateresources
list
empty
duration
calculateduration
candidateresources0
acttoschedule
time
possiblestarttime
acttoschedule.earlieststart
acttoschedule.lateststart
endtime
possiblestarttime
duration
endtime
within
earliestendtime
latestendtime
candidateresources0
assignments
possiblestarttime
endtime
recordconsumption
starttime
endtime
candidateresources0
schedule
activity
starttime
endtime
else
remove
candidateresources0
candidateresources
figure
typical
example
series
expansions
produce
action
reaction
counteraction
arc
activity
initially
expanded
passage
lines
expansion
shown
reaction
activity
produced
generating
arcs
passage
lines
shown
temporally
constrained
occur
prior
action
generation
arcs
enemy
fire
passage
point
produces
two
counteractions
shown
figure
two
examples
action-reaction-counteraction
calculation
methods
first
method
called
expansion
passage
lines
generates
synchronizes
artillery
fire
second
called
expansion
artillery
fire
generates
counteraction
consisting
counterbattery
activities
function
generateactionreactioncounteraction
activity
passageact
battlefieldstate
activities
candidateresources
calculatecandidateresources
s.allresources
candidateresources
exist
candidateresources
range
passageact.location
fireonpp
new
activity
artillery
fire
candidateresources
createtimeconstraint
fireonpp
starts
interval=
00:15
00:30
passageact
starts
return
fireonpp
function
generateactionreactioncounteraction
activity
fireonpp
battlefieldstate
activities
candidateresources
calculatecandidateresources
s.allresources
candidateresources
exist
candidateresources
range
fireonpp.location
counterbattery
new
activity
artillery
fire
candidateresources
findenemy
new
activity
find
enemy
candidateresources
createtimeconstraint
counterbattery
starts
interval=
00:00
00:00
fireonpp
starts
createtimeconstraint
findenemy
starts
interval=
00:00
00:00
fireonpp
starts
createtimeconstraint
counterbattery
ends
interval=
00:00
00:00
fireonpp
ends
return
findenemy
counterbattery
figure
10a
example
activity
description
activity
class
name
emplace
scatterable
minefield
required
inputs
location
width
intent
minefield
scheduling
allocation
priority
figure
10b
high
priority
activity
part
main
effort
medium
otherwise
expansion
method
figure
10c
create
series
activities
move
unit
position
firing
range
desired
minefield
location
additional
ordnance
required
generate
activity
supplying
required
ordnance
create
temporal
constraints
sub-activities
method
estimate
duration
activity
figure
10d
calculate
using
combination
tables
algebraic
formulae
based
number
vehicles
unit
capable
firing
required
ordnance
intent
dimensions
minefield
rate
unit
fire
specified
ordnance
type
method
assign
resource
set
candidate
resources
activity
figure
10e
available
utilize
artillery
provided
division
divisional
artillery
unavailable
utilize
artillery
unit
organic
main
effort
coa
method
determine
much
resource
required
estimate
minimum
size
fraction
unit
required
perform
activity
based
combination
tables
algebraic
formulae
considering
size
minefield
intent
type
capabilities
unit
etc
method
find
start
point
activity
figure
10f
find
point
assigned
unit
located
completing
recent
preceding
activity
method
find
end
point
figure
10f
find
point
closest
start
point
firing
range
desired
minefield
location
path
finding
method
use
standard
routing
version
dijkstra
algorithm
weighting
scheme
favoring
paths
low
threat
high
accessibility
ammo
consumption
estimation
method
figure
10g
calculate
using
formula
involving
desired
density
dimensions
minefield
attrition
estimation
method
calculate
using
formula
relating
fraction
personnel
equipment
losses
type
engagement
hostile
forces
strengths
forces
posture
environmental
conditions
etc
figure
10b
example
priority
calculation
algorithm
defined
minefield
emplacement
activity
function
calculatepriority
activity
emplaceact
resource
aresource
activitypriority
aresource
divisional
resource
return
high
priority
emplaceact
part
main
effort
return
medium
priority
else
emplaceact
part
supporting
effort
aresource
subordinate
unit
resource
return
low
priority
return
medium
priority
figure
10c
example
expansion
algorithm
defined
minefield
emplacement
activity
function
expand
activity
expandingact
time
earlieststarttime
points
minepts
activities
16.
projection
battlefield
state
earlieststarttime
candidateresources
calculatecandidateresources
s.allresources
startpt
calculatestartpoint
candidateresources
earlieststarttime
endpt
calculateendpoint
startpt
minepts
s.directedgraph
candidateresources
startpt
endpt
moveact
new
activity
move
candidateresources
startpt
endpt
createtimeconstraint
moveact
ends
interval=
00:00
expandingact
starts
newactivities
newactivities
moveact
update
reflect
effects
moveact
ordnance
levels
required
levels
fuel
required
level
supplyact
new
activity
full
resupply
candidateresources
else
fuel
required
level
supplyact
new
activity
basic
refuel
candidateresources
createtimeconstraint
supplyact
ends
interval=
00:00
00:30
moveact
starts
newactivities
newactivities
supplyact
return
newactivities
figure
10d
example
duration
calculation
algorithm
defined
minefield
emplacement
activity
function
calculateduration
resource
aresource
minefieldintent
mintent
number
mwidth
minefieldtype
mtype
duration
numapts
getnumberofaimingpoints
mtype
mwidth
density
getrequireddensity
mintent
rndsperapt
getnumberofroundsperaimingpoint
density
mtype
numvehicles
getnumberofvehiclesinunit
howitzer
aresource
firingratepervehicle
getfiringrate
howitzer
return
rndsperapt
numapts
numvehicles
firingratepervehicle
figure
10e
example
candidate
resource
calculation
algorithm
defined
minefield
emplacement
activity
function
calculatecandidateresource
resources
allresources
resources
11.
candidateresources
empty
list
foreach
resource
allresources
side
required
activity
perform
artillery
tasks
provided
division
insert
candidateresources
else
side
required
activity
perform
artillery
tasks
subordinate
main
effort
coa
append
candidateresources
return
candidateresources
figure
10f
example
start
end
point
calculation
algorithms
defined
minefield
emplacement
activity
function
calculatestartpoint
resource
aresource
time
starttime
battlefieldstate
point
function
calculateendpoint
point
startpoint
points
minefieldpoints
directedgraph
dgraph
return
position
aresource
time
starttime
resource
aresource
point
sortedpointlist
sortbyproximitytopoint
dgraph.points
startpoint
endpoint
null
distancebetween
sortedpointlisti
minefieldpoints
aresource.firingrange
path
exists
sortedpointlisti
minefieldpoints
endpoint
sortedpointlisti
i++
return
endpoint
figure
10g
example
fuel
ammunition
consumption
algorithm
defined
minefield
emplacement
activity
procedure
recordconsumption
time
starttime
time
endtime
resource
aresource
density
getrequireddensity
mintent
numapts
getnumberofaimingpoints
mtype
mwidth
totalrequiredrounds
getnumberofroundsperaimingpoint
density
mtype
numapts
recordconsumption
aresource
starttime
endtime
minefield_ordnance
totalrequiredrounds
recordconsumption
aresource
starttime
endtime
fuel
non_moving_fuel_usage_rate
recordconsumption
aresource
starttime
endtime
standard_ordnance
background_std_ordnance_rate
figure
10h
example
attrition
estimation
algorithm
defined
attack
activity
calculation
values
personnel
weapon
systems
attrition
steps
use
empirical
coefficients
derived
partly
dupuy
procedure
recordattrition
time
starttime
time
endtime
resource
aresource
units
targets
friendlyattritionfactor
activity
dependant
factor
applied
friendly
attrition
defstrength
foreach
unit
targets
defstrength
defstrength
strengthattime
starttime
attstrength
strengthattime
aresource
starttime
attpersonnelattrition
attposturefactor*
defstrength*terrainfactor*defposturefactor
/attstrength
0.41
defpersonnelattrition
defposturefactor*
defstrength*terrainfactor*defposturefactor
/attstrength
-0.41
attwsattrition
attpersonnelattrition
defwsattrition
defpersonnelattrition
foreach
unit
targets
recordattrition
starttime
endtime
weapons_systems
defwsattrition
recordattrition
starttime
endtime
personnel
defpersonnelattrition
recordattrition
aresource
starttime
endtime
weapons_systems
attwsattrition*
friendlyattritionfactor
recordattrition
aresource
starttime
endtime
personnel
attpersonnelattrition*
friendlyattritionfactor
14.
figure
11.
expansion
procedure
activity
class
advance
function
returns
ordered
list
activities
required
accomplish
advance
function
advance
resource
aresource
path
apath
time
projectedstart
battlefieldstate
activities
14.
projection
battlefield
state
projectedstart
newacts
empty
list
apath.numsegments
requiredacttype
getrequiredactivitytype
apath.segmentsi
newactsn.activitytype
requiredacttype
update
newactsn
additional
segment
apath.segmentsi
else
newactsn+1
new
activity
requiredacttype
createtimeconstraint
newactsn+1
starts
interval
02:00
newactsn
ends
n++
update
reflect
effects
activity
newactsn
generate
resupply
activities
required
return
newacts
grades
figure
12.
judges
asked
grade
products
cadet
manual
process
scale
10.
results
shown
several
subsets
products
similar
even
though
computer-aided
products
produced
dramatically
faster
cadet-assisted
manual
figure
13.
partial
representation
activity
model
