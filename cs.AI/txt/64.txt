modeling
human
hoc
coordination
peter
krafft∗
chris
baker†
alex
sandy
pentland‡
joshua
tenenbaum†
∗computer
science
artiﬁcial
intelligence
laboratory
†mit
media
lab
‡department
brain
cognitive
sciences
massachusetts
institute
technology
cambridge
usa
pkrafft
clbaker
pentland
jbt
mit.edu
abstract
whether
groups
humans
groups
computer
agents
collaboration
effective
individ-
uals
ability
coordinate
joint
strat-
egy
collective
action
however
general
rational
actor
intend
coordinate
actor
believes
group
members
intention
circular
dependence
makes
rational
coordination
difﬁ-
cult
uncertain
environments
communication
be-
tween
actors
unreliable
prior
agreements
made
important
normative
question
re-
gard
coordination
hoc
settings
therefore
one
come
believe
actors
co-
ordinate
regard
systems
involving
humans
important
empirical
question
humans
arrive
expectations
introduce
exact
algorithm
computing
inﬁnitely
recursive
hierarchy
graded
beliefs
required
rational
coordination
uncertain
environments
introduce
novel
mechanism
multiagent
coordination
uses
algorithm
valid
environment
ﬁnite
state
space
extensions
certain
countably
inﬁnite
state
spaces
likely
possible
test
mechanism
multiagent
coordination
model
human
decisions
simple
coordination
game
using
existing
experimental
data
explore
via
simulations
whether
modeling
humans
way
may
improve
human-agent
collaboration
forming
shared
plans
support
mutually
beneﬁcial
be-
havior
within
group
central
collaborative
social
inter-
action
collective
intelligence
grosz
kraus
1996
indeed
many
common
organizational
practices
designed
facilitate
shared
knowledge
structure
goals
organizations
well
mutual
recognition
roles
individuals
organizations
play
teams
be-
come
physically
separated
responsiveness
frequency
communication
declines
challenge
forming
shared
plans
increases
part
difﬁculty
fundamentally
com-
putational
theory
coming
fully
mutually
recognized
agreement
even
simple
action
plan
among
two
choices
literally
impossible
communication
even
mildly
unreliable
even
arbitrary
amount
communication
allowed
halpern
moses
1990
lynch
1996
copyright
cid:13
2016
association
advancement
artiﬁcial
intelligence
www.aaai.org
rights
reserved
problem
well-studied
within
literature
e.g.
gmytrasiewicz
durfee
1992
though
core
difﬁ-
culties
still
manifest
contemporary
research
hoc
coordination
—collaborative
multiagent
planning
pre-
viously
unknown
teammates
stone
2010
however
surprisingly
little
known
strategies
humans
use
overcome
difﬁculties
coordination
thomas
2014
understanding
people
try
co-
ordinate
critical
furthering
understanding
human
group
behavior
well
design
agents
human-
agent
collectives
jennings
2014
existing
attempts
modeling
human
coordination
focused
either
un-
structured
predictive
models
e.g.
frieder
lin
kraus
2012
bounded
depth
socially
recursive
reasoning
mod-
els
e.g.
gal
pfeffer
2008
yoshida
dolan
friston
2008
reason
believe
accounts
miss
important
aspects
human
coordination
one
concept
appears
repeatedly
formal
treatments
coordination
appeared
meaningfully
empir-
ical
modeling
common
knowledge
two
agents
com-
mon
knowledge
agents
inﬁnitely
nested
knowl-
edge
agent
knowledge
proposition
i.e
ﬁrst
agent
knows
second
agent
knows
ﬁrst
agent
knows
second
agent
knows
ﬁrst
agent
knows
etc
common
knowledge
shown
necessary
ex-
act
coordination
halpern
moses
1990
proba-
bilistic
generalization
common
knowledge
called
com-
mon
p-belief
shown
necessary
ap-
proximate
coordination
monderer
samet
1989
notions
clearly
important
normatively
en-
tirely
clear
important
empirically
human
co-
ordination
indeed
supposing
humans
able
men-
tally
represent
inﬁnitely
recursive
belief
state
seems
priori
implausible
need
represent
infer
inﬁnite
recursive
belief
state
also
barrier
em-
pirically
testing
models
involving
common
knowledge
nevertheless
building
existing
normative
results
group
researchers
recently
designed
set
experi-
ments
test
whether
people
able
recognize
situations
common
knowledge
might
obtain
thomas
2014
hereafter
referred
thomas
experiments
researchers
argued
people
possess
distinct
mental
representation
common
knowledge
showing
people
attempt
coordinate
often
situa-
tions
common
knowledge
inferred
however
previous
work
formalize
claim
model
rigorously
test
plausible
alternative
computational
models
coordination
existing
empirical
work
there-
fore
leaves
open
several
important
scientiﬁc
questions
modeling
effort
help
address
particular
might
people
mentally
represent
common
p-belief
people
rea-
son
graded
levels
common
p-belief
sufﬁ-
ciently
high
common
p-belief
finally
computational
processes
could
people
use
infer
common
p-belief
work
use
previously
established
ﬁxed
point
characterization
common
p-belief
monderer
samet
1989
formulate
novel
model
human
coordination
ﬁnite
state
spaces
characterization
yields
exact
ﬁnite
representation
common
p-belief
use
develop
efﬁcient
algorithm
computing
common
p-belief
algorithm
allows
simulate
models
rely
common
p-belief
normative
importance
common
p-belief
coordination
problems
algorithm
may
also
independently
useful
coordination
artiﬁcial
multiagent
systems
show
using
data
thomas
experiments
model
provides
better
account
human
decisions
three
alternative
models
simple
coordination
task
finally
show
via
simulations
based
data
thomas
experiments
modeling
humans
way
may
improve
human-agent
coordination
background
ﬁrst
provide
description
coordination
task
study
paper
well-known
coordinated
attack
problem
provide
overview
formal
deﬁni-
tions
common
knowledge
common
p-belief
relationship
coordinated
attack
problem
1.1
coordinated
attack
problem
coordination
task
study
paper
alterna-
tively
called
coordinated
attack
problem
two
gen-
erals
problem
email
game
original
formula-
tion
task
posed
literature
distributed
computer
systems
illustrate
impossibility
achieving
consensus
among
distributed
computer
processors
use
unreliable
message-passing
system
halpern
moses
1990
problem
later
adapted
economists
game
theoretic
context
rubinstein
1989
focus
game
theoretic
adaptation
formulation
amenable
decision-theoretic
modeling
thus
rel-
evant
modeling
human
behavior.1
task
world
one
two
states
state
world
determines
two
games
two
players
play
together
payoff
matrices
two
games
follows
max
players
receive
optimal
payoff
coordinate
playing
playing
risky
playing
inferior
playing
mismatch
players
actions
playing
safe
sure
payoff
thus
order
rational
play
player
must
believe
sufﬁcient
conﬁdence
world
state
player
play
1.2
common
p-belief
order
player
believe
player
play
game
enough
player
believe
player
knows
second
player
believe
ﬁrst
player
knows
second
player
try
coordinate
therefore
ﬁrst
player
must
also
least
believe
second
player
believes
ﬁrst
player
knows
however
turns
even
amount
knowledge
sufﬁce
fact
inﬁnite
hi-
erarchy
recursive
belief
needed
morris
shin
1997
inﬁnite
hierarchy
beliefs
formalized
using
construct
called
common
p-belief
deﬁne
using
standard
deﬁnitions
game
theory
de-
ﬁne
two-player
ﬁnite
bayesian
game
tuple
consisting
ﬁnite
state
space
ω|ω|
probability
measure
deﬁned
state
space
information
partition
player
action
set
player
utility
function
player
elements
called
states
subsets
called
events
given
world
state
player
partition
uniquely
speciﬁes
be-
liefs
player
form
posterior
probabilities
indicates
unique
element
containing
thought
observation
player
receives
true
state
occurs
speciﬁcally
event
probability
player
assigns
occurred
given
occurred
shorthand
write
using
another
common
shorthand
treat
propositions
events
satisfying
propositions
interchangeably
example
co-
ordinated
attack
problem
interested
whether
common
p-belief
refer
common
p-belief
event
formally
random
variable
mapping
following
dalkiran
2012
say
player
believes2
event
event
said
p-evident
players
player
p-believes
slight
divergence
standard
terminology
literature
say
event
super-p-evident
players
difference
strict
inequality
say
common
p-belief
event
state
exists
p-evident
event
cid:48
players
player
p-believes
cid:48
common
knowledge
deﬁned
common
p-belief
critically
important
result
monderer
samet
1989
states
deﬁnition
common
p-belief
equiv-
1our
exposition
largely
assumes
familiarity
rudimentary
game
theory
familiarity
measure-theoretic
probability
appears
incomplete
information
games
2we
use
italicized
referring
speciﬁc
values
p-belief
non-italicized
referring
terms
gen-
eral
alent
intuitive
inﬁnitely
recursive
formulation
importance
deﬁnition
common
p-belief
therefore
provides
ﬁxed
point
characterization
common
belief
strictly
terms
beliefs
events
rather
directly
terms
beliefs
players
ﬁnite
common
p-belief
thus
represented
terms
ﬁnite
set
states
rather
inﬁnite
hierarchy
beliefs
models
describe
four
strategies
coordination
co-
ordinated
attack
game
study
two
strategies
in-
volve
computation
p-evident
events
common
belief
use
test
whether
human
coordina-
tion
behavior
could
explained
terms
reasoning
p-evident
events
two
strategies
serve
baselines
2.1
rational
p-belief
ﬁrst
strategy
consider
represents
agent
max-
imizes
expected
utility
equilibrium
point
co-
ordinated
attack
problem
study
strategy
imple-
mented
follows
player
plays
action
player
believes
probability
least
c−b
a−b
players
common
p∗-belief
strategy
forms
equilibrium
coordinated
attack
problem
evidence
always
leads
certain
belief
i.e
conditions
satisﬁed
speciﬁc
state
spaces
payoffs
use
represent
thomas
experiments
call
model
rational
p-belief
strategy
proof
strategy
forms
equilibrium
including
derivation
speciﬁc
form
included
supplementary
materials.3
2.2
matched
p-belief
second
strategy
consider
novel
probabilistic
relaxation
rational
p-belief
strategy
humans
shown
exhibit
behavior
called
probability
match-
ing
many
decision-making
settings
herrnstein
1961
vulkan
2000
probability
matching
consists
taking
probability
decision
best
decision
available
choosing
make
decision
probability
probability
matching
utility
maximizing
viewed
rational
players
performing
sample-based
bayesian
inference
taking
samples
costly
vul
2014
motivated
frequently
observed
behavior
propose
model
call
matched
p-belief
strategy
player
using
strategy
chooses
action
probability
equal
maximal
common
p-belief
player
perceives
i.e
largest
value
believes
common
p-belief
version
paper
includes
supplementary
materials
well
post-publication
corrections
main
text
available
multiple
locations
online
includ-
ing
http
//people.csail.mit.edu/pkrafft/papers/krafft-et-al-2016-
modeling-human-ad-hoc-coordination.pdf
iterated
maximization
2.3
next
consider
well-known
model
boundedly
rational
behavior
sometimes
called
level-k
depth
reasoning
model
family
models
shown
consis-
tent
human
behavior
diversity
settings
including
coordination
games
e.g.
yoshida
dolan
friston
2008
hence
strong
baseline
since
term
level-
used
many
slightly
different
models
call
in-
stantiation
model
iterated
maximization
strategy
strategy
assumes
players
certain
ﬁxed
level
recursive
social
reasoning
player
using
level-k
iterated
maximization
strategy
chooses
action
max-
imizes
player
expected
utility
playing
player
using
level-
strategy
level-0
player
takes
action
c−b
a−b
level-0
strategy
corresponds
player
maximizing
expected
util-
ity
assuming
player
control
actions
play-
ers
equivalently
optimal
joint
action
taken
ac-
cording
player
beliefs
general
predic-
tions
level-k
models
depend
strongly
speciﬁcation
level-0
strategy
informal
exploration
found
qualitative
conclusions
work
robust
whether
instead
specify
level-0
strategy
always
playing
choosing
uniformly
randomly
iterated
matching
2.4
finally
also
consider
less
common
depth
reason-
ing
model
combines
iterated
maximization
strategy
probability
matching
behavior
call
iterated
matching
like
iterated
maximization
strategy
strat-
egy
assumes
players
certain
ﬁxed
level
recur-
sive
social
reasoning
however
instead
choosing
action
maximizes
expected
utility
level-k
player
us-
ing
iterated
matching
strategy
chooses
take
action
probability
equal
player
belief
times
expected
probability
level-
k−1
companion
player
would
play
level-0
player
probability
matches
algorithms
section
present
algorithms
use
imple-
ment
models
consider
best
knowledge
existing
literature
common
p-belief
yet
offer
algorithms
computing
common
p-belief
case
perceived
maximal
common
p-belief
given
world
state
observation
model
computa-
tion
central
rational
matched
p-belief
strategies
hence
offer
ﬁrst
fully
computational
account
co-
ordination
via
reasoning
p-evident
events
algorithms
iterated
reasoning
straightforward
well-known
challenge
developing
algorithm
computing
player
perception
maximal
common
p-belief
avoiding
enumeration
exponentially
many
possible
subsets
straightforward
evaluate
whether
particular
given
event
p-evident
deﬁnition
com-
mon
p-belief
requires
existence
event
computing
perceived
maximal
common
p-belief
therefore
algorithm
common
belief
evidence
level
super
evident
evidence
level
return
algorithm
evidence
level
return
minω∈e
min
belief
requires
jointly
searching
values
sub-
sets
leverage
generic
mathematical
structure
p-evident
events
ﬁnite
state
spaces
order
develop
exact
algorithm
avoids
enumerating
subsets
algorithm
requires
search
polynomial
size
state
space
course
state
spaces
many
problems
often
exponential
underly-
ing
parameter
variables
hence
future
improvements
algorithm
would
desirable
extensions
least
cer-
tain
countably
inﬁnite
continuous
state
spaces
likely
possible
well
perhaps
reﬁning
search
consider
events
non-zero
probability
given
player
observations
3.1
computing
information
partitions
algorithms
require
access
information
partitions
player
however
directly
specifying
information
partitions
people
naturalistic
setting
data
use
thomas
experiments
difﬁ-
cult
instead
take
approach
specifying
plausible
generative
probabilistic
world
model
construct
information
partitions
factored
representation
via
straightforward
algorithm
generative
world
model
speciﬁes
pieces
information
observations
player
receives
algorithm
generating
informa-
tion
partitions
speciﬁed
precisely
supple-
mentary
materials
consists
iterating
combina-
tions
random
values
variables
generative
world
model
treating
combination
state
player
grouping
together
states
yield
iden-
tical
observations
3.2
computing
common
p-belief
algorithms
1-4
present
functions
needed
compute
per-
ceived
maximal
common
p-belief
formally
given
player
particular
state
event
algorithm
com-
putes
largest
value
player
p-believes
common
p-belief
note
insufﬁcient
compute
largest
value
common
p-belief
since
general
state
player
knows
event
occurred
specif-
ically
occurred
relatedly
note
algorithm
takes
input
convenience
algorithm
depends
hence
could
executed
player
algorithm
min
belief
return
mini∈
0,1
min
algorithm
super
evident
changed
min
belief
return
formal
proofs
correctness
algorithms
included
supplementary
materials
basic
logic
algorithms
maintain
candidate
p-evident
event
gradually
remove
elements
make
p-evident
point
player
believes
event
impossible
elements
event
longer
consistent
player
observations
remov-
ing
elements
either
cause
unlikely
cause
unlikely
guaranteed
arrive
p-evident
event
iteration
one
preserves
belief
starting
entire
state
space
ﬁnal
candidate
event
must
largest
p-evident
event
player
p-believes
state
common
p-belief
algorithm
also
viewed
traversing
unique
nested
sequence
maximally
evident
events
independent
induced
structure
halt-
ing
ﬁrst
event
sequence
include
elements
rational
p-belief
strategy
consists
player
taking
action
common
belief
c−b
a−b
matched
p-belief
strategy
consists
player
choosing
probability
common
belief
iterated
reasoning
3.3
present
algorithms
iterated
reasoning
strategies
level
given
player
state
iterated
maximization
strategy
computes
cid:48
∈πi
cid:48
k−1
cid:48
1−i
cid:48
cid:0
k−1
cid:48
k−1
1−i
cid:48
cid:17
cid:17
1−i
cid:48
cid:1
cid:16
cid:88
cid:16
a−b
indicator
function
c−b
player
plays
oth-
erwise
player
plays
iterated
matching
strategy
1−i
cid:48
cid:88
cid:48
qk−1
cid:48
∈πi
played
probability
data
present
data
use
empirical
results
dataset
comes
thomas
experiments
thomas
2014
experiments
presented
participants
stylized
coordinated
attack
problem
couched
story
figure
data
thomas
experiments
predictions
models
consider
butcher
baker
town
story
mer-
chants
either
work
together
produce
hot
dogs
work
separately
produce
chicken
wings
dinner
rolls
respectively
merchants
sell
chicken
wings
dinner
rolls
separately
constant
proﬁt
day
proﬁt
hot
dogs
varies
day-to-day
merchants
make
proﬁt
particular
day
also
loudspeaker
sometimes
publicly
announces
prices
hot
dogs
messenger
runs
around
town
delivering
messages
experi-
ments
four
different
knowledge
conditions
speciﬁed
information
participants
received
private
knowledge
messenger
boy
sic
seen
butcher
today
tell
anything
butcher
knows.
secondary
knowledge
messenger
boy
says
stopped
butcher
shop
coming
bak-
ery
tells
butcher
knows
today
hot
dog
price
however
says
forgot
mention
butcher
coming
see
butcher
aware
know
today
hot
dog
price.
tertiary
knowledge
messenger
boy
mentions
heading
butcher
shop
let
butcher
know
today
price
well
messenger
boy
also
tell
butcher
came
bak-
ery
told
price
however
messenger
boy
inform
butcher
told
would
heading
butcher
aware
know
today
price
aware
know
knows
that.
common
knowledge
loudspeaker
broadcast
market
price
messenger
boy
come
be-
cause
market
price
broadcast
loudspeaker
butcher
knows
today
price
knows
know
information
well.
shown
information
well
additional
information
indicating
participants
asked
whether
would
like
try
make
hot
dogs
dataset
experiment
visualized
figure
since
researchers
provided
evidence
behavior
participants
two-player
experiments
invariant
payoffs
focus
ﬁrst
payoff
condition
1.1
0.4.
use
dataset
test
whether
coordination
strate-
gies
described
good
models
human
coordina-
tion
setting
order
able
generate
predictions
models
must
determine
state
space
repre-
sents
story
thomas
experiments
designed
following
two
probabilistic
generative
world
models
one
messenger
one
loudspeaker
consis-
tent
reading
knowledge
conditions
experiments
observe
function
indicates
player
observes
messenger
bernoulli
visit0
bernoulli
0.5
visit1
bernoulli
0.5
tell
plan0
visit0
bernoulli
0.5
tell
plan1
visit1
bernoulli
0.5
visit0
observe
tell
plan0
observe
visit1
tell
plan1
visit1
observe
visit0
tell
plan1
observe
tell
plan0
loudspeaker
bernoulli
broadcast
bernoulli
0.5
broadcast
observe
observe
models
share
free
parameter
take
0.25.
setting
provides
closer
empirical
data
maximum
entropy
setting
0.5.
interpret
state-
ments
one
player
aware
meaning
player
could
made
aware
assign
maximum
entropy
probability
0.5
events
state
spaces
corresponding
world
models
consist
sets
possible
combinations
vari-
ables
models
generative
processes
visit0
visit1
tell
plan0
tell
plan0
ωmessenger
broadcast
ωloudspeaker
generative
processes
also
uniquely
spec-
privatesecondarytertiarycommonknowledge
condition0.00.20.40.60.81.0percent
coordinationbehavioral
dataprivatesecondarytertiarycommonknowledge
condition0.00.20.40.60.81.0percent
coordinationrational
p-beliefprivatesecondarytertiarycommonknowledge
conditionmatched
p-beliefprivatesecondarytertiarycommonknowledge
conditioniterated
maximizationprivatesecondarytertiarycommonknowledge
conditioniterated
matching
figure
mean-squared
error
model
predic-
tions
thomas
experiments
data
ify
probability
measures
state
space
knowl-
edge
conditions
correspond
following
states
pri-
vate
ωmessenger
secondary
ωmessenger
tertiary
ωmessenger
com-
mon
knowledge
ωloudspeaker
participants
act
player
secondary
condition
due
high
ambiguity
wording
private
knowledge
condi-
tion
considered
two
plausible
readings
either
mes-
senger
communicating
intention
visit
player
messenger
unhelpful
offering
information
messenger
plan
using
state
assume
ﬁrst
interpretation
interpretation
results
better
empirical
results
present
empirical
results
ﬁrst
examine
predictions
coordination
strategies
consider
given
generative
processes
representing
thomas
experiments
examine
extent
computer
agent
equipped
best
ﬁtting
model
hu-
man
coordination
able
achieve
higher
payoffs
sim-
ulated
human-agent
coordination
problem
code
available
online
https
//github.com/pkrafft/modeling-
human-ad-hoc-coordination
5.1
model
comparison
perform
model
comparison
compute
probability
choosing
model
predicts
given
formal
representations
four
knowledge
conditions
compare
predicted
probabilities
actual
probabilities
observed
thomas
experiments
two
iterated
reasoning
models
use
grid
search
ﬁnd
best
ﬁtting
model
ul-
timately
iterated
maximization
iter-
ated
matching
speciﬁc
predictions
model
shown
figure
shown
figure
matched
belief
model
achieves
lowest
mean-squared
error
quali-
tatively
striking
aspect
data
matched
p-belief
model
successfully
captures
similarity
probability
coordination
secondary
ter-
tiary
knowledge
conditions
two
models
involve
maximizing
agents
rational
p-belief
iterated
maximiza-
tion
make
predictions
extreme
iter-
ated
matching
model
offers
competitive
second
place
data
fails
capture
similarity
middle
two
knowledge
conditions
figure
performance
agents
simulated
human-
agent
coordination
experiments
strategy
marginal
value
expected
sum
payoffs
strategy
obtained
four
knowledge
conditions
minus
payoffs
could
obtained
always
playing
reason
matched
p-belief
model
makes
good
predictions
two
middle
conditions
player
conditions
amount
uncer-
tainty
appearing
level
player
inﬁnite
re-
cursive
hierarchy
interpersonal
beliefs
common
p-belief
essentially
represents
minimum
taken
levels
thus
common
p-belief
two
condi-
tions
rational
p-belief
model
aware
uncertainty
higher
levels
recursive
belief
pre-
dictions
coarse
due
assumption
utility
max-
imization
interesting
avenue
future
work
ex-
amine
whether
rational
p-belief
model
relaxed
way
allow
intermediate
predictions
allowing
heterogeneity
interpretations
world
model
across
agents
possible
matched
p-belief
model
approximating
case
5.2
human-agent
coordination
besides
testing
models
human
coordination
proposed
also
interested
whether
best
ﬁtting
model
helps
improve
outcomes
human-
agent
coordination
use
data
thomas
ex-
periments
evaluate
possibility
task
com-
puter
agents
implement
call
cognitive
strategy
agent
using
cognitive
strategy
chooses
action
maximizes
expected
utility
assumption
agent
companion
using
matched
p-belief
model
agents
play
humans
companion
player
four
knowledge
conditions
thomas
experiments
player
secondary
condition
evaluate
payoffs
agents
actions
using
human
data
thomas
experiments
simulation
vary
payoffs
assume
humans
would
remain
payoff
invariant
across
range
payoffs
use
assumption
reasonable
given
participants
thomas
experiments
displayed
payoff
invariance
two-agent
case
vary
payoffs
according
risk
tak-
ing
payoffs
particular
risk
level
c−b
a−b
shown
figure
ﬁnd
matched
p-belief
model
human
coordination
may
help
human-agent
coordination
compared
two
baseline
strategies
agent
using
private
heuristic
always
0.00.10.20.30.40.50.60.70.8mean
squared
errorrational
p-beliefmatched
p-beliefiterated
maximizationiterated
matchingmodel0.00.20.40.60.81.0risk1.00.50.00.51.01.52.02.5strategy
marginal
valueprivate
heuristicpair
heuristiccognitive
strategy
coordinates
agent
knows
agent
using
pair
heuristic
always
coordinates
agent
knows
agent
human
know
private
heuristic
achieves
good
performance
low
risk
levels
pair
heuristic
achieves
good
performance
high
risk
levels
cognitive
strategy
achieves
good
performance
low
high
levels
risk
negative
marginal
value
always
playing
safe
action
high
levels
risk
discussion
present
paper
focused
laying
groundwork
using
common
p-belief
cognitive
modeling
particular
developed
efﬁcient
algorithm
in-
ference
maximal
perceived
common
p-belief
showed
coordination
strategy
probability
matching
common
p-belief
explains
certain
surprising
qualitative
fea-
tures
existing
data
previous
human
experiment
showed
model
may
also
help
improve
agent
outcomes
human-agent
coordination
work
three
main
limitations
due
small
amount
human
data
lack
held-out
test
set
empirical
results
necessarily
suggestive
data
inconsistent
rational
p-belief
model
iter-
ated
maximization
model
predictions
iterated
matching
model
matched
p-belief
model
reasonably
good
strongest
evidence
favoring
matched
p-belief
model
model
ability
pro-
duce
equal
amounts
coordination
secondary
tertiary
knowledge
conditions
well
low
amount
private
knowledge
high
amount
common
knowl-
edge
iterated
reasoning
model
formulation
could
ﬁnd
thomas
experiments
able
cap-
ture
equality
two
middle
conditions
maintaining
good
predictions
extremes
two
important
limitations
work
coordination
task
consider
involve
intentional
communication
state
action
spaces
task
sim-
ple
features
allowed
easily
test
predic-
tions
alternative
models
would
interest-
ing
see
models
considered
would
compare
complex
environments
related
interesting
direction
future
work
application
inference
common
p-belief
reasoning
p-evident
events
artiﬁ-
cial
distributed
systems
developing
analyz-
ing
bitcoin/blockchain-like
protocols
synchronizing
remote
servers
distributed
planning
hoc
multi-robot
teams
acknowledgments
special
thanks
kyle
thomas
providing
data
moshe
hoffman
bringing
attention
p-evident
events
material
based
upon
work
supported
nsf
grfp
grant
1122374
center
brains
minds
machines
cbmm
nsf
stc
award
ccf-1231216
nsf
grant
iis-1227495
aro
grant
6928195.
opinion
ﬁndings
conclusions
recommendations
expressed
material
authors
necessarily
reﬂect
views
sponsors
references
dalkiran
hoffman
paturi
ricketts
vattani
2012.
common
knowledge
state-dependent
equilibria
algorithmic
game
theory
springer
84–95
frieder
lin
kraus
2012.
agent-human
coordination
communication
costs
uncertainty
proceedings
11th
international
conference
au-
tonomous
agents
multiagent
systems
1281–1282
gal
pfeffer
2008.
networks
inﬂuence
di-
agrams
formalism
representing
agents
beliefs
decision-making
processes
journal
artiﬁcial
intelligence
research
:109–147
gmytrasiewicz
durfee
1992.
decision-
theoretic
recursive
modeling
coordinated
attack
problem
proceedings
first
international
confer-
ence
artiﬁcial
intelligence
planning
systems
88–95
grosz
kraus
1996.
collaborative
plans
complex
group
action
artiﬁcial
intelligence
:269–357
halpern
moses
1990.
knowledge
common
knowledge
distributed
environment
journal
acm
:549–587
herrnstein
1961.
relative
absolute
strength
re-
sponse
function
frequency
reinforcement
journal
experimental
analysis
behavior
:267.
jennings
moreau
nicholson
ramchurn
roberts
rodden
rogers
2014.
human-agent
collectives
communications
acm
:80–88
lynch
1996.
distributed
algorithms
morgan
kauf-
mann
monderer
samet
1989.
approximating
common
knowledge
common
beliefs
games
economic
be-
havior
:170–190
morris
shin
1997.
approximate
com-
mon
knowledge
co-ordination
recent
lessons
game
theory
journal
logic
language
information
:171–190
rubinstein
1989.
electronic
mail
game
strategic
behavior
almost
common
knowledge
ameri-
economic
review
385–391
stone
kaminka
kraus
rosenschein
2010.
hoc
autonomous
agent
teams
collaboration
with-
pre-coordination
twenty-fourth
aaai
conference
artiﬁcial
intelligence
thomas
descioli
haque
pinker
2014.
psychology
coordination
common
knowledge
journal
personality
social
psychology
107
:657–
676.
vul
goodman
grifﬁths
tenenbaum
2014.
one
done
optimal
decisions
sam-
ples
cognitive
science
:599–637
vulkan
2000.
economist
perspective
probability
matching
journal
economic
surveys
:101–118
yoshida
dolan
friston
2008.
game
the-
ory
mind
plos
computational
biology
e1000254–
e1000254
supplemental
materials
supplementary
sections
present
proofs
correctness
algorithms
key
proofs
self-
contained
rely
preliminary
results
involv-
ing
structure
p-evident
events
ﬁnite
probability
spaces
ﬁrst
offer
proofs
preliminary
results
initial
results
section
prove
ratio-
nal
p-belief
strategy
equilibrium
models
sec-
tion
finally
show
correctness
algorithm
computing
perceived
maximal
common
p-belief
al-
gorithms
section
ﬁnal
section
also
includes
al-
gorithm
computing
information
partitions
given
probabilistic
generative
world
model
proofs
original
less
trivial
lem-
mas
propositions
may
novel
contributions
lit-
erature
p-evident
events
particular
know
work
explores
structure
call
maxi-
mally
evident
c-indicating
events
i.e
maximally
p-evident
events
common
knowledge
given
state
main
result
along
lines
ﬁnite
state
space
unique
representation
nested
sequence
maximally
evident
c-indicating
events
result
cen-
tral
understanding
algorithm
computing
common
p-belief
deﬁnitions
ﬁrst
restate
relevant
deﬁnitions
main
text
clearer
format
give
several
additional
def-
initions
helpful
proofs
described
main
text
assume
bayesian
game
ﬁnite
state
space
ω|ω|
information
partitions
simply
partitions
state
space
notation
indicates
unique
element
includes
state
information
partitions
cid:80
measure
deﬁned
induce
conditional
distribu-
cid:80
cid:48
∈e∩πi
cid:48
tion
cid:48
∈πi
cid:48
speciﬁes
belief
event
player
holds
state
deﬁnition
monderer
samet
1989
player
said
p-believe
event
deﬁnition
monderer
samet
1989
event
p-evident
players
p-believe
deﬁnition
event
super-p-evident
players
deﬁnition
event
said
p-evident
indicating
event
p-evident
event
deﬁnition
monderer
samet
1989
players
common
p-belief
event
state
exists
p-evident
c-indicating
event
includes
deﬁnition
event
largest
p-evident
indicating
event
particular
p-evident
indicating
event
events
either
evident
c-indicating
event
deﬁnition
c-evidence
level
event
max-
imum
value
p-evident
c-indicating
event
deﬁnition
event
maximally
evident
indicating
superset
exists
c-evidence
level
largest
p-evident
indicating
event
events
either
contain
lower
c-evidence
level
deﬁnition
event
largest
super-evident
indicating
subset
exists
c-evidence
level
super-p-evident
c-indicating
event
events
either
subset
subset
c-evidence
level
less
equal
initial
results
ﬁrst
result
simple
lemma
showing
family
p-evident
c-indicating
events
closed
unions
lemma
given
event
p-evident
c-indicating
events
also
p-evident
indicating
event
proof
consider
player
min
since
p-evident
therefore
p-evident
suppose
case
since
c-indicating
also
since
indicating
therefore
c-indicating
next
result
immediate
corollary
estab-
lishes
existence
uniqueness
largest
p-evident
indicating
events
corollary
given
event
exists
p-evident
c-indicating
event
exists
unique
largest
evident
c-indicating
event
proof
assume
exists
p-evident
c-indicating
event
take
set
p-evident
c-indicating
events
lemma
set
∪f∈f
consisting
union
events
also
p-evident
c-indicating
event
therefore
p-evident
c-indicating
event
containing
p-evident
c-indicating
events
moreover
must
unique
since
contains
p-evident
events
indi-
cate
next
lemma
establishes
containment
relationship
largest
p-evident
c-indicating
events
associated
different
values
lemma
given
event
largest
evident
c-indicating
event
largest
cid:48
-evident
c-indicating
event
cid:48
proof
suppose
largest
p-evident
c-indicating
event
since
cid:48
also
cid:48
-evident
c-indicating
event
thus
must
contained
largest
cid:48
-evident
c-indicating
event
show
unique
maximally
evident
indicating
event
exists
around
subset
lemma
given
event
event
exists
unique
maximally
evident
c-indicating
superset
proof
consider
event
c-evidence
level
given
mini∈
0,1
ω∈e
min
therefore
exists
moreover
since
p-evident
indicating
event
must
contained
unique
largest
p-evident
c-indicating
event
guaranteed
exist
corollary
deﬁnition
must
also
contain
p-evident
supersets
therefore
maxi-
mally
evident
c-indicating
superset
following
lemma
useful
proving
main
theoretical
result
shows
family
maximally
evident
c-indicating
events
highly
constrained
lemma
given
event
event
exists
maximally
evident
c-indicating
superset
equal
maximally
evident
c-indicating
superset
proof
let
maximally
evident
c-indicating
super-
set
guaranteed
exist
lemma
let
evidence
level
consider
let
max-
imally
evident
c-indicating
superset
let
pgω
c-evidence
level
must
pgω
since
contains
pgω
would
violate
fact
maximally
evident
suppose
pgω
lemma
∪ω∈egω
would
ph-
evident
c-indicating
event
minω
pgω
however
clearly
contains
thus
vio-
lates
fact
maximally
evident
c-indicating
superset
therefore
must
exist
pgω
since
largest
p-evident
c-indicating
events
unique
corollary
must
information
following
theorem
main
theoretical
result
drives
correctness
algorithms
theorem
also
illustrated
figure
states
ﬁnite
unique
representation
nested
sequence
maxi-
mally
evident
c-indicating
events
efﬁciency
al-
gorithm
stems
searching
sequence
subsets
rather
possible
subsets
order
compute
common
p-belief
state
theorem
given
structure
|ω|
event
set
maximally
evident
let
cid:48
cid:48
c-indicating
events
i.e
set
events
cid:48
exists
cid:48
maximally
evident
c-indicating
superset
ordered
nested
sequence
subsets
largest
super-evident
c-indicating
subset
event
ei−1
proof
prove
theorem
construction
know
lemma
exists
maxi-
mally
evident
c-indicating
superset
label
event
cid:48
equal
entire
set
maximally
evident
c-indicating
events
also
know
lemma
lemma
implies
collection
events
cid:48
cid:48
cid:48
associated
particular
c-evidence
level
label
pωj
without
loss
generality
assume
index
sorts
c-evidence
levels
mag-
nitudes
produces
ﬁnite
non-decreasing
sequence
values
pω1
pω2
pω|ω|
lemma
events
cid:48
thus
form
nested
sequence
subsets
cid:48
cid:48
ω|ω|
collapse
events
equal
arrive
sequence
strict
subsets
consider
construction
super-pωi−1-evident
c-indicating
event
ei−1
take
another
super-pωi−1-evident
c-indicating
event
let
c-evidence
level
pωi
must
lemma
since
largest
pωi-evident
event
suppose
pωi
pωi−1
pωi
let
maximally
evident
indicating
superset
let
c-evidence
level
clearly
construction
must
also
pωj
since
contains
maximally
evident
indicating
supersets
hence
since
pωj
pωi−1
must
therefore
hence
must
largest
c-indicating
subset
ei−1
following
corollary
theorem
provides
basis
iterative
algorithm
corollary
given
maximally
evident
c-indicating
event
either
exists
unique
largest
super-evident
indicating
subset
super-p-evident
c-indicating
subsets
exist
proof
since
maximally
evident
c-indicating
event
equal
sequence
given
theorem
therefore
ei+1
unique
largest
super-
evident
c-indicating
subset
subsets
exist
indicated
theorem
finally
four
technical
lemmas
use-
ful
analyzing
speciﬁc
algorithms
player
strate-
gies
ﬁrst
lemma
simple
constraint
belief
p-evident
events
follows
information
parti-
tions
work
lemma
p-evident
event
either
proof
must
exist
cid:48
cid:48
since
p-evident
cid:48
since
cid:48
deﬁnition
information
partition
cid:48
cid:48
hence
second
lemma
connects
containment
relation-
ships
p-evident
events
relationship
beliefs
events
lemma
player
p-believes
p-evident
c-indicating
event
player
p-believes
largest
p-evident
indicating
event
figure
ﬁnite
state
space
uniquely
represented
nested
sequence
maximally
evident
c-indicating
events
diagram
ﬁgure
represents
generative
process
messenger
described
main
text
paper
0.25
contiguous
rectangle
blocks
represents
state
measure
state
given
area
rectangle
states
shaded
members
solid
lines
states
represent
information
partition
player
dotted
lines
represent
player
two
states
belong
element
player
information
partition
connected
path
graph
induced
player
edges
self-loops
indicate
player
uncertainty
state
state
obtains
four
nested
ovals
four
maximally
evident
c-indicating
events
state
space
theorem
grey
shading
ovals
represents
c-evidence
levels
events
0.25
0.5
1.0
algorithm
iterates
maximally
evident
events
rather
possible
events
player
returns
c-evidence
level
associated
last
event
containing
element
instance
circled
state
algorithm
ﬁnd
third
nested
event
player
second
player
proof
let
p-evident
c-indicating
event
let
largest
p-evident
c-indicating
event
since
largest
must
hence
p-believes
must
also
p-believe
next
lemma
states
p-belief
transitive
lemma
player
p-believes
elements
event
player
p-believes
elements
player
p-believes
elements
proof
let
element
since
p-believes
therefore
must
cid:48
since
player
p-believes
states
must
cid:48
deﬁnition
information
partition
must
also
cid:48
hence
player
p-believes
ﬁnal
lemma
states
roughly
regard
evident
events
player
beliefs
another
player
inconsistent
ﬁrst
player
beliefs
lemma
player
p-believes
player
p-believes
largest
p-evident
c-indicating
event
player
believes
player
must
p-believe
proof
consider
arbitrary
arbitrary
take
largest
p-evident
c-indicating
event
suppose
player
p-believes
player
p-believes
player
p-believes
generate
ﬁrst
belief
must
element
information
partition
player
π1−i
p1−i
another
set
states
since
states
within
player
information
partition
in-
distinguishable
since
must
cid:48
p1−i
cid:48
p1−i
cid:48
therefore
since
p-evident
also
p-evident
event
cid:48
cid:48
player
p-believes
player
p-believes
cid:48
cid:48
players
p-believe
moreover
since
player
believes
therefore
since
1−i
p-believes
hence
lemma
players
p-believe
states
therefore
p-evident
c-indicating
event
moreover
player
believes
since
player
p-believes
assumed
largest
p-evident
c-indicating
event
must
hence
player
p-believes
models
strategic
coordination
section
show
rational
p-belief
strategy
forms
equilibrium
coordination
game
study
recall
rational
p-belief
strategy
player
plays
action
player
believes
least
probability
c−b
a−b
players
common
p∗-belief
proposition
assuming
noiseless
messages
assuming
rational
p-belief
strategy
maximizes
expected
return
player
every
given
player
1−i
also
uses
strategy
proof
suppose
messages
noiseless
i.e
take
take
p∗-evident
-indicating
event
take
largest
event
suppose
player
p∗-
believes
lemma
player
also
p∗-believes
deﬁnition
p-evident
events
cid:48
must
player
also
p∗-believes
cid:48
therefore
lemma
player
also
p∗-believes
player
p∗-believes
since
player
assumed
using
rational
p-belief
strategy
player
therefore
p∗-
believes
player
play
since
assumed
messages
noiseless
must
expected
return
playing
must
least
p∗·a+
1−p∗
c−b
a−b
therefore
playing
maximizes
player
expected
return
player
cid:48
-believes
cid:48
-evident
-indicating
event
cid:48
expected
return
strictly
greater
suppose
player
p∗-believes
p∗-evident
-indicating
event
take
largest
p∗-evident
indicating
event
player
p∗-believe
player
p∗-believes
since
otherwise
player
would
p∗-
believe
lemma
thus
since
player
assumed
using
rational
p-belief
strategy
player
believes
probability
cid:48
player
play
since
cid:48
cid:48
expected
utility
playing
player
less
playing
p∗-believe
arithmetic
holds
a−b
a−c
algorithms
computing
information
partitions
section
state
simple
algorithm
converting
generative
process
descriptions
probabilistic
mod-
els
main
text
information
partitions
run
function
takes
input
player
state
ex-
pressed
tuple
uses
variables
tuple
random
draw
within
generative
process
returns
composition
observe
calls
player
example
run
1,1,0,1,0
would
return
0,0
messenger
model
algorithm
groups
together
states
observations
elements
information
partitions
computing
common
p-belief
prove
correctness
common
belief
algo-
rithm
given
main
text
ﬁrst
prove
lemma
stating
correctness
super
evident
algorithm
lemma
assuming
maximally
evident
c-indicating
event
assuming
c-evidence
level
set
returned
evaluating
super
evident
algorithm
information
partition
partition
dict
obs
run
obs
partition
partitions
obs
.append
else
partitions
obs
return
partitions
largest
super-evident
c-indicating
subset
empty
set
event
exist
proof
first
note
condition
state-
ment
function
states
remain
function
returns
properties
therefore
function
returns
super-
p-evident
c-indicating
subsets
since
evidence
level
strict
subsets
must
returned
empty
set
super-p-evident
subsets
exists
next
note
loop
removes
elements
can-
belong
largest
super-evident
c-indicating
subset
event
exists
see
induction
items
removed
suppose
ﬁrst
removed
be-
longed
largest
super-evident
c-indicating
subset
would
since
must
super-p-evident
since
lemma
would
also
contradicts
fact
removed
assume
ﬁrst
elements
removed
belong
let
cid:48
set
mi-
nus
elements
suppose
element
removed
exists
belonged
since
previ-
ous
elements
removed
belong
induc-
tive
assumption
cid:48
analogous
base
case
element
ωk+1
belonging
implies
cid:48
ωk+1
contradicts
fact
ele-
ment
removed
therefore
function
returns
exactly
largest
super-evident
c-indicating
subset
finally
since
assumed
ﬁnite
least
one
element
removed
iteration
loop
function
must
terminate
lastly
show
correctness
main
algorithm
proposition
value
returned
evaluating
com-
mon
belief
c-evidence
level
maxi-
mally
evident
c-indicating
event
containing
element
proof
first
note
evidence
level
computes
evidence
level
must
exist
lemma
also
note
maximally
evident
c-indicating
superset
thus
lemma
calls
super
evident
iteratively
return
nested
sequence
subsets
maximally
evident
subsets
described
theorem
exist
p-evident
c-indicating
event
lemma
ﬁrst
call
super
evident
return
empty
set
case
c-evidence
level
hence
function
return
since
loop
continue
iterating
either
empty
event
player
believes
im-
possible
i.e.
contain
elements
last
either
cases
occurred
must
maximally
evident
c-indicating
event
containing
ele-
ment
call
evidence
level
computes
c-evidence
level
ﬁnal
result
interprets
last
result
terms
common-p-belief
corollary
value
returned
evaluating
com-
mon
belief
maximum
value
player
p-believes
common-p-belief
proof
proposition
common
belief
returns
c-evidence
level
event
player
believes
probability
greater
let
equal
c-evidence
level
lemma
player
must
therefore
p-believe
player
thus
p-believes
common-p-belief
since
p-evident
c-indicating
event
sup-
pose
cid:48
player
cid:48
-believes
common-p
cid:48
-belief
deﬁnition
common-p-belief
must
exist
cid:48
-evident
event
player
cid:48
-believes
player
must
also
cid:48
-believe
maximally
evident
c-indicating
superset
how-
ever
contradicts
fact
returned
com-
mon
belief
since
player
cid:48
-believes
maximally
evident
event
containing
element
references
monderer
samet
1989.
approximating
common
knowledge
common
beliefs
games
economic
be-
havior
:170–190
