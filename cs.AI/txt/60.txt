time
resource
networks
szymon
sidor
peng
cheng
fang
brian
williams
computer
science
artiﬁcial
intelligence
lab
mit
cambridge
sidor
yupeng
cfang
williams
mit.edu
abstract
problem
scheduling
resource
con-
straints
widely
applicable
one
prominent
exam-
ple
power
management
lim-
ited
continuous
supply
power
must
schedule
number
power-consuming
tasks
prob-
lems
feature
tightly
coupled
continuous
resource
constraints
continuous
temporal
constraints
address
problems
introducing
time
resource
network
trn
encoding
resource-constrained
scheduling
problems
deﬁnition
allows
temporal
speciﬁcations
using
general
family
representations
derived
simple
temporal
network
including
simple
temporal
network
uncertainty
prob-
abilistic
simple
temporal
network
fang
2014
propose
two
algorithms
determining
consistency
trn
one
based
mixed
integer
programing
one
based
constraint
programming
evaluate
scheduling
problems
simple
temporal
constraints
probabilistic
temporal
constraints
introduction
temporal
networks
scheduling
algorithms
support
diverse
formulations
useful
modeling
practical
problems
exam-
ples
include
dynamical
execution
strategies
based
partial
knowledge
uncertain
durations
strategies
upper-
bound
probability
failing
satisfy
temporal
constraints
given
distributions
uncertain
durations
however
obvious
apply
scenarios
resource
us-
age
constraints
prior
work
exists
operations
research
literature
known
project
scheduling
job-shop
scheduling
much
focus
discrete
resources
at-
tempt
narrow
gap
two
independent
bodies
work
motivating
example
consider
following
smart
house
scenario
150w
generator
available
know
resident
returns
home
time
deﬁned
nor-
mal
distribution
5pm
minutes
moreover
know
sun
sets
time
deﬁned
7pm
minute
would
like
user
comes
back
work
meet
following
constraints
overall
probability
least
wash
clothes
duration
hours
power
usage
130w
cook
dinner
duration
minutes
power
usage
100w
lights
power
usage
80w
sunset
cook
late
night
snack
duration
minutes
power
usage
ready
within
minutes
user
coming
back
work
least
midnight
20w
10pm
11pm
probabilistic
constraints
modeled
using
probabilistic
simple
temporal
networks
fang
al.
2014
solved
accord-
ingly
known
model
captures
tightly
coupled
resource
constraints
paper
introduce
time
resource
network
trn
general
framework
capable
encoding
scenarios
similar
ex-
ample
described
describe
two
algorithms
schedules
re-
source
usage
given
trn
models
one
based
standard
encoding
mixed
integer
program
mip
novel
algorithm
leveraging
prior
specialized
algorithms
solving
temporal
problems
using
algorithms
able
derive
solution
example
meets
constraints
99.7
probability
presented
figure
also
show
benchmarking
novel
algo-
rithm
signiﬁcantly
faster
even
mip
encoding
solved
state-of-the-art
commercial
solvers
figure
depiction
solution
trn
spanning
pstn
related
work
one
earliest
mentions
scheduling
problem
solved
algorithmic
fashion
found
johnson
1954
although
evidence
problem
already
considered
unpub-
lished
versions
bellman
1956
publication
considers
following
statement
scheduling
problem
items
stages
denoting
time
i-th
item
processed
stage
items
must
processed
different
stages
order
example
ﬁrst
stage
printing
book
second
stage
binding
publication
considers
ar-
rives
solution
permits
one
optimally
arrange
twenty
production
items
ﬁve
minutes
visual
inspection
turns
solution
problem
np-hard
garey
al.
1976
wagner
1959
integer
programming
solution
scheduling
problem
presented
comment
stating
single
model
encompasses
wide
variety
machine-
scheduling
situations
pritsker
al.
1969
generalization
scheduling
problems
considered
allows
multiple
resource
constraints
how-
ever
proposed
solution
uses
discrete
time
formulation
depending
required
accuracy
substantially
decrease
perfor-
mance
1988
technique
proposed
handle
re-
source
constraints
continuous
time
bartusch
al.
1988
proposed
approach
thought
resource
constrained
scheduling
simple
temporal
networks
stn
dechter
al.
1991
notion
simple
temporal
problem
introduced
allows
one
solve
problems
simple
tempo-
ral
constraints
form
concept
later
extended
various
sophisticated
notions
temporal
con-
straints
vidal
ghallab
1996
deﬁned
uncertain
temporal
constraint
duration
two
time
events
take
value
interval
unknown
time
scheduling
uncertain
duration
constraints
morris
al.
2001
de-
scribes
pseudopolynomial
algorithm
handling
uncertain
dura-
tion
constraint
allowed
make
scheduling
decisions
based
knowledge
uncertain
durations
past
dynamic
controllability
algorithm
later
improved
polynomial
com-
plexity
morris
muscettola
2005
finally
fang
al.
2014
provides
non-linear
optimization
based
solver
uncertain
tem-
poral
constraints
duration
constraint
come
arbitrary
probabilistic
distribution
problem
statement
section
introduce
novel
formulation
time
resource
network
trn
results
presented
paper
ex-
tended
multiple
types
resources
constrained
simultane-
ously
example
electricity
water
fuel
cpu
time
memory
among
others
simplicity
consider
one
type
con-
strained
resource
work
additionally
consider
problem
consistency
techniques
presented
ex-
tended
handle
optimization
constrained
schedules
3.1
abstract
temporal
network
wish
deﬁne
trn
support
general
class
temporal
net-
works
thus
deﬁne
notion
abstract
temporal
network
3-tuple
cid:104
cid:105
set
controllable
events
set
simple
temporal
constraints
dechter
al.
1991
represents
additional
elements
additional
constraints
variables
schedule
schedule
cid:104
cid:105
mapping
events
atn
execution
times
temporal
consistency
cid:104
cid:105
de-
ﬁne
predicate
stn
consistent
extra
criteria
denotes
tem-
porally
consistent
schedule
stn
consistent
represents
stn
consistency
deﬁned
dechter
al.
1991
extra
criteria
depends
type
partic-
ular
atn
say
temporally
consistent
denoted
exists
schedule
example
example
network
satisﬁes
atn
in-
terface
simple
temporal
network
uncertainty
stnu
de-
scribed
vidal
ghallab
1996
set
composed
activated
received
events
set
requirement
links
set
contingent
links
one
way
deﬁne
true
networks
strongly
controllable
already
implies
stn
consistent
3.2
time
resource
network
time
resource
network
described
tuple
cid:104
cid:105
abstract
temporal
network
src1
...
srcn
set
simple
resource
constraints
triplet
cid:104
cid:105
amount
resource
positive
consumption
nega-
tive
generation
given
schedule
time
deﬁne
resource
usage
src
cid:104
cid:105
cid:40
src
otherwise
intuitively
simple
resource
constraint
encodes
fact
time
resource
consumed
generated
rate
|r|
per
unit
time
positive
negative
notation
inspired
bartusch
al.
1988
authors
demonstrated
possible
encode
arbitrary
piecewise-constant
resource
proﬁle
representing
constant
interval
sim-
ple
resource
constraint
joining
ends
intervals
simple
temporal
constraints
3.3
resource
consistency
schedule
deﬁne
net-usage
resource
time
srci
cid:88
∀srci∈r
set
resource
constraints
say
network
resource
consistent
schedule
satisﬁes
predicate
rcs
i.e
∀t∈r.us
intuitively
means
resource
never
consumed
rate
greater
generation
rate
say
resource
consistent
exists
rcs
true
3.4
time-resource
consistency
time-resource
consistent
exists
schedule
rcs
determining
whether
time-resource
consistent
central
problem
addressed
publication
3.5
properties
trn
proceed
describe
algorithms
determining
time-
resource
consistency
helpful
understand
properties
common
every
trn
lemma
3.1.
schedule
resource
consistent
∀e∈eus
i.e
resource
usage
non-positive
moment
sched-
uled
events
proof
follows
deﬁnition
resource-consistency
say
time
point
scheduled
exists
event
assume
contradiction
right
side
implication
satisﬁed
schedule
resource
consistent
means
exists
time
point
tdanger
tdanger
notice
assumption
tdanger
could
scheduled
let
tbef
ore
highest
scheduled
time
point
smaller
tdanger
notice
time
point
existed
would
mean
resource
constraint
tdanger
tdanger
assump-
tion
tbef
ore
therefore
assume
tbef
ore
exists
notice
deﬁnition
tbef
ore
simple
resource
constraints
tbef
ore
tdanger
constant
would
another
scheduled
point
tbef
ore
tdanger
assumed
tbef
ore
highest
scheduled
point
smaller
tdanger
therefore
tdanger
tbef
ore
assumed
tdanger
tbef
ore
contradiction
corollary
3.1.1.
given
two
schedules
events
occur
order
resource
consistent
resource
consistent
proof
notice
move
execution
time
arbitrary
event
preserving
relative
ordering
events
net
re-
source
usage
event
change
therefore
lemma
3.1
resource-consistent
resource-consistent
approach
section
present
two
approaches
determining
time-
resource
consistency
trn
one
involves
mixed
integer
programming
mip
constraint
problem
formu-
lations
4.1
deﬁnitions
let
take
cid:104
cid:105
src1
...
srcn
srci
cid:104
cid:105
deﬁned
section
3.2.
let
denote
events
relevant
resource
constraints
i.e
xi|
cid:104
cid:105
yi|
cid:104
cid:105
additionally
let
introduce
resource-change
event
cid:88
cid:88
cid:104
cid:105
xi=e
cid:104
cid:105
yi=e
−ri
following
mip
program
solution
trn
time-resource-consistent
∀e∈e
∀e1
e2∈re
cid:54
=e2
∀e1
e2∈re
cid:54
=e2
∀e1
e2∈re
cid:54
=e2
∀e1
e2∈re
cid:54
=e2
∀e1∈re
−xe1
1.0
xe1
xe1
xe2
cid:88
xe1
xe2
e2∈re
tc-formulation
atn
variable
denotes
time
horizon
variables
scheduled
deﬁnition
imposed
variables
xe1
order
variables
i.e
cid:40
xe1
otherwise
equations
enforce
deﬁnition
particular
equations
enforce
ordering
using
big-m
formulation
correct
be-
cause
time
horizon
constraint
theory
could
eliminated
careful
use
making
sure
two
timepoints
scheduled
exactly
time
found
practice
result
useful
cutting
planes
decrease
total
optimization
time
equa-
tion
ensures
resource
consistency
lemma
3.1.
finally
ensures
time
consistency
solving
mixed-integer
program
yield
valid
schedule
one
exists
recovered
inspecting
values
variables
4.3
constraint
programming
based
algorithm
downside
mip
approach
fact
atn
must
mip
formulation
e.g
pstn
one
section
present
novel
approach
addresses
concern
high
level
idea
algorithm
quite
simple
presented
algorithm
second
line
iterate
permutations
events
line
use
resource
consistent
function
check
resource
consistency
corollary
3.1.1
de-
pendent
chosen
permutation
line
ﬁve
use
checker
determine
network
time
consistent
implementation
de-
pends
type
assume
available
function
encode
stcs
encodes
permutation
using
simple
temporal
con-
straints
example
encode
two
stcs
intuitively
amount
resource
usage
changes
time
schedule
4.2
mixed
integer
programming
based
algorithm
mixed
integer
programming
markowitz
manne
1957
allows
one
express
scheduling
problems
intuitive
way
sec-
tion
present
way
formulate
trn
mip
problem
technique
similar
ones
used
state
art
solvers
general
scheduling
patterson
1984
bartusch
al.
1988
therefore
purpose
section
introduce
novel
ap-
proach
demonstrate
algorithms
straightforward
express
using
trn
formulation
let
tc-formulation
atn
mip-formulation
solution
types
formulation
might
exist
cases
mip-based
algorithm
applied
data
cid:104
cid:105
cid:104
cid:105
result
true
trn
time-resource-consistent
permutation
end
return
false
resource
consistent
cid:48
encode
stcs
atn
return
true
end
end
algorithm
time-resource-consistency
trn
implementation
resource
consistent
follows
lemma
3.1
straightforward
evaluate
events
done
knowing
relative
ordering
always
non-positive
return
true
improve
performance
w.r.t
algorithm
use
off-the-
shelf
constraint
propagation
software
pyconstraint
let
con-
sider
...
deﬁne
problem
using
variables
...
...
j-th
temporal
order
i.e
...
represent
permutation
used
following
pruners
combined
make
solver
behave
similarly
algorithm
ignoring
pruned
permuta-
tions
different
constraint
ensure
variables
differ-
ent
i.e
actually
represent
permutation
standard
constraint
available
software
packages
time
consistent
making
sure
temporal
constraints
implied
permutation
making
incon-
sistent
even
variables
partially
instantiated
compute
set
temporal
constraints
implied
par-
tially
instantiated
permutation
example
know
implies
resource
consistent
ensure
...
resource
usage
non-positive
even
or-
der
partially
speciﬁed
still
evaluate
subtlety
needs
considered
need
assume
events
undeﬁned
gener-
ating
could
scheduled
points
order
deﬁned
example
know
assume
generation
happened
points
know
i.e
initially
resource
usage
there-
fore
violating
constraint
scenario
would
instead
assumed
unscheduled
generation
happens
beginning
would
falsely
deduced
given
variable
assignment
could
never
made
resource
consistent
trn
limitations
going
beyond
fixed
schedules
notice
algorithm
require
schedule
ﬁxed
example
could
consider
dynamic
controllability
vidal
ghallab
1996
seek
execution
strategy
rather
schedule
implemented
trn
important
limitation
approach
even
though
temporal
schedule
dynamic
sched-
ule
implied
resource
constraints
static
change
dynamically
execution
figure
trn
select
dynamically
number
simple
resource
constraint
represents
figure
shows
example
would
report
solution
found
however
ignore
resource
constraints
ﬁnd
dynamic
execution
strategy
satisfying
temporal
constraints
never
violates
resource
constraints
generating
reason
trn
fails
ﬁnd
solution
due
fact
set
trn
solution
attempts
ordering
impossible
statically
example
experiments
5.1
trn
stn
understand
performance
novel
algorithm
used
proposed
mip
approach
baseline
used
gurobi
mip
solver
algorithms
used
determine
time-resource
con-
sistency
trn
simple
temporal
network
case
mip
based
algorithm
temporal
constraints
expressed
linear
constraints
continuous
variables
case
algorithm
used
floyd-warshall
determine
temporal
consistency
suggested
dechter
al.
1991
test
cases
created
following
procedure
specify
number
events
number
temporal
con-
straints
number
resource
constraints
create
random
schedule
events
times
interval
0.0
1.0
create
time
constraints
using
following
procedure
choose
start
end
points
choose
type
constraint
lower
bound
upper
let
chose
number
cid:48
form
expo-
lower-bound
set
bound
probability
0.5
nential
distribution
cid:48
upper
bound
set
cid:48
choose
number
generating
constraints
random
inte-
ger
set
number
consuming
con-
straints
least
constraint
type
create
generating
constraints
using
following
procedure
randomly
choosing
setting
random
number
create
consuming
constraints
using
following
proce-
dure
choose
start
end
points
let
maximum
resource
usage
value
considering
resource
constraints
generated
far
repeat
process
choose
uniform
distribution
considered
different
values
...
100.
consid-
ered
different
values
20.
deﬁned
two
types
networks
sparse
dense
2/2
every
set
parameters
run
trials
set
time
limit
seconds
results
presented
ﬁgure
see
exists
set
parameters
managed
ﬁnd
solu-
tion
mip
exceed
time
limit
vice
versa
figure
compares
execution
time
mip
algorithms
cells
colored
blue
ones
algorithm
faster
cells
colored
red
ones
mip
based
algorithm
better
one
see
much
better
suited
large
temporal
networks
small
number
resource
constraints
mip
scales
much
better
number
resource
constraints
figure
comporison
execution
time
different
types
networks
solver
failed
compute
result
within
time
limit
axis
represents
number
events
temporal
network
axis
represents
number
resource
constraints
top
portion
ﬁgure
obtained
using
mip-based
solver
bottom
part
ﬁgure
obtained
using
cp-based
solver
left
side
ﬁgure
represents
computations
sparse
networks
case
means
total
number
temporal
constraints
right
side
dense
networks
meaning
number
temporal
constraints
2/2
ﬁgure
computed
running
experiment
every
set
parameters
multiple
times
time
different
randomly
generated
instance
numbers
bottom
right
corner
cell
corresponding
standard
deviations
102030405060708090100±0.1680.15±0.0430.12±0.0360.13±0.0330.15±0.0350.15±0.0700.16±0.0700.48±0.0710.49±0.1120.54±0.1770.59±0.2120.61±0.5560.68±0.3501.47±0.9341.81±6.4423.39±3.6723.70±1.9702.87±3.2515.28±5.0684.35±2.6524.37±3.5065.16±6.4906.99±4.0196.65±7.22016.97±3.35811.00±5.19314.90∞∞±4.92118.05∞±2.17121.90∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞sparse
mip±0.0200.10±0.0280.10±0.0270.11±0.0310.11±0.0170.10±0.0540.14±0.0320.34±0.0400.35±0.0330.36±0.0740.38±0.0930.41±0.0800.41±0.1940.91±0.1550.96±0.1990.97±0.1370.92±0.1310.88±0.2451.00±0.7564.16±0.2763.42±0.4983.44±0.3413.48±0.4813.62±0.5303.62±1.7038.70±1.5478.24±1.7238.65±0.8706.97±0.9927.20±1.7098.29∞±3.01923.03±2.48819.16±2.20618.63±2.66217.43±2.74718.22∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞dense
mip24681020102030405060708090100±0.0010.00±0.0140.01±0.0710.05±1.2250.45±0.4770.36±0.6930.75±0.0010.00±0.0480.04±0.8760.43±2.4891.69±3.7673.04∞±0.0030.01±0.4780.27±5.7104.92∞∞∞±0.0070.01±0.3310.29±5.4355.74∞∞∞±0.0090.02±0.4460.53∞∞∞∞±0.0160.04±1.3791.30∞∞∞∞±0.0180.04±0.7201.12∞∞∞∞±0.0270.06±2.7572.52∞∞∞∞±0.0320.08±3.4183.97∞∞∞∞±0.0520.11±3.9523.34∞∞∞∞sparse
cp24681020±0.0010.00±0.0050.01±0.0850.05±0.1090.08±0.4150.29±0.5060.56±0.0030.00±0.0450.03±0.3520.27±1.6561.02±5.9724.04∞±0.0060.02±0.2210.16±0.6630.63±6.5894.72±8.1115.70∞±0.0100.03±0.1830.23±1.6472.27±7.71911.64∞∞±0.0180.06±0.4050.46±7.6286.13∞∞∞±0.0290.08±0.7090.91±8.51813.15∞∞∞±0.0270.10±0.7131.10±8.20311.07∞∞∞±0.0270.12±1.0541.17±7.96913.13∞∞∞±0.0380.17±1.1881.96∞∞∞∞±0.1030.29±1.7452.52±6.46512.89∞∞∞dense
cp051015202530number
resource
constraintstotal
number
events
figure
number
ﬁgure
represents
execution
time
using
mip-based
algorithm
divided
execution
time
using
cp-based
algorithm
notice
particular
means
cp-based
algorithm
failed
compute
results
within
time
limit
means
mip-based
algorithm
timed
missing
cells
correspond
networks
algorithms
timed
therefore
execution
time
compared
5.2
trn
pstn
demonstrate
extensibility
approach
implemented
version
trn
network
underlying
temporal
network
pstn
fang
al.
2014
pstn
extends
notion
stn
deﬁnes
stn-like
events
edges
actiavated
time
points
free
constraints
respectively
extends
stn
received
time
points
determined
environment
every
received
time
point
deﬁned
corresponding
uncertain
duration
udn
constraint
speciﬁes
probability
distribution
duration
activated
time
point
received
time
point
due
extension
notion
consistency
becomes
probabilistic
rather
asking
pstn
consistent
ask
pstn
consistent
probability
since
pstn
extension
stn
given
choice
use
probabilistic
consistency
therefore
use
algorithm
check
networks
consistency
example
scenario
schedule
obtained
algorithm
presented
introduction
conclusion
paper
introduced
time
resource
networks
allow
one
encode
many
resource-constrained
scheduling
prob-
lems
deﬁned
way
permits
use
many
different
notions
temporal
networks
constrain
schedules
introduced
novel
algorithm
determining
time-resource
consistency
trn
compared
mip
baseline
demonstrated
algorithm
achieves
superior
performance
networks
large
number
temporal
constraints
small
number
resource
constraints
addition
shown
algorithm
ﬂexible
support
recently
introduced
probabilistic
simple
temporal
networks
fang
al.
2014
references
bartusch
al.
1988
martin
bartusch
rolf
m¨ohring
franz
radermacher
scheduling
project
networks
resource
constraints
time
windows
annals
operations
research
:199–240
1988
bellman
1956
richard
bellman
mathematical
aspects
scheduling
theory
journal
society
industrial
ap-
plied
mathematics
:168–205
1956
dechter
al.
1991
rina
dechter
itay
meiri
judea
pearl
temporal
constraint
networks
artiﬁcial
intelligence
:61–
1991
fang
al.
2014
cheng
fang
peng
brian
williams
chance-constrained
probabilistic
simple
temporal
problems
aaa-14
2014
garey
al.
1976
michael
garey
david
johnson
ravi
sethi
complexity
ﬂowshop
jobshop
scheduling
mathematics
operations
research
:117–129
1976
johnson
1954
selmer
martin
johnson
optimal
two-and
three-
stage
production
schedules
setup
times
included
naval
re-
search
logistics
quarterly
:61–68
1954
markowitz
manne
1957
harry
markowitz
alan
manne
solution
discrete
programming
problems
econometrica
journal
econometric
society
pages
84–
110
1957
morris
muscettola
2005
paul
morris
nicola
muscet-
tola
temporal
dynamic
controllability
revisited
aaai
pages
1193–1198
2005
morris
al.
2001
paul
morris
nicola
muscettola
thierry
vi-
dal
dynamic
control
plans
temporal
uncertainty
ijcai
volume
pages
494–502
citeseer
2001
24681020102030405060708090100771020.330.430.21145131.30.350.2027160.69000327150.9000482270556∞∞∞∞∞∞∞∞∞sparse24681020102030405060708090100361121.50.360.2574101.40.370.105661.60.20.150144141.50.300156181.4000∞251.5000∞∞∞∞∞∞∞∞∞∞∞dense0.00.40.81.21.62.0number
resource
constraintstotal
number
events
patterson
1984
james
patterson
comparison
exact
ap-
proaches
solving
multiple
constrained
resource
project
scheduling
problem
management
science
:854–867
1984
pritsker
al.
1969
alan
pritsker
lawrence
waiters
philip
wolfe
multiproject
scheduling
limited
re-
sources
zero-one
programming
approach
management
sci-
ence
:93–108
1969
vidal
ghallab
1996
thierry
vidal
malik
ghallab
deal-
ing
uncertain
durations
temporal
constraint
networks
ded-
icated
planning
ecai
pages
48–54
pitman
1996
wagner
1959
harvey
wagner
integer
linear-programming
model
machine
scheduling
naval
research
logistics
quar-
terly
:131–140
1959
