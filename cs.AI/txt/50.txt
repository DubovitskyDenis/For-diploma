fuzzy
object-oriented
dynamic
networks
terletskyi1
provotar2
taras
shevchenko
national
university
kyiv
kyiv
03680
ukraine
dmytro.terletskyi
gmail.com
university
rzeszow
rzeszow
35–310
poland
aprowata1
bigmir.net
abstract
article
generalizes
object-oriented
dynamic
networks
fuzzy
case
allows
one
represent
knowledge
objects
classes
objects
fuzzy
nature
also
model
changes
time
within
framework
approach
described
mechanism
proposed
makes
possible
acquire
new
knowledge
basis
basic
knowledge
considerably
diﬀers
well-known
methods
used
existing
models
knowledge
representation
approach
illustrated
example
construction
concrete
fuzzy
object-
oriented
dynamic
network
keywords
fuzzy
object
class
fuzzy
objects
modiﬁer
exploiter
introduction
present
one
important
problems
ﬁeld
knowledge
representation
generalization
knowledge
representation
models
krms
fuzzy
case
using
powerful
tool
fuzzy
sets
need
general-
ization
stipulated
fact
body
knowledge
available
man
inexact
incomplete
diﬀused
sense
since
fuzzy
sets
form
eﬃcient
apparatus
modeling
objects
processes
nature
expedient
generalize
krms
use
many
similar
general-
izations
particular
fuzzy
logic
fuzzy
semantic
networks
fuzzy
production
models
fuzzy
neural
networks
fuzzy
ontologies
fuzzy
frames
fuzzy
uml
etc
first
krms
theoretical
models
practically
imple-
mented
within
framework
concrete
intelligent
information
systems
iiss
applying
programming
paradigm
recent
years
object-
oriented
programming
oop
popular
widely
used
majority
well-known
krms
implemented
concrete
iiss
help
oop
moreover
krms
frames
scripts
ideologically
close
oop
approach
also
rather
eﬃcient
constructing
controlling
databases
however
despite
advantages
possibilities
representation
objects
fuzzy
nature
provided
therefore
improvement
approach
help
fuzzy
sets
topical
problem
represent
fuzzy
diﬀused
knowledge
article
proposes
gener-
alize
krms
object-oriented
dynamic
networks
construct
fuzzy
object-oriented
dynamic
networks
concepts
fuzzy
object
class
fuzzy
objects
also
operations
used
object-oriented
representation
fuzzy
knowledge
let
consider
features
object-oriented
approach
fuzzy
knowledge
representation
whose
basic
concepts
fuzzy
objects
classes
fuzzy
objects
relations
real
abstract
object
characteristic
properties
represented
form
attributes
object
model
object
called
fuzzy
least
one
fuzzy
property
i.e.
property
expressed
help
fuzzy
set
since
objects
identical
nature
concept
class
introduced
within
framework
deﬁned
thus
object
concrete
example
class
type
objects
oop
class
considered
certain
prototype
abstract
object
constructing
concrete
objects
type
class
objects
called
fuzzy
least
one
fuzzy
property
class
objects
considered
two
diﬀerent
positions
namely
extensional
intensional
ﬁrst
case
speciﬁed
help
deﬁnite
number
objects
belong
second
case
speciﬁed
help
enumeration
attributes
possible
values
may
appear
despite
distinctions
methods
representation
class
objects
ﬁnally
reduced
result
namely
deﬁnite
class
objects
fact
classes
objects
obtained
help
approaches
fundamental
diﬀerences
extensional
approach
used
obtained
class
objects
de-
pend
objects
basis
deﬁned
attributes
objects
deﬁned
i.e.
property
object
concrete
value
range
values
class
deﬁned
basis
objects
also
deﬁned
otherwise
partially
deﬁned
undeﬁned
intensional
approach
applied
deﬁniteness
obtained
class
objects
depend
deﬁnition
attributes
i.e.
properties
class
objects
completely
deﬁned
obvious
class
also
deﬁned
otherwise
partially
deﬁned
undeﬁned
also
important
know
author
purpose
deﬁnition
class
objects
assume
three
squares
diﬀerent
sizes
certain
class
squares
deﬁned
basis
obtain
class
describing
squares
three
sizes
assume
class
squares
described
without
alluding
concrete
squares
theoretically
class
squares
deﬁned
describes
example
squares
previous
case
concrete
squares
considered
likely
class
deﬁned
described
squares
possible
sizes
proceeding
last
assertion
draw
conclusion
methods
representation
classes
objects
useful
mentioned
nuances
taken
account
using
oop
objects
classes
related
help
well-deﬁned
relations
within
framework
corresponding
hierarchy
constructed
help
inheritance
mechanism
case
fuzzy
objects
classes
fuzzy
objects
membership
object
class
fuzzy
partial
i.e.
measure
following
relations
fuzzy
objects
classes
singled
generalization
aggregation
association
generalization
relation
shows
class
subclass
example
another
class
aggregation
relation
shows
class
component
part
another
class
association
relation
reﬂects
certain
semantic
relations
classes
related
among
generalization
aggregation
relation
within
framework
object-oriented
approach
representation
fuzzy
knowledge
consider
krm
underlain
frames
exactly
generalization
fuzzy
case
frames
similar
oop
many
respects
case
emphasis
frame
systems
infrastructure
object
domains
constructed
objects
classes
relations
whereas
oop
attention
accented
messaging
concrete
objects
well
classes
objects
object-oriented
approach
knowledge
representation
frames
also
commonly
called
fuzzy
least
one
fuzzy
attribute
partially
inherit
frames
introduction
conception
partial
inheritance
leads
considerable
changes
mechanism
result
addition
new
possibilities
fuzzy
object-oriented
dynamic
networks
construct
fuzzy
object-oriented
dynamic
networks
use
concep-
tion
object-oriented
dynamic
networks
described
also
generalizations
component
parts
fuzzy
case
deﬁnition
fuzzy
object-oriented
dynamic
network
foodn
object-
oriented
dynamic
network
least
one
following
conditions
fulﬁlled
∃ak
∃tp
∃ri
classes
fuzzy
objects
fuzzy
objects
fuzzy
relations
fuzzy
objects
classes
fuzzy
objects
relations
fuzzy
objects
classes
fuzzy
objects
form
set
consider
three
above-mentioned
types
relations
used
object-oriented
approach
representation
fuzzy
knowledge
note
extent
types
relations
inherent
semantic
networks
frames
scripts
described
detail
corresponding
literature
particular
illustrate
foodn
use
example
oodn
presented
since
intuitive
rather
easily
understandable
also
reﬂects
basic
distinctive
features
proposed
knowledge
representation
model
example
let
consider
classes
fuzzy
objects
describe
class
fuzzy
convex
polygons
class
fuzzy
rhom-
buses
class
fuzzy
squares
respectively
deﬁne
speciﬁcations
signatures
follows
present
speciﬁcations
signatures
classes
fuzzy
objects
help
tables
respectively
table
speciﬁcation
classes
fuzzy
objects
property
semantic
values
proper-
values
properties
classes
objects
ties
classes
objects
number
sides
sizes
sides
number
angles
grade
measures
angles
equality
sides
equality
angles
fuzzy
fuzzy
fuzzy
180◦
180◦
90◦
90◦
90◦
90◦
fuzzy
table
signature
classes
fuzzy
objects
method
calculus
function
perimeter
ﬁgure
cid:80
area
ﬁgure
body
method
classes
objects
i=1
sin
analyzing
table
note
value
property
speciﬁed
fuzzy
i.e.
sizes
sides
ﬁgures
represented
form
fuzzy
sets
deﬁnition
classes
intensional
since
situation
need
consider
classes
describing
concrete
types
polygons
rhombuses
squares
reason
properties
concrete
values
speciﬁed
ranges
possible
values
given
let
consider
concrete
objects
classes
namely
fuzzy
rhombus
rb1
fuzzy
square
sq1
deﬁne
values
properties
methods
taking
account
speciﬁcations
signatures
classes
help
tables
respectively
table
speciﬁcations
fuzzy
objects
rb1
sq1
property
values
properties
classes
objects
rhombus
rb1
square
sq1
1.8/0.9
2/1
2.1/0.95
1.8/0.9
2/1
2.1/0.95
1.8/0.9
2/1
2.1/0.95
1.8/0.9
2/1
2.1/0.95
2.7/0.85
3/1
3.1/0.95
2.7/0.85
3/1
3.1/0.95
2.7/0.85
3/1
3.1/0.95
2.7/0.85
3/1
3.1/0.95
95◦
85◦
95◦
85◦
0.8
90◦
90◦
90◦
90◦
table
signatures
fuzzy
objects
rb1
sq1
method
body
method
classes
objects
rhombus
rb1
square
sq1
rb1
rb1
sin
sq1
sq1
pass
direct
construction
fuzzy
object-oriented
dynamic
network
fuzzy
objects
rb1
sq1
classes
fuzzy
objects
obvious
set
fuzzy
objects
rb1
sq1
set
classes
fuzzy
objects
classes
fuzzy
objects
examples
class
fuzzy
objects
square
rhombus
according
conclusions
set
relations
form
rb1
instance−of
−−−−−−−−→
sq1
a−kind−of
−−−−−−−→
is−a−−−→
instance−of
−−−−−−−−→
a−kind−of
−−−−−−−→
cid:111
cid:110
also
written
rb1
sq1
deﬁne
set
exploiters
using
universal
operations
objects
classes
proposed
practical
application
fuzzy
objects
classes
fuzzy
objects
considered
thus
set
exploiters
consists
operations
union
intersection
diﬀerence
symmetric
diﬀerence
also
operation
cloning
fuzzy
objects
classes
fuzzy
objects
i.e.
cid:8
cid:9
clonei
union
operation
diﬀerence
operation
cloning
operation
inferior
index
exploiter
number
signature
upper
index
arity
operations
partly
universal
since
applied
fuzzy
objects
classes
operation
symmetric
diﬀerence
intersection
operation
deﬁne
set
modiﬁers
follows
sq1
sq1
rb1
rb1
rb1
l11
rb1
rb1
sq1
0.8
partial
modiﬁer
changes
property
class
fuzzy
squares
thereby
transforms
class
fuzzy
rhombuses
sides
segment
partial
modiﬁer
changes
property
class
fuzzy
rhombuses
transforming
class
fuzzy
broken
lines
0.8
partial
modiﬁer
changes
property
class
fuzzy
rhombuses
transforming
class
fuzzy
squares
sides
segment
partial
modiﬁer
changes
property
class
fuzzy
convex
polygons
transforming
class
fuzzy
broken
lines
sq1
sq1
sq1
90◦
90◦
90◦
90◦
95◦
85◦
95◦
85◦
0.8
partial
modiﬁer
changes
properties
sq1
sq1
trans-
forming
fuzzy
square
sq1
fuzzy
rhombus
rb1
rb1
rb1
sides
segment
partial
modiﬁer
changes
property
rb1
fuzzy
rhombus
rb1
transforming
fuzzy
broken
line
l11
rb1
rb1
rb1
95◦
85◦
95◦
85◦
0.8
90◦
90◦
90◦
90◦
partial
modiﬁer
changes
properties
rb1
rb1
fuzzy
rhombus
rb1
transforming
fuzzy
square
sq1
analyzing
modiﬁers
set
note
simultane-
ously
modify
several
properties
fuzzy
objects
classes
fuzzy
objects
properties
modiﬁed
non-randomly
chosen
since
related
one
way
another
change
one
must
imply
corresponding
changes
others
follows
reﬂection
principle
considered
simplicity
also
understanding
structure
essence
fuzzy
object-oriented
dynamic
network
constructed
objects
rb1
sq1
classes
objects
represent
form
connected
digraph
fig
fig
foodn
fragment
fuzzy
objects
rb1
sq1
classes
fuzzy
objects
graph
vertices
considered
fuzzy
objects
rb1
sq1
l11
l21
classes
fuzzy
objects
relationships
i.e.
relations
a-kind-of
instance-of
is-a
modiﬁcations
rb1
rb1
sq1
relations
partly
connect
objects
classes
objects
among
form
hierarchy
part
network
static
since
structure
knowledge
objects
classes
objects
represented
help
modiﬁcations
considered
new
type
relations
ob-
jects
classes
objects
presented
modiﬁcation-of
proceeding
fig
note
vice
versa
modif
ication−of
−−−−−−−−−−−→
modif
ication−of
−−−−−−−−−−−→
contrast
types
relations
modiﬁcations
completely
static
since
modiﬁers
methods
applied
objects
classes
objects
result
change
consider
modiﬁcations
fuzzy
square
sqk
help
modiﬁer
sqk
transforms
fuzzy
rhombus
rbm
result
fuzzy
square
obtain
fuzzy
rhombus
rather
ﬁgures
simultaneously
illustrated
fig
example
modiﬁcation
fuzzy
square
sq1
foodn
presented
fig
constructed
basis
objects
sq1
rb1
hence
component
parts
network
method
graphical
representation
process
modiﬁcation
chosen
view
showing
changes
essence
object
class
objects
applying
modiﬁer
may
appear
solution
optimal
modiﬁcation
object
considered
process
creating
new
class
objects
change
concrete
object
chosen
method
graphical
representation
process
modiﬁcation
suﬃciently
substantiated
fig
fragment
fuzzy
object-oriented
dynamic
network
without
ex-
ploiters
shown
principles
operation
exploiters
constructed
foodn
presented
fig
fig
graphic
representation
principles
operation
exploiters
sets
objects
classes
objects
fig
graph
presented
part
foodn
shown
fig
vertices
former
graph
classes
fuzzy
objects
classes
major
importance
since
arguments
ﬁve
types
exploiters
set
exploiters
classes
objects
results
using
classes
exploiters
represent
result
exploitation
several
edges
used
whose
number
equals
arity
corresponding
exploiter
example
represent
result
exploitation
classes
objects
two
edges
used
part
edges
exploiter
graph
marked
dashed
lines
order
emphasize
fact
intersection
diﬀerence
symmetric
diﬀerence
objects
classes
objects
always
exist
note
fig
illustrates
results
using
two
classes
fuzzy
objects
set
exploiters
set
similar
graphs
constructed
fuzzy
objects
set
classes
fuzzy
objects
set
exploiters
also
applied
fuzzy
objects
classes
fuzzy
objects
obtained
result
previous
use
exploiters
view
generating
new
objects
classes
objects
modiﬁers
exploiters
form
dynamic
component
network
since
network
extended
modiﬁed
help
result
new
knowledge
obtained
also
changes
time
modeled
presented
example
universal
operations
objects
classes
objects
considered
exploiters
note
set
exploiters
well
set
modiﬁers
consist
methods
satisfy
corresponding
deﬁnitions
exploiter
modiﬁer
presented
exploiters
great
importance
object-oriented
dynamic
networks
since
use
allows
one
create
new
objects
classes
objects
network
basis
objects
classes
objects
underlying
network
thus
exploiters
allow
one
obtain
knowledge
unobvious
thereby
ex-
pand
description
object
domain
results
possible
applications
exploiters
objects
classes
objects
given
table
table
results
diﬀerent
applications
exploiters
exploiter
results
application
objects
results
application
classes
objects
set
objects
class
objects
class
object
class
objects
clonei
object
analyzing
table
one
see
operations
intersection
diﬀerence
symmetric
diﬀerence
make
possible
generate
new
classes
objects
cloning
operation
makes
possible
generate
copies
objects
classes
objects
particular
interest
union
operation
makes
possible
create
sets
objects
classes
objects
elements
sets
approach
creation
classes
objects
materially
extensional
time
allows
one
create
heterogeneous
classes
i.e.
classes
describing
objects
diﬀerent
types
classes
immediately
relevant
sets
objects
consist
one-type
elements
case
class
objects
forms
set
objects
prototype
despite
extensional
nature
since
deﬁning
class
new
objects
type
constructed
note
within
framework
objects
constructed
equivalent
objects
belonging
set
objects
underlying
class
many
existing
krms
main
representative
components
objects
classes
concepts
represented
sets
objects
used
knowledge
representation
contrast
objects
classes
even
concepts
allow
one
simultaneously
consider
number
necessarily
one-type
objects
allows
one
describe
complicated
knowledge
structures
conclusions
work
presents
conception
object-oriented
approach
rep-
resentation
fuzzy
knowledge
generalization
object-oriented
dynamic
networks
fuzzy
case
proposed
representation
fuzzy
knowledge
illustrated
example
construction
fuzzy
object-oriented
dynamic
network
classes
fuzzy
convex
polygons
described
approach
al-
lows
one
represent
fuzzy
knowledge
model
changes
time
also
provides
mechanism
obtaining
new
knowledge
basic
knowledge
mechanism
considerably
diﬀers
well-known
methods
knowledge
acquisi-
tion
existing
krms
references
zadeh
l.a.
fuzzy
sets
inf
cont
338–353
1965
leung
k.s.
wong
m.h
fuzzy
concepts
object
oriented
expert
system
shell
int
intell
syst
171–192
1992
berzal
marin
pons
vila
m.a
managing
fuzziness
conventional
object-oriented
platforms
int
intell
syst
781–803
2007
marin
pons
vila
m.a
fuzzy
types
new
concept
type
managing
vague
structures
int
intell
syst
1061–1085
2000
ndousse
t.d
intelligent
systems
modeling
reusable
fuzzy
objects
int
intell
syst
137–152
1997
terletskyi
provotar
object-oriented
dynamic
networks
setlak
markov
eds
computational
models
business
engineering
domains
vol
123–136
ithea
ibs
isc
2014
terletskyi
d.a.
provotar
a.i
fuzzy
object-oriented
dynamic
networks
int
sci
cybern
syst
anal
34–40
2015
z.m.
zhang
w.j.
w.y
extending
object-oriented
databases
fuzzy
information
modeling
inform
syst
databases
creation
manage
utiliza-
tion
421–435
2003
zhang
z.m
construction
fuzzy
ontologies
fuzzy
uml
models
int
computational
intell
syst
442–472
2013
10.
bordogna
pasi
lucarella
fuzzy
object-oriented
data
model
managing
vague
uncertain
information
int
intell
syst
623–651
1999
11.
stroustrup
c++
programming
language
fourth
edition
addison-
wesley
upper
saddle
river
2013
12.
graham
jones
p.l
theory
fuzzy
frames
part-1
bull
stud
exch
fuzzi-
ness
appl
109–132
1987
13.
graham
jones
p.l
theory
fuzzy
frames
part-2
bull
stud
exch
fuzzi-
ness
appl
120135
1987
14.
brachman
r.j.
levesque
h.j
knowledge
representation
reasoning
mor-
gan
kaufmann
san
francisco
2004
15.
negnevitsky
artiﬁcial
intelligence
guide
intelligent
systems
2nd
addison-wesley
harlow
2004
16.
terletskyi
d.a.
provotar
o.i
mathematical
foundations
designing
devel-
opment
intelligent
systems
information
analysis
probl
program
233–241
2014
