truthful
mechanism
biparameter
learning
online
crowdsourcing
satyanath
bhat1
divya
padmanabhan1
shweta
jain1
narahari1
1computer
science
automation
indian
institute
science
http
//lcm.csa.iisc.ernet.in/
october
2018
abstract
study
problem
allocating
divisible
jobs
arriving
online
workers
crowdsourcing
setting
involves
learning
two
param-
eters
strategically
behaving
workers
job
split
certain
number
tasks
allocated
workers
arriving
job
completed
within
deadline
task
completed
satisfying
upper
bound
probability
failure
job
population
homogeneous
workers
heterogeneous
terms
costs
completion
times
times
failure
job
completion
time
time
failure
worker
stochastic
ﬁxed
unknown
means
requester
faced
challenge
learning
two
separate
parameters
strategically
behaving
worker
simultaneously
namely
mean
job
completion
time
mean
time
failure
time
failure
worker
depends
duration
task
handled
worker
assuming
non-strategic
workers
start
solve
biparameter
learning
problem
applying
robust
ucb
algorithm
non-trivially
extend
algorithm
setting
workers
strategic
costs
proposed
mechanism
dominant
strategy
incentive
com-
patible
ex-post
individually
rational
asymptotically
optimal
regret
performance
introduction
crowdsourcing
widely
used
procuring
labels
services
traditional
applications
often
many
tasks
crowdsourced
readily
accomplished
humans
computers
additional
advantage
scalable
cost-eﬀective
nature
crowdsourcing
however
typical
crowd-
sourcing
platforms
may
consider
several
important
aspects
traditional
planning
ensuring
work
completion
within
strict
deadline
assured
guarantees
quality
motivating
example
paper
consider
sequence
jobs
arriving
online
job
corresponds
translating
large
document
completed
within
deadline
assured
level
accuracy
may
possible
single
individual
worker
accomplish
job
requester
could
split
job
tasks
either
chapter
section
level
allocate
task
crowd
worker
due
nature
task
worker
employed
long
duration
might
start
committing
errors
refer
duration
agent
works
without
committing
error
time
failure
ttf
also
worker
diﬀers
time
taken
complete
entire
job
entire
job
executed
worker
time
taken
worker
complete
job
called
job
completion
time
jct
worker
worker
incurs
certain
cost
complete
entire
job
note
workers
heterogeneous
terms
costs
jct
ttf
moreover
jct
ttf
workers
stochastic
additional
non-trivial
challenge
occurs
crowd
workers
strategic
may
misrepresent
costs
hope
gaining
higher
utility
setting
occurs
problems
tagging
large
repository
images
audio
transcriptions
etc
work
consider
jobs
arrive
online
divisible
tasks
strict
completion
deadlines
completed
assured
accuracy
propose
multi-armed
bandit
mab
mech-
anism
learns
two
parameters
mean
job
completion
time
mjct
mean
time
failure
mttf
workers
eliciting
pri-
vately
held
costs
truthfully
show
proposed
mab
mechanism
minimizes
regret
meeting
deadline
accuracy
requirements
every
job
following
speciﬁc
contributions
work
non-strategic
learning
look
problem
allocating
divisible
online
jobs
crowd
workers
meet
constraints
deadline
accuracy
section
underlying
optimization
prob-
lem
turns
non-trivial
since
parameters
mjct
mttf
workers
unknown
overcome
challenge
devising
biparameter
learning
scheme
based
robust
ucb
algorithm
embed
learning
scheme
social
welfare
maximiz-
ing
algorithm
refer
sw-greedy
strategic
learning
next
non-trivially
extend
results
setting
worker
costs
privately
held
section
designing
mechanism
td-ucb
mechanism
dominant
strat-
egy
incentive
compatible
ex-post
individually
rational
theorem
regret
analysis
section
show
non-strategic
well
strategic
settings
number
jobs
non-optimal
worker
set
chosen
upper
bounded
log
theorem
total
number
jobs
completed
moreover
optimal
worker
set
selected
allocation
algorithm
converges
asymptotically
eﬃcient
allocation
ensuring
average
regret
goes
zero
limit
theorem
simulations
finally
show
practical
eﬃcacy
learning
mechanism
via
simulations
section
previous
work
look
previous
work
related
setting
group
relevant
literature
based
whether
crowd
workers
strategic
non-strategic
case
work
crowdsourcing
focused
models
aggregating
labels
building
classiﬁers
many
eﬀorts
also
address
problems
similar
one
considered
paper
faradani
look
design
pricing
schemes
dependent
completion
times
workers
strategic
nature
workers
considered
problem
completing
tasks
within
deadline
also
investigated
authors
consider
setting
workers
delegate
tasks
workers
unable
complete
work
within
deadline
costs
workers
assumed
known
workers
non-strategic
diﬀerent
setup
ding
look
budgeted
multi-armed
bandit
problem
two
parameters
stochastic
costs
stochastic
rewards
learnt
however
consider
strategic
workers
strategic
case
chandra
look
allocating
indivisible
tasks
strategic
crowd
workers
deadline
constraints
assumption
reliability
terms
completion
task
agents
common
knowledge
estimated
singer
mittal
biswas
look
pricing
mechanisms
presence
budget
constraints
task
completion
deadlines
however
heterogeneity
respect
time
failure
modelled
tran-thanh
look
crowdsourcing
classiﬁcation
tasks
goal
trading
cost
accuracy
estimation
however
ttf
jct
workers
modeled
choosing
optimal
worker
set
order
obtain
assured
accuracy
level
studied
jain
allocation
algorithm
makes
use
multi-armed
bandits
abstraction
auer
version
allocation
algorithm
designed
case
workers
strategic
respect
bidding
costs
however
setting
look
completion
tasks
within
deadline
problem
allocating
tasks
concurrently
several
workers
order
meet
deadlines
looked
gerding
work
uses
variant
vcg
mechanism
elicit
costs
truthfully
workers
consider
stochastic
completion
times
tasks
consider
time
failure
allocation
work
diﬀers
work
listed
design
allocation
scheme
complete
jobs
within
deadline
simultaneously
learning
mean
completion
time
well
mean
time
failure
workers
also
design
mechanism
elicit
costs
workers
truthfully
model
let
denote
set
crowd
workers
also
referred
agents
available
requester
sequence
homogeneous
jobs
arrives
platform
one
time
following
design
issues
pertaining
requester
job
parameters
deadline
clock
starts
ticking
job
soon
arrives
use
denote
deadline
deadline
job
upper
bound
duration
starting
arrival
job
job
required
completed
expectation
task
creation
requester
divide
current
job
certain
number
tasks
facilitate
completion
job
deadline
use
denote
fraction
job
assigned
task
worker
therefore
assume
arbitrary
division
given
job
tasks
ease
expo-
sition
however
assumption
relaxed
capture
meaningful
constraints
size
task
cid:80
i=1
threshold
probability
failure
tasks
worker
likely
commit
error
works
longer
duration
task
say
worker
failed
commits
error
use
denote
common
threshold
probability
failure
task
threshold
allows
requester
control
overall
quality
job
worker
parameters
job
completion
time
jct
worker
stochastic
job
completion
time
time
requires
complete
entire
job
jct
worker
random
variable
ﬁxed
unknown
mean
refer
mean
job
completion
time
mjct
requester
wishes
learn
mjct
worker
mjct
worker
task
allocation
meet
deadline
constraint
expectation
time
failure
ttf
worker
also
characterized
stochastic
time
failure
denotes
duration
worker
would
work
without
failure
like
jct
ttf
also
ﬁxed
yet
unknown
mean
requester
wishes
learn
cdf
ttf
task
agent
workers
expected
duration
allocation
given
fraction
job
requirement
threshold
probability
error
dictates
cost
incurred
worker
privately
held
cost
rep-
resents
cost
incurred
worker
complete
job
entirely
therefore
cost
involved
complete
fraction
job
worker
cix
goal
optimization
problem
constraints
deadline
threshold
probability
failure
every
task
met
cost
optimal
way
every
online
job
thus
underlying
optimization
problem
entire
collection
jobs
given
cid:88
cid:88
cix
min
0,1
cid:80
t=1
i=1
subject
i=1
completion
time
probability
failure
mentioned
earlier
jct
ttf
workers
stochastic
nature
assume
jct
worker
follows
log-normal
distribution
unknown
yet
ﬁxed
mean
ttf
worker
follows
exponential
distribution
mean
remark
choice
distributions
choice
log-normal
distribution
due
wide
applicability
social
sciences
economics
model
sim-
ilar
quantities
however
suitable
non-negative
random
variable
whose
distribution
sub-gaussian
sub-exponential
may
used
discussed
errors
setting
introduced
due
higher
working
duration
task
analogous
modelling
failure
function
time
biological
computer
reliability
literature
exponential
distributions
hence
model
ttf
workers
exponential
optimization
problem
stated
involves
learning
scheme
along
cost
minimization
across
online
jobs
however
due
independence
across
jobs
problem
decomposed
sequen-
tial
cost
minimization
problem
corresponding
job
therefore
summation
jobs
omitted
enables
use
place
sequential
optimization
problem
job
case
non-strategic
workers
ﬁrst
study
scenario
costs
incurred
workers
common
knowledge
means
known
requester
feasible
allocation
worker
exceed
d/ρi
additional
requirement
accuracy
requires
probability
worker
failing
duration
ρixi
exceed
equivalent
constraint
ρixi
cdf
random
variable
ttf
worker
model
exponential
distribution
mean
simpliﬁ-
cation
requester
optimization
problem
reduces
cixi
cid:88
cid:16
i=1
min
xi∈
0,1
cid:80
cid:16
subject
i=1
1−ε
min
cid:17
cid:17
practice
known
need
learnt
make
use
multi-armed
bandit
mab
abstraction
learning
parameters
speciﬁcally
since
sub-exponential
distributions
appeal
robust
ucb
technique
ψ-ucb
algorithm
regret
minimizing
scheme
learning
mean
sub-gaussian
distributions
heavy
tailed
distributions
e.g
log
normal
exponential
robust
ucb
shown
regret
minimizing
adopt
robust
ucb
scheme
truncated
empirical
mean
estimator
4.1
diﬃculty
learning
worker
allocated
fraction
job
takes
time
completion
/xi
sample
distribution
log-normal
therefore
ev-
ery
allocation
contributes
one
sample
robust
ucb
algorithm
estimating
however
estimating
sample
allocation
fed
robust
ucb
algorithm
must
correspond
failure
practi-
cal
observe
failure
every
instance
allocation
handle
diﬃculty
propose
use
surrogate
random
variable
consider
experiment
worker
allocated
task
fraction
job
worker
spends
duration
least
experiment
deemed
failed
worker
fails
ﬁrst
duration
allocation
otherwise
cid:48
deemed
success
let
number
independent
experi-
ments
till
failure
encountered
propose
use
random
variable
construct
sample
exponential
obtain
sample
every
job
observe
duration
see
allocated
workers
failed
let
number
contiguous
instances
jobs
allocation
worker
fail
interval
therefore
value
note
forms
sample
interest
sample
obtained
reset
process
repeated
collect
samples
expectation
surrogate
random
variable
limit
coincides
due
lemma
cid:48
lemma
limδ→0
cid:48
proof
deﬁnition
therefore
1−exp
−δ/βi
note
geometric
1−exp
−δ/βi
sample
cid:48
lim
δ→0
lim
δ→0
exp
−δ/βi
follows
applying
hospital
rule
4.2
sw-greedy
greedy
allocation
cid:16
cid:16
cid:17
cid:17
workers
indexed
increasing
order
costs
worker
allocated
largest
possible
fraction
xpst
violate
constraints
till
tasks
job
allocated
min
1−ε
ˆβ+
constraint
ˆβ−
upper
conﬁdence
indices
ˆρ−
involves
means
un-
known
mentioned
earlier
use
robust
ucb
learn
estimates
ˆρ+
lower
conﬁdence
indices
mjct
mttf
respectively
obtained
robust
ucb
ˆρi
ˆβi
empirical
estimates
mjct
mttf
respectively
worker
could
substitute
ˆρ−
estimate
constraint
higher
value
enforces
lower
allocation
worker
compared
lower
value
used
hence
refer
ˆρ+
pessimistic
estimate
similar
reasoning
refer
ˆβ−
pessimistic
estimate
use
pessimistic
estimates
ensures
even
true
underlying
means
constraint
satisﬁed
ˆρi
ˆρ+
allocation
algorithm
discussed
ensures
social
welfare
regret
learning
scheme
optimized
hence
refer
allocation
sw-greedy
algorithm
social
welfare
deﬁned
follows
deﬁnition
social
welfare
social
welfare
feasible
i.e
satisfying
allocation
sum
valuations
agents
allo-
cation
setting
valuation
crowd
agent
−cixi
therefore
social
welfare
given
cid:80
i=1
−cixi
every
worker
paid
amount
equal
cost
incurred
i.e
xpst
xpst
allocation
agent
given
algorithm
remark
pessimistic
selection
fundamental
underlying
philosophy
ucb
family
algorithms
optimism
uncertainty.
intu-
itively
optimism
helps
adequate
exploration
realtive
naive
scheme
uses
empirical
estimate
work
use
philosophy
implicitly
however
due
greedy
nature
allocation
scheme
pessimistic
allocation
set
superset
optimistic
alloca-
tion
algorithm
sw-greedy
allocation
algorithm
input
set
workers
number
jobs
deadline
accuracy
level
input
cost
vector
re-indexing
ˆρi
ˆρ+
ˆβi
ˆβ+
ˆρ−
ˆβ−
t=0
initialize
online
job
arrival
xpst
xpst
xpst
cid:80
cid:80
i−1
j=1
xpst
min
ˆρ+
j=1
xpst
cid:16
cid:80
i−1
xpst
j=1
xpst
xpst
xpst
cid:105
cid:17
cid:104
1−ε
pessimistic
selection
deﬁne
¯kt
max
xpst
allocate
job
per
xpst
observe
˜τi
time
completion
xpst
¯kt
t−1
t−1
ˆρi
˜τi
ˆρi
xpst
¯kt
cid:17
cid:16
worker
made
error
t−1+
δ×η
ˆβi×n
t−1+1
t−1
ˆβi
else
t−1
updates
surrogate
case
strategic
workers
td-ucb
allocation
performed
agents
announce
bids
bids
may
may
equal
true
private
costs
denote
bid
proﬁle
b−i
bid
agent
b−i
denotes
collection
bids
agents
except
agent
order
ensure
agents
bid
costs
truthfully
introduce
mechanism
td-ucb
allocation
rule
remains
one
case
workers
non-strategic
use
allocation
given
algorithm
replacing
input
costs
bids
5.1
payment
scheme
let
denote
tuple
allocation
performance
allocated
workers
job
learning
job
captured
history
k=0
order
specify
payment
scheme
require
notion
externality
imposed
agent
another
denote
externality
imposed
b−i
signiﬁes
additional
fraction
agent
xext
job
allocated
agent
absence
agent
externality
job
depends
bid
proﬁle
b−i
well
history
allocations
till
job
let
agent
largest
reported
bid
worker
set
chosen
allocation
scheme
figure
provides
schematic
diagram
indicating
position
bids
agents
chosen
algorithm
figure
schematic
allocation
formally
externality
deﬁned
b−i
xext
cid:18
cid:32
ˆρ+
ˆρ+
min
cid:18
min
min
ˆβ−
log
xpst
xpst
min
ˆβ−
log
xpst
xext
0
cid:18
cid:18
cid:19
cid:19
cid:19
cid:19
cid:33
j−1
cid:88
s=kt
agent1b1≤agent2b2≤
...
agentktbkt≤≤agentnbn≤
...
workerschosenbytheallocationworkerschosenbytheallocationbidsbytheworkers
cid:40
cid:3
propose
payment
structure
ensures
truthful
bidding
positive
utility
participating
agents
theorem
b−i
cid:88
s=kt
cid:2
xext
otherwise
xpst
cid:88
s=kt
xext
remark
notation
mechanism
side
parameters
xpst
function
b−i
similarly
agent
side
parameters
utility
depend
tuple
b−i
note
agent
side
parameters
additional
dependency
true
cost
whenever
clear
context
drop
one
dependencies
ease
notation
remark
externality
mechanism
externality
based
scheme
like
vcg
mechanism
set
task
proving
mechanism
truthul
regret
minimizing
individually
rational
learning
associated
stochastic
parameters
earlier
works
shown
non-triviality
involved
design
learning
mechanisms
5.2
properties
td-ucb
mechanism
deﬁnition
utility
agent
utility
agent
setting
diﬀerence
valuation
allocation
payment
made
utility
given
following
b−i
−ci
xpst
b−i
b−i
deﬁnition
dominant
strategy
incentive
compatible
dsic
mecha-
nism
dsic
utility
b−i
b−i
∀bi
∀b−i
n−1
bid
true
cost
incurred
worker
respectively
b−i
bid
proﬁle
agents
dsic
mechanism
ensures
agent
obtains
highest
utility
bidding
true
cost
irrespective
bids
agents
deﬁnition
ex-post
individually
rational
mechanism
ex-post
individually
rational
b−i
∀b−i
n−1
mechanism
ensures
every
agent
utility
obtained
truthful
bidding
costs
non-negative
theorem
td-ucb
mechanism
dsic
proof
immediate
follows
deﬁnition
payment
scheme
mechanism
prove
dsic
property
examining
diﬀerent
possible
scenarios
allocation
agent
scenarios
compute
utilities
truthful
bids
strategic
misreports
bids
performing
job
utility
worker
deﬁned
follows
b−i
b−i
xpst
b−i
b−i
b−i
allocation
payment
xpst
worker
respectively
consider
following
three
possible
scenarios
positioning
worker
increasing
order
ranking
bids
workers
refer
set
workers
non-zero
task
allocation
active
set
proof
throughout
proof
denote
active
set
allocated
workers
agent
bids
true
cost
denote
cid:48
active
set
agent
bids
untruthfully
case
scenario
agent
bids
truthfully
cid:125
cid:124
···
bkt
cid:123
cid:122
bids
froma
···
bi−1
bi+1
···
worker
reports
cost
truthfully
i.e
re-
ceive
allocation
therefore
b−i
consider
following
two
cases
misreports
cost
overbid
cost
b−i
higher
bid
would
place
agent
since
xpst
position
b−i
b−i
revised
ranking
order
position
b−i
allocation
would
zero
b−i
thereby
utility
overbidding
would
xpst
utility
truthful
bidding
hence
beneﬁt
overbidding
cost
could
two
possibilities
underbid
cost
bkt
scenario
identical
case
shown
hence
incentive
agent
bid
manner
bkt
bid
agent
able
enter
active
set
allocated
workers
let
position
agent
new
active
set
cid:48
cid:48
b−i
agent
highest
bid
cid:48
therefore
underbidding
cost
agent
able
move
workers
cid:48
···
active
set
show
bid
fetch
agent
increased
utility
per
payment
structure
b−i
b−i
xext
cid:88
cid:48
s=kt
cid:88
xpst
s=kt+1
b−i
xext
b−i
cid:48
cid:54
s=kt
cid:88
b−i
xext
second
term
zero
due
fact
absence
agent
complete
current
job
therefore
even
underbid
externality
agents
third
term
also
zero
allocation
truthful
bidding
enough
complete
job
agents
hence
absence
b−i
met
externality
sum
allocation
underbid
xpst
underbidding
agent
therefore
able
obtain
portions
job
would
allocated
···
b−i
since
absence
agents
agents
xext
would
received
allocation
note
agents
contribute
towards
negative
utility
therefore
net
utility
b−i
b−i
cid:48
case
agent
bids
truthfully
active
set
follows
···
···
bi+1
···
cid:123
cid:122
cid:125
cid:124
payment
agent
bids
froma
cid:88
b−i
cid:88
s=i+1
b−i
xext
b−i
cid:32
xpst
cid:33
b−i
xext
overbid
cost
s=i+1
look
two
possible
values
range
bids
overbid
agent
longer
belongs
active
set
cid:48
position
b−i
allocation
zero
xpst
thereby
utility
overbidding
would
less
utility
b−i
truthful
bidding
hence
beneﬁt
overbidding
cost
manner
overbid
agent
remains
active
set
brings
higher
cost
agents
active
set
suppose
active
set
cid:48
contains
agents
···
addition
set
without
loss
generality
···
bi−1
bi+1
···
bp+1
···
cid:124
payment
agent
overbid
cid:125
bids
froma
cid:48
cid:123
cid:122
cid:88
b−i
cid:88
s=p+1
s=p+1
b−i
b−i
xext
xpst
b−i
xext
since
agents
···
moved
ordering
bids
agents
contribute
b−i
however
agents
···
xext
b−i
proportion
job
must
reassigned
agent
bids
well
truthful
ﬁrst
term
therefore
strictly
exceeds
ﬁrst
term
show
second
terms
equal
observe
b−i
xext
xpst
b−i
xpst
b−i
xpst
b−i
xpst
b−i
b−i
xext
cid:88
cid:88
s=i+1
s=i+1
b−i
shows
second
simple
substitution
xpst
terms
equal
therefore
overall
payment
b−i
b−i
b−i
b−i
underbid
cost
note
scenario
following
two
possibilities
active
set
cid:48
agent
moves
new
position
b−i
without
loss
generality
consider
agent
highest
bid
cid:48
agent
ordering
agents
···
bj−1
bi−1
bi+1
···
cid:124
cid:125
cid:123
cid:122
bids
froma
cid:48
payment
structure
b−i
b−i
xext
cid:88
b−i
cid:88
s=i−1
cid:54
s=i−1
cid:54
xpst
b−i
xext
since
active
set
remains
spite
underbidding
xext
i−1
b−i
bi−1
therefore
ﬁrst
term
exceeds
ﬁrst
term
also
know
b−i
addition
xext
b−i
xext
xpst
b−i
xpst
b−i
xext
i−1
b−i
since
additional
allocation
gets
due
overbid
would
allocated
last
agent
cid:48
absence
simple
substitution
shows
second
terms
equal
therefore
b−i
c−i
active
set
cid:48
due
underbidding
agent
smaller
active
set
due
truthful
bidding
agent
means
agents
get
removed
suppose
agents
···
get
pushed
active
set
cid:48
similar
argument
case
b−i
therefore
agents
contribute
xext
towards
negative
utility
hence
b−i
c−i
case
overbid
cost
agent
bids
higher
cost
position
ranking
order
changes
one
following
b−i
allocation
worker
remains
b−i
pay-
truthful
xpst
ment
structure
ensures
payment
b−i
b−i
hence
b−i
b−i
b−i
xpst
b−i
case
agent
ends
losing
part
xpst
b−i
worker
scenario
analogous
case
worker
bids
truthfully
would
last
position
overbidding
ends
sharing
allocation
agents
therefore
b−i
b−i
iii
b−i
agent
receive
allocation
thereby
payment
well
utility
zero
underbid
cost
upon
bidding
lower
cost
agent
moves
ranking
or-
der
b−i
allocation
also
change
b−i
payment
structure
ensures
pay-
xpst
ment
b−i
b−i
hence
b−i
b−i
b−i
xpst
future
rounds
agent
ignores
loss
incurred
current
job
chooses
manipulate
current
bid
future
utility
resulting
argument
rolls
back
one
three
cases
regret
analysis
strategic
well
non-strategic
settings
underlying
op-
timization
problem
involves
parameters
learnt
tandem
hence
regret
important
notion
analyse
section
following
relevant
deﬁnitions
problem
instance
space
characterized
set
crowd
agents
vector
costs
mean
vectors
design
parameters
deadline
accuracy
deﬁnition
optimal
worker
set
problem
instance
parameters
known
solution
optimization
problem
refer
set
agents
allocated
non-zero
fraction
job
optimal
worker
set
deﬁnition
optimal
allocation
refer
solution
optimal
allocation
deﬁnition
∆-separation
let
agent
optimal
worker
set
highest
bid
optimal
allocation
social
welfare
maximizing
workers
allocation
except
would
meet
constraints
equality
refer
∆-separation
additional
fraction
job
agent
take
without
violating
constraints
stochastic
parameters
space
continuous
almost
surely
deﬁnition
regret
learning
mechanism
space
suﬀers
loss
social
welfare
due
either
non-optimal
set
selection
due
subop-
timal
allocation
within
optimal
set
formally
regret
mechanism
given
cid:88
cid:88
cid:88
cix∗
cix
i=1
t=1
i=1
allocation
agent
job
mechanism
use
truncated
empirical
estimator
within
robust
ucb
scheme
invocation
bernstein
inequality
high
con-
ﬁdence
probability
t−4
tth
job
true
mean
lies
within
robust
ucb
lcb
indices
see
lemma
enough
samples
symmetric
indices
robust
ucb
scheme
shrinks
small
enough
additional
agents
optimal
set
required
meet
spill-over
even
due
pessimistic
strategy
used
theorem
td-ucb
mechanism
selects
optimal
set
job
cid:48
log
proof
denote
costliest
agent
optimal
set
let
denote
allocations
means
known
consider
min
βk∗
log
1−ε
xk∗
ρk∗
denotes
additional
fraction
work
agent
take
without
violating
constraints
following
suﬃcient
condition
set
selected
pessimistic
estimate
matches
optimal
set
need
get
xpst
denote
ρri
βri
robust
ucb
indices
jct
ttf
worker
active
set
recall
active
set
job
denotes
agent
allocated
non-zero
fraction
job
expression
pessimistic
allocation
job
given
ˆρi
ρri
min
xpst
ˆβi
βri
log
cid:19
cid:19
cid:18
cid:18
allocation
xpst
determined
equality
whenever
set
chosen
optimal
analyse
allocation
via
two
cases
determine
job
condition
met
case
xpst
ˆρi+ρri
consider
ˆρi
ρri
xpst
xpst
min
cid:16
cid:17
cid:17
log
cid:16
1−ε
ˆρi
ρri
ˆρi
ρri
ˆρi
ρri
2dρri
ˆρi
ρri
w.h.p
ˆρi
ρri
current
case
suﬃciency
condition
met
whenever
ρri
2nd
terms
job
expression
robust
ucb
index
ρri
case
met
whenever
336uρn2d2
log
cid:16
cid:17
ˆρi+ρri
ˆβi−βri
log
upper
bound
second
moment
completion
time
shown
via
easy
computation
case
xpst
1−ε
unlike
samples
obtained
every
samples
surro-
gate
obtained
multiple
yet
ﬁnite
due
bounded
jobs
simplify
analysis
consider
sample
obtained
every
job
diﬀerence
due
simpliﬁcation
within
constant
factors
consider
ˆβi−βri
ˆρi+ρri
log
xpst
1−ε
cid:16
cid:17
cid:16
log
xpst
min
cid:32
ˆβi
βri
cid:32
ˆβi
βri
ˆρi
ρri
ˆρi
ρri
cid:16
cid:33
1−ε
log
cid:17
cid:17
ˆβi
βri
cid:18
cid:19
cid:33
cid:18
ˆρi
ρri
log
ˆβi
βri
ˆρi
ρri
cid:19
cid:18
log
cid:19
w.h.p
ˆρi
ρri
ˆβi
βri
surrogate
observes
one
sample
every
sample
βri
ρri
βri
2¯ρ
log
cid:19
cid:18
gives
suﬃciency
condition
met
whenever
βri
terms
round
suﬃciency
condition
met
whenever
64n2uβ
log
2¯ρ
log2
cid:16
1−ε
cid:17
2¯ρ+2
log
1−ε
upper
bound
second
moment
ttf
optimal
set
chosen
log
online
jobs
mentioned
earlier
regret
setting
arises
ﬁrst
sub-optimal
set
selection
thereon
sub-optimal
allocation
theorem
bound
number
jobs
sub-optimal
set
chosen
following
theorem
establishes
asymptotic
eﬃciency
learning
scheme
theorem
average
regret
td-ucb
mechanism
approaches
zero
asymp-
totically
proof
wlog
due
theorem
consider
case
active
set
optimal
set
let
last
member
active
set
average
regret
job
given
xpst
cid:88
ck∗
ravg
i=1
steps
similar
proof
theorem
job
agent
either
ck∗
xpst
ck∗
xpst
βri
2dρri
2¯ρ
log
cid:18
cid:19
βri/t
ρri/t
approach
zero
lim
t→∞
ravg
simulations
shown
theoretical
guarantees
regret
asymptotic
sense
practice
constants
pertaining
unknown
also
algorithm
focusses
optimization
social
welfare
however
pay-
ments
workers
involve
externality
workers
depend
robust
ucb
learning
scheme
learning
scheme
provide
guarantees
stochastic
parameters
sub-optimal
workers
payments
optimal
worker
set
may
also
involve
parameters
sub-optimal
workers
hence
simulations
help
form
fair
idea
therefore
order
investigate
eﬃcacy
algo-
rithm
practical
terms
tested
method
synthetically
generated
datasets
simulated
set
400
diverse
workers
diﬀerent
costs
completion
times
error
rates
ﬁxed
following
values
100
100.
400
workers
250
high
performing
workers
simulated
values
uniformly
sampled
values
uniformly
costs
set
150
mediocre
workers
also
simulated
workers
simulated
values
set
100
costs
100.
deadline
ﬁxed
error
probability
threshold
agent
allocated
task
set
0.01.
checked
performance
algorithm
total
106
jobs
baseline
used
comparison
omniscient
greedy
allocation
scheme
parameters
known
refer
baseline
optimal
context
payments
optimal
baseline
refers
minimum
payment
inducing
truthful
reports
greedy
allocation
aware
means
increasing
number
jobs
observed
total
payment
re-
duced
negative
social
welfare
decreased
plots
shown
performance
td-ucb
improves
to-
wards
optimal
executed
jobs
shows
learning
improves
time
converges
optimal
set
optimal
allocation
figure
negative
social
welfare
workers
total
payment
workers
workers
400
0.01
future
work
following
directions
future
work
derivation
theoretical
bounds
payments
workers
still
open
question
would
interesting
see
learned
values
aﬀect
payment
investigate
use
models
jct
ttf
instance
error
committed
worker
could
modelled
bernoulli
random
variable
bias
could
depend
time
completion
models
would
pose
challenges
learning
due
interdepen-
dency
stochastic
parameters
formulation
problem
posed
constraint
meeting
deadline
requirement
met
expectation
would
also
interested
satisfying
constraints
probabilistic
sense
0246810no.ofjobs
x105
2025303540455055negativesocialwelfaretducboptimal0246810no.ofjobs
x105
30405060708090100110totalpaymenttducboptimal
references
auer
cesa-bianchi
fischer
finite-time
analysis
multiarmed
bandit
problem
journal
machine
learning
2-3
235–256
2002
babaioﬀ
sharma
slivkins
characterizing
truthful
multi-
armed
bandit
mechanisms
extended
abstract
tenth
acm
confer-
ence
electronic
commerce
pages
79–88
acm
2009
biswas
jain
mandal
narahari
truthful
budget
feasible
multi-armed
bandit
mechanism
crowdsourcing
time
criti-
cal
tasks
proceedings
2015
international
conference
au-
tonomous
agents
multiagent
systems
2015
bubeck
cesa-bianchi
regret
analysis
stochastic
non-
stochastic
multi-armed
bandit
problems
foundations
trends
machine
learning
:1–122
2012
bubeck
cesa-bianchi
lugosi
bandits
heavy
tail
ieee
transactions
information
theory
:7711–7717
2013
chandra
narahari
mandal
dey
novel
mechanisms
online
crowdsourcing
unreliable
strategic
agents
twenty-ninth
aaai
conference
artiﬁcial
intelligence
pages
1256–1262
2015
devanur
kakade
price
truthfulness
pay-
per-click
auctions
tenth
acm
conference
electronic
commerce
pages
99–106
2009
ding
qin
x.-d.
zhang
t.-y
liu
multi-armed
bandit
budget
constraint
variable
costs
aaai
pages
232–238
2013
faradani
hartmann
ipeirotis
right
price
pricing
tasks
ﬁnishing
time
human
computation
volume
pages
26–31
2011
gerding
stein
larson
rogers
jennings
scal-
able
mechanism
design
procurement
services
uncertain
durations
proceedings
9th
international
conference
au-
tonomous
agents
multiagent
systems
volume
pages
649–656
2010
jain
gujar
bhat
zoeter
narahari
incentive
compatible
multi-armed-bandit
crowdsourcing
mechanism
quality
assurance
corr
abs/1406.7157
2014
karger
david
devavrat
budget-optimal
crowdsourcing
using
low-rank
matrix
approximations
49th
annual
conference
communication
control
computing
allerton
pages
284–291
2011
raykar
zhao
valadez
florin
bogoni
moy
learning
crowds
journal
machine
learning
research
11:1297–1322
2010
singer
mittal
pricing
mechanisms
crowdsourcing
mar-
kets
twenty
second
internation
world
wide
web
conference
pages
1157–1166
2013
tran-thanh
venanzi
rogers
jennings
eﬃcient
budget
allocation
accuracy
guarantees
crowdsourcing
classiﬁ-
cation
tasks
proceedings
2013
international
conference
autonomous
agents
multi-agent
systems
2013
miao
shen
leung
chen
yang
eﬃcient
task
sub-delegation
crowdsourcing
twenty-ninth
aaai
conference
artiﬁcial
intelligence
2015
