learning
blend
computer
game
levels
matthew
guzdial
mark
riedl
entertainment
intelligence
lab
school
interactive
computing
georgia
institute
technology
atlanta
303
usa
mguzdial3
gatech.edu
riedl
cc.gatech.edu
abstract
present
approach
generate
novel
computer
game
levels
blend
different
game
concepts
un-
supervised
fashion
primary
contribution
ana-
logical
reasoning
process
construct
blends
level
design
models
learned
gameplay
videos
models
represent
probabilistic
relationships
el-
ements
game
analogical
reasoning
process
maps
features
two
models
produce
blended
models
generate
new
level
chunks
proof-of-concept
train
system
classic
platformer
game
super
mario
bros.
due
highly-
regarded
well
understood
level
design
eval-
uate
extent
models
represent
stylistic
level
design
knowledge
demonstrate
ability
system
explain
levels
blended
hu-
man
expert
designers
introduction
concept
blending
powerful
tool
problem
solving
two
independent
solutions
combine
novel
so-
lution
referred
blend
presented
fundamental
cognitive
process
linked
creation
creative
artifacts
e.g
grifﬁn
described
blend
lion
bird
fauconnier
turner
2002
concept
blending
traditionally
appeared
expert
sys-
tems
applications
human
expert
encodes
concepts
particular
ﬁeld
architecture
engineering
mathematics
goel
1997
bou
2015
despite
pro-
cess
creative
potential
appeared
domain
video
games
large
extent
even
though
games
well-suited
explorations
computational
creativity
li-
apis
yannakakis
togelius
2014
likely
due
concept
blending
—and
many
computational
creativ-
ity
techniques—
relying
high
quality
knowledge
bases
quality
knowledge
base
determines
quality
blends
system
capable
constructing
meaning
human
expert
often
iterate
upon
concepts
knowledge
base
multiple
times
addition
knowl-
edge
base
many
concept
blending
systems
require
means
evaluating
blends
requiring
human-authored
heuristics
concept
blending
systems
take
signiﬁcant
amount
human
effort
construct
machine
learning
could
theory
derive
knowledge
base
corpus
examples
thus
reducing
requirement
human
input
however
knowl-
edge
learned
machine
learning
techniques
tends
noisy
full
inconsistencies
mistakes
could
thwart
typical
approaches
concept
blending
present
unsupervised
approach
concept
blending
video
game
levels
informed
knowledge
base
learned
gameplay
videos
use
gameplay
video
key
unsupervised
nature
system
system
infer
human
knowledge
exemplar
game
without
re-
quiring
explicit
human
authoring
learned
knowledge
base
takes
form
probabilistic
graphical
models
robust
noisiness
machine
learning
sufﬁ-
cient
data
models
learn
likelihood
relationships
level
elements
therefore
evaluate
rel-
ative
likelihood
level
meaning
blended
mod-
els
evaluate
blends
without
human
authored
heuristic
make
use
super
mario
bros.
proof-of-concept
game
system
due
popularity
highly
re-
garded
level
design
contributions
follows
novel
concept
blending
approach
blend
models
capable
generation
evaluation
human
evaluation
system
abil-
ity
evaluate
stylistically
similar
input
level
ex-
emplar
gameplay
levels
case
study
blended
models
evaluation
human
expert
blended
levels
background
fauconnier
turner
1998
formalized
four
space
theory
concept
blending
theory
described
four
spaces
make
blend
unblended
solutions
two
input
spaces
points
input
spaces
projected
common
generic
space
identify
equiva-
lent
points
equivalent
points
projected
blend
space
blend
space
novel
structure
patterns
arise
projection
equivalent
points
leading
dis-
covering
creative
novel
solutions
fauconnier
turner
1998
2002
argued
ubiquitous
process
occurring
discourse
problem
solving
general
meaning
making
concept
blending
systems
tend
follow
varia-
tion
four
spaces
theory
exists
great
va-
riety
techniques
map
concepts
present
various
spaces
falkenhainer
forbus
gentner
1989
analogical
reasoning
traditionally
one
leading
conceptual
mapping
approaches
maps
con-
cepts
based
relative
structure
instead
surface
features
type
structural
mapping
proven
popular
tends
better
match
human
problem
solving
goel
2015
bou
2015
however
analogical
reasoning
sys-
tems
require
non-trivial
amount
human
input
hu-
man
author
encode
concepts
terms
structure
compare
structural
information
within
domain
due
large
amount
authorship
required
un-
clear
creative
output
system
arises
concept
blending
algorithms
human
creativity
en-
coding
structures
recently
donoghue
2015
looked
deriving
knowledge
automatically
text
corpora
producing
graphical
representations
nodes
verb
connections
work
runs
parallel
donoghue
al.
domain
two
dimensional
video
games
levels
without
dependency
rules
exist
english
language
concept
blending
based
analogy
map-
ping
technique
commonly
used
video
games
prior
work
looked
knowledge
intensive
concept
blend-
ing
systems
create
new
elements
video
games
sound
effects
models
ribeiro
2003
martins
2004
game-o-matic
system
made
use
concept
mapping
match
verbs
onto
game
mechanics
create
arcade-style
games
based
human-authored
map-
ping
knowledge
treanor
2012
gow
corneli
2015
proposed
system
generate
small
games
via
amal-
gamation
onta˜n´on
plaza
2010
permar
magerko
2013
presented
system
produce
novel
interactive
nar-
rative
scripts
via
concept
blending
using
analogical
process-
ing
permar
magerko
work
similar
scripts
understood
equivalent
lev-
els
interactive
narrative
differ
use
human-
authored
scripts
rather
learning
corpus
exem-
plars
addition
work
presented
paper
focuses
two-dimensional
platformer
game
signiﬁcantly
complex
domain
model
interactive
narrative
work
inspired
probabilistic
graphical
models
computer
graphics
ﬁeld
encode
style
scene
object
exemplars
kalogerakis
2014
guerrero
2015
emilien
2015
ap-
proaches
scenes
broken
individual
objects
parts
part
important
relationships
tagged
human
expert
categories
tagged
exemplars
used
train
probabilistic
graphical
model
represent-
ing
style
probability
seeing
certain
object
pairs
relative
relationships
approach
thus
avoids
much
human
effort
systems
categorizing
ex-
emplar
input
via
clustering
technique
tagging
individual
elements
via
machine
vision
probabilistically
determin-
ing
important
relationships
rather
explicitly
encoding
terms
concept
blending
work
blending
individual
tagged
exemplars
together
based
sur-
face
level
features
components
alhashim
2014
work
focuses
blending
models
learned
ex-
emplars
rather
individual
exemplars
makes
use
structural
information
concept
mapping
system
overview
goal
work
develop
computational
system
capable
generating
novel
game
levels
blending
dif-
ferent
concepts
game
together
example
may
wish
generate
level
super
mario
bros.
mario
swims
underwater
castle
system
whole
understood
containing
three
parts
operat-
ing
sequentially
first
system
automatically
derives
sec-
tions
levels
gameplay
video
categorizes
sections
according
features
second
system
de-
rives
probabilistic
graphical
models
category
point
process
system
used
gener-
ate
game
levels
closely
resemble
different
existing
game
levels
guzdial
riedl
2016
lastly
system
blend
learned
models
together
using
struc-
tural
information
produce
ﬁnal
model
produce
creative
novel
game
levels
chose
highly
regarded
classic
platformer
super
mario
bros.
test
approach
begin
supplying
system
two
things
set
videos
learn
sprite
palette
seen
top
left
corner
figure
input
simple
produce
advent
let
plays
long
plays
sprite
palette
indicate
set
sprites
individual
images
used
build
levels
game
proof-of-concept
found
nine
videos
representing
entire
playthroughs
super
mario
bros.
fan-authored
spritesheet
elements
system
makes
use
opencv
open-
source
machine
vision
toolkit
determine
number
placement
sprites
frame
video
pulli
2012
combines
frames
level
chunks
actual
geometry
frame
sequence
represents
level
chunks
include
sprite
geometry
length
time
player
stays
chunk
chunks
clustered
categories
chunk
types
seen
figure
learned
level
chunk
category
used
basis
training
probabilistic
model
visualized
figure
system
learns
possible
sprite
shape
styles
exist
given
category
level
chunk
probability
relative
positions
shapes
probabilistic
approach
makes
imperfect
nature
machine
vision
mis-
takes
disappear
sufﬁcient
data
learned
models
large
system
generates
abstracted
graph
called
s-structure
graph
blending
seen
top
figure
structure
sprite
shape
styles
mapped
one
s-structure
graph
another
or-
der
conceptually
map
elements
one
model
onto
an-
mappings
used
transform
lower-
level
detailed
model
blended
model
model
learning
system
learns
generative
probabilistic
model
shape
shape
relationships
gameplay
videos
given
paper
focus
blending
give
brief
description
model
learning
process
detail
please
see
guzdial
riedl
2016
types
probabilistic
graphical
models
common
object
scene
model-
ing
ﬁeld
require
set
similar
exemplars
input
sets
typically
categories
models
decided
figure
visualization
entire
process
model
building
figure
visualization
ﬁnal
node
one
example
chunks
used
train
human
expert
given
input
system
game-
play
video
must
determine
input
probabilistic
model
learn
categorize
input
unsupervised
fashion
ensure
required
similarity
input
system
deﬁne
level
chunk
short
segment
level
categorization
make
use
means
clustering
estimated
distortion
ratio
pham
dimov
nguyen
2005
category
used
input
learn
generative
probabilistic
model
probabilistic
model
system
builds
probabilistic
graphical
model
level
chunk
categories
intuition
per-
category
learning
different
types
level
chunks
different
relationships
therefore
different
models
must
learned
individual
category
basis
model
ex-
tracts
values
latent
variables
represent
probabilistic
de-
sign
rules
level
chunk
category
figure
contains
visual
representation
probabilistic
model
along
visualizations
three
node
types
white
nodes
represent
hidden
variables
blue
node
values
derived
directly
level
chunks
category
figure
represents
ﬁnal
learned
model
individual
category
category
third
cluster
found
reclustering
cluster
eight
along
representative
level
chunk
three
observable
nodes
node
node
node
node
represents
sprite
geometry
individual
sprite
shape
sprite
type
sprite
shapes
case
built
connecting
adjacent
sprites
type
e.g
ground
block
coin
shapes
differ
figure
example
node
considerably
figure
contains
two
block
shapes
differing
orientation
size
node
represents
set
relative
relationships
given
node
nodes
level
chunk
node
figure
set
vectors
capturing
relative
orientation
direction
question
block
shape
nodes
chunk
two
block
shapes
one
goomba
shape
one
ground
shape
vectors
connect
cardinal
points
order
better
represent
symmetry
design
node
paired
speciﬁc
node
figure
visualizes
question
block
shape
node
node
last
directly
observed
variable
represents
number
figure
visualization
chunk
generation
process
beginning
node
value
single
ground
shape
individual
atomic
sprite
values
particular
level
chunk
case
figure
two
goombas
seventeen
ground
sprites
etc
ﬁrst
latent
variable
node
represents
styles
sprite
types
styles
vary
either
geometry
relative
position
example
variety
possi-
ble
arrangements
positions
pipe
bodies
seen
lower
right
figure
come
groups
ranging
size
one
four
differ
position
appearing
top
ground
stairs
bottom
screen
system
learns
values
number
nodes
clustering
node
pairs
pairs
nodes
mean
shape
paired
set
connections
everything
chunk
process
accom-
plished
sprite
type
meaning
least
one
node
type
sprite
fully
formed
node
determine
probability
node
shape
speciﬁc
type
given
relative
distance
given
another
node
shape
formally
gs1
rd|gs2
proba-
bility
node
within
particular
node
given
relative
distance
second
node
example
figure
goomba
shapes
high
probability
co-occurring
ground
shapes
relative
positions
node
represents
speciﬁc
style
level
chunk
intuition
behind
constituted
different
styles
sprite
shapes
different
kinds
chunks
built
shapes
sys-
tem
represents
clustering
problem
time
nodes
node
tracks
node
values
arose
chunk
nodes
essentially
node
knows
level
chunks
original
mario
represented
style
shape
figure
represents
ﬁnal
learned
node
children
notice
multiple
nodes
block
type
singular
ground
node
generation
novel
level
chunks
nodes
used
generate
novel
level
chunks
generation
process
simple
greedy
search
algorithm
at-
tempting
maximize
following
scoring
function
gi|gj
ri−j
i=1
j=1
equal
current
number
shapes
level
chunk
shape
ith
index
shape
jth
index
ri−j
relative
position
equivalent
average
probabilities
shape
terms
relative
position
every
shape
1/n
cid:88
cid:88
figure
s-structure
graph
example
instantia-
tion
generation
process
begins
two
things
single
shape
chosen
randomly
space
possible
shapes
node
random
node
value
serve
end
condition
nodes
hold
count
data
sprites
original
level
chunks
category
example
figure
top
image
level
chunk
informed
node
value
blocks
pipetop
forth
node
value
therefore
serve
end
condition
process
specify
many
sprite
type
generated
chunk
needs
complete
every
step
generation
process
system
creates
list
possible
next
shapes
tests
choosing
one
maximizes
scoring
function
possible
next
shapes
chosen
according
two
metrics
shapes
still
needed
reach
node
value-deﬁned
end
state
shapes
required
given
shape
already
level
chunk
example
figure
step
step
pipebody
shape
added
order
get
closer
end
state
step
step
lakitu
enemy
added
system
deems
required
style
pipetop
shape
added
step
system
deﬁnes
shape
require
another
shape
s1|s2
0.95
two
shapes
co-occur
time
process
ends
either
chunk
reaches
sufﬁcient
number
sprites
determined
node
probability
adding
shapes
low
0.05
blending
levels
generated
learned
probabilistic
model
tend
resemble
original
super
mario
bros.
levels
novel
may
considered
creative
surprising
concept
blending
serves
well-regarded
approach
produce
cre-
ative
artifacts
learned
models
extracted
game-
play
videos
suited
concept
mapping
instead
us-
ing
models
directly
system
takes
common
con-
cept
blending
approach
transforms
detailed
model
abstract
model
order
ﬁnd
mappings
goel
1997
deﬁne
s-structure
graph
set
nodes
styles
sprite
shapes
model
set
edges
repre-
senting
probabilistic
relative
positions
seen
figure
concept
blending
systems
abstrac-
tion
knowledge
e.g
door
cabinet
openable
furniture
encoded
human
expert
instead
make
use
learned
probabilistic
relationships
figure
gives
example
ﬁnal
s-structure
graph
left
derived
node
trained
level
chunks
like
right
box
image
represents
node
lines
node
connections
vectors
con-
necting
cardinal
points
shape
styles
node
connections
also
probability
...
corresponding
likely
appear
s-structure
graphs
form
basis
structural
comparisons
different
types
level
chunks
node
many
node
connections
used
s-structure
graph
system
uses
subsec-
tion
connections
equal
minimum
number
con-
nections
maximum
probability
creates
fully-
connected
graph
system
deﬁnes
threshold
node
starting
value
1.0.
system
decreases
value
iteratively
current
unconnected
node
adding
connections
equal
greater
probabil-
ity
node
potential
graph
graph
fully
connected
process
stops
concept
blending
systems
typically
concept
source
space
target
space
approach
node
blend
source
node
blend
target
must
selected
relationship
node
connection—
source
graph
mapped
clos-
est
relationship
target
graph
mapping
simple
closest
match
based
function
equally
weights
dif-
ferences
probability
cosine
distance
list
node
connection
mappings
transformed
list
node
mappings
via
referencing
nodes
relation-
ship
exists
structural
mapping
relationships
therefore
serves
basis
potential
node
mappings
ﬁnal
node
mappings
determined
ac-
cording
greatest
evidence
target
blend
consider
two
mapped
node
connections
two
dif-
ferent
s-structure
graphs
one
representing
relationship
ground
goombas
rela-
tionship
sea
blocks
squids
system
derive
mappings
ground
sea
blocks
goombas
squids
system
takes
ﬁnal
map-
pings
greatest
evidence
rather
map
nodes
one
probabilistic
model
another
sys-
tem
specify
target
blend
desired
ﬁnal
set
nodes
system
choose
mappings
ﬁnal
set
example
desired
ﬁnal
set
sea
blocks
squids
goombas
system
could
accept
mapping
ground
sea
blocks
goombas
squids
ﬁnal
mapping
used
transform
source
node
means
changing
node
values
within
node
example
previously
existed
relationship
goomba
ground
would
table
results
comparing
system
rankings
participant
rankings
per
question
category
style
design
fun
frustration
challenge
creativity
0.6115095
0.51948
0.2729658
-0.4393904
-0.387222
-0.1559725
2.2e-16
2.2e-16
3.745e-5
6.79e-12
2.351e-09
0.02007
exist
relationship
goomba
seablock
evaluation
section
present
results
two
distinct
evalua-
tions
meant
demonstrate
utility
system
ﬁrst
evaluation
human
study
demonstrates
probabilistic
graphical
model
captures
humans
intuitions
level
design
style
second
evaluation
case
study
demonstrating
system
blended
models
explain
human-created
expert
blends
signiﬁcantly
better
system
allowed
blend
models
model
evaluation
ﬁrst
evaluation
shows
models
learned
system
capture
human
design
intuition
show-
ing
equation
scores
super
mario
bros.
levels
simi-
larly
humans
ran
human
subjects
study
order
obtain
human
level
rankings
compare
system
rankings
study
individuals
played
series
three
levels
vein
super
mario
bros.
ﬁrst
al-
ways
level
original
super
mario
bros.
two
levels
chosen
randomly
set
ﬁfteen
novel
levels
ﬁfteen
novel
levels
generated
three
generators
snodgrass
onta˜n´on
2014
gener-
ator
dahlskog
togelius
2014
generator
generative
system
playing
three
levels
sub-
jects
asked
rank
three
levels
played
mea-
sures
style
deﬁned
mario-like
design
fun
frustration
challenge
creativity
hypothesis
correct
expect
see
human
ranking
levels
cor-
relate
strongly
system
predicted
rankings
levels
based
system
level
chunk
scoring
function
order
use
scoring
function
equation
en-
tire
levels
broke
chunks
uniform
length
ran-
domly
selected
chunks
ensure
equally
sized
distributions
used
maximum
scoring
node
score
chunk
gave
distribution
scores
entire
level
determined
absolute
ranking
levels
according
median
values
distributions
trio
levels
human
participant
ranked
system
could
determine
predicted
rankings
ran
study
two
months
collected
seventy-
ﬁve
respondents
compared
participant
rankings
system
predicted
rankings
spearman
rank-
order
correlation
table
summarizes
results
sig-
niﬁcant
p-values
correlations
bold
figure
high-quality
blended
level
according
model
trained
world
9-1.
figure
high-quality
blended
level
according
model
trained
world
9-3.
blending
evaluation
lost
levels
evaluation
blending
techniques
traditionally
dif-
ﬁcult
problem
due
subjective
nature
blend
quality
given
blended
models
generative
could
run
human
study
levels
generated
models
how-
ever
initial
human
study
demonstrated
human
sub-
jects
tend
agree
creativity
level
indicat-
ing
type
study
would
inconclusive
learned
models
also
used
evaluate
alternative
way
determine
quality
blended
models
ascertain
well
account
human-expert
blends
case
super
mario
bros.
designer
shigeru
miyamoto
designed
second
game
known
super
mario
bros.
lost
worlds
based
original
game
game
included
fantasy
world
miyamoto
added
se-
ries
whimsical
levels
include
two
levels
understood
blends
super
mario
bros.
level
types.1
level
9-1
uses
combination
sprites
found
other-
wise
separately
underwater
overworld
lev-
els
level
includes
castles
clouds
bushes
appear
overworld
levels
appearing
coral
squids
level
9-3
hand
uses
combination
sprites
otherwise
found
separately
castle
overworld
levels
level
includes
elements
overworld
levels
alongside
lava
castle
walls
due
blended
na-
ture
hypothesize
blending
technique
create
models
explain
human
blends
signiﬁcantly
better
original
unblended
models
trained
super
mario
bros.
levels
well
actual
rela-
tionships
sprites
lost
levels
match
predicted
relationships
models
rank
levels
system
used
strategy
earlier
model
eval-
uation
sectioning
level
uniform
chunks
evaluated
chunk
set
learned
models
created
four
different
versions
system
create
four
distinct
types
learned
model
smb
model
super
mario
bros.
smb
model
rep-
resents
set
nodes
learned
gameplay
video
original
game
blended
model
construct
blended
model
sys-
tem
ﬁrst
chooses
original
nodes
blend
system
constructs
initial
set
choosing
node
maximally
explains
uniform
chunk
1http
//www.mariowiki.com/world_9_
super_
mario_bros
_the_lost_levels
figure
distributions
scores
based
evaluating
world
9-1
various
models
figure
distributions
scores
based
evaluating
world
9-3
various
models
strongest
correlation
present
style
rank-
ings
provides
strong
evidence
model
cap-
tures
stylistic
information
correlations
ex-
plained
side-effect
model
training
well-
designed
super
mario
bros.
levels
weak
correla-
tion
creativity
rankings
system
rank-
ings
likely
due
lack
strong
cultural
deﬁnition
creativity
video
game
levels
respondent
ranking
distributions
per-generator
basis
differ
signiﬁ-
cantly
suggesting
interpretation
accurate
otherwise
expect
see
generators
creating
creative
levels
others
blended
level
system
blends
pair
nodes
set
source
target
node
using
blended
level
target
blend
model
thought
unsupervised
model
represents
ideal
interpretation
approach
level
type
model
constructed
additional
models
via
hand-tagging
node
level
type
ex-
ample
overworld
represent
ground
lev-
els
underwater
castle
models
represent
subsections
larger
smb
model
parsed
blended
level
level
type
models
made
blend
world
9-3
figure
therefore
parsed
overworld
castle
models
full
blended
model
constructed
largest
possible
blended
model
level
full
blended
model
constructed
model
taking
nodes
tagged
two
level
types
blended
level
blending
nodes
together
possible
pairs
leading
massive
ﬁnal
blended
model
model
served
upper-bound
performance
blend-
ing
technique
given
human
knowledge
level
types
therefore
considered
supervised
model
figure
summarizes
results
evaluation
world
9-1.
9-1
made
combination
over-
world
underwater
level
sprites
much
overworld
underwater
6:1
ratio
sprites
type
models
reﬂect
underwater
level
type
model
poorly
explaining
level
smb
overworld
level
type
models
behave
essentially
despite
low
quality
blend
blended
model
distribution
differs
signiﬁcantly
smb
model
distribution
according
paired
wilcoxon-
mann-whitney
test
p=0.03327
addition
blended
model
full
blended
model
distributions
differ
sig-
niﬁcantly
0.05
indicating
system
choice
nodes
blend
good
creating
possible
blended
nodes
case
worth
noting
smb
model
typically
ﬁnds
median
scores
actual
super
mario
bros.
levels
0.1
0.2
lowest
median
score
level
0.05.
none
models
reaches
even
lowest
point
contend
due
fact
level
represent
strong
blend
figure
summarizes
results
evaluation
world
9-3.
world
9-3
represents
much
stronger
blend
world
9-1
overworld
castle
sprite
ratio
3:1.
reﬂected
relative
distributions
castle
overworld
level
type
models
blended
model
distribution
differs
signiﬁcantly
smb
model
distribution
p=0.0008308
case
full
blended
model
also
differs
signiﬁcantly
blended
model
p=0.002961
however
despite
overall
higher
distribu-
tion
full
blended
model
median
value
rose
small
amount
compared
blended
model
median
0.077
0.074
full
blended
model
also
made
two-
hundred
nodes
opposed
system
blended
model
twenty-four
nodes
therefore
contend
sys-
tem
picked
important
nodes
blend
ad-
dition
blended
models
distributions
fell
range
actual
super
mario
bros.
level
contend
due
level
even
blend
indicating
blending
technique
leads
blended
models
close
quality
models
trained
directly
exemplar
levels
example
output
present
set
illustrative
generated
levels
system
create
full
levels
system
determines
se-
quence
nodes
best
explains
sequence
uniform
chunks
target
level
node
sequence
prompted
generate
novel
level
chunk
sequence
generated
chunks
constitutes
level
figure
figure
represent
high-quality
levels
according
system
us-
ing
blending
target
world
9-1
9-3
respectively
comparison
present
figure
representing
lower
qual-
ity
blended
level
figure
representing
high-quality
level
generated
full
blend
model
difference
be-
tween
low
high
scoring
levels
clear
structure
figure
including
individual
oddly
placed
blocks
ﬂoating
castle
identify
lack
difference
blend
full
blend
models
figure
appearing
similar
generated
levels
figure
demonstrate
quality
blended
models
perfect
example
three-fourths
figure
chunk
lava
replaced
ground
additional
knowl-
edge
could
avoided
concept
mapping
phase
one
element
future
work
attempting
learn
properties
sprites
gameplay
video
in-
tegrating
knowledge
blending
process
conclusions
paper
presented
techniques
learn
probabilis-
tic
models
gameplay
video
blend
models
produce
novel
level
types
ran
human
subjects
study
evaluate
model
ability
capture
level
design
style
measure
structural
likelihood
found
strong
ev-
idence
form
strong
correlation
participant
ranking
style
system
rankings
demonstrated
via
two
case
studies
system
able
explain
human
expert
blended
levels
able
blend
models
evaluate
levels
signiﬁcantly
better
unblended
models
taken
together
represent
system
able
learn
design
evaluate
design
like
hu-
man
able
extend
knowledge
explain
new
domains
via
concept
blending
beyond
improving
cur-
rent
blending
process
level
models
also
look
toward
blending
models
multiple
games
fu-
ture
work
acknowledgements
material
based
upon
work
supported
national
science
foundation
grant
iis-1525967
opinions
ﬁndings
conclusions
recommendations
ex-
pressed
material
author
necessarily
reﬂect
views
national
science
foun-
dation
figure
lower
quality
blended
level
according
model
trained
world
9-3.
figure
high
quality
blended
level
generated
full
blend
model
trained
world
9-3.
references
2014
alhashim
cao
zhang
2014.
topology-varying
shape
creation
via
structural
blending
acm
transactions
graphics
tog
:158
2015
bou
schorlemmer
corneli
g´omez-
ram´ırez
maclean
smaill
pease
2015.
role
blending
mathematical
invention
proceed-
ings
sixth
international
conference
computational
creativity
june
2014
dahlskog
togelius
2014.
multi-level
level
generator
computational
intelligence
games
cig
2014
ieee
conference
1–8
ieee
2015
emilien
vimont
cani
m.-p.
poulin
benes
2015.
world-
brush
interactive
example-based
synthesis
procedural
virtual
worlds
acm
transactions
graphics
:106:1–106:11
1989
falkenhainer
forbus
gentner
1989.
structure-mapping
engine
algorithm
ex-
amples
artiﬁcial
intelligence
:1–63
1998
fauconnier
turner
1998.
conceptual
integration
networks
cognitive
science
:133–187
2002
fauconnier
turner
2002.
way
think
conceptual
blending
mind
hidden
complex-
ities
basic
books
1997
goel
1997.
design
analogy
creativity
ieee
expert
:62–70
2015
goel
2015.
biologically
inspired
invention
different
proceedings
sixth
international
confer-
ence
computational
creativity
june
2015
gow
corneli
2015.
towards
generating
novel
games
using
conceptual
blending
eleventh
artiﬁ-
cial
intelligence
interactive
digital
entertainment
con-
ference
2015
guerrero
jeschke
wimmer
wonka
2015.
learning
shape
placements
example
acm
transactions
graphics
:108:1–108:13
2016
guzdial
riedl
2016.
toward
game
level
generation
gameplay
videos
arxiv
e-prints
2014
kalogerakis
chaudhuri
koller
koltun
2014.
probabilistic
model
component-
based
shape
synthesis
acm
transactions
graphics
:55:1–55:11
2014
liapis
yannakakis
togelius
2014.
computational
game
creativity
proceedings
fifth
international
conference
computational
creativity
vol-
ume
2004
martins
pereira
miranda
cardoso
2004.
enhancing
sound
design
conceptual
blending
sound
descriptors
proceedings
1st
joint
workshop
computational
creativity
2015
donoghue
abgaz
hurley
ron-
zano
2015.
stimulating
simulating
creativity
inventor
2010
onta˜n´on
plaza
2010.
amalgams
formal
approach
combining
multiple
case
solu-
case-based
reasoning
research
develop-
tions
ment
springer
257–271
2013
permar
magerko
2013.
conceptual
blending
approach
generation
cognitive
scripts
interactive
narrative
ninth
artiﬁcial
intelligence
in-
teractive
digital
entertainment
conference
2005
pham
dimov
nguyen
2005.
selection
k-means
clustering
proceedings
institution
mechanical
engineers
part
journal
me-
chanical
engineering
science
219
:103–119
2012
pulli
baksheev
kornyakov
eruhi-
mov
2012.
real-time
computer
vision
opencv
commun
acm
:61–69
2003
ribeiro
pereira
marques
leitao
cardoso
2003.
model
creativity
creature
generation
game-on
175
2014
snodgrass
onta˜n´on
2014.
experiments
map
generation
using
markov
chains
proceedings
9th
international
conference
foundations
digital
games
2012
treanor
blackford
mateas
bogost
2012.
game-o-matic
generating
videogames
repre-
sent
ideas
procedural
content
generation
workshop
foundations
digital
games
conference
