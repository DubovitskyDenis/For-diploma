benders
decomposition
design
hub
shuttle
public
transit
system
arthur
mah´eo
philip
kilby
australian
national
university
acton
act
2601
australia
data61
tower
london
circuit
canberra
city
act
2601
australia
arthur.maheo
philip.kilby
nicta.com.au
pascal
van
hentenryck
university
michigan
industrial
operations
engineering
1205
beal
avenue
ann
arbor
48109.
pvanhent
umich.edu
busplus
project
aims
improving
oﬀ-peak
hours
public
transit
service
canberra
australia
address
diﬃculty
covering
large
geographic
area
busplus
proposes
hub
shuttle
model
consisting
combination
high-frequency
bus
routes
key
hubs
large
number
shuttles
bring
passengers
origin
closest
hub
take
last
bus
stop
destination
paper
focuses
design
bus
network
proposes
eﬃcient
solving
method
mul-
timodal
network
design
problem
based
benders
decomposition
method
starting
mip
for-
mulation
problem
paper
presents
benders
decomposition
approach
using
dedicated
solution
techniques
solving
independent
sub-problems
pareto
optimal
cuts
cut
bundling
core
point
update
computational
results
real-world
data
canberra
public
transit
system
justify
design
choices
show
approach
outperforms
mip
formulation
two
orders
magnitude
moreover
results
show
hub
shuttle
model
may
decrease
transit
time
factor
staying
within
costs
existing
transit
system
key
words
combinatorial
optimisation
multimodal
transportation
benders
decomposition
pareto
optimal
cuts
cut
bundling
introduction
canberra
planned
city
designed
american
architect
walter
griﬃn
1913.
features
large
number
semi-autonomous
towns
separated
greenbelts
result
canberra
covers
wide
geographic
area
makes
public
transportation
particlarly
challenging
bus
routes
long
hence
bus
frequencies
patronage
low
especially
oﬀ-peak
periods
address
imitations
busplus
project
designed
optimized
simulated
hub
shuttle
public
transit
system
hub
shuttle
model
consists
combination
high-frequency
bus
routes
key
hubs
large
number
shuttles
multi-hire
taxis
bring
passengers
origin
closest
hub
take
last
bus
stop
destination
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
main
advantage
busplus
ability
deliver
service
regardless
origin
destination
passenger
busplus
uses
bus
stops
instead
doorstep
shuttle
service
reduce
delay
waiting
customer
exit
house
e.g.
putting
shoes
coat
...
addition
bus
stops
provide
already
established
network
covering
city
within
walking
distance
homes
even
remotest
areas
traveller
standpoint
transit
model
highly
convenient
travellers
book
travel
online
e.g.
phones
picked
traditional
bus
stop
dropped
destination
ticket
price
anticipated
beneﬁts
come
level
service
hope
reduce
travel
time
signiﬁcantly
overall
system
cost
designing
hub
shuttle
public
transit
system
hspts
however
creates
series
interesting
challenges
including
connect
set
potential
hubs
minimize
costs
maximize
convenience
allocate
operations
requests
trip
consisting
shuttle
leg
number
bus
legs
ﬁnal
shuttle
leg
paper
focuses
ﬁrst
problem
primarily
oﬀ-peak
hours
evenings
week-ends
challenging
cost
service
standpoint
designing
hspts
dif-
fers
traditional
bus-network
design
problem
given
set
known
implied
origin/destination
demands
consists
building
network
routes
visit
bus
stops
serve
demands
contrast
solution
hspts
need
visit
bus
stops
even
potential
hubs
hspts
goal
decide
hubs
link
via
bus
routes
take
advantage
economies
scale
relying
shuttles
remaining
last
mile
elements
service
result
hspts
system
design
bus
network
intertwined
routing
passengers
objective
balance
cost
running
buses
whole
day
high
up-front
cost
cost
routing
passengers
shuttles
low
ﬁxed
cost
incurs
costly
per
trip
expense
paper
models
hspts
design
problem
hub-arc
location
problem
halp
camp-
bell
2005a
uses
benders
decomposition
benders
1962
solve
resulting
mip
formulation
benders
decomposition
makes
use
pareto-optimal
cuts
proposed
mag-
nanti
wong
1981
core
point
updates
cut
bundling
using
problem
structure
experimental
results
based
real
data
collected
canberra
public
transit
system
show
beneﬁts
hspts
proposed
busplus
project
well
eﬀectiveness
benders
decomposition
various
enhancements
observe
also
although
main
motivation
busplus
project
concerns
oﬀ-peak
setting
experimental
results
based
actual
data
covering
whole
day
operations
validate
scalability
model
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
rest
paper
organized
follows
section
describes
hspts
model
considered
paper
simplifying
assumptions
data
sets
section
reviews
prior
work
related
problems
section
reviews
mip
formulation
number
problem-speciﬁc
pre-processing
techniques
section
reviews
benders
decomposition
important
extensions
section
presents
benders
decomposition
approach
finally
section
presents
experimental
results
case
study
including
beneﬁts
benders
decomposition
impact
busplus
project
public
transit
system
canberra
following
use
shuttles
taxis
interchangeably
since
shuttles
case
study
multi-hire
taxis
available
large
numbers
canberra
modeling
hspts
problem
busplus
project
hspts
variant
hub-arc
location
problem
customers
access
multimodal
transportation
buses
run
ﬁxed
network
taxis
transport
customers
origin-destination
pair
bus
routes
opened
ﬁxed
cost
represents
cost
operating
high-frequency
buses
along
arc
goal
minimize
cost
system
i.e.
ﬁxed
cost
operating
bus
lines
variable
cost
taxi
trip
together
maximizing
convenience
travellers
use
trip
duration
proxy
traveller
convenience
model
make
design
hspts
manageable
computational
standpoint
number
simpliﬁcations
introduced
first
trips
modeled
single
commodities
number
passengers
factor
cost
trip
second
routing
scheduling
aspects
ignored
taxis
considered
available
location
within
short
time
always
travel
directly
pickup
setdown
assumption
reasonable
whenever
hspts
system
able
call
suﬃciently
large
taxi
ﬂeet
certainly
case
canberra
buses
considered
available
connections
nominal
waiting
time
model
account
capacities
reasonable
assumption
oﬀ-peak
times
obviously
busplus
project
also
developed
online
optimization
algorithms
taxi
dispatching
outside
scope
paper
dataset
represents
week
worth
trips
canberra
using
current
public
transit
network
trip
origin
destination
number
passengers
time
distance
matrices
pair
nodes
gives
on-road
distance
average
travel
time
pair
nodes
respect
triangle
inequality
finally
figure
presents
two
sets
potential
hubs
used
building
bus
network
h10
ten
hubs
h20
twenty
hubs
hubs
shown
blue
dots
ﬁgure
hubs
chosen
using
p-median
model
hakimi
1964
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
figure
two
potential
conﬁgurations
busplus
hubs
respectively
h10
h20
review
prior
work
problem
linking
set
hubs
using
arcs
called
hub-arc
location
problem
hub-
and-spoke
network
design
problem
introduced
campbell
2005a
deﬁned
problem
locating
given
number
hub
arcs
way
total
ﬂow
cost
minimized
mostly
used
transhipment
contexts
economies
scale
expected
grouping
ﬂows
hub-arc
location
problem
halp
seen
two-level
decision
problem
deciding
arcs
open
ﬁrst
route
ﬂow
minimum
cost
structure
appears
ideally
suited
benders
decomposition
benders
1962
recent
years
signiﬁcant
body
research
dedicated
solving
variants
hub
location
problem
halp
using
benders
decomposition
studies
typically
impose
restrictions
network
topology
include
instance
tree
hub
location
problem
s´a
2013
hubs
connected
non-directed
tree
hub
line
location
problem
s´a
2015a
decision
locate
lines
connecting
hubs
star
topologies
labb´e
yaman
2008
yaman
2008
hubs
connected
central
hub
nodes
connected
hubs
s´a
2015b
introduced
hub
line
location
problem
consists
locating
hubs
connecting
means
path
i.e.
single
line
arcs
linking
hubs
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
way
speed
travel
time
commodities
also
routed
outside
network
may
also
cost
access
network
order
solve
complex
problem
s´a
2015b
used
benders
decomposition
include
multicuts
dedicated
algorithm
sub-problem
use
branch-and-cut
framework
mar´ın
jaramillo
2009
solve
rapid
urban
transit
network
design
problem
goal
locate
train
stations
uncapacitated
network
line
location
demand
routing
constraints
moreover
customers
access
private
network
competition
public
network
trains
improve
convergence
speed
benders
algorithm
using
sub-
problem
disaggregation
procedure
remove
inactive
optimality
cuts
dedicated
sub-
problem
algorithm
goal
work
maximize
demand
served
transit
system
goal
optimize
combination
cost
convenience
finally
useful
mention
nodes
assigned
hubs
two
main
ways
single
multiple
allocations
multple
allocations
commodities
node
sent
multiple
hubs
single
allocation
commonly
studied
camargo
2008
apply
benders
decomposition
uncapacitated
multiple-aallocation
halp
main
issue
non-linearity
model
result
use
generalised
benders
decomposition
mip
master
problem
non-linear
convex
transportation
problem
subproblem
note
s´a
2015b
also
allow
multiple
allocations
mip
model
section
presents
mip
model
hspts
problem
starts
presenting
main
formulation
proposes
number
domain-speciﬁc
pre-processing
steps
4.1.
basic
formulation
4.1.1.
inputs
inputs
hspts
follows
complete
graph
set
nodes
set
trips
serve
trip
speciﬁed
tuple
origin
destination
number
passengers
subset
nodes
used
bus
hubs
following
use
denote
origin
destination
trip
distance
travel
time
node
given
dij
tij
respectively
since
hspts
problem
aims
optimizing
cost
convenience
jointly
use
conversion
factor
translate
travel
times
ﬁnancial
costs
travel
distance
used
cost
measure
travel
time
proxy
convenience
value
shifts
solution
towards
cost
convenience
modifying
travel
times
factor
travel
costs
lower
cost-driven
solution
objective
formulated
terms
following
constants
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
cost
using
taxi
per
kilometer
cost
using
bus
per
kilometer
number
buses
per
day
depends
headway
average
waiting
bus
diﬀerent
characteristics
two
transportation
modes
captured
associated
cost
functions
cost
taxi
combination
cost
per
kilometer
cost
per
minute
cost
bus
function
time
however
buses
run
whole
day
modelled
large
initial
set-up
cost
costs
deﬁned
follows
τij
dij
tij
γhl
thl
βhl
dhl
cost
convenience
using
taxi
convenience
using
bus
cost
opening
bus
leg
since
passengers
trip
travelling
time
taxi
bus
costs
obtained
multiplying
arc
costs
number
passengers
i.e.
τij
γij
4.1.2.
decision
variables
decision
variables
hspts
problem
variable
binary
follows
binary
variable
denotes
whether
trip
uses
taxi
travel
arc
denotes
whether
trip
uses
bus
arc
variable
zhl
indicates
whether
arc
opened
buses
use
convention
paper
uses
edges
travelled
taxis
edges
used
buses
4.1.3.
network
topology
mip
model
enforces
weak
form
connectivity
requires
sum
incoming
bus
legs
must
equal
sum
outgoing
bus
legs
every
hub
words
leg
entering
hub
corresponding
leg
leave
hub
formulation
technically
leaves
open
possibility
producing
network
disconnected
components
demand
patterns
observed
practice
lead
networks
good
quality
low
demand
topology
often
simple
circuit
around
center
higher
demand
patterns
often
produces
one
connected
ﬂower
topologies
sub-circuits
extending
center
suburbs
figure
section
illustrates
topologies
4.1.4.
mip
model
position
present
mip
model
hspts
busplus
model
similarities
hal4
campbell
2005a
relaxes
number
critical
assumptions
case
study
i.e.
optimal
solution
may
contain
path
origin
destination
contain
hub
constraint
number
arcs
open
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
cid:88
cid:88
r∈t
j∈n
ijxr
hlyr
cid:88
cid:88
r∈t
l∈h
l∈h
cid:88
cid:88
zhl
l∈h
zhl

zlh
cid:88
l∈h
βhlzhl
otherwise
cid:0
cid:1
cid:88
h∈h
i∈h
min
s.t
cid:88
j∈n
zhl
figure
mip
model
busplus
hspts
mip
model
allows
bridge
arcs
two
hubs
mip
model
presented
figure
objective
function
sum
travelling
cost
trips
using
selected
arcs
cost
opening
bus
legs
constraints
enforce
weak
connectivity
constraints
bus
legs
constraints
ensure
travellers
use
opened
bus
legs
constraints
enforce
ﬂow
conservation
i.e.
travellers
start
origin
reach
destination
without
skipping
network
edges
note
variables
ﬁxed
problem
becomes
totally
unimodular
integrality
constraints
variables
relaxed
4.2.
problem-speciﬁc
preprocessing
describe
two
ﬁltering
techniques
decrease
number
decision
variables
signiﬁ-
cantly
trip
ﬁltering
link
ﬁltering
4.2.1.
trip
filtering
may
case
possible
conﬁgurations
hspts
problem
optimal
routing
trip
direct
taxi
ride
trips
ﬁltered
hspts
problem
since
impact
optimal
solutions
trips
identiﬁed
simple
ﬁltering
algorithm
considers
bus
legs
open
computes
least-cost
path
source
destination
trip
removes
trip
least-cost
path
direct
taxi
ride
interesting
observe
ﬁltering
procedure
least-cost
trip
direct
taxi
ride
one
four
patterns
depicted
figure
since
assumed
bus
legs
open
particular
least-cost
trip
either
single
taxi
ride
journey
exactly
one
bus
leg
possibly
taxi
ride
origin
hub
and/or
hub
destination
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
figure
possible
trip
patterns
showing
direct
taxi
trips
total
t-filtered
reduction
t-filtered
reduction
h10
h20
21282
monday
tuesday
21029
wednesday
21418
thursday
21487
friday
19809
eﬀectiveness
trip
filtering
column
total
gives
initial
number
trips
columns
t-filtered
14324
14184
14451
14486
13398
17294
17084
17401
17499
16013
32.69
32.55
32.53
32.58
32.36
18.74
18.76
18.76
18.56
19.16
table
report
number
trips
trip
ﬁltering
columns
reduction
give
trip
reduction
percentage
table
reports
experimental
results
eﬀectiveness
trip
ﬁltering
column
total
reports
initial
number
trips
t-filtered
columns
give
trips
remaining
ﬁltering
hub
conﬁgurations
column
reduction
report
trip
reduction
percentage
conﬁgurations
hub
conﬁguration
ﬁltering
reduces
number
trips
reduction
conﬁguration
hubs
lower
number
course
expected
hubs
since
additional
hubs
make
complex
hub
patterns
attractive
cost
standpoint
4.2.2.
link
filtering
current
formulation
considers
every
possible
taxi
link
thus
using
complete
graph
triangle
inequality
need
connect
nodes
using
taxis
taxi
links
consider
trip
origin
hub
hub
destination
origin
destination
result
formulation
needs
following
taxi
variables
observe
τod
cost
one-person
direct
taxi
trip
upper
bound
cost
trip
upper
bound
used
ﬁlter
links
origin
hub
hub
destination
generalizing
trip
ﬁltering
presented
earlier
indeed
least-cost
path
going
cheaper
variable
removed
consider
instance
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
t-filtered
l-filtered
reduction
t-filtered
l-filtered
reduction
h10
h20
monday
tuesday
wednesday
thursday
friday
292958
290100
296000
295555
273226
131580
129998
133533
132500
124953
55.09
55.19
54.89
55.17
54.27
698910
690278
706873
703205
646095
294726
291736
299117
296852
279811
57.83
57.74
57.68
57.79
56.69
table
eﬀectiveness
link
filtering
t-filtered
l-filtered
columns
give
number
taxi
variables
left
applying
t-ﬁltering
l-ﬁltering
procedures
reduction
columns
give
percentage
taxi
variables
pruned
l-ﬁltering
t-ﬁltered
instances
case
trips
three
components
taxi
trip
origin
hub
bus
trip
two
hubs
taxi
trip
last
hub
destination
condition
τoh
γhl
τhl
τod
holds
taxi
trip
never
used
variable
removed
symmetric
condition
τoh
γhl
τhl
τod
allows
remove
variable
similar
reasonings
applied
patterns
depicted
figure
call
procedure
link
ﬁltering
l-ﬁltering
short
t-ﬁltering
l-ﬁltering
procedures
applied
remaining
taxi
arcs
called
useful
denotes
set
useful
taxi
arcs
trip
table
presents
experimental
results
link
ﬁltering
indicate
link
ﬁltering
procedure
particularly
eﬀective
removing
taxi
arcs
available
trip
ﬁltering
table
shows
holds
two
conﬁgurations
hubs
respectively
brief
review
benders
decomposition
section
provides
brief
overview
benders
decomposition
solving
mips
benders
1962
overview
uses
simplyfying
assumptions
hold
hstps
problem
assume
simplicity
mip
model
speciﬁed
follows
min
s.t
variables
real-valued
variables
discrete
belong
feasible
set
benders
decomposition
splits
mip
model
two
parts
master
problem
contains
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
variables
sub-problem
contains
variables
candidate
solution
variables
subproblem
speciﬁed
min
s.t
master
problem
becomes
min
simplicity
assume
subproblem
always
feasible
bounded
case
hstps
problem
let
dual
variables
associated
dual
given
max
s.t
let
extreme
points
dual
feasibility
region
depend
candidate
values
variables
subproblem
reformulated
min
s.t
master
problem
min
s.t
constraints
called
benders
optimality
cuts
since
potentially
exponential
number
extreme
points
benders
decomposition
starts
solving
restricted
master
problem
cuts
introduces
benders
cuts
lazily
iteration
benders
decomposition
uses
restricted
master
produces
candidate
solution
solves
subproblem
candidate
solution
optimal
otherwise
benders
cut
form
added
restricted
master
problem
process
repeated
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
5.1.
separable
benders
subproblem
cut
bundling
consider
case
subproblem
separable
i.e.
rewritten
min
s.t
+···
a1x1
b1y1
a2x2
b2y2
anxn
bnyn
solving
subproblem
consists
optimizing
independent
components
i.e.
min
s.t
a1x1
b1y1
min
s.t
a2x2
b2y2
separable
subproblem
gives
new
possibilities
cut
generation
indeed
geoﬀrion
graves
1974
observe
case
exist
better
strategies
aggregating
results
sub-optimizations
produce
single
cut
see
also
concept
multi-cut
proposed
birge
louveaux
1988
investigate
various
cut
bundling
strategies
hstps
problem
next
section
5.2.
pareto
optimal
cuts
subproblem
network
ﬂow
optimization
exhibits
high
degeneracy
ahuja
1988
benders
decomposition
may
experience
slow
convergence
becomes
important
generate
stronger
pareto
optimal
cuts
proposed
magnanti
wong
1981
given
two
solutions
dominates
least
one
inequalities
strict
solution
associated
cut
dominates
solutions
said
pareto
optimal
magnanti
wong
1981
showed
generate
pareto
optimal
cut
solving
optimization
problem
using
notion
core
point
set
i.e.
point
relative
interior
convex
hull
denoted
pareto
optimal
cut
obtained
solving
following
optimization
problem
max
s.t
by0
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
candidate
solution
restricted
master
problem
optimal
solution
core
point
papadakos
2009
showed
choice
core
point
dramatically
improve
conver-
gence
rate
benders
decomposition
moreover
author
proposed
method
computing
sequence
core
points
using
linear
combination
current
core
point
solution
obtained
iteration
benders
decomposition
experimental
results
shown
using
weights
1/2
gives
excellent
results
benders
decomposition
hstps
problem
section
presents
apply
benders
decomposition
hstps
problem
key
idea
assign
variables
mip
model
restricted
master
problem
leaving
variables
subproblem
mentioned
earlier
variables
ﬁxed
subproblem
min-cost
ﬂow
solved
eﬃciently
subproblem
speciﬁed
min
s.t
cid:33
ijxr
hlyr
cid:32
cid:88
cid:88
cid:88
cid:0
r∈t
j∈n
j∈h
cid:1
cid:88
cid:88
l∈h
h∈h
i∈h
¯zhl

10a
otherwise
10b
10c
dual
problem
speciﬁed
terms
dual
variables
associated
constraints
10b
variable
dual
variables
associated
constraints
10c
cid:88
r∈t
max
s.t
cid:88
cid:32
cid:88
cid:33
l∈h
zhl
r∈t
11a
11b
11c
note
model
separable
trip
gives
rise
independent
subproblem
6.1.
cut
aggregation
discuss
generate
cuts
restricted
master
problem
since
subproblem
separable
individual
cuts
aggregated
many
ways
explored
variety
cut
bundling
strategies
exploit
structure
hstps
problem
instance
bundling
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
strategy
may
aggregate
cuts
trips
origin
also
important
mention
bundled
cut
must
create
variable
original
variable
appear
exactly
one
cut
following
cut
bundling
strategies
investigated
hstps
problem
cut
deﬁnitions
¯ur
¯vr
denote
values
dual
variables
subproblem
one
traditional
benders
cut
cid:88
r∈t
¯ur
¯ur
¯ur
cid:32
cid:88
cid:33
r∈t
¯vr
zhl
l∈h
¯ur
cid:88
cid:32
cid:88
cid:88
cid:88
l∈h
r∈t
zhl
r∈t
cid:33
¯vr
13a
13b
multi
strategy
aggregate
cuts
hubs
strategy
aggregates
subproblems
closest
hub
trip
origin
destination
let
set
trips
closest
hub
cid:88
r∈th
cid:88
l∈h
¯ur
¯ur
zhl
¯vr
14a
14b
origin
strategy
aggregates
subproblems
trip
origins
let
trips
origin
set
possible
origins
cid:88
r∈to
cid:88
l∈h
zhl
¯ur
¯ur
¯vr
15a
15b
cid:33
cid:33
cid:32
cid:88
cid:88
r∈th
h∈th
cid:32
cid:88
cid:88
r∈to
o∈o
legs
strategy
aims
grouping
trips
ﬁrst
bus
leg
use
since
bus
leg
known
priori
leg
strategy
aggregates
subproblems
bus
leg
used
trip
ﬁltering
recall
trips
associated
single
bus
leg
trip
ﬁltering
since
bus
legs
open
let
thl
set
trips
using
bus
leg
trip
ﬁltering
cid:88
r∈thl
cid:88
¯ur
¯ur
qhl
¯vr
zhl
cid:88
l∈h
r∈thl
qhl
16a
16b
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
6.2.
restricted
master
problem
positon
present
restricted
master
problem
whose
objective
minimizes
cost
opening
bus
legs
subject
circular
constraint
one
cut
sets
deﬁned
iteration
min
s.t
cid:88
βhlzhl
l∈h
one
6.3.
pareto-optimal
cuts
benders
implementation
hstps
problem
uses
pareto-optimal
cuts
requires
solve
two
linear
programs
original
sub-problem
pareto
sub-problem
observe
ﬁrst
independent
subproblems
min-cost
ﬂow
edges
inﬁnite
capacity
equivalent
shortest
path
problem
hence
original
subproblem
given
trip
solved
computing
trip
shortest
path
origin
desti-
nation
using
edges
deﬁned
union
useful
taxi
arcs
set
opened
bus
legs
current
iteration
deﬁne
pareto
subproblem
necessary
ﬁnd
core
point
satisﬁes
circular
constraint
chosen
easily
assigning
value
variables
i.e.
pareto
subproblem
trip
becomes
max
s.t
cid:88
cid:88
hlvhl
l∈h
τij
γhl
¯zhlvhl
l∈h
pareto
19a
19b
19c
optimal
objective
value
original
subproblem
trip
implementation
also
upates
core
point
seen
intensiﬁcation
procedure
seldom
used
bus
legs
decay
towards
low
values
bus
legs
present
every
solution
assigned
high
coeﬃcient
pareto
solutions
update
rule
deﬁned
follows
k+1
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
/km
/km
hubs
10−3
h10
default
values
parameters
4.5
1.96
table
experimental
results
section
presents
experimental
results
hstps
problem
starts
specifying
exprimental
setting
continues
justifying
implementation
choices
including
benders
scheme
cut
bundling
strategy
core
point
updating
rule
also
compares
ﬁnal
algorithm
standard
mip
approach
finally
section
evaluates
impact
algorithm
real
case-study
motivated
work
restructing
canberra
public
transit
system
7.1.
experimental
setting
results
section
4.2
already
indicated
diﬀerence
weekdays
minimal
result
experimental
results
use
single
day
two
sets
instances
set
small
instances
number
trips
ranging
100
2,000
trips
set
large
instances
ranging
1,000
20,000
trips
small
instances
primarily
used
eliminate
certain
algorithmic
options
large
instances
useful
demonstrate
scalability
various
advanced
features
unless
speciﬁed
otherwise
algorithms
used
parameter
settings
presented
table
note
time
penalty
emulates
waiting
time
associated
bus
trip
i.e.
includes
least
ten
minutes
waiting
time
ﬁve
minutes
ﬁrst
last
stops
lp/mip
solver
used
experiments
gurobi
v6.0
gurobi
optimization
2015
default
parameters
using
dual
simplex
without
pre-processing
gurobi
used
solve
mip
formulation
benders
master
problem
sub-problems
algorithms
implemented
c++
run
single
threaded
programs
forcing
gurobi
use
single
thread
well
experiments
run
cluster
amd
opteron
4184
cpus
64gb
ram
7.2.
justiﬁcation
benders
approach
7.2.1.
benders
schemes
figure
reports
results
following
implementations
ben-
ders
decomposition
single
standard
subproblem
singe
pareto
subproblem
multiple
independent
standard
subproblems
multiple
independent
pareto
subproblems
results
small
set
instances
use
standard
parameters
algorithms
limit
100
iterations
benders
decomposition
needs
100
iterations
likely
exhibiting
signiﬁcant
degeneracy
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
10000
1000
100
0.1
0.01
instance
figure
comparison
benders
decomposition
schemes
results
figure
clearly
show
value
pareto-optimal
cuts
standard
approach
solve
lower
half
instances
requiring
hundred
iterations
also
show
single
pareto
subproblem
creates
hard
mip
problem
execution
times
become
signiﬁcant
issue
solving
independent
pareto
subproblems
addresses
issues
7.2.2.
cut
aggregation
schemes
figure
presents
results
comparing
cut
aggrega-
tion
schemes
small
instances
figure
depicts
behavior
three
bundling
strategies
one
cut
hub
aggregation
leg
aggregation
large
instances
present
aver-
age
runtime
per
instance
addition
figure
also
gives
standard
deviation
form
error
bar
dot
graph
indicates
standard
deviation
100s
figure
gives
number
iterations
bundling
schemes
large
instances
table
also
presents
number
cuts
generated
per
iteration
bundling
scheme
leg
bundling
best
performing
scheme
eﬃcient
stable
size
instances
grows
probable
explanation
bus
leg
trip
ﬁltering
clusters
trips
near-identical
features
respect
network
usage
initial
ﬁnal
hubs
consequence
resulting
cuts
generate
eﬃcient
partitions
solution
space
results
concur
presented
camargo
2008
showed
computational
overhead
generating
cut
per
commodity
far
outweighs
potential
gain
iterations
contreras
2011
aggregate
cuts
hubs
encouraging
results
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
hubs
legs
multi
one
origin
400
350
300
250
200
150
100
instance
figure
comparison
aggregation
schemes
small
instances
hubs
legs
one
800
700
600
500
400
300
200
100
figure
comparing
cut
bundling
schemes
instance
7.2.3.
core
point
update
figure
presents
beneﬁts
update
rule
core
point
using
set
twenty
potential
hubs
h20
0.1.
key
message
core
point
updates
make
benders
decomposition
faster
stable
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
hubs
legs
multi
one
origin
instance
figure
number
iterations
bundling
schemes
larges
instances
instance
1000
2000
3000
4000
5000
6000
7000
8000
9000
10000
11000
12000
13000
14000
15000
16000
17000
18000
19000
20000
21000
hubs
legs
origin
multi
h20
h10
h20
h10
h20
h10
h20
h10
811
658
491
395
234
1558
1290
716
607
280
2400
2002
935
830
309
3206
2659
322
962
1104
4036
3364
328
1109
1257
4851
4036
346
1200
1357
5568
4613
339
1262
1427
6409
5315
351
1360
1513
7182
6008
354
1387
1556
8084
6741
353
1485
1667
8863
7329
357
1528
1712
8010
9623
362
1582
1762
8678
10447
360
1598
1793
9290
11230
364
1644
1846
9943
12000
359
1680
1872
364
1721
1918
10659
12838
364
1759
1953
11374
13665
366
1781
1988
12006
14446
369
1800
2002
12651
15236
369
1828
2032
13310
16033
369
1853
2054
13968
16824
table
number
cuts
per
iteration
various
bundling
schemes
7.2.4.
mip
versus
benders
decomposition
figure
compares
standard
mip
model
ﬁnal
version
benders
decomposition
algorithm
independent
pareto
sub-
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
split
pareto
core
point
update
250
200
150
100
instance
figure
impact
core
point
updating
rule
using
h20
0.1.
mip
benders
small
instances
100
10000
1000
100
large
instances
100
0.1
0.01
1000
100
0.1
h20
h20
figure
comparing
mip
model
final
benders
decomposition
problems
leg
aggregation
core
point
update
experiments
use
0.1
gives
realistic
results
ﬁrst
column
presents
results
set
small
instances
second
column
large
instances
ﬁrst
line
uses
conﬁguration
ten
hubs
h10
second
line
twenty
hubs
h20
instances
grow
larger
gap
standard
mip
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
day
busplus
action
buses
cost
time
cost
time
monday
45728.57
369420.37
tuesday
45728.57
362746.82
wednesday
46436.58
372214.03
45899.13
376147.06
thursday
friday
43893.83
350709.85
829.88
828.77
828.55
825.21
819.64
402006.75
1635.22
402006.75
1635.10
402006.75
1620.79
402006.75
1632.79
402006.75
1610.85
table
time
cost
comparison
busplus
action
benders
decomposition
becomes
increasingly
pronounced
benders
decomposition
almost
two
orders
magnitude
faster
largest
conﬁguration
7.3.
beneﬁts
case
study
conclude
section
evaluating
approach
real
case-study
public
transit
system
canberra
table
compares
results
busplus
approach
current
public
transportation
system
canberra
known
action
busplus
table
reports
cost
bus
network
total
cost
system
average
travel
time
three
columns
action
table
reports
cost
system
average
travel
time
experimental
settings
diﬀer
slightly
busplus
action
reﬂect
state
system
accurately
possible
particular
include
waiting
time
boarding
buses
action
since
data
available
also
set
0.1
seems
give
realistic
networks
terms
balance
costs
convenience
results
show
busplus
approach
divides
average
travel
time
two
even
taking
account
bus
waiting
time
main
reason
reduction
signiﬁcant
number
trips
served
taxis
moreover
even
though
main
expense
busplus
comes
taxi
trips
overall
cost
system
ten
percent
lower
cost
action
interesting
result
since
taxi
costs
intentionally
exaggerated
correspond
existing
full
fares
figure
displays
networks
obtained
h10
h20
conﬁgurations
h20
conﬁgu-
rations
particularly
interesting
organized
around
two
interconnected
centers
serve
densely
populated
areas
short
ﬂower-like
routes
conclusion
busplus
project
aims
improving
oﬀ-peak
hours
public
transit
service
canberra
australia
city
covers
wide
geographical
area
makes
public
transportation
particularly
challenging
address
diﬃculty
busplus
project
proposes
hub
shuttle
model
consisting
combination
high-frequency
bus
routes
key
hubs
large
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
h10
10−5
figure
example
networks
using
geographical
data
h20
0.1
number
shuttles
bring
passengers
origin
closest
hub
take
last
bus
stop
destination
paper
focused
design
bus
network
modeled
variant
hub-arc
location
problem
proposed
number
pre-processing
techniques
trip
ﬁltering
link
ﬁltering
reduce
problem
size
introduced
benders
decomposition
approach
uses
dedicated
solution
techniques
solving
independent
sub-problems
pareto
optimal
cuts
cut
bundling
core
point
update
beneﬁts
design
decisions
validated
using
real-world
data
public
transit
system
canberra
benders
decomposition
outperforms
natural
mip
formulation
two
orders
magnitude
moreover
paper
showed
hub
shuttle
model
may
decrease
transit
time
factor
staying
within
costs
existing
transit
system
several
directions
future
work
including
use
parallel
computation
subproblems
merging
hub
selection
network
design
single
optimization
problem
ability
take
account
scheduling
routing
ﬂeet
sizing
aspects
also
useful
mention
busplus
project
undergo
live
trial
near
future
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
references
ahuja
ravindra
thomas
magnanti
james
orlin
1988.
network
ﬂows
tech
rep.
dtic
document
benders
1962.
partitioning
procedures
solving
mixed-variables
programming
problems
numerische
mathematik
238–252
doi:10.1007/bf01386316
birge
john
francois
louveaux
1988.
multicut
algorithm
two-stage
stochastic
linear
programs
european
journal
operational
research
384–392
campbell
ernst
krishnamoorthy
2005a
hub
arc
location
problems
part
ii—formulations
optimal
algorithms
management
science
1556–1571
doi:10.1287/mnsc.1050.0407
url
http
//pubsonline.informs.org/doi/abs/10.1287/mnsc.1050.0407
campbell
ernst
krishnamoorthy
2005b
hub
arc
location
problems
part
i—introduction
results
management
science
1540–1555
doi:10.1287/mnsc.1050.0406
url
http
pubsonline.informs.org/doi/abs/10.1287/mnsc.1050.0406
contreras
ivan
jean-fran¸cois
cordeau
gilbert
laporte
2011.
benders
decomposition
large-scale
unca-
pacitated
hub
location
operations
research
1477–1490
camargo
miranda
luna
2008.
benders
decomposition
uncapacitated
multiple
allocation
hub
location
problem
computers
operations
research
1047–1064
doi:10.1016/
j.cor.2006.07.002
s´a
elisangela
martins
contreras
jean-francois
cordeau
2015a
exact
heuristic
algorithms
design
hub
networks
multiple
lines
european
journal
operational
research
246
186–198
s´a
elisangela
martins
ivan
contreras
jean-fran¸cois
cordeau
ricardo
saraiva
camargo
gilberto
miranda
2015b
hub
line
location
problem
transportation
science
500–518
doi
10.1287/trsc.2014.0576
url
http
//pubsonline.informs.org/doi/10.1287/trsc.2014.0576
s´a
elisangela
martins
ricardo
saraiva
camargo
gilberto
miranda
2013.
improved
benders
decomposition
algorithm
tree
hubs
location
problem
european
journal
operational
research
226
185–202
geoﬀrion
arthur
glenn
graves
1974.
multicommodity
distribution
system
design
benders
decom-
position
management
science
822–844
gurobi
optimization
inc.
2015.
gurobi
optimizer
reference
manual
url
http
//www.gurobi.com
hakimi
louis
1964.
optimum
locations
switching
centers
absolute
centers
medians
graph
operations
research
450–459
labb´e
martine
hande
yaman
2008.
solving
hub
location
problem
star–star
network
networks
19–33
magnanti
thomas
richard
wong
1981.
accelerating
benders
decomposition
algorithmic
enhancement
model
selection
criteria
operations
research
464–484
mah´eo
kilby
van
hentenryck
benders
decomposition
hub
shuttle
public
transit
system
mar´ın
´angel
patricia
jaramillo
2009.
urban
rapid
transit
network
design
accelerated
benders
decom-
position
annals
operations
research
169
35–53
doi:10.1007/s10479-008-0388-0
papadakos
nikolaos
2009.
integrated
airline
scheduling
computers
operations
research
176–195
yaman
hande
2008.
star
p-hub
median
problem
modular
arc
capacities
computers
operations
research
3009–3019
