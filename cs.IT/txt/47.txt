private
information
retrieval
mds
coded
data
distributed
storage
systems
razane
tajeddine∗
oliver
gnilke∗
salim
rouayheb†
∗department
mathematics
systems
analysis
aalto
university
school
science
finland
email
razane.tajeddine
oliver.gnilke
aalto.ﬁ
†ece
department
rutgers
university
email
salim.elrouayheb
rutgers.edu
abstract
problem
providing
privacy
private
information
retrieval
pir
sense
users
requesting
data
distributed
storage
system
dss
considered
dss
coded
maximum
distance
separable
mds
code
store
data
reliably
unreliable
storage
nodes
nodes
spies
report
third
party
oppressive
regime
data
requested
user
information
theoretic
pir
scheme
ensures
user
satisfy
request
revealing
information
data
requested
nodes
user
trivially
achieve
pir
downloading
data
dss
however
feasible
solution
due
high
communication
cost
construct
pir
schemes
low
download
communication
cost
spy
node
dss
words
collusion
nodes
construct
pir
schemes
download
cost
1−r
per
unit
requested
data
k/n
code
rate
achieving
information
theoretic
limit
linear
schemes
proposed
schemes
universal
since
depend
code
rate
generator
matrix
code
also
nodes
collude
n−b
construct
linear
pir
schemes
download
cost
b+δk
paper
extension
work
presented
part
ieee
international
symposium
information
theory
isit
2016
work
supported
part
nsf
grant
ccf
1817635.
furthermore
gratefully
acknowledge
ﬁnancial
support
academy
finland
grants
276031
282938
303819
hollanti
aalto
university
finland
part
work
carried
ﬁrst
third
authors
ece
department
illinois
institute
technology
chicago
ﬁrst
two
authors
would
like
thank
institute
communications
engineering
technical
university
munich
hosting
part
work
carried
copyright
2017
ieee
personal
use
material
permitted
however
permission
use
material
purposes
must
obtained
ieee
sending
request
pubs-permissions
ieee.org
march
2018
draft
introduction
consider
following
scenario
group
online
peers
storage
nodes
want
collaborate
together
form
peer-to-peer
p2p
distributed
storage
system
dss
store
share
ﬁles
reliably
ensuring
information
theoretic
private
information
retrieval
pir
pir
property
allows
user
possibly
one
peers
download
ﬁle
revealing
information
ﬁle
downloaded
mainly
motivated
following
two
applications
dss
protects
users
surveillance
monitoring
instance
oppressive
regime
people
peers
collectively
contribute
storing
data
making
pervasively
available
online
peers
could
spies
regime
could
turn
neighbors
report
oppressor
identity
users
accessing
information
deemed
anti-regime
blogs
photos
videos
etc
leading
persecution
dss
protects
personal
information
users
gender
age
group
disease
etc.
inferred
ﬁle
access
history
information
potentially
used
target
unwanted
advertisement
even
affect
adversarially
areas
applications
health
insurance
bank
loans
respect
studied
dss
provide
infrastructure
least
theory
applications
cloud
storage
social
networking
run
privacy
guarantee
users
suppose
dss
formed
peers
nodes
peers
temporarily
ofﬂine
leave
system
time
data
stored
redundantly
system
guarantee
durability
availability
assume
dss
uses
maximum
distance
separable
mds
code
tolerate
simultaneous
node
failures
certain
number
nodes
dss
say
whose
identities
unknown
users
system
spies
collude
report
user
requests
oppressor
sell
information
interested
third
parties
user
always
achieve
pir
asking
download
ﬁles
dss
however
solution
feasible
due
high
communication
cost
efﬁcient
solutions
studied
pir
literature
assuming
data
replicated
system
next
example
illustrates
pir
scheme
efﬁcient
communication
cost
run
mds
coded
data
example
consider
dss
formed
nodes
shown
figure
stores
ﬁles
dss
coded
mds
code
store
ﬁles
nodes
store
respectively
2bi
suppose
user
interested
retrieving
ﬁle
i.e.
equally
likely
ﬁles
end
user
generates
random
vector
components
chosen
independently
uniformly
random
underlying
base
ﬁeld
sends
query
vector
nodes
march
2018
draft
u+ef
node
node
node
node
i1+2i2+af
+2bf
node
node
node
node
fig
user
sends
queries
speciﬁed
example
receives
responses
responses
user
decode
thus
decoding
desired
ﬁle
privately
nodes
zero
vector
length
entry
upon
receiving
user
request
node
dss
returns
user
projection
data
received
query
vector
instance
suppose
user
wants
ﬁle
nodes
return
following
symbols
2bf
2i2
i=1
uibi
thought
interference
terms
returned
information
forms
invertible
linear
system
user
decode
assume
dss
contains
i=1
uiai
colluding
nodes
i.e
proposed
scheme
achieves
pir
since
query
vector
node
statistically
independent
ﬁle
index
however
node
say
node
knows
query
vector
another
node
say
node
may
able
pin
ﬁle
user
wanted
computing
however
assume
node
access
queries
coming
nodes
pir
indeed
achieved
pir
scheme
downloads
symbols
retrieve
ﬁle
size
symbols
say
communication
price
privacy
4/2
scheme
depend
number
ﬁles
system
replication-based
pir
pir
ﬁrst
introduced
seminal
papers
chor
followed
signiﬁcant
amount
research
area
classical
model
considers
binary
database
length
user
wishes
privately
retrieve
value
bit
record
minimizing
total
communication
cost
including
upload
query
download
phase
chor
showed
one
server
storing
database
user
download
whole
database
order
achieve
information
theoretic
pir
however
database
replicated
non-colluding
non-cooperating
servers
nodes
devised
pir
scheme
total
upload
download
communication
cost
log
m1/n
m1/3
special
case
past
years
signiﬁcant
progress
developing
pir
protocols
total
communication
march
2018
draft
cost
subpolynomial
size
database
moreover
connection
pir
blind
interference
alignment
discussed
pir
computational
sense
shown
achievable
single
server
replication
assuming
hardness
quadratic
residuosity
problem
pir
schemes
databases
replicated
perfectly
synchronized
studied
coded
pir
original
model
studied
pir
assumes
entire
data
replicated
node
pir
coded
data
studied
literature
batch
codes
data
coded
allow
parallel
processing
leading
amortizing
pir
communication
cost
multiple
retrievals
recently
pir
problem
dsss
use
erasure
codes
initiated
shown
one
extra
bit
download
sufﬁcient
achieve
pir
assuming
number
servers
exponential
number
ﬁles
bounds
information
theoretic
tradeoff
storage
download
communication
cost
coded
dsss
arbitrary
number
ﬁles
derived
setting
nodes
byzantine
malicious
considered
robust
pir
schemes
devised
using
locally
decodable
codes
robust
pir
also
studied
methods
transforming
replication-based
pir
scheme
coded-based
pir
scheme
communication
cost
multiplicative
constant
studied
pir
array
codes
optimal
rate
designed
following
work
lowest
achievable
price
privacy
repetition
code
nodes
ﬁles
colluding
nodes
found
b/n
found
k/n
b/n
-code
k/n
also
schemes
using
grs
codes
constructed
conjecture
conjectured
lowest
achievable
price
privacy
b+k−1
b+k−1
disproved
using
counter
example
moreover
pir
coded
data
arbitrary
sets
servers
collude
studied
pir
schemes
arbitrary
code
discussed
work
also
done
symmetric
pir
objective
protect
privacy
user
also
privacy
server
user
get
information
ﬁles
one
wants
also
capacity
byzantine
pir
replicated
storage
systems
found
contributions
motivated
two
dss
applications
mentioned
earlier
draw
following
distinc-
tions
previous
literature
prior
work
coded
pir
best
knowledge
previous
work
coded
pir
except
assumes
code
used
encode
together
data
different
ﬁles
records
however
model
different
since
dss
applications
data
chunks
belonging
ﬁle
encoded
together
done
example
work
studies
fundamental
limits
costs
coded
pir
provide
explicit
constructions
pir
schemes
efﬁcient
communication
cost
comparison
classical
literature
replication-based
pir
make
following
observa-
march
2018
draft
tions
focus
number
downloaded
symbols
communication
cost
pir
scheme
since
upload
query
matrices
dependent
number
ﬁles
size
ﬁle
typically
dsss
size
ﬁle
relatively
larger
total
number
ﬁles
nodes
may
collude
share
queries
hope
determining
requested
ﬁle
model
study
assume
mds
code
parameters
given
depend
desired
reliability
level
data
therefore
design
parameters
chosen
optimize
efﬁciency
pir
scheme
however
code
may
designed
jointly
pir
scheme
pir
scheme
incurs
many
overheads
dss
including
communication
cost
computations
connectivity
user
contacts
instead
nodes
seen
example
however
measure
efﬁciency
pir
scheme
total
download
communication
cost
refer
communication
price
privacy
cpop
formal
deﬁnition
given
deﬁnition
model
use
established
pir
rate
inverse
i.e
data
downloaded
required
ﬁle
per
downloaded
symbol
following
questions
naturally
arise
minimum
achievable
cpop
given
efﬁciently
construct
codes
pir
schemes
achieve
optimal
cpop
code
pir
scheme
designed
jointly
achieve
optimum
cpop
last
question
addresses
problem
whether
reliability
pir
could
addressed
separately
dss
moreover
may
practical
implications
whether
data
already
existing
coded
form
needs
re-encoded
achieve
pir
minimum
cpop
paper
make
progress
towards
answering
last
two
questions
provide
constructions
efﬁcient
pir
schemes
querying
mds
coded
data
speciﬁcally
make
following
contributions
i.e.
colluding
nodes
construct
linear
pir
scheme
1−r
k/n
code
rate
thus
achieving
lower
bound
linear
schemes
construct
linear
pir
schemes
iii
generally
n−b
construct
linear
pir
schemes
b+δk
minimum
cpop
regime
unknown
constructed
schemes
cpop
depend
number
ﬁles
system
important
property
scheme
universality
depends
generator
matrix
code
moreover
schemes
constructed
given
mds
code
i.e.
necessary
design
code
jointly
pir
scheme
implies
rigid
system
parameter
user
choose
value
reﬂect
desired
privacy
level
expense
higher
dss
serve
users
simultaneously
storing
encoded
data
i.e.
without
store
different
encodings
different
values
construction
generalized
version
earlier
scheme
presented
march
2018
draft
node
node
node
node
k+1x1
k+1x1
k+1x1
k+1x1
k+1xm
k+1xm
k+1xm
k+1xm
node
λ1nx1
λknx1
λ1nx1
λknx1
λ1nxm
λknxm
λ1nxm
λknxm
table
layout
encoded
symbols
ﬁles
dss
schemes
parity
check
matrix
storage
system
known
two
schemes
perform
equally
well
fact
identical
case
no-collusion
case
-collusion
intermediate
regime
generalized
scheme
outperforms
scheme
model
distributed
storage
systems
consider
distributed
storage
system
dss
formed
storage
nodes
indexed
dss
stores
ﬁles
equal
sizes
dss
uses
wlog
systematic1
mds
code
store
data
redundantly
achieve
reliability
node
failures
assume
ﬁle
divided
stripes
stripe
divided
blocks
represent
ﬁle
matrix
symbols
ﬁnite
ﬁeld
divide
ﬁle
stripes
number
parts
divisible
number
queries
number
retrieved
symbols
per
query

...
...
...
...

1we
focus
systematic
codes
due
widespread
use
practice
however
results
still
hold
non-systematic
codes
march
2018
draft
deﬁne
matrix
denoting
systematic
data
system
i.e.
mα×k

...

stripe
ﬁle
encoded
separately
using
systematic
mds
code
generator
matrix
λij
elements
since
code
systematic
square
submatrix
formed
ﬁrst
columns
identity
matrix
encoded
data
stored
dss
shown
table
assume
user
knows
layout
table
i.e.
he/she
knows
coding
coefﬁcients
node
denote
column
vector
representing
data
node
pir
suppose
user
wants
ﬁle
chosen
uniformly
random
set
retrieve
ﬁle
user
sends
requests
nodes
among
colluding
nodes
user
know
nodes
colluding
else
he/she
would
avoid
goal
devise
pir
scheme
allows
user
decode
revealing
information
information
theoretic
sense
nodes
colluding
nodes
analyze
different
requests
receive
user
order
identify
requested
ﬁle
however
explained
introduction
node
access
requests
coming
nodes
system
setting
interested
linear
pir
schemes
deﬁnition
pir
scheme
linear
dimension
consists
following
two
stages
request
stage
based
ﬁle
user
wants
he/she
sends
requests
subset
nodes
dss
request
node
takes
form
query
matrix
download
stage
node
responds
sending
projection
data
onto
i.e.
qlwl
think
query
matrix
formed
sub-queries
corresponding
rows
moreover
think
response
node
formed
sub-responses
corresponding
projecting
node
data
row
deﬁnition
information
theoretic
pir
pir
scheme
achieves
perfect
information
theoretic
pir
iff
|qj
sets
|γ|
denotes
entropy
function
march
2018
draft
objective
design
linear
pir
scheme
allows
user
decode
requested
ﬁle
achieves
information
theoretic
pir
low
cpop
depend
classical
literature
pir
communication
cost
includes
number
bits
exchanged
request
download
stages
however
query
vectors
depend
number
ﬁles
system
response
vectors
depend
size
ﬁles
i.e
single
sub-query
query
vector
node
consists
symbols
response
vector
one
node
symbol
dsss
information-theoretic
reformulation
problem
size
ﬁles
assumed
arbitrarily
large
thus
making
number
ﬁles
negligible
respect
size
ﬁles
i.e.
much
larger
therefore
download
cost
dominates
total
communication
cost
hence
consider
download
communication
cost
refer
communication
price
privacy
cpop
deﬁnition
cpop
communication
price
privacy
cpop
pir
scheme
ratio
total
number
bits
sent
nodes
user
download
stage
size
requested
ﬁle
inverse
pir
rate
given
literature
iii
main
results
section
state
two
main
results
proof
theorem
given
section
iv-b
proof
theorem
given
section
v-b
proof
theorem
given
section
theorem
consider
dss
using
mds
code
i.e
collusion
nodes
linear
pir
scheme
described
section
iv-a
achieves
perfect
pir
1−r
k/n
existence
pir
schemes
large
ﬁelds
achieve
1−r
follows
theorem
scheme
section
iv-a
achieves
optimal
given
prove
theorem
providing
explicit
construction
linear
pir
scheme
proposed
pir
construction
ﬁeld
code
designed
universal
sense
depends
parameters
generator
matrix
code
theorem
consider
dss
using
mds
code
colluding
nodes
exists
explicit
linear
pir
scheme
ﬁeld
achieves
perfect
pir
march
2018
draft
nomenclature
number
nodes
mds
code
dimension
codeword
mds
code
distance
code
number
colluding
nodes
number
ﬁles
dimension
scheme
number
rounds
subqueries
rows
query
matrix
remainder
division
quotient
division
number
subdivisions
random
vector
size
data
node
indicator
vector
all-zero
vector
one
position
query
vector
node
sub-query
response
vector
node
sub-query
query
matrix
node
dimension
0-1
matrix
dimension
next
result
generalization
theorem
describe
pir
scheme
theorem
special
case
theorem
keep
better
presentation
proof
optimal
pir
coded
data
colluding
nodes
still
open
problem
theorem
colluding
nodes
n−b
construct
explicit
linear
pir
scheme
b+δk
illustrate
performance
stated
three
theorems
price
privacy
versus
rate
storage
code
using
scheme
theorem
scheme
theorem
scheme
theorem
shown
figure
notice
theorem
shows
much
improvement
theorem
theorem
also
see
theorem
improves
theorem
march
2018
draft
price
privacy
rate
theorem
scheme
theorem
scheme
theorem
scheme.
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
rate
k/n
fig
cpop
versus
rate
following
scheme
theorem
scheme
theorem
scheme
theorem
pir
scheme
construction
proof
pir
scheme
construction
describe
pir
scheme
referred
theorem
assume
wlog
mds
code
systematic
pir
scheme
uses
number
stripes
dimension
k.2
write
integers
scheme
consists
user
sending
query
matrix
node
form
query
matrices
user
generates
random
matrix
uij
whose
elements
chosen
uniformly
random
ﬁeld
mds
code
deﬁned
query
matrices
following
structure
random
component
query
aimed
confusing
nodes
request
whereas
deterministic
matrix
depends
index
requested
ﬁle
matrices
add
parts
ﬁle
retrieved
responses
nodes
user
download
symbols
2the
parameters
optimized
lcm
d−1
lcm
d−1
d−1
done
example
simplify
notation
take
march
2018
draft
sys
nodes
parity
nodes
table
example
retrieval
pattern
entries
table
correspond
coded
symbols
wanted
ﬁle
entries
number
say
also
given
color
privately
retrieved
jth
sub-query
note
nodes
including
last
nodes
every
sub-query
retrieved
symbols
responses
nodes
used
decode
interference
ﬁles
needed
confuse
nodes
requested
interference
cancelled
sub-responses
order
decode
desired
ﬁle
symbols
sub-query
privately
per
sub-query
matrices
add
symbol
responses
nodes
per
sub-query
scheme
user
retrieves
symbols
systematic
nodes
symbols
parity
nodes
moreover
retrieved
symbols
redundant
matrices
0-1
matrices
dimensions
every
row
corresponds
sub-query
every
column
corresponds
stripe
ﬁle
position
implies
ith
sub-query
jth
symbol
node
retrieved
privately
matrices
designed
following
conditions
hold
row
column
matrices
contains
one
restriction
rows
guarantees
receive
one
coded
symbol
node
instead
sum
several
symbols
column
condition
ensures
every
symbol
retrieved
thus
retrieved
symbol
redundant
sub-query
added
queries
exactly
nodes
i.e.
matrices
ith
row
contains
allows
user
decode
codeword
mds
storage
code
since
symbols
altered
subsequently
decode
symbols
ﬁle
index
stripe
requested
ﬁle
exactly
matrices
contain
column
ensures
retrieve
exactly
mds
coded
symbols
per
row
needed
recover
original
stripe
march
2018
draft
based
desired
retrieval
patterns
choose
ef,1
0k×
ir×r
k−r
0k×βk
0k×
m−f
obtained
matrix
l−1
single
downward
cyclic
shift
row
vectors
divide
ﬁrst
parity
nodes
groups
nodes
nodes
group
i.e.
nodes
receive
query
matrix
=h0k×
α+r+
s−1
ik×k
0k×
β−s
m−f
remaining
parity
nodes
let
hence
receive
matrix
query
claim
conditions
satisﬁed
choice
proof
one
row
column
matrices
sent
parity
nodes
contain
exactly
one
row
since
matrices
sent
systematic
nodes
generated
cyclic
row
shifts
matrix
contains
exactly
rows
single
see
matrices
contain
ith
row
total
matrices
contain
ith
row
columns
corresponding
stripes
ﬁle
range
see
matrices
form
contain
exactly
one
column
matrices
contain
one
column
example
retrieval
pattern
consider
dss
using
mds
code
therefore
sub-queries
node
also
number
stripes
11.
gives
table
gives
retrieval
pattern
pir
scheme
i.e.
ﬁle
symbols
retrieved
sub-query
11x15
entries
table
represents
symbols
desired
ﬁle
node
column
numbers
alternatively
colors
entry
indicate
sub-query
speciﬁc
symbol
retrieved
march
2018
draft
sys
nodes
parity
nodes
table
iii
retrieval
pattern
5,2,4
code
example
decoding
consider
another
example
generator
matrix
suppose
dss
stores
ﬁles
goal
construct
linear
scheme
achieves
perfect
pir
construction
gives
thus
ﬁle
following
array
structure
1−r


therefore
get
suppose
wlog
user
wants
ﬁle
i.e.
user
generates
random
matrix
uij
whose
elements
chosen
uniformly
random
nodes
query
matrix
therefore
following
table
iii
u11
u12
u13
u14
u15
u16
u17
u18
u19
u21
u22
u23
u24
u25
u26
u27
u28
u29
u11
u12
u13
u14
u15
u16
u17
u18
u19
u21
u22
u23
u24
u25
u26
u27
u28
u29
u11
u12
u13
u14
u15
u16
u17
u18
u19
u21
u22
u23
u24
u25
u26
u27
u28
u29
u11
u12
u13
u14
u15
u16
u17
u18
u19
u21
u22
u23
u24
u25
u26
u27
u28
u29
march
2018
draft
added
certain
positions
query
matrix
due
addition
matrix
construction
achieves
perfect
privacy
since
information
node
knows
query
matrix
random
independent
next
want
illustrate
user
decode
ﬁle
symbols
node
sends
back
length
vector
rl1
rl2
qlwl
user
recall
data
stored
node
consider
sub-responses
nodes
ﬁrst
sub-query
form
following
linear
system
r11
r21
r31
2x1
2i2
r41
3i2
r51
ﬁrst
row
user
ﬁrst
decode
canceling
values
remaining
equations
user
solve
server
therefore
sub-responses
second
sub-query
pir
scheme
downloads
symbols
22.
similarly
user
obtain
matches
bound
theorem
proof
theorem
following
remarks
coding
theory
used
several
occasions
background
proofs
refer
remark
linear
code
set
vectors
generator
matrix
code
therefore
dimensional
subvectorspace
linear
combination
codewords
codeword
remark
following
statements
equivalent
code
mds
generator
matrix
subset
columns
full
rank
code
recover
erasures
coordinates
prove
theorem
showing
scheme
described
section
iv-a
following
properties
march
2018
draft
remark
properties
claim
exactly
nodes
receive
vector
decodability
sub-query
sort
nodes
two
groups
prove
decodability
ith
row
query
user
aware
indices
nodes
nodes
received
symbols
given
rli
since
every
stored
stripe
codeword
remark
linear
combination
stripes
codeword
notice
rli
indeed
lth
component
codeword
since
components
recover
whole
vector
nodes
ith
sub-query
form
standard
basis
vector
i.e.
single
added
vector
position
received
symbol
rℓi
therefore
sum
ℓth
component
gth
symbol
since
recovered
unaltered
components
retrieve
furthermore
matrices
designed
retrieve
exactly
symbols
every
coded
stripe
ﬁle
using
remark
allows
retrieve
stripes
ﬁle
symbols
privacy
since
way
node
learn
information
query
matrix
construction
statistically
independent
scheme
achieves
perfect
privacy
cpop
every
node
responds
symbols
therefore
total
number
symbols
downloaded
user
therefore
n−k
1−r
pir
scheme
construction
proof
pir
scheme
construction
section
describe
general
pir
scheme
achieves
specifying
query
matrices
node
scheme
requires
simplify
description
scheme
assume
1.3
scheme
dimension
i.e.
consists
sub-queries
moreover
scheme
requires
subdivisions
i.e.
number
stripes
since
subdivisions
simplify
notation
write
denote
ith
systematic
symbol
ﬁle
denote
index
ﬁle
user
wants
i.e.
user
wants
retrieve
ﬁle
wlog
assume
mds
code
systematic
ith
sub-query
proposed
pir
scheme
retrieves
systematic
symbol
wanted
ﬁle
completion
scheme
user
symbols
forming
3if
nodes
say
ﬁrst
queried
march
2018
draft
ﬁle
sub-query
user
creates
random
column
vectors
ud−1
dimension
whose
elements
chosen
uniformly
random
recall
generator
matrix
systematic
mds
code
form
ik×k
pk×
d−1
k×n
matrix
describing
parity
nodes
parity
check
matrix
code
given
d−1
d−1
d−1
deﬁne
matrix
columns
random
vectors
used
sub-query
i.e.
sub-query
user
generates
random
codewords
dual
code
multiplying
m×d−1
ud−1
random
matrix
d−1
parity
check
matrix
cid:3
cid:2
d−1
d−1
calculate
note
row
uih
codeword
dual
mds
code
used
store
data
let
ith
sub-query
vector
node
query
vectors
chosen
follows

otherwise
standard
basis
vector
single
position
therefore
response
node
ith
sub-query
denoted
given
written
vector
representing
data
stored
node
give
example
example
next
illustrate
scheme
example
consider
dss
using
following
systematic
mds
code
generator
matrix


march
2018
draft
suppose
system
storing
ﬁles
data
stored
different
nodes
dss
described
table






node
node
node
node
node
2a2
3a3
2b2
3b3
2c2
3c3
table
5,3,3
dss
goal
construct
linear
scheme
achieves
perfect
pir
colluding
nodes
scheme
consist
sub-queries
suppose
wlog
user
wants
ﬁle
i.e.
consider
ﬁrst
sub-query
remaining
sub-queries
i.e
sub-queries
follow
similarly
user
creates
random
vectors
u1,1
u2,1
dimension
u1,1
u2,1
dual
code
generator
matrix
n−k
sub-query
vectors
nodes
following
respectively


q1,1
−u1,1
u2,1
q2,1
−u1,1
2u2,1
q3,1
−u1,1
3u2,1
q4,1
u1,1
q5,1
u2,1
next
want
show
user
decode
requested
ﬁle
correctly
nodes
send
back
length
vectors
rl,1
rl,2
rl,3
user
consider
ﬁrst
symbol
vectors
rl,1
form
following
linear
system
march
2018
draft
node
node
node
node
node
node
2b1
3b1
4b1
2bm
3bm
4bm
table
6,2,5
dss
i11
i12
r1,1
−i21
2i22
r2,1
−i31
3i32
r3,1
i11
i21
i31
r4,1
i12
2i22
3i32
r5,1
ilj
j,1wl
denoting
node
index
denoting
random
vector
analogy
interference
alignment
literature
one
think
signal
decoded
i11
i12
i21
i22
i31
i32
interference
notice
sum
eqs
get
pir
scheme
downloads
packets
server
therefore
5×3
mentioned
nodes
queried
shown
next
example
revisit
example
next
section
present
efﬁcient
scheme
explaining
theorem
example
consider
6,2,5
mds
code
table
goal
construct
linear
scheme
achieves
perfect
pir
colluding
nodes
assume
wlog
user
wants
ﬁle
scheme
consist
sub-queries
consider
ﬁrst
sub-query
second
sub-query
follows
similarly
case
user
query
nodes
wlog
ﬁrst
nodes
generator
matrix
previous
example
forms
u1,1
u2,1
dual
code
generator
described
section
v-a
user
creates
random
vectors
u1,1
u2,1
dimension
matrix
n−k
march
2018
draft
sub-query
vectors
nodes
following
respectively
q1,1
−u1,1
u2,1
q2,1
−u1,1
2u2,1
q3,1
u1,1
q4,1
u2,1
nodes
respond
user
projecting
data
query
matrices
inspection
queries
see
user
able
decode
ﬁrst
sub-query
similarly
decode
second
sub-query
achieves
proof
theorem
prove
theorem
showing
scheme
described
section
v-a
ensures
decodability
privacy
main
ingredient
proof
makes
different
proof
theorem
scheme
require
user
decode
interference
terms
recall
user
wants
retrieve
ﬁle
prove
user
retrieve
ith
sub-query
alternative
proof
theorem
shown
appendix
section
decodability
response
node
ith
sub-query
given
user
sums
responses
nodes
ith
sub-query
i.e.
computes
decode
l=1
claim
l=1
proof
l=1
uih
uihgt
trace
operator
equation
follows
directly
scheme
equation
follows
fact
abt
equation
follows
fact
uihgt
since
hgt
march
2018
draft
privacy
recall
index
ﬁle
wanted
user
let
subset
cardinality
representing
set
colluding
nodes
deﬁne
qsb
set
query
vectors
matrices
incoming
nodes
indexed
want
show
spies
collude
learn
information
i.e.
|qsb
possible
set
colluding
nodes
|sb|
qsb
qsb
qsb
|qsb
qsb|f
|qsb
qsb|f
qsb
qsb
qsb|f
qsb|f
qsb
qsb
ui|f
qsb
ui|f
ui|qsb
qsb
equality
equation
follows
fact
qsb|f
since
query
vectors
deterministic
function
equation
follows
ui|f
since
random
matrix
independent
ﬁle
index
moreover
ui|qsb
since
given
decoded
qsb
due
mds
property
code
lastly
qsb
follows
mds
property
code
pir
scheme
construction
let
n−b
see
simpliﬁes
theorem
figure
shows
comparison
construction
theorem
theorem
example
consider
6,2,5
mds
code
table
notice
example
use
nodes
achieved
show
use
nodes
achieve
lower
assume
user
wants
ﬁle
march
2018
draft
theorem
theorem
theorem
theorem
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
rate
k/n
fig
cpop
versus
rate
number
colluding
nodes
following
scheme
theorem
theorem
notice
number
colluding
nodes
increases
improvement
scheme
theorem
scheme
theorem
grows
ﬁrst
choose
last
parity
nodes
common
nodes
split
rest
nodes
groups
nodes
consider
two
punctured
codes
generator
matrix
intersect
common
nodes
pick
two
subcodes
consisting
nodes
respectively
punctured
codes
following
generator
matrices
user
transform
generator
matrices
punctured
codes
systematic
form
multi-
plying
inverse
matrix
formed
non-common
nodes
example
see
systematic
form
multiply
inverse
sub-matrix
formed
nodes
i.e
get
march
2018
draft
parity
check
matrices
mds
codes
generated
i2×2
i2×2
example
subdivide
ﬁles
stripes
one
sub-query
required
decode
parts
ﬁle
reason
remove
subscript
simplicity
similar
scheme
section
v-a
user
generates
random
column
vectors
length
whose
elements
chosen
uniformly
random
deﬁne
matrix
columns
random
vectors
i.e.
m×2
user
generates
random
codewords
dual
codes
multiplying
random
matrix
parity
check
matrix
b+k
calculate
cid:2
cid:3
multiplying
random
matrix
parity
check
matrix
b+k
calculate
query
vectors
nodes
chosen
follows
cid:2
cid:3
query
vectors
nodes
decodability

mod
otherwise
punctured
codes
coded
section
v-a
based
decodability
proved
section
v-b
user
decode
ﬁrst
code
second
code
hence
user
retrieves
ﬁle
privacy
queries
sent
projecting
random
matrix
matrix
march
2018
draft
dual
code
generated
matrix
dual
code
mds
code
thus
queries
sent
using
mds
code
means
queries
linearly
independent
thus
private
colluding
nodes
user
contacts
nodes
download
information
parts
thus
price
privacy
b+δk
general
proof
theorem
assume
user
wants
ﬁle
assume
b+δk.4
user
uses
last
nodes
nδk+1
nδk+b
common
nodes
rest
nodes
divided
groups
nodes
forms
punctured
mds
codes
generator
matrix
pb×b
transformed
systematic
form
ik×k
multiplying
inverse
matrix
use
subdivisions
queries.5
calculate
parity
check
matrix
codes
ib×b
b+k
sub-query
user
generates
random
codewords
multiplying
random
matrix
m×b
parity
check
matrix
hq′
j−1
j−1
b+k
b+k
subcode
nodes
query
vectors
sub-query
follows
δ+j
otherwise

nodes
query
vectors
sub-query
columns
ul−δk
4if
nodes
queried
parameters
optimized
lcm
lcm
done
example
simplify
notation
take
march
2018
draft
decodability
subcode
follow
scheme
theorem
obtain
jth
stripe
ﬁle
subsequently
user
able
decode
ﬁle
privacy
queries
generating
multiplying
random
matrix
matrix
dual
code
generated
matrix

...
...
...
...

see
code
generated
mds
code
thus
queries
sent
using
mds
code
means
queries
linearly
independent
thus
private
colluding
nodes
user
contacts
nodes
download
information
parts
thus
price
privacy
b+δk
vii
comparison
fundamental
bounds
scheme
achieves
fundamental
bounds
currently
known
inﬁnite
number
ﬁles
spy
node
i.e
collusion
lowest
achievable
price
privacy
storage
system
replicated
databases
given
1/n
1/n
asymptotically
approaches
n−1
apply
n−1
limit
lower
bound
1−r
pir
scheme
replicated
database
lower
bound
mds-coded
database
derived
k/n
k/n
1−r
cpop
achieved
construction
asymptotically
approaches
n−k
viii
conclusion
studied
problem
constructing
pir
schemes
low
communication
cost
requesting
data
dss
uses
mds
codes
nodes
dss
may
spies
report
third
party
oppressive
regime
data
requested
user
objective
allow
user
obtain
requested
data
without
revealing
information
identity
data
nodes
constructed
pir
schemes
non-colluding
nodes
achieve
information
theoretic
march
2018
draft
limit
download
communication
cost
linear
schemes
important
property
schemes
universality
since
depend
code
rate
mds
code
b-collusion
devised
linear
pir
schemes
download
cost
equal
per
unit
requested
data
alternative
proof
theorem
appendix
simplify
description
scheme
assume
scheme
dimension
i.e.
consists
sub-queries
moreover
scheme
requires
subdivisions
i.e.
number
stripes
since
subdivisions
simplify
notation
write
denote
ith
systematic
symbol
ﬁle
denote
index
ﬁle
user
wants
i.e.
user
wants
retrieve
ﬁle
ith
sub-query
proposed
pir
scheme
retrieves
systematic
symbol
wanted
ﬁle
completion
scheme
user
obtained
symbols
forming
ﬁle
sub-query
user
creates
random
column
vectors
dimension
whose
elements
chosen
uniformly
random
deﬁne
matrix
rows
random
vectors
used
sub-query
i.e.
recall
generator
matrix
mds
code
m×d−1
ud−1
k×n

ik×k
k+1
...
...
...
k+1

write
k×d−1
...
k+1
...
...

k+1
01×
01×
m−f

denote
jth
row
let
systematic
node
user
sends
sub-query
vector
march
2018
draft
translates

k+1u1
nud−1
k+1u1
nud−1
otherwise
uipl
uipl
otherwise

parity
nodes
ith
sub-query
vector
given
ul−k
therefore
response
node
ith
sub-query
denoted
given
written
vector
representing
data
stored
node
prove
theorem
showing
scheme
described
section
v-a
ensures
decodability
privacy
main
ingredient
proof
makes
different
proof
theorem
scheme
require
user
decode
interference
terms
recall
user
wants
retrieve
ﬁle
prove
user
retrieve
ith
sub-query
decodability
response
systematic
node
ith
sub-query
given

uipl
uipl
otherwise
notice
lth
diagonal
element
xui
since
lth
row
due
assumption
mds
code
systematic
thus
vector
representing
responses
systematic
nodes
ith
sub-query
written
follows

...

diag
uip

0i−1×1
0k−i×1

diag
diagonal
corresponding
matrix
march
2018
draft
denoting
jth
column
response
parity
node
written
l−k
iwl
ul−k
p′t
l−k
ul−k
follows
fact
coded
data
stored
parity
node
written
p′t
l−k
thus
similarly
write
responses
parity
nodes
vector
form

rk+1
rk+2
...

diag
next
want
show
decoded
follows
k+b
l=1
l=k+1
indeed
l=1
uip
l=1
rl+k
k+b
l=k+1
trace
operator
follows
follows
trace
property
abc
cab
follows
means
responses
systematic
nodes
parity
nodes
cancel
leave
part
required
i.e.
decode
therefore
showed
ith
sub-query
user
completion
kth
sub-query
user
would
obtained
whole
ﬁle
march
2018
draft
references
tajeddine
rouayheb
private
information
retrieval
mds
coded
data
distributed
storage
systems
information
theory
isit
2016
ieee
international
symposium
1411–1415
ieee
2016
chor
goldreich
kushilevitz
sudan
private
information
retrieval
ieee
symposium
foundations
computer
science
41–50
1995
chor
kushilevitz
goldreich
sudan
private
information
retrieval
journal
acm
jacm
vol
965–981
1998
beimel
ishai
kushilevitz
general
constructions
information-theoretic
private
information
retrieval
journal
computer
system
sciences
vol
213–247
2005
yekhanin
private
information
retrieval
communications
acm
vol
68–73
2010
beimel
ishai
information-theoretic
private
information
retrieval
uniﬁed
construction
automata
languages
programming
912–926
springer
2001
beimel
ishai
malkin
reducing
servers
computation
private
information
retrieval
pir
preprocessing
advances
cryptology—crypto
2000
55–73
springer
2000
beimel
ishai
kushilevitz
j.-f.
raymond
breaking
n1/
2k−1
barrier
information-theoretic
private
information
retrieval
43rd
annual
ieee
symposium
foundations
computer
science
2002
proceedings.
261–270
ieee
2002
shah
rashmi
ramchandran
one
extra
bit
download
ensures
perfectly
private
information
retrieval
information
theory
isit
2014
ieee
international
symposium
856–860
ieee
2014
chan
s.-w.
yamamoto
private
information
retrieval
coded
storage
information
theory
isit
2015
ieee
international
symposium
2842–2846
ieee
june
2015
dvir
gopi
server
pir
sub-polynomial
communication
proceedings
forty-seventh
annual
acm
symposium
theory
computing
stoc
new
york
usa
577–584
acm
2015
yekhanin
towards
3-query
locally
decodable
codes
subexponential
length
journal
acm
jacm
vol
1–16
2008
efremenko
3-query
locally
decodable
codes
subexponential
length
siam
journal
computing
vol
1694–1703
2012
sun
jafar
blind
interference
alignment
private
information
retrieval
information
theory
isit
2016
ieee
international
symposium
560–564
ieee
2016
kushilevitz
ostrovsky
replication
needed
single
database
computationally-private
information
retrieval
focs
364
ieee
1997
fanti
ramchandran
multi-server
private
information
retrieval
unsynchronized
databases
communi-
cation
control
computing
allerton
2014
52nd
annual
allerton
conference
437–444
2014
ishai
kushilevitz
ostrovsky
sahai
batch
codes
applications
proceedings
thirty-sixth
annual
acm
symposium
theory
computing
262–271
acm
2004
augot
levy-dit-vehel
shikfa
storage-efﬁcient
robust
private
information
retrieval
scheme
allowing
servers
cryptology
network
security
222–239
springer
2014
beimel
stahl
robust
information-theoretic
private
information
retrieval
international
conference
security
communication
networks
326–341
springer
2002
tajeddine
rouayheb
robust
private
information
retrieval
coded
data
information
theory
isit
2017
ieee
international
symposium
ieee
2017.
march
2018
draft
fazeli
vardy
yaakobi
codes
distributed
pir
low
storage
overhead
information
theory
isit
2015
ieee
international
symposium
2852–2856
2015
blackburn
etzion
pir
array
codes
optimal
pir
rate
arxiv
preprint
arxiv:1607.00235
2016
tajeddine
rouayheb
private
information
retrieval
mds
coded
data
distributed
storage
systems
extended
version
2016.
http
//www.ece.iit.edu/∼salim/pirv2.pdf
sun
jafar
capacity
private
information
retrieval
ieee
transactions
information
theory
4075
4088
2017
sun
jafar
capacity
private
information
retrieval
colluding
databases
signal
information
processing
globalsip
2016
ieee
global
conference
941–946
ieee
2016
banawan
ulukus
capacity
private
information
retrieval
coded
databases
arxiv
preprint
arxiv:1609.08138
2016
freij-hollanti
gnilke
hollanti
karpuk
private
information
retrieval
coded
databases
colluding
servers
arxiv
preprint
arxiv:1611.02062
2016
sun
jafar
private
information
retrieval
mds
coded
data
colluding
servers
settling
conjecture
freij-hollanti
information
theory
isit
2017
ieee
international
symposium
1893–1897
tajeddine
gnilke
karpuk
freij-hollanti
hollanti
rouayheb
private
information
retrieval
schemes
coded
data
arbitrary
collusion
patterns
information
theory
isit
2017
ieee
international
symposium
1908–1912
kumar
rosnes
amat
private
information
retrieval
distributed
storage
systems
using
arbitrary
linear
code
information
theory
isit
2017
ieee
international
symposium
1421–1425
ieee
2017
wang
skoglund
symmetric
private
information
retrieval
mds
coded
distributed
storage
communications
icc
2017
ieee
international
conference
1–6
ieee
2017
banawan
ulukus
capacity
private
information
retrieval
byzantine
colluding
databases
arxiv
preprint
arxiv:1706.01442
2017
lint
introduction
coding
theory
springer
berlin
2013
dimakis
reducing
repair
trafﬁc
erasure
coding-based
storage
via
interference
alignment
information
theory
2009.
isit
2009.
ieee
international
symposium
2276–2280
ieee
2009
suh
ramchandran
exact-repair
mds
codes
distributed
storage
using
interference
alignment
information
theory
proceedings
isit
2010
ieee
international
symposium
161–165
ieee
2010.
march
2018
draft
