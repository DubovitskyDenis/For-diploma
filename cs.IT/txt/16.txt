graph
representation
two-dimensional
finite
type
constrained
systems
takahiro
ota
dept
computer
systems
engineering
nagano
prefectural
institute
technology
akiko
manada
hiroyoshi
morita
graduate
school
information
systems
university
electro-communications
813-8
shimonogo
ueda
nagano
386-1211
japan
email
ota
pit-nagano.ac.jp
1-5-1
chofugaoka
chofu
tokyo
182-8585
japan
email
amanada
morita
is.uec.ac.jp
abstract—the
demand
two-dimensional
source
coding
constrained
coding
getting
higher
days
com-
pared
one-dimensional
case
many
problems
remained
open
analysis
cumbersome
main
reason
would
graph
representations
discovered
far
paper
focus
two-dimensional
ﬁnite
type
constrained
system
set
two-dimensional
blocks
characterized
ﬁnite
number
two-dimensional
constraints
propose
graph
representation
show
generate
element
two-dimensional
ﬁnite
type
constrained
system
graph
representation
introduction
one-dimensional
source
coding
graph
representation
e.g
labelled
directed
graph
given
string
ﬁnite-
state
source
e.g.
markov
source
utilized
probabilistic
model
graph
representation
useful
data
compression
practical
also
analysis
data
compression
moreover
one-dimensional
channel
cod-
ing
constrained
coding
utilized
reducing
likelihood
errors
removing
data
sequences
easily
af-
fected
predictable
noise
study
one-dimensional
constrained
coding
based
study
one-dimensional
constrained
systems
represented
labelled
directed
graphs
indeed
many
important
results
derived
analyzing
characteristics
graphs
hand
study
two
higher
dimensional
cases
cumbersome
many
important
problems
e.g.
probabilistic
models
capacity
existence
inﬁnite
arrays
containing
forbidden
patterns
still
open
known
unsolvable
ﬁnite
steps
general
main
reason
would
explicit
way
present
high-dimensional
source
constrained
coding
using
ﬁnite
graphs
conversely
graph
representation
proposed
representation
breakthrough
approach
open
problems
paper
given
ﬁnite
set
two-dimensional
forbidden
blocks
forbidden
set
focus
two-
dimensional
finite
type
constrained
system
2d-ftcs
set
blocks
contain
forbidden
block
subblock
construct
labelled
directed
graph
based
forbidden
blocks
show
generate
arbitrary
block
2d-ftcs
graph
thus
existence
graph
presentation
used
answer
existence
blocks
2d-ftcs
preferably
explicitly
compute
capacity
rest
paper
organized
follows
ﬁrst
give
section
basic
notations
deﬁnitions
section
iii
propose
labelled
graph
representation
2d-ftcs
prove
graph
representation
generates
block
block
element
2d-ftcs
show
section
process
generate
arbitrary
block
2d-ftcs
graph
terminate
paper
conclusion
future
works
section
basic
notations
definitions
alphabet
block
let
alphabet
ﬁnite
set
symbols
denote
set
ﬁnite
blocks
1≤i≤m,1≤j≤n
element
coordinate
simplicity
always
assume
blocks
ﬁnite
furthermore
deﬁne
n≥0σ
consists
empty
block
least
one
given
block
denote
|b|r
|b|c
length
row
height
length
column
width
respectively
example
fig
illustrates
3,3
|b|r
|b|c
fig
block
fig
fig
subblock
preﬁx
sufﬁx
concatenation
throughout
subsection
always
let
two
blocks
size
respectively
block
called
subblock
appears
within
bk+i′
l+j
ﬁxed
non-negative
integers
integers
particular
subblock
called
preﬁx
resp.
sufﬁx
resp
among
preﬁxes
sufﬁxes
often
focus
preﬁx
sufﬁx
size
preﬁx
sufﬁx
size
denote
respectively
example
fig
fig
shows
left-hand
side
blocks
consider
block
n+n′
generated
column-wisely
concatenating
similarly
consider
block
m+m′
generated
row-
wisely
concatenating
two-dimensional
finite
type
constrained
systems
let
ﬁxed
non-negative
integers
given
ﬁnite
set
deﬁne
two-dimensional
finite
type
constrained
system
2d-ftcs
subset
characterized
precisely
2d-
ftcs
block
element
contain
block
subblock
call
forbidden
set
element
forbidden
block
note
one-dimensional
case
deﬁnition
1d-ftcs
general
starts
deﬁnition
constrained
system
existence
graph
representation
called
presentation
matters
refer
mo-
ment
discuss
latter
sections
shows
deﬁnition
natural
extension
deﬁnition
1d-ftcs
forbidden
set
given
deﬁne
allowed
set
deﬁne
modiﬁed
2d-ftcs
2d-ftcs
m≥h
n≥w
example
consider
2d-ftcs
characterized
fig
well-known
hard-square
constraint
forbidding
appearance
fig
allowed
set
observe
block
fig
element
fig
forbidden
blocks
fig
blocks
allowed
set
iii
graph
representation
2d-ftcss
main
contribution
paper
propose
graph
representation
2d-ftcs
focus
graph
representations
observe
enough
since
ﬁnite
set
notations
deﬁnitions
let
labelled
directed
graph
consisting
vertex
set
labelled
edge
set
edge
labelling
suppose
2d-ftcs
characterized
ﬁnite
forbidden
set
given
construct
labelled
directed
graphs
follows
1the
deﬁnition
2d-ftcss
vary
depending
authors
deﬁnition
covers
general
case
compared
deﬁnition
deﬁnition
givena2d-ftcss
characterizedbyf
row-wise
presentation
isalabelleddirectedgraphsatisfying
istheallowedset
forf
draw
blue
row-wise
edge
labelled
a−→v
i.e.
h-th
row
similarly
column-wisepresentation
ofs
isalabelleddirectedgraphsatisfying
istheallowedset
forf
drawared
column-wise
edgefrom
labelled
a−→v
h,1
i.e.
w-th
column
simplicity
omit
edge
labels
furthermore
iden-
tify
vertex
identiﬁer
positive
integer
deﬁned
via
bijection
||af
||af
cardinality
example
fig
fig
show
fig
respectively
number
circle
represents
identiﬁer
fig
row-wise
presentation
fig
column-wise
presentation
take
arbitrary
block
height
|x|r
width
say
path
u0→u1→
→uh′−h
generates
block
concatenating
ui+1
order
head
block
row-wise
generates
words
path
generates
block
uh′−h−1
uh′−h
path
exists
say
generates
block
convention
generates
block
assuming
path
consisting
similarly
block
height
width
|y|c
say
path
v0→v1→
→vw′−w
generates
block
concatenating
vj+1
order
head
block
column-wise
generates
words
path
generates
block
vw′−w−1
vw′−w
path
exists
say
generates
block
convention
generates
block
assuming
path
consisting
remark
deﬁnitions
straightforward
check
generates
block
width
subblock
whichisequivalenttosayx
similarly
generatesablock
ofheighth
ifandonlyif
subblockof
isin
whichisequivalenttosay
cid:0
∪m≥hς
cid:1
cid:0
∪n≥wς
cid:1
naturally
extend
notion
generating
certain
size
block
notion
generating
block
height
|b|r
width
|b|r
follows
deﬁnition
given
block
height
|b|r
width
|b|r
wesay
generatesb
ifgr
cangenerateany
|b|r
subblock
generates
generateanyh
|b|c
subblockof
deﬁnition
generates
subblock
element
allowed
set
hence
vertex
relationship
take
block
generate
subblock
whose
right-bottom
coordinate
|b|r
|b|c
let
identiﬁer
vertex
since
subblock
vertex
given
|b|r
|b|c
must
exist
two
paths
shown
fig
example
consider
fig
figs
two
paths
1→2
1→3
figs
fig
shows
combinations
paths
among
four
adjacent
vertices
four
numbers
left-top
right-top
left-bottom
right-bottom
rectangle
represented
respectively
example
ﬁrst
rectangle
third
row
fig
given
respectively
example
total
combinations
paths
among
four
adjacent
vertices
fig
illustrates
two
combinations
paths
among
four
adjacent
vertices
lm
lm
lm
lm
fig
paths
among
four
adjacent
vertices




























































































































fig
example
combinations
paths
among
four
adjacent
vertices
represents
light
green
orange
rectangles
represent
respectively
fig
two
combinations
paths
among
four
adjacent
vertices
graph
representation
paths
position
combining
row-wise
presentation
column-wise
presentation
obtain
graph
representation
deﬁnition
deﬁne
graph
representation
ofa2d-ftcss
sothat
cid:26
thus
easily
obtained
combining
subgraphs
deﬁne
generates
follows
deﬁnition
lets
bea2d-ftcscharacterizedbyf
.wesaygraphrepresentationg
generatesblockb
|b|r
subblock
generated
path
consisting
blue
edges
hence
generatedbyasubgraphgr
anyh×|b|c
subblockˆb
ofb
isgeneratedbyapathing
consistingonlyofrededges
andhence
isgeneratedby
asubgraphgc
remark
paths
used
generate
important
observe
maintain
following
conditions
terms
case
case
andj
case1
wheni
apreﬁxofb
ofsizeh×|b|c
isgenerated
.inthiscase
since
i−1
i−1
doesnot
exist.hence
apathin
isnotrestrictedbypathsamong
four
adjacent
vertices
shown
fig
moreover
|b|c
turns
head
block
path
generating
|b|r
subblockofb
whoseright-bottomcoordinateis
|b|r
similarly
preﬁx
size
|b|r
generatedbygr
.inthiscase
since
j−1
i−1
j−1
doesnotexist.hence
apathingr
isnotrestrictedbypaths
among
four
adjacent
vertices
shown
fig
moreover
|b|r
turns
betheheadblockofthepath
generatinga
|b|c
subblockofb
whoseright-bottomcoordinateis
|b|c
case2
paths
among
four
adjacent
vertices
andgc
showninfig.7
i−1
j−1
i−1
ands
j−1
arerequiredtodetermineapathtos
.moreover
theremust
existtwopathsfroms
i−1
j−1
tos
thoseares
i−1
i−1
ands
i−1
j−1
j−1
prove
theorem
main
result
paper
theorem
generatesb
ifandonlyif
proof
ﬁrst
prove
generates
generates
subblock
vertex
therefore
element
thus
contain
forbidden
block
subblock
hence
next
prove
generates
assume
contradiction
generate
since
preﬁx
size
|u|c
preﬁx
size
|u|r
generated
subgraphs
respectively
therefore
|u|r
|u|c
since
otherwise
generate
exists
preﬁx
observe
imply
|v|r
|v|c
therefore
holds
let
right-bottom
coordinate
right-bottom
coordinate
given
j−1
respectively
sufﬁx
size
h×|v|c
element
path
i−1
j−1
exists
similarly
sufﬁx
size
|v|r×w
element
path
i−1
j−1
j−1
exists
moreover
since
sufﬁx
size
|v|c
element
path
exists
similarly
sufﬁx
size
|v|r
element
path
i−1
exists
therefore
two
paths
shown
fig
hence
generates
contradicts
assumption
desired
exist
note
important
remark
arguments
done
far
hold
even
though
generate
allowing
vertex
set
multi-set
two
blocks
used
distinct
vertices
key
point
generate
blocks
discussed
next
section
generate
blocks
preliminaries
theorem
subblock
size
|b|c
generated
subgraph
preﬁx
head
block
path
generating
since
||af
vertices
consider
||af
different
subgraphs
respect
head
block
deﬁne
-class
subgraph
path
head
block
suppose
block
right-bottom
coordinate
hence
right-
bottom
coordinate
|b|c
subblock
whose
right-bottom
coordinate
head
block
path
generating
|b|c
subblock
whose
right-bottom
coordinate
|b|c
words
-class
generates
case
always
ﬁnd
blue
edges
-class
-class
satisfying
condition
fig
considering
vertices
-class
vertices
-class
respectively
except
case
vertices
attached
blue
edges
imply
connection
drawing
blue
edge
-class
-class
fig
illustrates
-classes
connec-
tions
fig
given
subgraph
red
circle
number
||af
black
circle
represents
k-class
note
course
possible
follow
similar
argument
deﬁne
||af
different
-class
considering
subblock
size
|b|r
preﬁx
height
generate
generates
generates
process
generate
blocks
position
show
generate
block
means
-classes
fig
10.
-classes
connections
connections
explain
example
case
generating
block
using
fig
avoid
ambiguity
fig
shows
process
generate
newly
generated
blocks
identiﬁers
written
bold
numbers
step
ﬁrst
step
pick
arbitrary
vertex
say
suppose
ﬁrst
block
fig
identiﬁer
vertex
identiﬁer
head
block
therefore
1-class
generates
preﬁx
width
1-class
generates
preﬁx
height
second
third
steps
generated
1-class
respectively
since
second
third
step
satisfy
case
remark
moreover
vertex
identiﬁer
head
block
3-class
generates
subblock
second
third
rows
fourth
seventh
eighth
steps
satisfy
paths
among
four
adjacent
vertices
shown
fig
since
case
remark
satisﬁed
steps
example
forth
step
ﬁfth
rectangle
second
row
fig
utilized
determine
seventh
eighth
steps
utilized
determine
respectively
ﬁfth
sixth
steps
satisfy
case
remark
implemented
1-class
strong
points
method
freely
select
vertex
ﬁrst
step
freely
select
step
process
unique
possible
make
size
desired
block
bigger
middle
process
long
step
satisﬁes
case
case
remark
thus
say
method
easy
apply
ﬂexible
conclusion
paper
proposed
graph
representation
2d-
precise
characterized
ftcs
-./+
-./+
-./+
-./+
-./+
-./+
-./+
-./+
fig
11.
process
generate
block
ﬁnite
set
forbidden
set
precisely
proposed
labelled
directed
graph
obtained
row-wise
column-wise
presentations
proved
generates
block
block
element
explained
indeed
generate
arbitrary
block
moreover
proposed
graph
representation
easily
extended
three
higher
dimensional
forbidden
set
adding
labelled
directed
graph
adding
axis
future
work
hope
apply
proposed
graph
analysis
two-dimensional
case
antidictionary
coding
utilizes
subset
antidictionary
computation
capacities
2d-ftcss
references
moffat
turpin
compression
coding
algorithms
kluwer
academic
publishers
2002
lind
b.marcus
introduction
symbolic
dynamics
coding
cambridge
university
press
1995
lind
multi-dimensional
symbolic
dynamics
proc
symposia
applied
mathematics
61–80
january
2002
jusesen
forchhammer
two-dimensional
information
theory
coding
cambridge
university
press
2010
louidor
t.-l.
poo
chaichanavong
marcus
maximum
insertion
rate
capacity
multidimensional
constraints
proc
ieee
2008
int
symp
inf
theory
1458–1462
july
2008
ota
morita
two-dimensional
antidictionary
construction
using
sufﬁx
tries
proc
2015
ieee
international
symposium
information
theory
2974–2978
june
2015
ota
morita
two-dimensional
antidictionary
coding
proc
2014
international
symposium
information
theory
applications
289–293
october
2014
