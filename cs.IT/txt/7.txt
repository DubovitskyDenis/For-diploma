linearithmic
time
algorithm
shortest
vector
problem
compute-and-forward
design
∗ens
lyon
lip
cnrs
ens
lyon
inria
ucbl
lyon
69007
france
email
jinming.wen
ens-lyon.fr
†school
computer
science
mcgill
university
montreal
h3a
2a7
canada
e-mail
chang
cs.mcgill.ca
jinming
wen∗
xiao-wen
chang†
abstract—we
propose
algorithm
expected
complexity
log
arithmetic
operations
solve
special
shortest
vector
problem
arising
computer-and-forward
design
dimension
channel
vector
algorithm
efﬁcient
best
known
algorithms
proved
complexity
index
terms—shortest
vector
problem
compute-and-forward
linearithmic
time
algorithm
introduction
paper
consider
solving
following
quadratic
integer
programming
problem
arising
compute-and-forward
design
min
a∈zn\
pkhk2
hht
constant
transmission
power
random
channel
vector
following
normal
distribution
khk
1/2
relay
networks
promising
relaying
strategy
offer
higher
rates
traditional
ones
amplify-
and-forward
decode-and-forward
especially
mod-
erate
snr
regime
ﬁnd
optimal
coefﬁcient
vector
maximizes
computation
rate
relay
scheme
need
solve
easy
verify
matrix
symmetric
positive
deﬁnite
cholesky
factorization
upper
triangular
matrix
rewrite
shortest
vector
problem
svp
min
a∈zn\
krak2
general
svp
arises
many
applications
including
cryptography
communications
different
algorithms
solve
see
e.g.
although
proved
general
svp
np-hard
shown
svp
np-hard
randomized
reductions
however
since
svp
special
due
structure
efﬁcient
algorithms
designed
solve
various
methods
proposed
solving
in-
cluding
branch-and-bound
algorithm
use
properties
algorithm
proposed
improvement
best
known
proved
expected
work
supported
nserc
canada
grant
217191-12
pro-
gramme
avenir
lyon
saint-etienne
luniversit´e
lyon
framework
programme
inverstissements
avenir
anr-11-idex-0007
anr
hpac
project
grant
anr
bs02
013.
complexity
n1.5
log
paper
complexity
measured
number
arithmetic
operations
sphere
decoding
based
algorithm
given
whose
expected
complexity
approximately
n1.5
also
suboptimal
algorithms
see
paper
modify
algorithm
proposed
solving
reduce
expected
complexity
log
rest
paper
organized
follows
section
review
algorithms
proposed
solving
section
iii
propose
new
algorithm
compare
three
algorithms
computationally
give
numerical
results
section
finally
conclusions
given
section
notation
use
denote
spaces
n−dimensional
column
real
vectors
integer
vectors
respectively
rm×n
denote
spaces
real
matrices
respectively
boldface
lowercase
letters
denote
column
vectors
boldface
uppercase
letters
denote
matrices
vector
ktk
denotes
ℓ2-norm
use
denote
k-th
column
identity
matrix
denote
n−dimensional
vector
elements
one
denote
n−dimensional
zero
vector
use
⌈x⌉
⌊x⌋
respectively
denote
smallest
integer
smaller
largest
integer
larger
use
⌊t⌉
denote
nearest
integer
vector
i.e.
entry
rounded
nearest
integer
tie
one
smaller
magnitude
chosen
set
use
|φ|
denote
cardinality
existing
algorithms
section
review
algorithms
proposed
solving
algorithm
sahraei
gastpar
subsection
review
algorithm
sahraei
gastpar
proposed
complexity
log
=p1
pkhk2
show
expected
complexity
n1.5
log
assumed
computer-and-forward
design
follows
normal
distribution
sake
convenience
refer
algorithm
algorithm
given
assume
nonzero
otherwise
problem
becomes
trivial
ﬁrst
simplify
notation
let
khk
pkhk2
pkhk2
kvk
rewrite
min
a∈zn\
αvvt
algorithm
based
following
two
theorems
given
respectively
theorem
solution
svp
problem
satis-
ﬁes
deﬁned
ka⋆k
theorem
solution
standard
unit
vector
sign
i.e.
±ei
satisﬁes
leading
⌈vx⌋
deﬁne
⌈vx⌋
⌈vix⌋
piecewise
constant
function
objective
function
thus
represented
ξk+1
...
...
sorted
real
numbers
denoting
discontinuity
points
constant
ξk+1
thus
min
k=0,1
...
cid:18
cid:16
ξk+1
cid:17
cid:19
|vi|
reduce
computational
cost
looks
part
discontinuity
points
easy
see
discontinuity
points
also
discontinuity
points
objective
function
notice
solution
−a∗
also
solution
fact
used
reduce
search
cost
using
fact
considers
positive
discontinuity
points
i.e.
positive
candidates
considered
furthermore
theorem
|⌈vix⌋|
thus
one
needs
consider
satisfying
⌈ψ⌉
1/2
bound
given
easy
see
actually
replaced
slightly
tighter
bound
⌊ψ⌋
1/2
therefore
holds
min
ξk+1∈ψ
cid:18
cid:16
ξk+1
cid:17
cid:19
i=1ψi
cid:8
|vi|
cid:12
cid:12
⌈ψ⌉
cid:9
algorithm
proposed
solving
calculates
set
sorts
elements
increasing
order
computes
right
hand
side
compares
get
mini
±ei
equal
mini
αv2
solution
xi=1
xi=1
aivi
i=1
step
one
change
according
since
discontinuity
points
sorted
i=1
aivi
updated
constant
time
therefore
also
calculated
constant
time
make
remark
actually
different
may
elements
regarded
different
quantities
updated
order
remember
needs
updated
step
label
assigned
every
element
indicate
originally
belonged
new
algorithm
proposed
section
iii
give
details
idea
describe
complexity
analysis
given
algorithm
number
elements
upper
bounded
⌈ψ⌉
number
elements
upper
bounded
⌈ψ⌉
note
exact
number
elements
analysis
complexity
algorithm
determined
sorting
step
complexity
log
deﬁned
following
derive
expected
complexity
algorithm
following
since
khk2
since
concave
function
jensen
inequality
therefore
khk2
cid:21
cid:20
khk2
expected
complexity
algorithm
thus
n1.5
log
algorithm
wen
zhou
mow
chang
subsection
review
algorithm
wen
given
improvement
earlier
version
given
complexity
approximated
log
n+ψ
based
gaussian
heuristic
deﬁned
expected
complexity
approximately
n1.5
sake
convenience
refer
algorithm
algorithm
wzmc
want
simplify
matrix
deﬁne
khk2
√αv
rewritten
iii
new
algorithm
min
a∈zn\
ttt
since
obviously
solution
−a⋆
thus
simplicity
solution
considered
also
use
restriction
throughout
rest
paper
ﬁrst
transformed
standard
form
svp
ﬁnding
cholesky
factor
i.e.
based
following
theorem
theorem
cholesky
factor
given
rij
gi−1
−titj
gi−1gi
=q1
−pi
instead
forming
whole
explicitly
diagonal
entries
calculated
easy
check
complexity
step
k=1
showed
section
propose
algorithm
complexity
cid:0
min
log
min
cid:1
=r1
khk2
max
1≤i≤n
expected
complexity
log
recall
algorithm
checks
discontinuity
points
objective
function
ﬁnd
optimal
solution
main
idea
new
algorithm
reduce
number
discontinuity
points
checked
following
introduce
theorem
signiﬁcantly
reduce
number
discontinuity
points
checked
ﬁnding
optimal
one
theorem
suppose
satisﬁes
tp+1
tq+1
solution
satisﬁes
either
exists
solution
satisfying
±ek
given
change
−ti
without
changing
anything
else
order
permute
entries
step
costs
log
−dimensional
vector
introduced
decrease
computational
cost
following
pn+1
pi+1
tiai
deﬁne
theorem
rii
xj=i+1
rij
xj=i+1
tjaj
thus
tipi+1
krak2
xi=1
cid:16
tipi+1/gi
cid:17
xi=1
schnorr-euchner
search
algorithm
modiﬁed
search
optimal
solution
satisfying
within
ellipsoid
xi=1
tipi+1/gi
nonzero
integer
point
found
solution
cost
search
process
approximately
based
gaussian
heuristic
thus
analysis
expected
complexity
algorithm
wzmc
approximated
n1.5
±⌈tx⌋
satisfying
2t2
min
1≤i≤q
√is
ktk2
2ti
proof
note
±ei
min
min
1≤i≤n
1≤i≤n
±ek
possible
±ek
solutions
following
proof
assume
theorem
exists
solution
written
⌈tx⌋
note
⌈tx⌋
solution
−⌈tx⌋
thus
assume
positive
must
assumption
thus
p+1
otherwise
contradicting
q+1
t2x
therefore
ﬁrst
inequality
holds
following
show
second
inequality
holds
since
optimal
solution
i.e.
ka⋆k2
therefore
cauchy-schwarz
inequality
ka⋆k2
ktk2
ka⋆k2
using
fact
⌈tx⌋
tix
√is
ktk2
since
aforementioned
equality
holds
second
inequality
holds
completing
proof
cid:3
like
algorithm
wzmc
new
algorithm
ﬁrst
performs
transformation
holds
costing
log
deﬁne
⌈tx⌋
section
ii-a
deﬁned
⌈tix⌋
piecewise
constant
function
discontinuity
points
ﬁnd
optimal
discrete
points
need
consider
ﬁnite
subset
discrete
points
fact
theorem
need
consider
c/ti
satisﬁes
2t2
tiµ
thus
deﬁne
cid:0
cid:1
cid:12
cid:12
cid:12
i=1φi
2t2
tiµ
optimal
discontinuity
point
position
vector
must
sort
ﬁrst
elements
members
increasing
order
one
entry
increase
element
note
entries
corresponding
regard
different
quantities
update
corresponding
following
compute
constant
time
speciﬁcally
denote
=pn
i=1
aiti
start
update
setting
update
setting
2ai
update
setting
update
setting
enumeration
process
keep
minimizes
corresponding
ﬁnal
otherwise
=pn
i=1
analysis
algorithm
summarized
algorithm
analyzing
complexity
algorithm
look
number
discontinuous
points
needed
checked
algorithm
new
algorithm
input
channel
vector
transmission
power
output
initialization
calculate
perform
signed
permutation
new
satisﬁes
calculate
let
fmin
phase
...
calculate
c/ti
1/2
ti/
2t2
tiµ
end
phase
sort
ﬁrst
element
members
increasing
end
order
set
every
2ai
fmin
set
set
fmin
end
end
return
sign
permuted
algorithm
algorithm
√is
ktk2
√ir1
khk2
max
cid:22
cid:23
tiµ
max
involved
permutation
see
thus
largest
among
|φi|
≤jϕ/√ik
deﬁned
|ψi|
⌈ψ⌉
thus
follows
|φi|
|ψi|
cid:4
ϕ/√i
cid:5
⌈ψ⌉
note
arbitrarily
smaller
see
also
big
enough
⌊ϕ/√i⌋
thus
new
algorithm
signiﬁcantly
reduce
number
discontinuity
points
checked
study
complexity
algorithm
⌊ϕ2⌋
|φi|
min
⌊ϕ2⌋
|φ|
|φi|
xi=1z
xi=1
2√kϕ
min
xi=1
i−1
thus
complexity
line
algorithm
min
log
min
easy
see
actually
complexity
whole
algorithm
follows
expected
complexity
algorithm
log
numerical
simulations
section
present
numerical
results
compare
efﬁciency
proposed
method
algorithm
denoted
proposed
denoted
denoted
wzmc
compare
algorithm
branch-and-bound
algorithm
since
numerical
tests
show
algorithm
faster
algorithm
improved
version
numerical
tests
done
matlab
2010a
laptop
intel
core
i5-5300u
cpu
2.30ghz
set
dimension
given
randomly
generate
1000
realizations
apply
three
algorithms
solve
figure
shows
total
cpu
time
proposed
wzmc
dimension
fig
total
cpu
time
versus
figure
see
total
cpu
time
proposed
method
wzmc
close
comparisons
also
give
table
show
total
cpu
time
50.
figure
table
see
proposed
algorithm
much
faster
also
faster
wzmc
large
means
new
algorithm
wzmc
advantages
different
total
cpu
time
seconds
versus
table
proposed
wzmc
2.77
0.96
1.72
6.28
1.40
2.31
13.3
2.06
2.28
23.5
2.60
2.49
41.4
3.42
2.62
62.7
4.15
2.77
93.7
5.14
3.14
130
6.07
3.42
settings
useful
algorithm
another
advantage
i.e.
complexity
rigorously
analyzed
complexity
wzmc
based
gaussian
heuristic
conclusions
paper
proposed
algorithm
expected
complexity
log
shortest
vector
problem
arising
compute-and-forward
network
coding
design
complex-
ity
lower
n1.5
log
expected
complexity
latest
algorithm
n1.5
approximate
expected
complexity
algorithm
proposed
simulation
results
showed
new
algorithm
much
faster
given
references
agrell
eriksson
vardy
zeger
closest
point
search
lattices
ieee
transactions
information
theory
vol
2201–2214
2002
hanrot
xavier
pujol
stehl´e
algorithms
shortest
closest
lattice
vector
problems
proceedings
third
inter-
national
conference
coding
cryptology
iwcc
springer-
verlag
berlin
heidelberg
2011
159–190
ajtai
shortest
vector
problem
np-hard
randomized
reductions
proceedings
thirtieth
annual
acm
symposium
theory
computing
acm
1998
10–19
richter
scheunert
jorswieck
efﬁcient
branch-and-
bound
algorithm
compute-and-forward
ieee
23rd
international
symposium
personal
indoor
mobile
radio
communications
pimrc
sept
2012
77–82
sahraei
gastpar
compute-and-forward
finding
best
equation
2014
52nd
annual
allerton
conference
communication
control
computing
allerton
ieee
2014
227–233
polynomially
solvable
instances
shortest
closest
vector
problems
applications
compute-and-forward
arxiv
preprint
arxiv:1512.06667
2015
wen
zhou
mow
x.-w.
chang
efﬁcient
algorithm
optimally
solving
shortest
vector
problem
compute-and-forward
design
submitted
ieee
transactions
wireless
communications
sakzad
viterbo
hong
boutros
ergodic
rate
compute-and-forward
2012
international
symposium
network
coding
netcod
2012
131–136
zhou
mow
quadratic
programming
relaxation
approach
compute-and-forward
network
coding
design
2014
ieee
international
symposium
information
theory
isit
2014
2014
2296–2300
zhou
wen
mow
quadratic
programming
relaxation
approach
compute-and-forward
network
coding
design
submitted
ieee
transactions
communications
nazer
gastpar
compute-and-forward
harnessing
inter-
ference
structured
codes
ieee
transactions
information
theory
vol
6463–6486
2011
wen
zhou
mow
x.-w.
chang
compute-and-forward
design
based
improved
sphere
decoding
2015
ieee
international
conference
communications
icc
2015
london
united
kingdom
june
8-12
2015
2015
1631–1636
schnorr
euchner
lattice
basis
reduction
improved
practical
algorithms
solving
subset
sum
problems
mathematical
program-
ming
vol
181–191
1994
