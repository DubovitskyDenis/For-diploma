describing
west-3-stack-sortable
permutations
permutation
patterns
henning
´ulfarsson
abstract
describe
new
method
ﬁnding
patterns
permutations
produce
given
pattern
permutation
passed
stack
use
method
describe
west-3-stack-sortable
permutations
permutations
sorted
three
passes
stack
also
show
method
applied
bubble-sort
operator
method
requires
use
mesh
patterns
introduced
br¨and´en
claesson
2011
well
new
type
generalized
pattern
call
decorated
pattern
contents
introduction
generalized
permutation
patterns
finding
preimages
patterns
describing
west-3-stack
sortable
permutations
open
problems
references
introduction
permutation
one-to-one
correspondence
ﬁnite
set
permutations
written
one-line
notation
permutation
2314
maps
number
letters
permutation
called
length
set
permutations
length
denoted
identity
permutation
denoted
idn
understood
context
irrelevant
integers
use
denote
set
1970
knuth
initiated
study
sorting
pattern
avoidance
per-
mutations
considered
problem
sorting
permutation
passing
stack
stack
structure
store
elements
permutation
push
onto
top
stack
elements
popped
output
consider
trying
sort
permutation
231
stack
shown
figure
key
words
phrases
patterns
permutations
sorting
´ulfarsson
312
231
figure
trying
failing
sort
231
stack
ﬁgure
read
right
left
note
always
want
elements
stack
increasing
top
since
otherwise
would
impossible
output
sorted
failed
sort
permutation
one
pass
stack
therefore
say
stack-sortable
knuth
showed
permutation
stack-sortable
avoids
231
pattern
reprove
theorem
3.1.
several
variations
knuth
original
problem
considered
changing
way
stack
operates
and/or
adding
sorting
devices
see
b´ona
survey
paper
consider
two
variations
repeatedly
passing
permutation
stack
so-called
bubble-
sort
operator
introduce
new
method
ﬁnding
patterns
permutation
cause
sorting
devices
output
given
pattern
given
pattern
want
outputted
classical
pattern
deﬁned
show
mesh
patterns
introduced
br¨and´en
claesson
suﬃce
given
pattern
mesh
pattern
need
introduce
new
kind
generalized
pattern
call
decorated
pattern
next
section
review
literature
generalized
permutation
patterns
introduce
new
generalization
generalized
permutation
patterns
standardization
list
numbers
another
list
length
smallest
letter
original
list
replaced
second
smallest
standardization
5371
3241.
classical
permutation
pattern
permutation
permutation
contains
occurrence
pattern
indices
standardization
equals
pattern
permutation
contain
pattern
say
avoids
pattern
permutation
526413
contains
pattern
132
three
occurrences
given
subsequences
264
263
243.
draw
graph
permutation
graphing
coordinates
grid
example
permutation
shown
figure
additionally
circled
occurrences
pattern
figure
permutation
526413
three
occurrences
pattern
132
describing
west-3-stack-sortable
permutations
permutation
avoids
pattern
123
since
ﬁnd
increasing
subsequence
length
three
classical
patterns
form
base
hierarchy
generalizations
shown
figure
barred
decorated
grid
classes
mon
grid
classes
marked
mesh
barred
mcgovern
mesh
bivincular
interval
1-barred
bruhat-restr
vincular
classical
figure
hierarchy
generalizations
classical
patterns
describe
detail
mesh
marked
mesh
decorated
patterns
well
barred
patterns
generalizations
need
describe
others
brieﬂy
give
references
2.1.
mesh
patterns
barred
patterns
mesh
patterns
introduced
review
via
example
mesh
pattern
occurs
permutation
ﬁnd
underlying
classical
pattern
132
positioned
way
shaded
regions
occupied
entries
permutation
consider
permutation
526413.
know
classical
pattern
three
occurrences
permutation
figure
one
see
one
satisﬁes
additional
requirement
additional
entries
shaded
region
left
another
way
writing
mesh
pattern
give
underlying
classical
pattern
followed
set
shaded
boxes
labelled
lower
left
corner
left-most
box
bottom-most
row
mesh
pattern
considered
132
classical
pattern
written
mesh
pat-
tern
´ulfarsson
figure
permutation
526413
one
occurrence
mesh
pat-
tern
1,2
0,2
2,2
0,0
figure
mesh
pattern
132
describing
simple
permutations
mesh
patterns
recall
interval
per-
mutation
set
entries
consecutive
positions
values
interval
trivial
consists
one
letter
entire
permutation
elements
4653
form
nontrivial
interval
permutation
28465317.
permutation
without
nontrivial
intervals
called
simple
simple
permutations
shown
useful
study
classical
pattern
classes
see
e.g.
albert
atkinson
brignall
notice
left-most
right-most
highest
lowest
elements
hereafter
called
boundary
elements
interval
4653
form
occurrence
mesh
pattern
leads
following
proposition
proposition
2.1.
permutation
simple
avoids
patterns
well
symmetries
generated
symmetries
square
describing
west-3-stack-sortable
permutations
proof
permutation
simple
non-trivial
interval
interval
must
boundary
elements
satisfying
one
mesh
patterns
symmetries
element
patterns
one
boundary
elements
added
ensure
interval
entire
permutation
thus
trivial
cid:3
barred
patterns
introduced
west
barred
pattern
classical
pattern
bars
entries
pattern
contained
permutation
standardization
unbarred
entries
contained
permutation
way
part
occurrence
whole
barred
pattern
best
explained
considering
examples
barred
pattern
3¯5241
occur
permutation
416352
since
one
occurrence
classical
pattern
get
unbarred
entries
subsequence
4352
occurrence
part
occurrence
35241.
permutation
5264173
contain
barred
pattern
subsequence
5473
since
occurrence
3241
part
occurrence
35241.
shown
barred
pattern
one
barred
entry
mesh
pattern
barred
pattern
discussed
fact
mesh
pattern
explains
edge
barred
patterns
one
bar
1-barred
mesh
patterns
mesh
figure
2.2.
marked
mesh
patterns
marked
mesh
patterns
introduced
author
used
joint
work
woo
characterization
local
complete
intersection
schubert
varieties
give
ﬁner
control
whether
certain
region
permutation
allowed
contain
elements
many
give
example
consider
marked
mesh
pattern
´ulfarsson
meaning
region
containing
boxes
region
must
contain
least
one
entry
figure
see
exactly
one
occurrence
mesh
pattern
permutation
526413.
figure
permutation
526413
one
occurrence
marked
mesh
pattern
marked
mesh
patterns
useful
need
add
elements
existing
pattern
ensure
elements
popped
particular
sorting
device
2.3.
decorated
patterns
need
even
ﬁner
control
allowed
inside
particular
region
pattern
need
control
whether
entries
region
avoid
particular
pattern
consider
example
decorated
pattern
decorated
region
middle
signiﬁes
occurrence
pattern
occurrence
underlying
classical
pattern
additionally
entries
region
contain
pattern
equivalently
whatever
region
must
descending
order
left
right
figure
occurrence
decorated
pattern
left
right
occurrence
classical
pattern
satisfy
requirements
decorated
region
figure
permutation
526413
one
occurrences
decorated
pattern
state
formal
deﬁnition
decorated
pattern
deﬁnition
2.2.
decorated
pattern
length
consists
classical
pattern
length
collection
contains
pairs
subset
square
kk×j0
pattern
possibly
another
decorated
pattern
occurrence
permutation
subset
diagram
order-preserving
injections
satisfying
two
conditions
describing
west-3-stack-sortable
permutations
let
rij
pair
let
rij
require
avoids
bars
places
noted
barred
pattern
one
barred
entry
translated
mesh
pattern
one
bar
entries
adjacent
pattern
longer
true
still
translate
types
barred
patterns
decorated
patterns
example
barred
pattern
1¯2¯34
equivalent
decorated
pattern
barred
patterns
¯13¯24
expressed
decorated
patterns
2.4.
generalizations
vincular
patterns
sometimes
called
dashed
patterns
deﬁned
babson
steingr´ımsson
mesh
patterns
shaded
regions
must
vertical
strips
bivincular
patterns
deﬁned
bousquet-m´elou
claesson
dukes
kitaev
mesh
patterns
shaded
regions
either
vertical
horizontal
strips
bruhat-restricted
patterns
interval
patterns
deﬁned
yong
woo
applications
study
singularities
schubert
varieties
author
showed
interval
patterns
special
case
mesh
patterns
mcgovern
showed
classical
patterns
extra
restriction
occurrences
must
union
cycles
applications
geometry
well
shown
generalization
subsumed
marked
mesh
patterns
proﬁle
classes
introduced
murphy
vatter
later
called
monotone
grid
classes
huczynska
vatter
hard
show
permutation
member
particular
monotone
grid
class
contains
one
pattern
ﬁnite
list
decorated
patterns
finding
preimages
patterns
section
deﬁne
method
describing
patterns
guaranteed
produce
given
pattern
permutation
sorted
stack
bubble-sort
operator
3.1.
stack-sort
operator
permutation
denote
image
passed
stack
recall
permutation
stack-sortable
identity
permutation
another
way
state
permutation
stack-sortable
avn
avn
set
permutations
length
avoid
21.
course
avn
framing
question
like
leads
generalization
given
pattern
conditions
need
´ulfarsson
put
avn
equivalently
ask
description
avn
call
permutations
west-k-stack-sortable
permutations
since
west
considered
generalization
case
one
stack
ﬁrst
note
permutations
diﬀerent
k-stack-sortable
permutations
permutations
sorted
using
stacks
series
without
requirement
permutation
completely
passes
one
stack
time
example
permutation
2341
west-2-stack-sortable
put
entries
onto
ﬁrst
stack
pass
way
end
use
second
stack
sort
end
1234.
2341
2-stack-sortable
see
also
open
problem
section
basic
idea
behind
method
describe
occur-
rence
pattern
length
elements
making
occurrence
present
kind
pattern
sorted
course
complete
tautology
get
pretty
far
start
showing
idea
allows
describe
stack-sortable
permutations
well
west-2-stack
sortable
permutations
stack-sortable
permutations
know
sorted
stack
contains
classical
pattern
21.
therefore
consider
particular
occurrence
pattern
sorting
elements
occurrence
must
occurrence
pattern
order
remain
order
element
corresponding
must
popped
stack
larger
element
element
corresponding
enters
thus
box
must
occupied
least
one
element
occurrence
marked
mesh
pattern
equivalent
classical
pattern
therefore
reproven
knuth
result
theorem
3.1
knuth
permutation
stack-sortable
i.e.
avoids
pattern
231.
west-2-stack-sortable
permutations
similarly
reprove
west
result
west-2-
stack
sortable
permutations
i.e.
permutations
knuth
result
know
sorted
two
passes
stack
avoids
pattern
231.
occurrence
231
must
either
patterns
describing
west-3-stack-sortable
permutations
consider
pattern
left
order
elements
stay
order
pass
stack
must
element
box
order
pop
element
corresponding
stack
smallest
element
enters
opposite
happens
pattern
right
must
stay
stack
enters
elements
box
must
leave
stack
enters
thus
patterns
become
marked
mesh
patterns
naturally
written
pattern
right
equivalent
pattern
sense
permu-
tation
either
contains
patterns
avoids
lemma
hilmarsson
j´onsd´ottir
sigurðard´ottir
viðarsd´ottir
´ulfarsson
two
patterns
also
easy
see
directly
equivalent
mentioned
pattern
another
repre-
sentation
barred
pattern
3¯5241
thus
re-derived
west
result
theorem
3.2
west
permutation
west-2-stack-sortable
i.e.
avoids
patterns
2341
3¯5241
recall
inversion
permutation
occurrence
classical
pattern
non-inversion
occurrence
12.
describe
given
classical
pattern
method
used
ﬁnd
set
marked
mesh
patterns
two
things
consider
choosing
classical
patterns
start
two
elements
part
inversion
must
also
part
inversion
patterns
two
elements
part
non-inversion
either
non-inversion
inversion
patterns
consider
shadings
markings
must
added
form
inversion
particular
pattern
supposed
come
stack
inversion
must
another
element
pops
pushed
onto
stack
thus
maintaining
inversion
element
present
need
anything
element
need
mark
region
inversion
must
become
non-inversion
must
make
sure
stays
stack
arrives
order
must
shade
boxes
particular
´ulfarsson
elements
shaded
region
non-inversion
still
non-inversion
sorting
suﬃces
generate
set
marked
mesh
pattens
classical
pattern
see
later
start
mesh
pattern
diﬃcult
ﬁnd
set
forced
use
decorated
patterns
introduced
3.2.
bubble-sort
operator
bubble-sort
operator
ineﬃcient
way
sorting
permutation
works
adjacent
locations
permutation
left
element
larger
right
one
swapped
example
one
pass
bubble-
sort
permutation
52134
produces
21345
since
travel
front
back
another
example
bubble-sorting
521634
produces
215346.
slight
modiﬁcation
method
described
works
equally
well
operator
let
denote
output
one
pass
bubble-sort
consider
example
permutations
see
contains
pattern
contains
make
sure
elements
stay
order
either
need
large
element
front
would
mean
would
never
moved
need
large
element
stop
moving
past
arrive
marked
mesh
pattern
pattern
equivalent
two
classical
patterns
231
321.
albert
atkinson
bouvel
claesson
dukes
ﬁrst
made
result
explicit
avoids
231
321.
paper
authors
show
classical
pattern
least
three
left-to-right
maxima
third
ﬁnal
symbol
set
b−1
classical
pattern
class
i.e.
described
classical
patterns
consider
smallest
example
pattern
1243
proposition
3.3.
b−1
1243
note
patterns
expanded
mesh
patterns
would
eight
patterns
instead
four
proof
easy
see
underlying
classical
patterns
ones
possible
showing
additional
shadings
and/or
markings
necessary
similar
patterns
consider
third
one
must
move
past
achieved
adding
shading
must
move
past
must
either
large
element
front
implying
never
move
implying
move
past
cid:3
describing
west-3-stack-sortable
permutations
describing
west-3-stack
sortable
permutations
move
case
west-3-stack
sortable
permutations
i.e.
permutations
west
result
stated
theorem
3.2
know
sorted
three
passes
stack
avoids
two
patterns
use
method
consider
pattern
right
shaded
box
cause
complications
decorated
patterns
introduced
necessary
therefore
consider
pattern
left
ﬁrst
lemma
4.1.
let
permutation
occurrence
comes
exactly
one
patterns
easy
see
patterns
231
part
family
whose
k-th
member
prohibits
permutation
containing
west-k-stack
sortable
proof
element
patterns
added
pop
large
elements
pushed
stack
easy
see
underlying
classical
patterns
lemma
without
possible
candidates
producing
occurrence
since
proving
particular
shading
must
applied
patterns
similar
consider
pattern
comes
elements
pattern
arranged
pattern
order
elements
come
order
want
must
stay
stack
pushed
onto
stack
also
must
remain
stack
arrives
must
therefore
shade
boxes
finally
elements
must
leave
stack
arrives
must
add
extra
element
cid:3
consider
pattern
without
shading
´ulfarsson
lemma
4.2.
let
permutation
occurrence
comes
exactly
one
patterns
proof
proof
lemma
4.1
added
pop
large
elements
easy
see
classical
patterns
underlying
j2andj3
without
could
possibly
produce
occurrence
3241
classical
pattern
underlying
become
3241
must
element
marked
region
pops
stack
boxes
classical
pattern
underlying
must
shaded
ensure
stays
stack
put
stack
pattern
comes
elements
pattern
arranged
pattern
order
elements
come
order
want
must
stay
stack
arrives
explains
shaded
boxes
must
popped
arrives
explains
marking
box
cid:3
must
consider
additional
conditions
patterns
lemma
cause
correct
shading
pattern
express
conditions
following
lemma
two
propositions
lemma
4.3.
occurrence
permutation
become
occurrence
leave
proof
reader
rename
pattern
note
also
expanded
mesh
pattern
proposition
4.4.
occurrence
permutation
become
occurrence
part
one
patterns
elements
describing
west-3-stack-sortable
permutations
added
pattern
circled
j2,1
j2,2
j2,3
j2,4
j2,5
j2,6
j2,7
j2,8
j2,9
j2,10
j2,11
j2,12
proof
ensure
elements
shaded
box
must
look
element
pops
four
diﬀerent
possibilities
j2,1
j2,2
j2,3
j2,4
explain
shadings
decoration
pattern
j2,2
others
similar
pattern
size
element
popped
stack
in-between
since
element
popped
elements
boxes
boxes
contain
element
since
would
pop
element
added
j2,2
element
would
land
´ulfarsson
shaded
box
consider
decorated
box
contain
elements
none
allowed
leave
stack
prior
pushed
since
one
would
land
shaded
box
elements
region
must
descending
order
equivalently
avoid
pattern
12.
also
need
make
sure
elements
arrived
stack
prior
popped
shaded
region
patterns
order
diﬃculty
happens
reverse
order
consider
pattern
j2,4
additional
shadings
necessary
rename
pattern
j2,12
future
reference
consider
pattern
j2,3
elements
boxes
still
stack
pushed
popped
land
shaded
region
must
therefore
boxes
empty
element
box
pops
everything
pushed
get
two
patterns
j2,10
j2,11
consider
pattern
j2,2
elements
box
still
stack
put
popped
land
shaded
region
must
therefore
box
empty
element
box
pops
everything
pushed
get
three
patterns
j2,7
j2,8
j2,9
consider
pattern
j2,1
elements
boxes
must
popped
elements
decorated
region
boxes
must
therefore
consider
three
cases
decorated
region
empty
case
need
worry
anything
prior
get
pattern
j2,1
describing
west-3-stack-sortable
permutations
upper
box
decorated
region
empty
lower
box
choose
top-most
element
lower
box
add
pattern
handle
pattern
way
handled
pattern
j2,2
get
three
patterns
j2,2
j2,3
j2,4
upper
box
decorated
region
empty
choose
top-most
element
add
pattern
handle
pattern
way
handled
pattern
j2,2
get
two
patterns
j2,5
j2,6
cid:3
consider
last
pattern
conditions
must
imposed
order
get
sorting
proposition
4.5.
occurrence
permutation
become
occurrence
part
one
patterns
elements
´ulfarsson
added
pattern
circled
j1,1
j1,2
j1,3
j1,4
j1,5
j1,6
j1,7
j1,8
j1,9
j1,10
j1,11
proof
ensure
elements
shaded
box
must
look
element
pops
three
diﬀerent
possibilities
j1,1
j1,2
j1,3
also
need
make
sure
elements
arrived
stack
prior
popped
shaded
region
derivation
patterns
proposition
identical
proof
proposition
4.4
cid:3
taken
together
lemmas
4.1
4.3
propositions
4.4
4.5
produce
list
patterns
describing
permutations
west-3-stack
sortable
simplify
list
considerably
follows
since
patterns
j1,1
j1,6
imply
containment
remove
similarly
j2,12
removes
j1,7
j1,9
removes
j2,1
j2,6
removes
j2,7
j2,9
removes
describing
west-3-stack-sortable
permutations
left
fact
permutation
west-3-stack-sortable
avoids
patterns
j2,12
j1,10
j2,10
j1,11
j2,11
decorated
region
j2,10
contains
element
lower
box
produce
occurrence
true
j2,11
therefore
replace
patterns
j2,10
j2,11
keeping
names
patterns
unchanged
pattern
j1,10
simpliﬁed
well
lower
box
decorated
region
contain
one
element
since
otherwise
would
occurrence
begin
replacing
notice
second
pattern
implies
containment
j2,10
therefore
replace
j1,10
ﬁrst
pattern
´ulfarsson
pattern
j1,11
simpliﬁed
way
lower
box
decorated
region
contain
one
element
since
otherwise
would
occurrence
begin
replacing
notice
second
pattern
implies
containment
j2,11
therefore
replace
j1,11
ﬁrst
pattern
therefore
proven
following
theorem
4.6.
permutation
west-3-stack-sortable
i.e.
avoids
following
decorated
patterns
j2,12
j1,10
j2,10
j1,11
j2,11
open
problems
use
decorated
patterns
entries
certain
boxes
needed
avoid
particular
pattern
one
might
guess
situations
could
useful
require
entries
contain
particular
pattern
instead
furthermore
one
could
far
assigning
set
entries
box
placing
restrictions
sets
1,1
2,3
0,1
avoids
123
3,2
3,3
contains
describing
west-3-stack-sortable
permutations
pattern
etc
concrete
example
note
ﬁxed
point
occurrence
pattern
0,1
1,0
end
open
problems
related
number
west-2-stack-sortable
permutations
conjectured
west
conjecture
proven
zeilberger
later
dulucq
gire
west
found
permutations
bijection
rooted
non-separable
planar
maps
enumeration
west-3-stack-sortable
per-
mutations
still
completely
open
one
might
hope
method
described
ﬁnding
set
patterns
could
turned
algorithm
deﬁnitely
feasible
classical
patterns
might
diﬃcult
mesh
patterns
method
shown
work
well
bubble-sort
operator
hopefully
applied
similar
sorting
operators
noted
subsection
3.1
another
set
permutations
called
stack-sortable
permutations
known
classical
patterns
suﬃce
describe
set
known
classical
patterns
see
albert
atkinson
linton
recent
work
author
hopes
pursue
open
problems
mentioned
future
work
acknowledgements
author
would
like
thank
anders
claesson
suggesting
problem
describing
west-3-stack-sortable
permutations
well
help
testing
theorem
4.6
computer
author
would
also
like
thank
christian
krattenthaler
anonymous
referee
detailed
comments
author
supported
grant
090038013
icelandic
research
fund
references
albert
atkinson
simple
permutations
pattern
restricted
permutations
discrete
math
300
2005
1-3
1–15
michael
albert
mike
atkinson
steve
linton
permutations
generated
stacks
deques
ann
comb
2010
3–16
2601797
2011b:05001
michael
albert
atkinson
mathilde
bouvel
anders
claesson
mark
dukes
inverse
image
pattern
classes
bubble
sort
journal
combinatorics
2011
231–243
eric
babson
einar
steingr´ımsson
generalized
permutation
patterns
classiﬁcation
mahonian
statistics
s´em
lothar
combin
2000
art
b44b
electronic
mikl´os
b´ona
survey
stack-sorting
disciplines
electron
combin
2002/03
article
permutation
patterns
otago
2003
mireille
bousquet-m´elou
anders
claesson
mark
dukes
sergey
kitaev
2+2
-free
posets
ascent
sequences
pattern
avoiding
permutations
combin
theory
ser
117
2010
884–909
petter
br¨and´en
anders
claesson
mesh
patterns
expansion
permutation
statistics
sums
permutation
patterns
electron
combin
2011
robert
brignall
survey
simple
permutations
permutation
patterns
london
math
soc
lecture
note
ser.
vol
376
cambridge
univ
press
cambridge
2010
41–65
2732823
dulucq
gire
julian
west
permutations
forbidden
subsequences
nonseparable
planar
maps
disc
math
153
1996
1-3
85–103
´ulfarsson
´isak
hilmarsson
ingibj¨org
j´onsd´ottir
steinunn
sigurðard´ottir
sigr´ıður
viðarsd´ottir
henning
´ulfarsson
wilf-classiﬁcation
mesh
patterns
short
length
preparation
2011
11.
sophie
huczynska
vincent
vatter
grid
classes
fibonacci
dichotomy
restricted
per-
mutations
electron
combin
2006
research
paper
electronic
12.
donald
knuth
art
computer
programming
second
ed.
addison-wesley
publishing
co.
reading
mass.-london-amsterdam
1975
volume
fundamental
algorithms
addison-wesley
se-
ries
computer
science
information
processing
13.
william
mcgovern
closures
k-orbits
ﬂag
variety
represent
theory
2011
568–573
2833467
14.
maximillian
murphy
vincent
vatter
proﬁle
classes
partial
well-order
permutations
electron
combin
2002/03
research
paper
electronic
permutation
patterns
otago
2003
2028286
2004i:06004
15.
henning
´ulfarsson
uniﬁcation
permutation
patterns
related
schubert
varieties
pure
math
appl
appear
2011
16.
henning
´ulfarsson
alexander
woo
schubert
varieties
local
complete
intersections
submitted
2011
17.
julian
west
permutations
forbidden
subsequences
stack-sortable
permutations
ph.d.
thesis
mit
1990
18.
alexander
woo
alexander
yong
schubert
variety
gorenstein
adv
math
207
2006
205–220
20.
doron
zeilberger
proof
julian
west
conjecture
number
two-stack-sortable
permu-
governing
singularities
schubert
varieties
algebra
320
2008
495–520
tations
length
disc
math
102
1992
85–93
school
computer
science
reykjav´ık
university
menntavegi
101
reykjav´ık
iceland
e-mail
address
henningu
ru.is
