obstacles
slopes
tic-tac-toe
excursion
discrete
geometry
combinatorial
game
theory
padmini
mukkamala
dissertation
submitted
graduate
school-new
brunswick
rutgers
state
university
new
jersey
partial
fulﬁllment
requirements
degree
doctor
philosophy
graduate
program
mathematics
written
direction
j´anos
pach
mario
szegedy
approved
new
brunswick
new
jersey
october
2011
amma
nanna
obstacles
slopes
tic-tac-toe
excursion
discrete
geometry
combinatorial
game
theory
padmini
mukkamala
dissertation
director
j´anos
pach
mario
szegedy
abstract
drawing
graph
said
straight-line
drawing
vertices
represented
distinct
points
plane
every
edge
represented
straight-line
segment
connecting
corresponding
pair
vertices
passing
vertex
minimum
number
slopes
straight-line
drawing
called
slope
number
show
every
cubic
graph
drawn
plane
straight-line
edges
using
four
basic
slopes
π/4
π/2
−π/4
also
prove
four
slopes
property
draw
given
graph
obstacle
representation
set
points
plane
representing
vertices
together
set
obstacles
connected
polygons
two
vertices
joined
edge
corresponding
points
connected
segment
avoids
obstacles
obstacle
number
minimum
number
obstacles
obstacle
representation
show
graphs
vertices
obstacle
number
n/log
show
maker-breaker
game
played
maker
needs
put
least
marks
consecutively
one
given
winning
directions
breaker
force
draw
using
pairing
strategy
improves
result
kruczek
sundberg
showed
pairing
strategy
exits
simple
argument
shows
least
breaker
allowed
use
pairing
strategy
thus
main
term
bound
optimal
acknowledgment
would
like
thank
parents
always
pillar
strength
supporting
everything
life
patient
despite
pitfalls
acknowledgment
would
fall
short
conveying
gratefulness
guidance
would
also
like
thank
brother
always
one
whose
footsteps
walked
school
iit
rutgers
always
guided
shaped
every
vital
decision
made
thank
always
would
like
thank
radoˇs
radoiˇci´c
initiating
discrete
geometry
mario
szegedy
valuable
guidance
advisor
jeﬀ
kahn
j´ozsef
beck
michel
saks
william
steiger
doron
zeilberger
van
teaching
combinatorics
discrete
geometry
would
also
like
thank
j´anos
pach
patience
guidance
mentor
despite
diﬃculties
presented
student
always
striving
encourage
mathematical
research
new
problems
trying
teach
write
papers
bringing
switzerland
met
husband
would
also
like
thank
friends
rutgers
cuny
epfl
making
stay
places
enjoyable
would
like
thank
linda
asaro
international
student
center
rutgers
helpful
advisor
punctuality
every
request
would
also
like
thank
pat
barr
maureen
clausen
lynn
braun
demetria
carpenter
administration
mathematics
department
always
helpful
lastly
would
like
thank
husband
without
phd
would
possible
meeting
would
possible
without
phd
support
guidance
encouragement
shaped
phd
aspects
describe
thank
contents
list
figures
introduction
combinatorial
geometry
iii
slope
number
1.2.1
embedding
cycles
1.2.2
1.1
introduction
1.2
correct
proof
subcubic
theorem
subcubic
graphs
proof
theorem
1.1.1
1.3
proof
theorem
1.1.3
1.3.1
assumptions
1.3.2
drawing
strategy
1.3.3
solvability
1.4
proof
theorem
1.1.4
1.4.1
deﬁnitions
1.4.2
preliminaries
1.4.3
proof
1.5
four
slopes
concluding
questions
obstacle
number
2.1
introduction
2.2
extremal
methods
proof
theorem
2.1.2
2.3
encoding
graphs
low
obstacle
number
2.4
proof
theorem
2.1.7
2.5
properties
2.6
open
problems
combinatorial
games
tic-tac-toe
introduction
3.1
3.2
proof
theorem
3.1.3
3.3
possible
improvements
remarks
appendices
program
code
bibliography
list
figures
1.1
petersen
graph
k3,3
1.2
heawood
graph
1.3
replacing
1.4
recursively
placing
vertices
1.5
finding
right
position
1.6
adding
triangle
1.7
process
drawing
cycles
1.8
distinguished
edges
cycles
1.9
graph
connectivity
graph
1.10
deﬁnition
variables
1.11
cycle
connectivity
graph
1.12
cycles
spanning
distinguished
edges
1.13
cycle
bfs
tree
1.14
patching
components
m-cut
1.15
tietze
graph
2.1
division
graph
parts
interior
obstacle
2.2
constructing
sequence
convex
obstacles
iii
introduction
ﬁeld
graph
theory
said
ﬁrst
come
light
euler
k¨onigsberg
bridge
problem
1736.
since
seen
much
development
also
boasts
subﬁeld
combinatorics
sees
intense
application
beginning
graph
theory
solely
comprised
treating
graph
abstract
combinatorial
object
could
even
suﬃce
call
set
system
prede-
ﬁned
properties
outlook
suﬃcient
devise
capture
remarkably
elegant
problems
e.g
traveling
salesman
vertex
edge
coloring
extremal
graph
theory
besides
large
number
areas
applied
computer
science
operations
research
game
theory
decision
theory
independent
naturally
intriguing
problems
combinatorial
nature
stud-
ied
graph
theory
around
time
however
new
ﬁeld
graph
theory
arose
said
simplicity
representing
many
things
graphs
natural
question
simplicity
representing
graphs
paper
otherwise
came
thus
started
yet
nascent
ﬁeld
graph
draw-
ing
concern
mostly
representing
graph
plane
particular
simply
represented
idea
many
far
reaching
applications
among
ﬁrst
four
color
theorem
simplicity
drawing
maps
concern
since
many
questions
arisen
important
one
drawing
graphs
plane
without
crossings
words
estimating
crossing
number
graphs
although
initially
idea
edges
restricted
topological
curves
long
natural
restriction
introduced
discretize
problem
add
aspect
naturally
representing
graphs
branch
straight-line
drawings
graphs
started
straight-line
drawings
besides
old
questions
like
crossing
number
etc.
new
purely
geometrical
concerns
arose
example
one
way
simplifying
drawing
graph
could
try
reduce
number
slopes
used
drawing
led
general
notion
introduced
wade
chu
slope
number
graph
minimum
number
slopes
required
draw
slope
number
graphs
least
half
maximum
degree
lead
intuitive
belief
bounded
degree
graphs
might
allow
small
slope
numbers
shown
contrary
counting
argument
even
graphs
maximum
degree
ﬁve
need
bounded
slope
number
graphs
maximum
degree
two
trivially
shown
require
three
slopes
restricts
attention
graphs
maximum
degree
three
four
maximum
degree
four
still
best
knowledge
remains
exciting
open
problem
maximum
degree
three
although
using
previous
results
provide
exact
answer
show
four
slopes
even
four
ﬁxed
slopes
north
east
northeast
northwest
suﬃcient
draw
graphs
maximum
degree
three
since
requires
least
four
slopes
plane
indeed
exact
answer
another
interesting
notion
straight-line
graphs
arises
many
nat-
ural
contexts
representing
visibility
graph
given
set
points
set
polygons
obstacles
plane
visibility
graph
edges
comprise
exactly
mutually
visible
vertex
pairs
visibility
graphs
numerous
applica-
tions
computer
science
vision
graphics
robot
motion
planning
natural
question
arises
considering
simplicity
representation
ﬁnd
smallest
number
obstacles
one
use
plane
represent
graph
deﬁned
obstacle
number
graph
shown
graphs
vertices
require
√log
obstacles
improve
show
graphs
require
log
obstacles
fur-
ther
improved
nicer
obstacles
particular
show
graphs
require
log
segment
obstacles
ﬁnal
part
thesis
deals
positional
games
many
combinatorial
games
tic-tac-toe
hex
shannon
switching
game
thought
played
hypergraph
point
claimed
one
two
players
every
turn
winning
game
characterized
capture
winning
set
player
winning
sets
form
edges
hypergraph
games
called
positional
games
second
player
wins
draw
game
called
maker-breaker
game
players
called
respectively
maker
breaker
may
also
note
breaker
ﬁnd
pairing
vertices
every
winning
set
contains
pair
achieve
draw
called
pairing
strategy
draw
classical
tic-tac-toe
game
generalized
hypergraph
winning
sets
consecutive
points
given
directions
example
five-in-a-row
game
winning
directions
vertical
horizontal
two
diagonals
slope
shown
hales
jewett
four
given
directions
two
dimensional
grid
second
player
achieve
pairing
strategy
draw
general
version
shown
kruczek
sundberg
second
player
pairing
strategy
conjectured
always
pairing
strategy
generalizing
result
hales
jewett
show
conjecture
asymptotically
true
i.e
fact
prove
stronger
result
prime
indeed
stronger
prime
part
combinatorial
geometry
chapter
slope
number
1.1
introduction
straight-line
drawing
graph
plane
obtained
vertices
represented
distinct
points
plane
every
edge
represented
straight-line
segment
connecting
corresponding
pair
vertices
passing
vertex
leads
confusion
notation
terminology
make
distinction
vertex
corresponding
point
edge
corresponding
segment
slope
edge
straight-line
drawing
slope
corresponding
segment
wade
chu
deﬁned
slope
number
graph
smallest
number
property
straight-line
drawing
edges
distinct
slopes
terminology
somewhat
unorthodox
slope
line
mean
angle
modulo
counterclockwise
rotation
takes
x-axis
position
parallel
slope
edge
segment
slope
line
containing
particular
slopes
lines
π/4
−π/4
called
northeast
southwest
northwest
southeast
lines
respectively
directions
often
abbreviated
ﬁrst
letters
etc
four
directions
referred
basic
line
said
one
four
basic
directions
parallel
one
axes
one
lines
obviously
vertex
degree
slope
number
least
⌈d/2⌉
dujmovi´c
asked
slope
number
graph
bounded
maximum
degree
could
arbitrarily
large
pach
p´alv¨olgyi
bar´at
matouˇsek
wood
independently
showed
counting
argument
answer
yes
shown
cubic
3-regular
graphs
could
drawn
ﬁve
slopes
major
result
concluded
subcubic
graphs1
drawn
four
basic
slopes
note
proof
graph
subcubic
proper
subgraph
cubic
graph
i.e
degree
every
vertex
three
cubic
3-regular
slightly
incorrect
give
stronger
version
theorem
shortcomings
incorrect
proof
overcome
statement
theorem
clarify
terminology
used
two
points
say
north
south
analogously
say
northeast
northwest
p1p2
northeast
northwest
line
sequence
real
numbers
linearly
independent
theorem
1.1.1
let
graph
without
components
cycles
whose
every
vertex
degree
three
suppose
least
one
vertex
degree
less
three
denote
...
vertices
degree
two
rationals
straight-line
drawing
following
properties
vertex
mapped
point
x-coordinate
slope
every
edge
π/2
π/4
−π/4
vertex
north
vertex
degree
two
vertex
north
northwest
vertex
degree
one
x-coordinates
vertices
linear
combination
rational
coeﬃcients
therefore
cubic
graphs
require
one
additional
slope
hence
ﬁve
slopes
improve
following
theorem
1.1.2
every
connected
cubic
graph
straight-line
drawing
four
slopes
theorem
gives
drawing
connected
cubic
graphs
four
slopes
one
basic
slope
disconnected
cubic
graphs
require
slopes
show
reduction
cubic
graphs
triangles
lemma
1.3.4
instead
theorem
focus
prove
following
theorem
1.1.3
every
triangle-free
connected
cubic
graph
straight-line
drawing
four
slopes
note
four
slopes
used
four
basic
slopes
towards
shown
max
engelstein
3-connected
cubic
graphs
hamiltonian
cycle
drawn
four
basic
slopes
later
improve
results
following
theorem
1.1.4
every
cubic
graph
straight-line
drawing
four
basic
slopes
ﬁrst
result
cubic
graphs
uses
nice
ﬁxed
set
slopes
instead
unpredictable
set
possibly
containing
slopes
rational
petersen
graph
k3,3
figure
1.1
petersen
graph
k3,3
drawn
four
basic
slopes
multiples
also
since
requires
least
slopes
settles
question
determining
minimum
number
slopes
required
cubic
graphs
also
prove
theorem
1.1.5
call
set
slopes
good
every
cubic
graph
straight-line
drawing
following
statements
equivalent
set
four
slopes
good
aﬃne
image
four
basic
slopes
draw
problem
whether
slope
number
graphs
maximum
degree
four
unbounded
remains
interesting
open
problem
many
related
graph
parameters
thickness
graph
deﬁned
smallest
number
planar
subgraphs
decomposed
one
several
widely
known
graph
parameters
measures
far
planar
geometric
thickness
deﬁned
smallest
number
crossing-free
subgraphs
straight-line
drawing
whose
union
another
similar
notion
follows
directly
deﬁnitions
thickness
graph
large
geometric
thickness
turn
exceed
slope
number
many
interesting
results
parameters
consult
variation
problem
arises
two
vertices
drawing
edge
slope
belongs
certain
set
collinearity
points
allowed
violates
condition
stated
edge
pass
vertices
end
points
instance
drawn
one
slope
smallest
number
slopes
used
represent
graph
way
called
slope
parameter
graph
set
conditions
proves
slope
parameter
subcubic
outerplanar
graphs
shown
slope
parameter
every
cubic
graph
seven
four
basic
slopes
used
graphs
drawn
conditions
called
queen
graphs
characterizes
certain
graphs
queen
graphs
graph
theoretic
properties
speciﬁc
queen
graphs
found
another
variation
planar
graphs
demand
planar
drawing
planar
slope
number
planar
graph
smallest
number
distinct
slopes
property
graph
straight-line
drawing
non-crossing
edges
using
slopes
dujmovi´c
eppstein
suderman
wood
raised
question
whether
exists
function
property
planar
slope
number
every
planar
graph
maximum
degree
bounded
jelinek
shown
answer
yes
outerplanar
graphs
planar
graphs
drawn
vertices
lie
outer
face
eventually
question
answered
proved
bounded
degree
planar
graph
bounded
planar
slope
number
finally
would
mention
slightly
related
problem
didimo
studied
drawings
graphs
edges
cross
right
angle
drawing
called
rac
right
angle
crossing
drawing
showed
every
graph
rac
drawing
every
edge
polygonal
line
three
bends
i.e
consists
four
segments
also
gave
upper
bounds
maximum
number
edges
less
bends
allowed
later
arikushi
showed
graphs
edges
angelini
proved
every
cubic
graph
admits
rac
drawing
one
bend
remained
open
problem
whether
every
cubic
graph
rac
drawing
straight-line
segments
besides
orthogonal
crossings
also
allow
two
edges
cross
45◦
straightforward
corollary
theorem
1.1.4
every
cubic
graph
admits
drawing
straight-line
segments
figure
1.2
heawood
graph
drawn
four
basic
slopes
1.2
correct
proof
subcubic
theorem
would
like
reader
note
modiﬁcation
proof
appears
note
enough
establish
theorem
connected
graphs
diﬀerent
components
drawn
separately
placed
far
none
properties
violated
1.2.1
embedding
cycles
let
straight-line
drawing
cycle
plane
vertex
said
turning
point
slopes
two
edges
meeting
start
two
simple
auxiliary
statements
lemma
1.2.1
let
straight-line
drawing
cycle
slope
every
edge
π/4
−π/4
x-coordinates
vertices
independent
rational
numbers
moreover
vanishing
linear
combination
x-coordinates
vertices
many
nonzero
rational
coeﬃcients
many
turning
points
proof
let
denote
vertices
cyclic
order
vn+1
let
coordinates
vi+1
vi+1
depending
slope
edge
vivi+1
adding
equations
left-hand
sides
add
zero
sum
right-hand
sides
linear
combination
numbers
integer
coeﬃcients
absolute
value
two
thus
done
ﬁrst
statement
lemma
unless
coeﬃcients
zero
obviously
could
happen
impossible
points
would
collinear
contradicting
assumption
proper
straight-line
drawing
edge
allowed
pass
vertex
endpoints
prove
second
statement
suﬃcient
notice
coeﬃcient
vanishes
turning
point
lemma
1.2.1
shows
theorem
1.1.1
hold
cycle
neverthe-
less
according
next
claim
cycles
satisfy
similar
condition
observe
main
diﬀerence
exceptional
vertex
denoted
lemma
1.2.2
let
cycle
vertices
cyclic
order
real
numbers
linearly
independent
ratio-
nals
straight-line
drawing
following
properties
vertex
mapped
point
x-coordinate
slope
every
edge
π/4
−π/4
vertex
north
vertex
vertex
larger
y-coordinate
x-coordinate
linear
combination
rational
coeﬃcients
proof
assume
without
loss
generality
place
point
x-axis
assume
already
determined
positions
satisfying
conditions
xi+1
place
vi+1
unique
point
southeast
whose
x-coordinate
xi+1
xi+1
put
vi+1
point
west
whose
x-coordinate
xi+1
clearly
placement
vi+1
satisﬁes
segment
vivi+1
pass
point
steps
obtain
noncrossing
straight-line
drawing
path
v1v2
satisfying
conditions
still
ﬁnd
right
location
let
rse
denote
rays
half-lines
starting
pointing
west
southeast
let
ray
starting
point-
ing
northeast
follows
construction
points
lie
convex
cone
x-axis
enclosed
rays
rse
place
intersection
point
x-axis
obviously
segment
vmv0
pass
vertex
otherwise
could
ﬁnd
drawing
cycle
vjvj+1
slopes
π/4
−π/4
lemma
1.2.1
would
imply
numbers
xj+1
independent
rationals
contradicting
assumption
also
clear
horizontal
segment
v0v1
pass
vertex
diﬀerent
endpoints
vertices
horizontal
line
determined
v0v1
hence
obtain
proper
straight-line
drawing
satisfying
conditions
note
automatically
follows
lemma
1.2.1.
remains
verify
thing
check
coincide
suppose
second
statement
lemma
1.2.1
vanishing
linear
combination
λ0x
λ1x1
λ2x2
λmxm
rational
coeﬃcients
number
nonzero
coeﬃcients
least
number
turning
points
smaller
three
therefore
linear
combination
replace
still
obtain
nontrivial
rational
combination
numbers
contradicts
assumption
numbers
independent
rationals
1.2.2
subcubic
graphs
proof
theorem
1.1.1
first
settle
theorem
1.1.1
special
case
lemma
1.2.3
let
let
graph
consisting
two
disjoint
cycles
v′0
v′1
v′m
connected
single
edge
v0v′0
sequence
x′1
x′2
x′k
real
numbers
linearly
in-
dependent
rationals
straight-line
drawing
satisfying
following
conditions
vertices
v′j
mapped
points
x-coordinates
x′j
slope
every
edge
π/2
π/4
−π/4
vertex
north
vertex
degree
two
x-coordinates
vertices
linear
combination
rational
coeﬃcients
x′1
x′2
x′k
proof
apply
lemma
1.2.2
cycle
vertices
as-
signed
x-coordinates
analogously
cycle
vertices
v′0
v′1
v′k
assigned
x-coordinates
x′1
x′2
x′k
simplicity
result-
ing
drawings
also
denoted
let
x′0
denote
x-coordinates
v′0
follows
lemma
1.2.2
linear
combination
x′0
linear
combination
x′1
x′2
x′k
rational
coeﬃcients
therefore
x′0
nontrivial
linear
combination
x′1
x′2
x′k
gives
contradicting
assumption
numbers
independent
rationals
thus
conclude
x′0
assume
without
loss
generality
x′0
reﬂect
x-axis
shift
vertical
direction
v′0
ends
northeast
clearly
add
missing
edge
v0v′0
let
denote
resulting
drawing
claim
meets
requirements
conditions
obviously
satisﬁed
check
vertex
lies
interior
edge
follows
lemma
1.2.2
y-coordinates
smaller
equal
y-coordinate
y-coordinates
v′1
v′k
greater
equal
y-coordinate
v′0
also
v′0
therefore
vertex
interior
v0v′0
moreover
edge
resp
contain
vertex
v′0
v′1
v′k
resp
interior
rest
proof
induction
number
vertices
statement
trivial
number
vertices
two
suppose
already
established
theorem
1.1.1
graphs
fewer
vertices
suppose
vertices
cycle
union
two
cycles
connected
one
edge
unfortunately
distinguish
several
cases
spe-
cial
less
interesting
instances
prevent
using
main
argument
considered
last
clearing
obstacles
case
case
vertex
degree
one
assume
without
loss
generality
vertex
vertex
degree
three
consists
simple
path
v1v2
say
place
point
general
assuming
vi+1
already
embedded
xi+1
place
point
west
vi+1
whose
x-coordinate
xi+1
put
point
northeast
vi+1
whose
x-coordinate
resulting
drawing
meets
requirements
theorem
see
suﬃcient
notice
would
northwest
could
apply
lemma
1.2.1
cycle
vjvj+1
conclude
numbers
xj+1
dependent
rationals
contradicts
assumption
assume
next
degree
one
least
one
vertex
degree
three
suppose
without
loss
generality
v1v2
vkw
path
whose
internal
vertices
degree
two
degree
three
let
denote
graph
obtained
removing
vertices
obviously
connected
graph
degree
two
cycle
apply
lemma
1.2.2
playing
role
vertex
preassigned
x-coordinate
obtain
embedding
edges
slopes
π/4
−π/4
vertex
north
northeast
northwest
lemma
1.2.2
linear
combination
xk+1
rationals
coeﬃcients
therefore
place
point
northwest
northeast
whose
x-coordinate
depending
whether
embed
vk−1
order
either
northeast
west
vi+1
according
property
lemma
1.2.1
path
v1v2
lies
entirely
point
lie
north
northwest
cycle
use
induction
hypothesis
ﬁnd
embedding
satisﬁes
conditions
theorem
1.1.1
every
place
far
north
draw
vk−1
order
precisely
way
previous
case
far
enough
none
points
vk−1
northwest
northeast
vertex
remains
check
condition
true
follows
fact
point
whose
y-coordinate
larger
assume
vertex
degree
one
graph
four
vertices
ﬁve
edges
said
θ-graph
case
contains
θ-subgraph
suppose
θ-subgraph
vertices
edges
neither
third
neighbor
identical
graph
easily
drawn
plane
conditions
theorem
satisﬁed
connected
edge
four
points
θ-subgraph
degree
three
vertices
complete
graph
four
vertices
drawing
meets
requirements
suppose
common
neighbor
neighbor
vertices
easily
ﬁnd
proper
drawing
thus
assume
third
neighbor
induction
hypothesis
drawing
satisfying
conditions
theorem
1.1.1.
particular
vertex
north
northwest
provided
degree
one
consider
drawing
subgraph
induced
vertices
satisﬁes
requirements
distinguish
two
subcases
degree
one
take
small
homothetic
copy
i.e.
similar
copy
parallel
position
rotate
clockwise
direction
3π/4
point
drawing
denoted
southeast
translate
position
northwest
close
suﬃcient
distance
satisﬁed
connecting
obtain
drawing
satisfying
conditions
note
important
make
small
place
close
make
sure
none
vertices
north
vertex
whose
degree
two
northwest
vertex
degree
one
degree
two
follow
procedure
except
small
copy
rotated
translate
position
north
connect
vertical
segment
clear
resulting
drawing
meets
requirements
theorem
1.1.1.
thus
done
common
neighbor
suppose
one
third
neighbor
diﬀerent
suppose
without
loss
generality
vertex
degree
two
degree
one
apply
induction
hypothesis
x-coordinate
originally
assigned
assigned
preassigned
x-coordinate
resulting
drawing
easily
reinsert
remaining
vertices
adding
small
square
whose
lowest
vertex
whose
diagonals
parallel
coordinate
axes
highest
vertex
square
represent
two
vertices
represent
left
case
third
neighbor
neighbors
diﬀerent
denote
respectively
create
new
graph
removing
adding
new
vertex
connected
draw
using
induction
hypothesis
reinsert
small
neighborhood
form
vertex
set
small
square
diagonal
see
figure
1.3
choose
square
suﬃciently
small
make
sure
north
vertex
whose
degree
two
northwest
vertex
degree
one
pick
appropriate
scaling
make
sure
satisﬁed
thus
done
θ-subgraph
assume
θ-subgraph
figure
1.3
replacing
case
cycle
passes
vertex
degree
two
since
three-regular
contains
least
one
vertex
degree
two
block
consider
decomposition
2-connected
blocks
edges
contains
vertex
degree
two
consists
single
edge
block
decomposition
treelike
structure
vertex
degree
two
obtained
union
two
graphs
vertex
common
vertex
degree
two
induction
hypothesis
assignment
rationally
independent
coordinates
vertices
degree
less
three
proper
straight-
line
embeddings
drawings
satisfying
conditions
theorem
vertex
preassigned
x-coordinate
applying
vertical
translation
necessary
achieve
drawings
mapped
point
using
induction
hypothesis
obtain
union
two
drawings
vertex
north
northwest
degree
one
property
stronger
need
indeed
degree
two
require
point
north
property
superposition
drawings
satisﬁes
conditions
theorem
two
problems
may
occur
vertex
may
end
point
north
vertex
degree
two
unique
edges
incident
may
partially
overlap
notice
events
avoided
enlarging
drawing
necessary
point
rotating
π/4
clockwise
direction
latter
operation
needed
problem
occurs
completes
induction
step
case
cycle
passing
vertex
degree
two
case
two
adjacent
vertices
degree
two
take
longest
path
contains
degree
two
vertices
without
loss
generality
assume
path
v1v2
denote
degree
three
neighbor
degree
three
neighbor
let
distinguish
two
subcases
depending
whether
two
vertices
case
4/a
first
suppose
connected
cycle
embed
using
induction
prescribed
coordinate
prescribed
x-coordinate
place
vertices
one
one
high
drawing
starting
using
directions
finally
embed
done
cycle
embed
using
lemma
1.2.2
prescribed
x-coordinate
remember
vertices
ﬁrst
place
place
vertices
one
one
using
directions
finally
embed
done
suppose
two
components
none
cycle
embed
using
induction
high
prescribed
coordinate
prescribed
x-coordinate
place
vertices
one
one
high
far
drawn
components
starting
using
directions
finally
embed
done
finally
two
components
one
say
one
containing
cycle
embed
component
using
induction
prescribed
x-coordinate
cycle
lemma
1.2.2
easy
see
embed
vertices
one
one
starting
like
previous
cases
rest
vertices
one
one
using
directions
finally
embed
cycle
containing
using
lemma
1.2.2
upside
one
smallest
y-coordinate
shift
cycle
vertically
edge
vkw
direction
done
note
last
case
even
works
case
4/b
denote
third
neighbor
degree
two
deleting
longest
path
containing
contains
degree
two
vertices
remaining
graph
two
components
one
cycle
thus
end
exactly
last
subcase
case
4/a
thus
done
degree
three
apply
lemma
1.2.2
cycle
uv1
denote
x-coordinate
cycle
use
lemma
1.2.3.
otherwise
embed
g\c
using
induction
prescribed
x-coordinate
place
suﬃciently
high
drawing
case
main
case
cycle
passing
vertex
degree
two
assumption
cycle
therefore
also
ﬁnd
shortest
cycle
whose
vertices
denoted
order
degree
two
degree
three
length
follows
minimality
connected
edge
moreover
even
common
neighbor
implies
vertex
three
neighbors
neighbors
must
consecutive
however
three
consecutive
vertices
together
common
neighbor
would
form
θ-subgraph
see
case
hence
assume
every
vertex
belonging
joined
two
vertices
consider
list
vertices
degree
two
recall
already
settled
case
vertex
degree
one
assume
without
loss
generality
belongs
let
denote
assignment
x-coordinates
vertices
de-
gree
two
given
real
parameter
deﬁne
following
so-called
embedding
procedure
construct
drawing
meets
requirements
theorem
satisﬁes
additional
condition
y-coordinate
ev-
ery
vertex
least
higher
y-coordinates
vertices
let
u′1
neighbor
mark
two
diﬀerent
cases
steps
embedding
procedure
deﬁned
cases
u′1
vertex
degree
three
call
subcase
deﬁne
hand
u′1
vertex
degree
two
case
neighbor
besides
say
u′′1
degree
three
vertex
call
subcase
deﬁne
u′1
main
idea
embedding
procedure
inductively
embed
place
rest
graph
convenient
way
let
denote
set
vertices
precisely
neighbors
according
whether
degree
thus
element
belongs
two
three
step
cycle
construct
recursively
drawing
satisfying
conditions
theorem
1.1.1
assignment
x-coordinates
u′1
subcase
u′′1
u′1
subcase
cycle
assumption
least
two
edges
one
connects
u′1
let
uαu′α
another
edge
u′α
since
maximum
degree
three
u′1
u′α
construct
recursively
drawing
satisfying
conditions
lemma
1.2.2
exceptional
vertex
u′α
note
disconnected
components
cycles
place
vertically
far
apart
still
good
recursive
drawing
suppose
disconnected
components
cycles
component
connected
u′1
based
subcase
cycle
draw
cycle
exactly
preceding
paragraph
components
cycles
note
since
connected
must
least
one
vertex
cycle
connected
fact
least
two
case
degree
three
vertex
call
exceptional
vertex
draw
cycle
using
lemma
1.2.2.
end
shift
components
vertically
place
suﬃciently
far
apart
note
drawing
satisfy
conditions
theorem
1.1.1.
step
element
take
two
rays
starting
ver-
tex
pointing
northwest
north
take
vertical
ray
pointing
north
element
element
set
let
denote
set
rays
choose
x-axis
points
intersection
points
rays
whose
degree
three
deﬁne
unique
neighbor
degree
two
let
point
figure
1.4
recursively
place
rays
belonging
step
recursively
place
rays
belonging
follows
subcase
place
vertical
ray
starting
u′1
subcase
place
u′1
vertical
ray
starting
u′1
u′′1
u′1
u′1
place
west
u′1
line
otherwise
place
northeast
suppose
already
placed
vertex
west
next
determine
place
ui+1
let
ray
starting
ui+1
pointing
northwest
ui+1
let
ray
starting
ui+1
pointing
north
cases
place
ui+1
lies
left-hand
side
put
ui+1
northeast
otherwise
put
ui+1
west
ui+1
ui+1
let
ray
starting
ui+1
pointing
north
already
placed
point
ray
let
ray
ui+1
pointing
northwest
proceed
figure
1.5
finding
right
position
step
suppose
already
placed
remains
ﬁnd
right
position
two
neighbors
let
ray
pointing
north
lies
left-hand
side
put
northeast
otherwise
put
west
whole
procedure
never
placed
vertex
edge
conditions
theorem
1.1.1
satisﬁed
remark
y-coordinates
vertices
least
higher
y-coordinates
vertices
let
tend
inﬁnity
coordinates
vertices
given
embedding
procedure
change
continuously
1.3
proof
theorem
1.1.3
1.3.1
assumptions
subsection
dedicated
showing
assuming
cubic
graph
bridgeless
triangle
free
restrict
generality
would
use
theorem
1.1.1
patch
together
diﬀerent
components
cubic
graph
obtained
removal
edges
would
want
note
could
rotate
components
multiple
π/4
still
graph
four
basic
slopes
claim
1.3.1
cubic
graph
bridge
minimal
two-edge
disconnecting
set
drawn
four
basic
slopes
proof
note
method
extended
minimal
disconnecting
set
edges
one
components
might
cycle
theorem
invoked
components
obtained
removing
bridge
drawn
four
slopes
using
theorem
1.1.1.
north
direction
free
vertex
degree
two
put
together
rotate
second
one
place
degree
two
vertices
move
components
far
enough
none
vertices
edges
overlap
two-edge
disconnecting
set
may
note
edges
must
vertex-
disjoint
graph
would
contain
bridge
procedure
used
keeping
distance
two
vertices
degree
two
components
cid:3
claim
1.3.2
cubic
graph
cut-vertex
two-vertex
disconnecting
set
drawn
four
basic
slopes
proof
graph
cut-vertex
bridge
two-vertex
disconnecting
set
two-edge
disconnecting
set
cases
invoke
claim
1.3.1
draw
graph
four
slopes
cid:3
remark
1.3.3
consequence
discussion
cubic
graph
drawn
four
basic
slopes
must
three
vertex
edge
connected
claim
1.3.4
cubic
graph
triangle
drawn
four
slopes
proof
first
note
using
claims
may
assume
consider
cubic
graphs
triangles
connected
rest
graph
vertex
disjoint
edges
graph
either
two-
vertex
disconnecting
set
drawn
using
vertices
square
later
case
draw
graph
four
slopes
using
claim
1.3.2.
fourth
slope
figure
1.6
adding
triangle
drawing
four
slopes
prove
claim
contradiction
suppose
exist
cubic
graphs
triangles
drawn
four
slopes
preceding
discussion
triangles
graphs
necessarily
connected
graphs
vertex-
disjoint
edges
graphs
consider
one
minimum
number
vertices
say
graph
obtained
contracting
edges
triangle
also
cubic
fewer
vertices
either
triangles
connected
rest
vertex-disjoint
edges
case
invoke
minimality
conclude
drawn
slopes
note
method
drawing
graph
unknown
know
exists
drawing
four
slopes
triangles
could
connected
rest
edges
vertex-disjoint
use
theorem
1.1.1
argument
preceding
paragraph
draw
using
four
slopes
lastly
could
triangle-free
graph
case
use
theorem
1.1.3
draw
hence
always
drawn
four
slopes
call
vertex
formed
contracting
edges
triangle
since
one
slope
used
edges
incident
draw
segment
slope
small
neighborhood
shown
ﬁgure
obtaining
drawing
four
slopes
contradicts
existence
minimal
counterexample
hence
graphs
triangles
drawn
four
slopes
cid:3
remark
1.3.5
note
preceding
lemma
also
holds
stricter
con-
ditions
precise
set
basic
slopes
suﬃcient
draw
triangle-free
cubic
graphs
suﬃcient
draw
cubic
graphs
remark
1.3.6
must
noted
also
gives
algorithm
drawing
cubic
graphs
triangles
namely
contract
triangles
get
graph
drawn
either
claims
1.3.1,1.3.2,1.3.4
theorem
1.1.1
drawing
strategy
triangle-free
bridgeless
graphs
backtrack
placing
series
edges
give
back
contracted
triangles
1.3.2
drawing
strategy
figure
1.7
process
drawing
cycles
claims
would
focus
graphs
bridgeless
triangle-free
since
graph
bridgeless
petersen
theorem
implies
matching
slope
edges
matching
π/2
lie
distinct
vertical
lines
figure
1.7
matching
removed
graph
consists
disjoint
cycles
next
isolate
one
special
edge
cycle
method
drawing
graph
four
slopes
follows
cycle
remove
selected
edge
draw
remaining
path
going
corresponding
vertical
lines
cycle
alternating
slopes
π/4
3π/4
depending
whether
draw
edges
increasing/decreasing
x-coordinate
ensures
cycles
grow
upwards
since
freedom
place
cycles
want
place
vertically
matching
far
apart
non-intersecting
also
special
edge
cycle
adjacent
vertical
lines
edge
would
pass
vertex
graph
either
thing
would
need
ﬁnal
edge
cycle
drawn
slope
figure
1.7
illustrates
next
remark
followed
formal
description
problem
remark
1.3.7
similar
strategy
drawing
matching
vertical
lines
employed
however
cycles
drawn
alternating
π/4
3π/4
slopes
adjacent
edges
cycles
growing
upwards
con-
struction
leads
diﬀerent
algebraic
formulation
problem
giving
tight
bounds
case
cubic
graph
contains
hamiltonian
cycle
let
matching
cycle
represented
cyclic
sequence
element
sequence
represents
elements
around
cycle
assume
claim
1.3.4
edge
deﬁnition
vi+1
indices
understood
mod
although
formally
pair
formed
two
distinct
elements
also
corresponds
actual
edge
cycle
notice
element
either
shared
two
cycles
occurs
twice
single
cycle
figure
1.8
distinguished
matching-edges
figure
represented
dashed
lines
distinguished
cycle-edges
represented
dotted
lines
ure
1.8
want
vi+1
pick
distinguished
cycles
edge
fig-
set
distinguished
cycle-edges
satisfy
certain
properties
notation
distinguished
cycle-edge
adjacent
two
edges
matching
would
called
distinguished
matching-edges
cycle
particular
collection
distinguished
edges
cycles
form
set
distinguished
matching-edges
would
hope
distinguished
matching-edges
corresponding
distinguished
cycle-edge
drawn
adjacent
vertical
lines
cycles
would
naturally
enforce
distinguished
cycle-edge
would
vertex
graph
deﬁnition
1.3.8
two
cycles
connected
share
distinguished
matching-edge
two
cycles
belong
component
reached
one
another
going
connected
cycles
alternate
way
looking
would
two
cycles
adjacent
sets
distinguished
matching-
edges
corresponding
two
cycles
non-empty
intersection
words
deﬁne
graph
cycles
call
cycle-connectivity
graph
notice
graph
cycle
two
neighbors
thus
graph
union
paths
cycles
set
distinguished
matching-edges
associated
component
cycle
belongs
denoted
clearly
belong
component
figure
1.9
graph
connectivity
graph
remark
1.3.9
note
cycle-connectivity
graph
two
cycles
necessarily
connected
share
matching-edge
share
dis-
tinguished
matching-edge
deﬁne
another
graph
two
cycles
connected
share
matching-edge
easy
see
connected
latter
graph
connected
remark
1.3.10
also
note
may
get
multigraph
cycle-
connectivity
graph
event
two
cycles
pick
distinguished
cycle-edges
be-
tween
set
matching-edges
condition
avoids
scenario
also
condition
cycle-connectivity
graph
contain
cycles
paths
equivalently
enumerate
distinguished
matching-edges
associated
cycles
component
linear
order
way
pairs
consecutive
matching-edges
order
exactly
distinguished
cycle-edges
associated
cycles
component
condition
component
one
cycle
assume
lines
matching
ordered
...
condition
ensure
every
distinguished
cycle-edge
takes
two
adjacent
lines
ordering
drawing
lines
would
completely
determined
distance
consecutive
lines
vi+1
form
distinguished
cycle-edge
kth
cycle
call
distance
lines
otherwise
distance
arbitrary
positive
constant
illustrated
figure
1.10.
x1c3
figure
1.10
deﬁnition
variables
draw
cycle
starting
one
distinguished
matching-edges
ﬁrst
drawing
path
obtained
removing
distinguished
cycle-edge
edge
cycle
use
slope
π/4
3π/4
otherwise
notice
vertical
distance
traveled
across
edge
equal
distance
lines
hence
slope
distinguished
cycle-edge
would
look
like
j=1
jxj
number
cycles
linear
equation
non-negative
coeﬃcients
use
following
solvability
theorem
ensure
slopes
always
matched
proved
next
subsection
ai,0
theorem
1.3.11
let
ai,0
j=1
jxj
linear
forms
coeﬃcients
non-negative
deﬁne
directed
graph
let
vertex
set
edge
set
...
...
figure
1.11
paths
cycles
adjacent
distinguished
cycle-edges
drawing
distinguished
matching-edge
share
hence
necessary
cycles
connectivity
graph
assume
every
node
reached
1.1
all-positive
solution
deﬁnition
1.3.12
deﬁne
dist
graph
cycle
variable
distinguished
cycle-edge
would
denote
mean
theorem
1.3.13
conditions
hold
use
theorem
1.3.11
prove
every
connected
graph
implementable
four
directions
condition
ensures
slope
associated
distinguished
proof
cycle-edge
cycle
expressed
seen
condition
suﬃcient
reachability
condition
theorem
1.3.11.
fact
show
every
cycle
linear
expression
cycle
non-zero
constant
term
consider
ﬁxed
component
condition
cycles
except
perhaps
one
associated
linear
expressions
non-zero
constant
terms
therefore
suﬃcient
show
single
cycle
exists
indeed
let
distinguished
matching-edges
belonging
component
linear
order
let
yp+1
distinguished
matching-edges
belong
cycle
since
least
four
cycle
either
contains
yp′
yp+1
case
indeed
geometrically
easy
see
one
variables
component
occur
four
cycle
yp+1
occur
multiplicity
two
latter
case
would
form
separate
component
thus
former
case
variable
cid:3
...
...
figure
1.12
dotted
edges
represent
set
adjacent
distinguished
cycle-edges
edges
cycle
span
adjacent
distinguished
cycle-edges
ﬁgure
vertices
matching-edges
used
cycles
could
best
cycle
since
graph
triangle-free
using
ﬁrst
last
vertical
lines
contiguous
block
one
distinguished
cycle-edge
left
proving
pick
distinguished
cycle-edges
cycles
conditions
satisﬁed
indeed
start
cycle
pick
edge
distinguished
cycle-edge
least
one
adjacent
matching-edge
common
diﬀerent
cycle
none
cycle
single
hamiltonian
cycle
distinguish
edge
conditions
clearly
satisﬁed
otherwise
cycle
contains
pick
one
two
edges
adjacent
look
adjacent
matching-edge
edge
look
another
cycle
adjacent
etc
process
ends
get
back
cycle
including
current
one
already
visited
one
reason
back-track
return
adjacent
matching-edge
starting
edge
case
choose
edge
recall
always
two
choices
would
fatal
get
back
since
condition
would
hold
assume
procedure
gone
distin-
guished
three
matching-edges
adjacent
cycle
procedure
well
procedure
terminates
encounter
cycle
already
encountered
thus
ﬁnal
step
might
create
fourth
distinguished
matching-edge
adjacent
one
cycles
one
single
cycle
compo-
nent
graph
triangle-free
components
would
done
creating
ﬁrst
component
select
cycle
involved
start
procedure
diﬀerence
subsequent
rounds
also
stop
encounter
cycle
visited
one
previous
rounds
easy
see
distinguished
cycle-edges
selected
conditions
hold
1.3.3
solvability
prove
theorem
1.3.11
look
following
special
case
constant
terms
positive
theorem
1.3.14
let
positive
constants
linear
forms
let
bi+li
j=1
jxj
all-positive
solution
1.2
intuition
behind
proof
let
small
proof
ǫ−1αi
partic-
ﬁxed
ular
let
range
solid
cube
small
enough
vector
range
roughly
ǫ−1
2ǫ−1
cube
thus
ǫ−1
1.5
1.5
center
cube
image
set
ǫbiα−1
make
proof
idea
precise
use
following
version
brouwer
well
known
point
theorem
theorem
1.3.15
brouwer
let
continuous
function
point
i.e
use
point
theorem
ﬁrst
deﬁne
ǫg1
ǫgn
α−1
α−1
ǫx′
think
ﬁxed
positive
number
notice
function
independent
suﬃcient
show
small
enough
1.5
1.5
since
satisﬁes
1.2
common
value
1.5ǫ−1
ǫgi
ǫα−1
ǫb−1
used
ǫx′
ǫli
would
like
1.5
ǫb−1
1.3
deﬁne
max
sup
1,2
b−1
10k
use
point
theorem
consider
map
cid:18
1.5
ǫb−1
1.5
ǫb−1
cid:19
cube
image
contained
since
1.5
1.5
1.5
ǫb−1
1.5
1.5
0.1
0.1
therefore
theorem
1.3.15
equivalent
1.3
1.5
1+ǫb−1
cid:3
theorem
1.3.14
linear
forms
non-zero
constant
terms
however
generalize
theorem
1.3.11.
discuss
proof
remark
1.3.16
non-negativity
coeﬃcients
relaxed
theorem
becomes
true
generalization
theorem
1.3.14.
since
general
condition
slightly
technical
stay
simpler
non-negativity
condition
suﬃcient
proof
let
dist
theorem
1.3.14
deﬁne
x′i
small
enough
number
appropriately
later
think
quantity
tending
zero
rewrite
1.2
take
epsilon
tending
zero
ǫg1
ǫg2
ǫgn
ǫgi
ai,0/x′i
otherwise
x′i
jx′j
solve
system
even
system
x′i
x′i
1.5
1.4
indeed
solution
obtained
iteratively
ﬁrst
computing
values
variables
etc
use
point
theorem
brouwer
show
suﬃciently
small
system
ǫgi
1.5
solution
parameterize
ranges
solid
cube
range
domain
obtain
solving
system
1.4
set
small
enough
everywhere
hold
0.9
/x′i
ǫgi
ǫgi
1.1
1.5
easily
seen
possible
since
contained
closed
cube
strictly
positive
orthant
apply
point
theorem
1.5αi
ǫgi
point
theorem
applies
since
range
remains
0.9
1.5
1.1
1.5
cube
equation
1.5
ﬁxed
point
1.5αi
ǫgi
implies
ǫgi
1.5
cid:3
1.4
proof
theorem
1.1.4
start
deﬁnitions
use
throughout
section
1.4.1
deﬁnitions
throughout
section
log
always
denotes
log2
logarithm
base
recall
girth
graph
length
shortest
cycle
deﬁnition
1.4.1
deﬁne
supercycle
connected
graph
every
degree
least
two
two
note
minimal
supercycle
look
like
like
dumbbell
recall
cut
partition
vertices
two
sets
say
edge
cut
ends
diﬀerent
subsets
partition
also
call
edges
cut
cut-edges
size
cut
number
cut-edges
deﬁnition
1.4.2
say
cut
m-cut
cut-edges
form
matching
words
ends
pairwise
diﬀerent
vertices
also
say
m-cut
suitable
deleting
cut-edges
graph
two
components
supercycles
refer
reader
section
1.1
exact
statement
theorem
1.1.1
subcubic
graphs
note
theorem
1.1.1
proves
result
theorem
1.1.4
subcubic
graphs
another
minor
observation
may
assume
graph
connected
since
use
basic
four
slopes
draw
components
disconnected
graph
place
far
apart
plane
two
drawings
intersect
assume
rest
section
graph
cubic
connected
1.4.2
preliminaries
results
subsection
also
interesting
independent
current
prob-
lem
deal
following
also
called
moore
bound
lemma
1.4.3
every
connected
cubic
graph
vertices
contains
cycle
length
2⌈log
figure
1.13
finding
cycle
bfs
tree
using
left
child
already
occurred
proof
start
vertex
conduct
breadth
ﬁrst
search
bfs
vertex
repeats
bfs
tree
note
iterations
rest
subsection
mean
number
levels
bfs
tree
since
cubic
iterations
number
vertices
visited
2k−2
2k−1
since
vertices
vertex
must
repeat
⌈log
iterations
tracing
back
along
two
paths
obtained
vertex
reoccurs
ﬁnd
cycle
length
2⌈log
cid:3
lemma
1.4.4
every
connected
cubic
graph
vertices
girth
contains
supercycle
2⌈log
n+1
proof
contract
vertices
length
cycle
obtaining
multigraph
vertices
almost
3-regular
except
one
vertex
degree
start
bfs
easy
see
number
vertices
visited
iterations
2k−2
2k−1
since
vertices
vertex
must
repeat
⌈log
n−g+1
⌈log
n+1
⌉+1
iterations
tracing
back
along
two
paths
obtained
vertex
vertices
reoccurs
ﬁnd
cycle
two
vertices
connected
two
edges
length
2⌈log
n+1
implies
supercycle
2⌈log
n+1
vertices
cid:3
lemma
1.4.5
every
connected
cubic
graph
vertices
super-
cycle
vertices
contains
suitable
m-cut
size
proof
supercycle
vertices
least
two
vertices
degree
size
cut
thus
cut
need
m-cut
edges
may
common
neighbor
repair
add
iteratively
common
neighbors
edges
cut
edges
common
neighbor
g−a
note
iteration
vertex
adjacent
exactly
two
cut-edges
chosen
size
increases
size
cut
decreases
since
two
cut-edges
get
added
along
since
graph
cubic
third
edge
become
part
cut-edges
vertex
adjacent
three
cut-edges
chosen
size
increases
number
cut-edges
decreases
see
maximum
number
vertices
could
added
process
three
conditions
check
would
occur
ﬁrst
condition
process
returns
non-empty
second
component
second
condition
second
component
collection
disjoint
cycles
note
enough
check
every
stage
number
cut-edges
strictly
smaller
number
vertices
since
iterations
number
cut-edges
decreases
number
greater
equal
decrease
size
g−a
enough
check
iterations
number
cut-edges
strictly
smaller
number
vertices
condition
note
inequality
holds
non-emptiness
condition
also
hold
finally
need
check
components
connected
connected
g−a
need
pick
component
g−a
vertices
number
cut-edges
adjacent
since
number
cut-edges
strictly
smaller
number
vertices
must
one
component
say
add
every
component
note
size
cut
decreases
step
since
connected
vertices
number
cut-edges
cycle
cid:3
corollary
1.4.6
every
connected
cubic
graph
vertices
contains
suit-
able
m-cut
proof
using
ﬁrst
two
lemmas
supercycle
2⌈log
n+1
vertices
2⌈log
using
last
lemma
m-cut
partitions
supercycle
need
check
indeed
big
enough
note
log
log
log
log
log
log
log
last
inequality
follows
fact
log
increasing
loge
2.88.
bound
right
hand
side
log
need
log
log
holds
44.
statement
checked
code
found
appendix
outputs
given
value
2s−2
maximum
maximum
value
based
output
see
value
smaller
cid:3
1.4.3
proof
lemma
1.4.7
let
connected
cubic
graph
suitable
m-cut
drawn
four
basic
slopes
proof
proof
follows
rather
straightforwardly
theorem
1.1.1.
note
two
components
subcubic
graphs
choose
x-coordinates
vertices
m-cut
since
vertices
degree
two
components
picked
coordinates
one
component
neighbors
vertices
component
pick
x-coordinates
−x1
−x2
−xm
rotate
second
component
place
high
component
drawings
components
intersect
align
edges
m-cut
vertical
slope
π/2
also
since
theorem
1.1.1
guarantees
degree
two
vertices
vertices
vertical
line
hence
drawing
obtain
valid
representation
basic
slopes
cid:3
combining
lemma
1.4.6
lemma
1.4.7
see
theorem
1.1.4
true
cubic
graphs
18.
smaller
graphs
reduce
number
rotated
translated
−xm−1
−xm
−x2
−x3
−x1
xm−1
figure
1.14
x-coordinates
degree
vertices
suitably
chosen
one
component
rotated
translated
make
-cut
vertical
graphs
check
help
lemma
1.3.2
remark
1.3.3
consequence
graph
drawn
four
basic
slopes
must
three
vertex
edge
connected
also
employ
following
theorem
max
engelstein
lemma
1.4.8
every
3-connected
cubic
graph
hamiltonian
cycle
drawn
plane
four
basic
slopes
note
combining
lemma
1.3.2
even
get
corollary
1.4.9
every
cubic
graph
hamiltonian
cycle
drawn
plane
four
basic
slopes
graphs
need
checked
satisfy
following
conditions
number
vertices
graph
3-connected
graph
hamiltonian
cycle
remark
1.4.10
bring
attention
reader
remark
1.3.5
add
may
also
add
list
graph
contain
triangle
however
use
girth
lemmas
easy
way
analyze
graphs
excluded
three
assertions
note
number
vertices
follows
lemma
1.4.3
girth
luckily
several
lists
available
cubic
graphs
given
number
vertices
given
girth
figure
1.15
tietze
graph
drawn
four
basic
slopes
two
graphs
vertices
see
containing
hamiltonian
cycle
lemma
1.4.4
gives
supercycle
vertices
using
lemma
1.4.5
done
nine
graphs
see
containing
hamiltonian
cycle
vertices
using
lemma
1.4.5
done
lemma
1.4.4
gives
supercycle
lemma
1.4.4
gives
supercycle
finally
graphs
vertices
either
3-connected
contain
hamiltonian
cycle
except
petersen
graph
tietze
graph
see
drawing
two
graphs
see
respective
figures
vertices
using
lemma
1.4.5
done
1.5
four
slopes
concluding
questions
establishing
theorem
1.1.4
question
arises
whether
could
used
four
slopes
call
set
slopes
good
every
cubic
graph
straight-
line
drawing
section
prove
theorem
1.1.5
claims
following
statements
equivalent
set
four
slopes
good
aﬃne
image
four
basic
slopes
draw
proof
image
four
basic
slopes
good
since
aﬃne
transformation
keeps
incidences
set
aﬃne
hand
set
good
straight-
line
drawing
since
allow
vertex
interior
edge
four
vertices
must
general
position
implies
two
incident
edges
slope
therefore
two
slopes
without
loss
generality
two
edges
slope
four
edges
must
form
cycle
length
four
means
vertices
vertices
parallelogram
case
aﬃne
transformation
takes
parallelogram
square
transformation
also
takes
four
basic
slopes
cid:3
note
similar
reasoning
shows
matter
many
slopes
take
set
need
good
even
draw
unless
satisfy
correlation
proofs
use
four
basic
slopes
places
rotation
invariance
start
induction
thus
make
following
conjecture
conjecture
1.5.1
necessarily
connected
ﬁnite
graph
set
slopes
good
graph
straight-line
drawing
ﬁnite
graph
would
disjoint
union
maybe
petersen
graph
small
graphs
could
even
rule
possibility
maybe
another
connected
graph
alone
suﬃcient
note
deﬁne
partial
order
graphs
way
let
set
slopes
used
draw
also
used
draw
way
course
else
say
poset
possible
use
new
method
prove
slope
parameter
cubic
graphs
also
four
main
question
remains
prove
disprove
whether
slope
number
graphs
maximum
degree
four
unbounded
chapter
obstacle
number
2.1
introduction
consider
set
points
plane
set
closed
polygonal
obstacles
whose
vertices
together
points
general
position
three
line
corresponding
visibility
graph
vertex
set
two
points
connected
edge
segment
meet
obstacles
visibility
graphs
extensively
studied
used
computational
geometry
robot
motion
planning
computer
vision
sensor
networks
etc
see
recently
alpert
koch
laison
introduced
interesting
new
parame-
ter
graphs
closely
related
visibility
graphs
given
graph
say
set
points
set
polygonal
obstacles
constitute
obstacle
representation
corresponding
visibility
graph
isomorphic
representation
obstacles
also
called
h-obstacle
representation
smallest
number
obstacles
obstacle
representation
called
ob-
stacle
number
denoted
obs
allowed
use
convex
obstacles
corresponding
parameter
obsc
called
convex
obstacle
number
course
obs
obsc
every
two
parameters
far
apart
special
instance
obstacle
problem
received
lot
attention
due
connection
szemer´edi-trotter
theorem
incidences
points
lines
classical
problems
incidence
geometry
exciting
open
problem
decide
whether
obstacle
number
empty
graph
vertices
obstacles
must
points
best
known
upper
bound
n2o
√log
see
pach
dumitrescu
matouˇsek
aloupis
alpert
constructed
bipartite
graph
split
graph
graph
whose
vertex
set
union
complete
graph
independent
set
ﬁxed
number
vertices
obstacle
number
least
two
another
graph
whose
vertex
set
union
two
complete
subgraphs
shown
obstacle
number
least
two
consequently
graph
obstacle
number
one
contain
subgraph
isomorphic
graphs
using
extremal
graph
theoretic
tools
developed
erd˝os
kleitman
rothschild
frankl
r¨odl
pr¨omel
steger
bollob´as
thomason
others
following
proved
theorem
2.1.1
ﬁxed
positive
integer
number
graphs
labeled
vertices
obstacle
number
since
number
bipartite
graphs
labeled
vertices
2n2/4
also
implies
exist
bipartite
graphs
arbitrarily
large
obstacle
number
every
suﬃciently
large
alpert
constructed
graph
vertices
obstacle
number
least
cid:0
√log
cid:1
using
existence
graphs
obstacle
number
least
result
erd˝os
hajnal
show
existence
graphs
much
larger
obstacle
numbers
theorem
2.1.2
every
exists
integer
graphs
vertices
obstacle
numbers
satisfy
obs
cid:0
n1−ε
cid:1
section
2.3
improve
last
two
corollaries
using
estimates
number
diﬀerent
order
types
points
euclidean
plane
discovered
goodman
pollack
see
also
alon
establish
following
results
theorem
2.1.3
ﬁxed
positive
integer
number
graphs
la-
beled
vertices
obstacle
number
log2
theorem
2.1.4
every
exist
graphs
vertices
obstacle
numbers
obs
cid:0
n/log2
cid:1
note
last
statement
directly
follows
theorem
2.1.3.
indeed
since
total
number
labeled
graphs
vertices
long
log2
smaller
quantity
graph
obstacle
number
larger
prove
slightly
better
bound
convex
obstacle
numbers
theorem
2.1.5
every
exist
graphs
vertices
convex
ob-
stacle
numbers
obsc
n/log
allow
segment
obstacles
get
even
better
bound
following
alpert
al.
deﬁne
segment
obstacle
number
obss
graph
minimal
number
obstacles
obstacle
representation
obstacle
straight-line
segment
theorem
2.1.6
every
exist
graphs
vertices
segment
obstacle
numbers
improve
bound
general
obstacle
number
follows
obss
cid:0
n2/log
cid:1
theorem
2.1.7
every
exists
graph
vertices
obstacle
number
obs
n/log
comes
close
answering
question
whether
exist
graphs
vertices
obstacle
number
least
however
upper
bound
maximum
obstacle
number
n-vertex
graphs
better
given
placement
embedding
vertices
general
position
plane
drawing
consists
image
embedding
set
open
segments
connecting
pairs
points
correspond
edges
danger
confusion
make
notational
diﬀerence
vertices
corresponding
points
pairs
corresponding
open
segments
complement
set
points
correspond
vertex
belong
least
one
edge
falls
connected
components
components
called
faces
drawing
notice
obstacle
representation
particular
placement
vertex
set
obstacle
must
lie
entirely
one
face
drawing
non-edge
must
blocked
least
one
obstacles
2.2
extremal
methods
proof
theorem
2.1.2
order
prove
theorem
2.1.2
need
following
result
shows
avoids
least
one
induced
subgraph
vertices
log
erd˝os-szekeres
bound
hom
substantially
improved
note
hom
graph
deﬁned
size
largest
clique
independent
set
graph
also
graph
k-universal
contains
every
graph
vertices
induced
subgraph
theorem
2.2.1
erd˝os
hajnal
ﬁxed
positive
integer
following
property
given
graph
vertices
integer
2c√logn/t
either
t-universal
hom
suitable
constant
prove
theorem
2.1.2.
proof
sake
clarity
presentation
systematically
omit
ﬂoor
ceiling
functions
wherever
essential
let
graph
vertices
admit
1-obstacle
representation
fix
choose
integer
satisﬁes
inequality
2c√ε
log
log
2.1
constants
appear
previous
theorem
set
n1−ε
according
theorem
erd˝os
exists
graph
vertices
hom
log
2c√log
n/m
figure
2.1
division
graph
parts
n/m
points
light
grey
obstacle
common
exterior
obstacle
darker
one
internal
obstacle
consider
obstacle
representation
smallest
number
obsta-
cles
suppose
without
loss
generality
coordinate
system
points
diﬀerent
x-coordinates
vertical
lines
partition
plane
strips
containing
n/m
points
let
denote
subgraph
induced
vertices
lying
i-th
strip
obviously
hom
hom
2c√log
n/m
every
hence
applying
theorem
2.2.1
separately
conclude
must
t-universal
particular
contains
induced
subgraph
isomorphic
obs
every
means
requires
least
two
obstacles
explained
end
introduction
obstacle
must
con-
tained
interior
exterior
face
graph
therefore
h-obstacle
representation
must
least
one
internal
face
contains
obstacle
must
least
one
additional
obstacle
may
possibly
contained
interior
face
every
rate
n1−ε
required
cid:3
2.3
encoding
graphs
low
obstacle
number
aim
section
prove
theorems
2.1.3–2.1.6
idea
ﬁnd
short
encoding
obstacle
representations
graphs
use
give
upper
bound
number
graphs
low
obstacle
number
need
review
simple
facts
combinatorial
geometry
two
sets
points
general
position
plane
said
order
type
one
one
correspondence
property
orientation
triple
orientation
corresponding
triple
counting
number
diﬀerent
order
types
classical
task
see
e.g
theorem
2.3.1
goodman
pollack
number
diﬀerent
order
types
points
general
position
plane
log
observe
upper
bound
holds
number
diﬀerent
order
types
labeled
points
number
diﬀerent
permutations
points
log
graph
drawing
complexity
face
number
line
segment
sides
bordering
following
result
proved
arkin
halperin
kedem
mitchell
naor
see
matouˇsek
valtr
sharpness
theorem
2.3.2
arkin
complexity
single
face
drawing
graph
vertices
log
note
bound
depend
number
edges
graph
ready
prove
theorem
2.1.3.
proof
graph
vertices
admits
h-obstacle
representation
representation
consider
visibility
graph
vertices
representation
explained
end
introduction
obstacle
belongs
single
face
drawing
view
theorem
2.3.2
complexity
every
face
log
replacing
obstacle
slightly
shrunken
copy
face
containing
achieve
every
obstacle
polygonal
region
log
sides
notice
order
type
sequence
starting
vertices
followed
vertices
obstacles
listed
one
one
cyclic
order
properly
separated
one
another
completely
determines
sequence
length
c1hn
log
according
theorem
2.3.1
following
comment
number
diﬀerent
order
types
many
points
log
2chn
log2
suitable
constant
generous
upper
bound
sequences
correspond
visibility
graph
cid:3
proof
average
number
sides
obstacle
small
obtain
theorem
2.3.3
number
graphs
admitting
obstacle
representation
obstacles
total
sides
log
n+hs
log
particular
segment
obstacles
theorem
2.3.3
immediately
implies
theorem
2.1.6.
indeed
long
bound
theorem
2.3.3
smaller
total
number
graphs
labeled
vertices
argue
graph
segment
obstacle
number
larger
show
prove
theorem
2.1.5
easier
way
encode
drawing
graph
convex
obstacles
proof
enough
bound
number
graphs
admit
obstacle
representation
convex
obstacles
let
graph
together
representation
let
set
points
representing
vertices
let
convex
obstacles
obstacle
rotate
oriented
tangent
line
along
boundary
clockwise
direction
assume
without
loss
generality
never
passes
two
points
let
record
sequence
points
met
met
right
side
add
symbol
sequence
otherwise
add
figure
2.2
returns
initial
position
stop
resulting
sequence
consists
characters
sequence
easy
reconstruct
pairs
vertices
visible
presence
single
obstacle
hence
knowing
sequences
every
obstacle
completely
determines
visibility
graph
number
distinct
sequences
assigned
single
obstacle
number
graphs
convex
obstacle
number
exceed
h/h
2hn
long
number
smaller
graph
convex
obstacle
number
larger
cid:3
2.4
proof
theorem
2.1.7
prove
theorem
2.1.7
claims
every
exists
graph
vertices
obstacle
number
obs
n/log
proof
proof
counting
argument
theorem
2.1.3
know
number
graphs
labeled
vertices
obstacle
number
one
count
graphs
obstacle
number
less
n/2k
suppose
representation
less
n/2k
obstacles
fix
one
representation
possibilities
order
vertices
left
right
suppose
two
divide
vertices
n/k
groups
size
left
right
denote
respective
induced
graphs
claim
2.4.1
least
half
require
one
obstacle
empty
2+1−
2+1−2−
2+1−2−3+
2+1−2−3+1+
2+1−2−3+1+3−
2+1−2−3+1+3−
figure
2.2
parts
show
construction
sequence
shows
visibilities
arrow
tangent
line
indicates
direction
point
tangency
assign
label
vertex
additional
arrow
indicates
tangent
line
rotated
clockwise
around
obstacle
proof
contradiction
suppose
least
half
require
least
two
obstacles
one
obstacles
must
interior
face
respective
thus
obstacles
pair-wise
separated
edges
must
diﬀerent
together
would
least
n/2k
obstacles
contradicts
choice
cid:3
subset
require
one
obstacle
less
2n/k
possibilities
since
number
graphs
vertices
whose
obstacle
number
one
probability
representation
therefore
probability
random
graph
one
obstacle
obstacle
number
n/2k
2n/k
n/2k
log
log
number
tends
zero
therefore
graphs
need
cid:3
least
n/log
obstacles
2.5
properties
section
describe
properties
obstacle
numbers
start
another
question
theorem
2.5.1
every
exists
graph
obstacle
number
exactly
proof
pick
graph
obstacle
number
existence
graph
follows
e.g.
corollary
2.1.1
let
denote
number
vertices
consider
complete
graph
obstacle
number
zero
obtained
successively
deleting
edges
observe
delete
edge
graph
obstacle
number
increase
one
follows
fact
blocking
deleted
edge
additional
small
obstacle
intersect
edge
obtain
valid
obstacle
representation
new
graph
course
obstacle
number
graph
also
decrease
removal
edge
since
beginning
process
obstacle
number
zero
end
obstacle
number
whenever
increases
increase
one
conclude
stage
obtain
graph
obstacle
number
precisely
cid:3
argument
applies
convex
obstacle
number
segment
obstacle
number
many
similar
parameters
let
ﬁxed
graph
according
classical
conjecture
erd˝os
hajnal
graph
vertices
induced
subgraph
isomorphic
contains
independent
set
complete
subgraph
size
least
positive
constant
follows
hereditary
graph
property
exists
constant
every
graph
vertices
property
satisﬁes
hom
bounded
obstacle
number
show
last
statement
holds
property
graph
h+1
theorem
2.5.2
ﬁxed
integer
every
graph
vertices
obsc
satisﬁes
hom
proof
proceed
induction
alpert
showed
graphs
convex
obstacle
number
one
so-called
circular
interval
graphs
intersection
graphs
collection
arcs
along
circle
known
graphs
whose
maximum
complete
subgraph
size
independent
set
size
least
see
setting
pn/2
follows
hom
size
largest
independent
set
least
let
assume
statement
already
veriﬁed
graphs
convex
obstacle
number
smaller
let
graph
requires
convex
obstacles
consider
one
representations
∩igi
denotes
visibility
graph
set
points
removal
i-th
obstacle
h+1
statement
holds
set
also
independent
set
case
property
circular
arc
graphs
must
complete
subgraph
size
least
i=2gi
induced
vertices
graph
requires
obstacles
thus
apply
induction
hypothesis
obtain
complete
subgraph
independent
set
size
least
cid:3
h+1
consider
subgraph
2√n
h+1
h+1
easy
see
every
graph
vertices
convex
obstacle
number
following
stronger
property
implies
satisfy
erd˝os-hajnal
conjecture
exists
constant
contains
complete
subgraph
size
least
two
sets
size
least
edges
belongs
finally
make
comment
higher
dimensional
representations
proposition
2.5.3
dimensions
higher
every
graph
repre-
sented
one
convex
obstacle
proof
let
graph
vertices
consider
moment
curve
curve
convex
hull
pick
points
points
cyclic
polytope
vertex
set
segment
connecting
pair
vertices
edge
lying
boundary
denote
midpoint
edge
vivj
vij
let
convex
hull
set
midpoint
vij
connected
edge
obviously
points
obstacle
small
perturbation
wish
attain
general
position
show
admits
representation
single
convex
obstacle
cid:3
2.6
open
problems
problems
considered
last
sections
ascertain
obstacle
number
graphs
restrict
kind
obstacles
use
namely
general
polygons
convex
polygons
segments
two
ways
consider
problem
would
ﬁrstly
consider
restrictions
placement
obstacles
secondly
consider
restrictions
kind
graphs
consider
ﬁrst
question
interesting
problem
raised
determine
graphs
require
one
obstacle
outer
face
second
problem
realize
theorem
2.1.1
problem
interesting
consider
sparse
graphs
shown
outerplanar
graphs
drawn
exactly
one
obstacle
outer
face
necessarily
convex
hence
raised
question
whether
outerplanar
graphs
drawn
ﬁnite
number
convex
obstacles
shown
outerplanar
graphs
drawn
ﬁve
convex
obstacles
since
every
tree
outerplanar
graph
also
settles
question
trees
interesting
open
problem
planar
graphs
drawn
ﬁnite
number
convex
obstacles
graph
edges
drawn
segment
obstacles
placing
segment
close
every
vertex
two
adjacent
edges
drawing
hence
sublinear
bound
obstacle
convex
obstacle
number
planar
graphs
would
also
interesting
three
dimensions
easy
see
every
graph
represented
one
obstacle
interesting
however
ﬁnd
bound
restrict
convex
obstacles
finally
upper
bound
obstacle
numbers
wide
open
nothing
better
known
2n2/3
achieved
since
graph
edges
needs
/2−
obstacles
obstacles
observation
hence
even
subquadratic
bound
would
interesting
part
combinatorial
games
chapter
tic-tac-toe
3.1
introduction
central
topic
combinatorial
game
theory
study
positional
games
interested
reader
ﬁnd
state
art
methods
beck
tic-tac-toe
book
general
positional
games
played
two
players
board
points
alternatingly
occupy
marks
whoever
ﬁrst
ﬁlls
winning
set
completely
her/his
marks
wins
game
thus
positional
game
played
hypergraph
chapter
consider
semi-
inﬁnite
games
winning
sets
ﬁnite
countably
many
steps
none
occupied
winning
set
say
game
ended
draw
easy
see
suppose
next
move
players
depends
actual
position
board
deterministic.1
say
player
winning
strategy
matter
player
plays
she/he
always
wins
also
say
player
drawing
strategy
matter
player
plays
she/he
always
achieve
draw
win
folklore
strategy
stealing
argument
shows
second
player
puts
ﬁrst
mark
ﬁrst
player
puts
ﬁrst
mark
ladies
ﬁrst
winning
strategy
best
hope
draw
given
semi-inﬁnite
game
either
ﬁrst
player
winning
strategy
second
player
drawing
strategy
say
second
player
achieve
pairing
strategy
draw
matching
among
points
board
every
winning
set
contains
least
one
pair
easy
see
second
player
force
draw
putting
mark
always
point
matched
point
occupied
ﬁrst
player
previous
step
anywhere
point
unmatched
note
relaxation
game
ﬁrst
player
allowing
win
occupies
winning
set
necessarily
ﬁrst
pairing
strategy
still
lets
second
player
force
draw
drawing
strategies
called
strong
draws
since
games
ﬁrst
player
trying
complete
winning
set
second
trying
prevent
ﬁrst
player
called
1this
case
inﬁnite
games
even
semi-inﬁnite
games
happen
ﬁrst
player
always
win
game
game
could
moves
interesting
examples
refer
reader
antique
papers
maker
second
breaker
game
called
maker-breaker
game
chapter
generalization
five-in-a-row
game2
serious
version
classic
tic-tac-toe
game
generalized
game
played
d-dimensional
integer
grid
winning
sets
consist
consecutive
gridpoints
previously
given
directions
example
five-
in-a-row
game
winning
directions
vertical
horizontal
two
diagonals
slope
note
assume
greatest
common
divisor
coordinates
direction
direction
arbitrarily
long
e.g
24601
question
values
guarantee
second
player
drawing
strategy
shown
hales
jewett
four
given
directions
two
dimensional
grid
second
player
achieve
pairing
strategy
draw
general
version
somewhat
weaker
result
shown
kruczek
sundberg
showed
second
player
pairing
strategy
conjectured
always
pairing
strategy
generalizing
result
hales
jewett.3
conjecture
3.1.1
kruczek
sundberg
maker-breaker
game
played
maker
needs
put
least
marks
consecutively
one
given
winning
directions
breaker
force
draw
using
pairing
strategy
main
result
asymptotically
solves
conjecture
theorem
3.1.2
maker-breaker
game
played
maker
needs
put
least
marks
consecutively
one
given
winning
directions
breaker
force
draw
using
pairing
strategy
fact
prove
following
theorem
clearly
stronger
classical
result
showing
prime
theorem
3.1.3
m−1
2n+1
prime
maker-breaker
game
played
maker
needs
put
least
marks
consecutively
one
given
winning
directions
breaker
force
draw
using
pairing
strategy
proof
theorem
reduction
game
played
using
following
recent
number
theoretic
result
preissmann
mischler
later
result
independently
rediscovered
kohen
sadofschi
karasev
petrov
gave
short
proof
using
combinatorial
nullstellansatz
latter
paper
also
gives
even
shorter
topological
proof
generalizations
lemma
3.1.4
given
prime
select
numbers
diﬀerent
modulo
+di
mod
2aka
go-muku
am˝oba
3it
hard
show
strategy
might
exist
show
section
prove
theorem
next
section
end
chapter
additional
remarks
3.2
proof
theorem
3.1.3
consider
winning
directions
primitive
vectors4
~v1
...
~vn
using
standard
compactness
argument
enough
show
pairing
strategy
board
stands
interested
readers
compactness
argument
discussed
detail
end
section
first
reduce
problem
one
dimension
take
vector
...
transform
grid
point
rj+1
transformation
injective
winning
direction
transformed
number
|~r
~vi|.5
diﬀerences
problem
reduces
avoiding
arithmetic
progressions
length
diﬀerences
reduction
follows
pairing
strategy
game
also
one
original
let
prime
shown
always
ﬁnd
pick
vector
uniformly
random
primitive
vector
divisible
probability
1/p
since
winning
direction
primitive
vector
using
union
bound
probability
least
one
~u·
~vi
divisible
n/p
1/2
~u′
u′1
u′2
u′d
none
~u′
~vi
divisible
take
u′j
j−1
dot
product
injective
none
~vi
divisible
since
u′j
mod
apply
lemma
3.1.4
...
get
distinct
numbers
...
mod
pairing
strategy
every
mod
paired
mod
paired
see
good
pairing
strategy
consider
arithmetic
progression
...
numbers
diﬀerence
say
since
coprimes
one
numbers
...
am−1
say
must
mod
hence
aj+1
must
paired
pairing
strategy
showing
occupied
maker
completeness
sketch
compactness
argument
goes
show
suﬃcient
show
pairing
strategy
exists
every
ﬁnite
board
use
following
lemma.6
lemma
3.2.1
k¨onig
inﬁnity
lemma
let
inﬁnite
sequence
disjoint
non-empty
ﬁnite
sets
let
graph
union
assume
vector
primitive
gcd
5it
even
possible
numbers
zero
take
care
later
6we
use
version
stated
every
vertex
set
neighbor
vn−1
contains
inﬁnite
path
v0v1
...
given
pairing
strategy
consider
smaller
board
think
pairing
strategy
essentially
partition
pairs
unpaired
elements.7
construct
good
pairing
strategy
smaller
board
taking
restriction
set
pairs
leave
elements
paired
outside
unpaired
elements
call
restriction
pairing
strategy
new
board
long
change
length
winning
sets
prescribed
directions
winning
set
board
also
winning
set
board
hence
must
pair
restriction
hence
breaker
block
winning
pairs
restriction
pairing
strategy
valid
strategy
breaker
smaller
board
prove
following
theorem
theorem
3.2.2
given
ﬁxed
set
|s|
winning
directions
positive
integer
breaker
pairing
strategy
boards
length
winning
sets
equal
breaker
also
pairing
strategy
board
apply
k¨onig
inﬁnity
lemma
prove
theorem
let
set
pairing
strategies
board
winning
sets
deﬁned
theorem
say
strategy
vn−1
strategy
edge
former
restriction
latter
easy
see
every
vertex
edge
restriction
vn−1
hence
lemma
must
inﬁnite
path
v0v1
...
union
pairing
strategies
gives
valid
pairing
strategy
inﬁnite
game
3.3
possible
improvements
remarks
said
second
player
pairing
strategy
draw
seen
follows
one
hand
pairing
strategy
consecutive
points
winning
direction
must
least
two
points
paired
direction
hand
must
winning
direction
1/n
points
matched
another
direction
pick
set
size
uniformly
randomly
direction
expected
number
points
matched
direction
thus
set
size
contains
one
point
matching
point
avoided
extending
set
one
way
thereby
giving
winning
set
matched
pair
deep
case
analysis
shows
ﬁrst
player
winning
strategy
even
strong
game
second
player
also
wins
occupies
winning
set
moreover
second
player
pairing
strategy
thus
case
conjecture
7note
pairing
strategy
guarantee
every
element
paired
states
every
winning
set
pair
hence
might
many
unpaired
elements
pairing
strategy
tight
however
higher
values
seems
breaker
always
better
playing
pairing
strategy
expect
strategy
best
achieve
draw
quite
tight
bounds
proved
maker-breaker
games
potential
based
arguments
latest
generalization
tic-tac-toe
games
see
despite
combinatorial
point
view
still
remains
interesting
question
determine
best
pairing
strategy
unfortunately
proof
give
prime
still
one
bigger
conjecture
one
could
hope
maybe
could
achieve
better
bound
using
stronger
result
lemma
3.1.4
see
example
conjecture
roland
bacher
would
like
thank
directing
however
already
method
work
consider
three
directions
optimally
would
hope
map
three
numbers
coprime
ﬁnd
diﬀerent
modulo
mod
impossible
since
even
fulﬁll
condition
diﬀerences
coprimes
even
forget
condition
would
still
impossible
ﬁnd
triple
satisfying
consider
pairing
strategy
pair
grid
point
depends
argument
shows
pairing
strategy
exist
three
vectors
however
hard
ﬁnd
suitable
periodic
pairing
strategy
three
vectors
would
like
end
equivalent
formulation
conjecture
conjecture
3.3.1
kruczek
sundberg
reformulated
suppose
given
primitive
vectors
~vi
always
possible
ﬁnd
~xj
partition
multiple
~vi
~xj
~vi
~yj
~xj
~xj
~yj
appendices
appendix
program
code
following
code
maple
accessing
log
ceil
functions
mtm
fmax
procedure
computes
girth
graph
vertices
largest
supercyle
denotes
maximum
possible
girth
max
values
maximum
size
supercycle
girth
occurs
respectively
procedure
returns
2s-2
value
less
apply
lemma
2.6
2.8
draw
graphs
vertices
fmax
proc
local
max
exp
initializations
max
2*ceil
evalf
log2
1/3
*n+1
return
2*max-2
main
search
cycle
exp
2*ceil
evalf
log2
n+1
+i-1
max
exp
max
exp
end
return
2*max-2
end
proc
seq
fmax
6,10,4,3
8,12,4,4
10,14,6,5
12,16,6,6
14,16,6,6
16,16,6,4
18,16,6,4
20,18,6,5
22,20,8,8
24,20,8,6
26,20,8,6
28,22,8,7
30,22,8,7
32,24,8,8
34,24,8,8
36,24,8,8
38,24,8,8
40,24,8,8
42,24,8,8
bibliography
http
//www.mathe2.uni-bayreuth.de/markus/reggraphs.html
http
//en.wikipedia.org/wiki/table
simple
cubic
graphs
graph
theoretic
concepts
computer
science
36th
international
work-
shop
2010
zar´os
crete
greece
june
28-30
2010
revised
papers
vol-
ume
6410
lecture
notes
computer
science
2010
ajtai
csirmaz
nagy
generalization
game
go-moku
studia
mathematica
14:209–226
1979
noga
alon
number
polytopes
conﬁgurations
real
matroids
math-
ematika
:62–71
1986
noga
alon
combinatorial
nullstellensatz
comb
probab
comput.
8:7–29
january
1999
greg
aloupis
brad
ballinger
sebastien
collette
stefan
langerman
attila
por
david
wood
blocking
coloured
point
sets
26th
european
workshop
computational
geometry
eurocg
2010
dortmund
germany
march
2010.
arxiv:1002.0190v1
math.co
hannah
alpert
christina
koch
joshua
laison
obstacle
numbers
graphs
discrete
computational
geometry
december
2009.
pub-
lished
http
//www.springerlink.com/content/45038g67t22463g5
viewed
12/26/09
27p
gergely
ambrus
j´anos
bar´at
contribution
queens
graphs
sub-
stitution
method
discrete
mathematics
306
:1105–1114
2006
gergely
ambrus
j´anos
bar´at
hajnal
slope
parameter
graphs
acta
sci
math
szeged
72:875–889
2006
patrizio
angelini
luca
cittadini
giuseppe
battista
walter
didimo
fab-
rizio
frati
michael
kaufmann
antonios
symvonis
perspectives
opened
right
angle
crossing
drawings
17th
sympos
graph
drawing
volume
5849
lncs
pages
21–32
2010
karin
arikushi
radoslav
fulek
bal´azs
keszegh
filip
moric
csaba
t´oth
graphs
admit
right
angle
crossing
drawings
pages
135–146
esther
arkin
dan
halperin
klara
kedem
joseph
mitchell
nir
naor
arrangements
segments
share
endpoints
single
face
results
discrete
comput
geom.
3-4
:257–270
1995
roland
bacher
http
//mathoverﬂow.net/questions/24108/can-select-many-
disjoint-pairs-with-prescribed-diﬀerences-from-z-n.
j´anos
bar´at
jir´ı
matousek
david
wood
bounded-degree
graphs
arbitrarily
large
geometric
thickness
electr
comb.
2006
j´ozsef
beck
combinatorial
games
tic-tac-toe
theory
cambridge
university
press
cambridge
2008
j´ozsef
beck
csirmaz
variations
game
journal
combinatorial
theory
series
33:297–315
1982
bell
stevens
survey
known
results
research
areas
n-queens
discrete
mathematics
309:1–31
2009
csirmaz
nagy
generalization
game
go-moku
studia
mathematica
14:461–469
1979
mark
berg
marc
van
kreveld
mark
overmars
otfried
schwarzkopf
computational
geometry
algorithms
applications
2nd
ed.
springer-
verlag
berlin
2000
walter
didimo
peter
eades
giuseppe
liotta
drawing
graphs
right
angle
crossings
proc
11th
wads
volume
5664
lncs
pages
206–217
springer
2009
reinhard
diestel
graph
theory
volume
173
graduate
texts
mathe-
matics
springer-verlag
heidelberg
third
edition
2005
michael
dillencourt
david
eppstein
daniel
hirschberg
geometric
thickness
complete
graphs
graph
algorithms
appl.
:5–17
2000
vida
dujmovic
david
eppstein
matthew
suderman
david
wood
drawings
planar
graphs
slopes
segments
comput
geom.
:194–212
2007
vida
dujmovic
matthew
suderman
david
wood
really
straight
graph
drawings
j´anos
pach
editor
graph
drawing
volume
3383
lecture
notes
computer
science
pages
122–132
springer
2004
vida
dujmovic
david
wood
graph
treewidth
geometric
thickness
parameters
discrete
computational
geometry
:641–670
2007
adrian
dumitrescu
j´anos
pach
g´eza
t´oth
note
blocking
visibility
points
geombinatorics
:67–73
2009
christian
duncan
david
eppstein
stephen
kobourov
ge-
ometric
thickness
low
degree
graphs
jack
snoeyink
jean-daniel
boissonnat
editors
symposium
computational
geometry
pages
340–346
acm
2004
max
engelstein
drawing
graphs
slopes
intel
competition
high
school
students
2005
david
eppstein
separating
thickness
geometric
thickness
stephen
kobourov
michael
goodrich
editors
graph
drawing
volume
2528
lecture
notes
computer
science
pages
150–161
springer
2002
paul
erd˝os
andr´as
hajnal
ramsey-type
theorems
discrete
appl
math.
1-2
:37–52
1989
paul
erd˝os
remarks
theory
graphs
bull
amer
math
soc.
53:292–294
1947
jacob
fox
j´anos
pach
erd˝os–hajnal-type
results
intersection
patterns
geometric
objects
horizons
combinatorics
volume
bolyai
soc
math
stud.
pages
79–103
springer
berlin
2008
radoslav
fulek
noushin
saeedi
deniz
sarioz
convex
obstacle
num-
bers
outerplanar
graphs
bipartite
permutation
graphs
corr
abs/1104.4656
2011
subir
kumar
ghosh
visibility
algorithms
plane
cambridge
university
press
cambridge
2007
jacob
goodman
richard
pollack
upper
bounds
conﬁgurations
polytopes
discrete
comput
geom.
:219–227
1986
jacob
goodman
richard
pollack
allowable
sequences
order
types
discrete
computational
geometry
new
trends
discrete
compu-
tational
geometry
volume
algorithms
combin.
pages
103–134
springer
berlin
1993
hoheisel
primzahlenprobleme
der
analysis
sitzungber
berlin
math
ges.
pages
550–558
1930
joan
hutchinson
thomas
shermer
andrew
vince
represen-
tations
thickness-two
graphs
comput
geom.
:161–171
1999
v´ıt
jel´ınek
eva
jel´ınkov´a
jan
kratochv´ıl
bernard
lidick´y
marek
tesar
tom´as
vyskocil
planar
slope
number
planar
partial
3-trees
bounded
degree
david
eppstein
emden
gansner
editors
graph
drawing
volume
5849
lecture
notes
computer
science
pages
304–315
springer
2009
kainen
thickness
coarseness
graphs
abh
math
sem
univ
hamburg
39:88–95
1973
r.n
karasev
f.v
petrov
partitions
nonzero
elements
ﬁnite
ﬁeld
pairs
http
//arxiv.org/abs/1005.1177
bal´azs
keszegh
j´anos
pach
d¨om¨ot¨or
p´alv¨olgyi
drawing
planar
graphs
bounded
degree
slopes
ulrik
brandes
sabine
cornelsen
editors
graph
drawing
volume
6502
lecture
notes
computer
science
pages
293–304
springer
2010
bal´azs
keszegh
j´anos
pach
d¨om¨ot¨or
p´alv¨olgyi
g´eza
t´oth
drawing
cubic
graphs
ﬁve
slopes
comput
geom.
:138–147
2008
bal´azs
keszegh
j´anos
pach
d¨om¨ot¨or
p´alv¨olgyi
g´eza
t´oth
cubic
graphs
bounded
slope
parameter
graph
algorithms
appl.
:5–
2010
kohen
sadofschi
new
approach
seating
couples
problem
http
//arxiv.org/abs/1006.2571
k¨onig
theorie
der
endlichen
und
unendlichen
graphen
kombinatorische
topologie
der
streckenkomplexe
leipzig
akad
verlag
kruczek
sundberg
pairing
strategy
tic-tac-toe
integer
lattice
numerous
directions
kruczek
sundberg
potential-based
strategies
tic-tac-toe
integer
lattice
numerous
directions
jir´ı
matouˇsek
blocking
visibility
points
general
position
discrete
computational
geometry
:219–223
2009
jir´ı
matouˇsek
pavel
valtr
complexity
lower
envelope
segments
endpoints
intuitive
geometry
bolyai
society
math
studies
6:407–
411
1997
markus
meringer
fast
generation
regular
graphs
construction
cages
graph
theory
30:137–146
february
1999
padmini
mukkamala
j´anos
pach
deniz
sari¨oz
graphs
large
ob-
stacle
numbers
pages
292–303
petra
mutzel
thomas
odenthal
mark
scharbrodt
thickness
graphs
survey
graphs
combin
14:59–73
1998
joseph
rourke
visibility
handbook
discrete
computational
ge-
ometry
crc
press
ser
discrete
math
appl.
pages
467–479
crc
boca
raton
1997
joseph
rourke
open
problems
combinatorics
visibility
illu-
mination
advances
discrete
computational
geometry
south
hadley
1996
volume
223
contemp
math.
pages
237–243
amer
math
soc.
providence
1999
j´anos
pach
midpoints
segments
induced
point
set
geombinatorics
:98–105
2003
j´anos
pach
pankaj
agarwal
combinatorial
geometry
wiley-
interscience
series
discrete
mathematics
optimization
john
wiley
sons
inc.
new
york
1995.
wiley-interscience
publication
j´anos
pach
d¨om¨ot¨or
p´alv¨olgyi
bounded-degree
graphs
arbi-
trarily
large
slope
numbers
electr
comb.
2006
emmanuel
preissmann
maurice
mischler
seating
couples
around
king
table
new
characterization
prime
numbers
american
math-
ematical
monthly
116
:268–272
2009
endre
szemer´edi
william
trotter
jr.
combinatorial
distinction
euclidean
projective
planes
european
combin.
:385–
394
1983
endre
szemer´edi
william
trotter
jr.
extremal
problems
discrete
geometry
combinatorica
3-4
:381–392
1983
alan
tucker
coloring
family
circular
arcs
siam
journal
applied
mathematics
:493–502
1975
jorge
urrutia
art
gallery
illumination
problems
handbook
com-
putational
geometry
pages
973–1027
north-holland
amsterdam
2000
greg
wade
jiang-hsing
chu
drawability
complete
graphs
using
minimal
slope
set
comput
:139–142
1994
