good
edge-labelings
graphs
girth
least
five
michel
bode
babak
farzad
dirk
oliver
theis
abstract
good
edge-labeling
graph
ara´ujo
cohen
giroire
havet
discrete
appl
math.
forthcoming
assignment
numbers
edges
pair
vertices
exist
two
non-decreasing
paths
paper
study
edge-labeling
graphs
girth
least
particular
verify
additional
hypothesis
conjecture
ara´ujo
conjecture
states
average
degree
less
minimal
without
edge-labeling
case
girth
give
counterexample
introduction
graphs
ﬁnite
simple
refer
diestel
graph
theory
terminology
good
edge-labeling
graph
labeling
edges
ordered
pair
vertices
one
nondecreasing
path
mostly
use
following
characterization
good
edge-labeling
involves
cycles
instead
pairs
paths
edge-labeling
good
every
cycle
least
two
local
minima
local
minimum
mean
edge
whose
label
strictly
less
labels
two
edges
incident
cycle
differs
deﬁnition
next
section
point
unlike
later
paper
convenience
assume
labels
distinct
good
edge-labelings
ﬁrst
studied
bermond
cosnard
p´erennes
context
so-called
wavelength
division
multiplexing
problems
given
network
so-called
routing
wavelength
assignment
problem
asks
ﬁnding
routes
associated
wavelengths
set
trafﬁc
requests
satisﬁed
minimizing
number
used
wavelengths
araujo
cohen
giroire
havet
studied
good
edge-labelings
depth
call
graph
good
edge-labeling
bad
say
critical
graph
minimal
bad
graph
every
proper
subgraph
good
edge-labeling
easy
see
date
fri
jul
14:10:27
cest
2012
2000
mathematics
subject
classiﬁcation
primary
05c78
research
partially
funded
nserc
discovery
grant
part
work
project
done
dot
visiting
international
scholar
brock
university
funding
visit
canadam
2011
thanks
faculty
mathematics
otto
von
guericke
univeristy
magdeburg
canadam
student
funding
michel
bode
babak
farzad
dirk
oliver
theis
k2,3
critical
araujo
al.
paper
comprises
inﬁnite
family
critical
graphs
results
graphs
classes
always
good
edge-labelings
planar
graphs
girth
least
k2,3
-free
outerplanar
graphs
k2,3
-free
sub-cubic
graphs
algorithmic
complexity
recognizing
bad
graphs
connection
matching-cuts
matching-cut
aka
simple
cut
set
independent
edges
edge-cut
fact
arguments
proving
non-criticality
rely
existence
matching-
cuts
one
central
contributions
paper
move
beyond
using
matching-
cuts
araujo
also
pose
number
problems
conjectures
particular
following
conjecture
one
two
motivations
behind
paper
conjecture
1.1
araujo
critical
graph
average
degree
less
exception
k2,3
araujo
prove
weaker
version
conjecture
establish
existence
matching-cut
relying
part
theorem
farley
proskurowski
stating
graph
sufﬁciently
edges
always
matching
cut
also
use
characteriza-
tion
extremal
graphs
matching-cut
bonsma
proofs
araujo
appears
depths
arguments
increases
rapidly
upper
bound
approached
paper
show
critical
graph
average
degree
less
three
girth
least
ﬁve
put
differently
prove
conjecture
1.1
case
graph
girth
least
ﬁve
theorem
1.2.
critical
graph
average
degree
less
three
girth
least
ﬁve
moreover
falsify
conjecture
1.1
case
girth
fig
shows
graph
vertices
edges
contain
either
girth
average
degree
k2,3
subgraph
leave
reader
exercise
argue
graph
good
edge
labeling
easily
veriﬁed
every
proper
subgraph
good
edge
labeling
shown
graph
critical
words
fig
shows
counterexample
conjecture
1.1
case
girth
figure
critical
graph
girth
average
degree
good
edge-labelings
another
motivation
behind
paper
demonstrate
large
girth
makes
labeling
arguments
easier.1
theorem
5.2
roughly
speaking
prove
critical
graph
girth
least
ﬁve
contain
windmill
windmill
essentially
consists
number
shortest
paths
meeting
axis
paths
originating
vertices
degree
two
interior
vertices
degree
three
theorem
1.2
corollary
theorem
5.2
using
approach
inspired
discharging
method
topological
graph
theory
argue
hypothetical
critical
graph
girth
least
ﬁve
average
degree
less
three
always
contains
windmill
proof
theorem
5.2
deﬁne
class
graphs
call
decent
property
contained
critical
graph
importantly
give
gluing
operation
preserves
decency
starting
small
family
basic
decent
graphs
gluing
inductively
approach
allows
show
certain
complicated
conﬁgurations
contained
critical
graphs
leads
proof
theorem
5.2.
paper
organized
follows
next
section
discuss
notation
well
basic
facts
good
edge-labelings
section
deﬁne
windmills
com-
mence
upon
proof
non-existence
section
contains
deﬁnition
decent
graphs
gluing
mechanism
theorem
5.2
stated
proved
section
theorem
1.2
derived
section
basic
facts
good
edge-labelings
heavily
rely
above-mentioned
characterization
good
edge-labeling
using
cycles
instead
paths
use
following
deﬁnitions
let
path
cycle
edge-labeling
let
proper
sub-path
i.e.
path
contained
equal
least
one
edge
real
number
say
local
minimum
value
every
edge
sharing
vertex
distinct
minima
must
necessarily
vertex
disjoint
good
edge-labelings
charac-
terized
terms
local
minima
cycles
leave
veriﬁcation
following
easy
lemma
reader
see
lemma
2.1.
edge-labeling
graph
good
every
cycle
two
local
minima
cid:3
obviously
property
edge-labeling
good
depends
order
re-
lation
labels
edges
particular
scaling
multiplying
label
strictly
positive
constant
translation
adding
constant
label
change
whether
labeling
good
1indeed
recently
bad
graph
girth
larger
four
known
particular
bad
graphs
araujo
al.
construction
contain
many
4-cycles
fact
led
conjecture
exists
ﬁnite
number
every
graph
girth
least
good
edge-labeling
mentioned
araujo
shown
additional
restriction
graphs
planar
conjecture
holds
true
conjecture
refuted
michel
bode
babak
farzad
dirk
oliver
theis
say
k-vertex
vertex
degree
k−-vertex
vertex
degree
k+-vertex
vertex
degree
least
araujo
proved
following
property
critical
graphs
lemma
2.2
critical
graph
contain
matching-cut
particular
minimum
degree
critical
graph
least
two
unless
triangle
contains
two
adjacent
2-vertices
rest
section
let
critical
graph
k2,3
prove
basic
properties
lemma
2.3.
let
cycle
whose
every
vertex
degree
three
two
vertices
common
neighbour
proof
proceed
contradiction
let
shortest
cycle
whose
every
vertex
degree
three
easily
seen
set
edges
exactly
one
endpoint
forms
matching-cut
contradicting
lemma
2.2.
cycle
since
good
edge-labeling
cycle
contradicting
criticality
cid:3
lemma
2.4.
let
path
length
least
one
whose
end
vertices
degree
two
internal
vertices
degree
three
two
vertices
common
neighbour
proof
proceed
contradiction
let
shortest
path
two
vertices
degree
two
inner
vertices
degree
three
set
edges
exactly
one
endpoint
forms
matching
cut
contradicting
lemma
2.2.
shortest
path
note
proof
goes
length
cid:3
windmills
motivate
deﬁnition
windmills
let
take
look
used
proof
theorem
1.2.
proof
uses
discharging
type
argument
assign
charges
vertices
vertex
receives
charge
note
2-vertices
positive
charge
since
average
degree
less
total
charge
graph
positive
discharge
2-vertices
applying
lemma
2.4
charges
sent
2-vertices
4+-vertices
via
shortest
paths
consisting
3-vertices
later
show
paths
internally
disjoint
since
charge
lost
discharging
phase
discharging
vertices
non-positive
charge
contradiction
however
may
vertices
positive
charge
vertices
centers
structures
refer
windmills.
remainder
section
let
critical
graph
girth
least
ﬁve
tree
vertices
denote
xhy
unique
path
internally
shortest
3-path
path
good
edge-labelings
x0x1
path
x1p
shortest
path
particular
path
x1p
induced
say
starts
ends
remark
3.1.
lemma
2.4
graph
internally
shortest
3-path
starts
ends
2-vertices
edge
x0x1
sail
tip
x0x1
deﬁned
internally
shortest
3-path
x0x1
starts
2-vertex
ends
4+-vertex
minimum
length
among
internally
shortest
3-paths
remark
3.2.
among
vertices
degree
deg
ending
vertex
sail
among
minimum
distance
note
vertex
larger
distance
otherwise
would
contradiction
either
vertex
closer
lemma
2.3
deﬁnition
3.3.
let
integer
vertex
degree
max
k-windmill
axis
induced
subgraph
spanned
union
sails
beginning
distinct
tips
ending
windmill
called
complete
proper
subgraph
another
windmill
note
possible
two
sails
windmill
start
2-vertex
different
tips
lemma
3.4.
let
x0x1
vertex
adjacent
two
vertices
one
two
starting
vertex
vertex
distinct
tips
identical
ending
i.e.
adjacent
two
vertices
path
xℓ−1xℓx′
ℓ′−1
two
sails
0x′
either
share
tip
internally
disjoint
ℓ′−1
closest
proof
facts
girth
least
shortest
path
tip
x0x1
4+-vertex
easily
imply
prove
assume
otherwise
vertices
vertices
adjacent
two
vertices
path
xℓ−1xℓx′
let
vertex
whose
neighborhood
intersection
say
closest
ties
take
vertex
whose
neighborhood
intersection
say
since
girth
least
vertex
well
deﬁned
recalling
shortest
paths
tips
4+-vertex
easily
seen
must
3-vertex
remark
3.1
lemma
2.4
choice
common
neighbor
one
two
vertices
path
xiw1x′
must
notice
|q2|
|q1|
since
girth
least
choose
way
chose
continue
process
since
lengths
decreasing
process
repeated
forever
point
get
contradiction
lemma
2.4.
item
follows
along
lines
item
cid:3
since
windmill
contains
unique
4+-vertex
subgraph
another
windmill
axes
coincide
larger
one
least
one
sail
sails
michel
bode
babak
farzad
dirk
oliver
theis
windmill
pairwise
internally
disjoint
lemma
3.4
deﬁnition
windmill
tips
distinct
moreover
edges
vertices
sail
except
one
starting
vertex
axis
note
every
edge
axis
starting
vertex
sail
sail
3.1.
flags
ﬁxed
complete
windmill
study
vertices
out-
side
windmill
two
neighbors
inside
windmill
call
vertex
ﬂag
need
classify
ﬂags
make
following
notational
con-
vention
let
complete
windmill
h-ﬂag
i.e.
vertex
least
two
neighbors
say
signature
neighbors
degrees
listed
multiplicities
conveniently
replace
sub-lists
asterix
example
signature
degree
least
one
neighbors
degree
similarly
signature
degree
least
three
neighbors
three
degrees
also
replace
degree
joker
signature
neighbors
degrees
concept
signature
needed
reduce
possible
occurences
ﬂags
small
number
cases
used
beyond
section
lemma
3.5.
let
k-windmill
graph
ﬂag
either
following
signatures
proof
lemma
2.2
implies
ﬂag
signature
lemma
2.4
gives
lemma
3.4
implies
ﬂags
signatures
let
ﬂag
let
axis
complete
windmill
staring
vertex
sail
use
symbol
adjacency
relation
since
3-vertex
xwy
sail
adding
vertex
thus
gives
larger
windmill
contradicting
maximality
cid:3
lemma
3.6.
let
complete
windmill
axis
let
h-ﬂag
signature
sail
proof
suppose
sail
cycle
consisting
3-vertices
lemma
2.3
must
vertex
common
neighbor
two
vertices
cycle
lemma
3.4
one
two
denote
note
since
degree
must
also
degree
sail
starting
degree
different
would
contradict
minimality
distance
tip
end-vertex
remark
3.2
consider
sail
tip
since
degree
good
edge-labelings
must
contain
either
contained
sail
otherwise
would
non-empty
interior
intersection
contradicting
lemma
3.4
follows
sail
tip
containing
however
length
length
inequality
must
strict
otherwise
sail
would
non-empty
interior
intersection
sail
thus
follows
|wz
zq|
|wv
|up
|uz
zq|
together
imply
|up
|zq|
|vp
conclude
|up
|vp
contradiction
fact
cid:3
remaining
cases
complex
start
following
fact
lemma
3.7.
let
h-ﬂag
signature
sail
adjacent
axis
proof
lemma
3.5
degree
least
suppose
sail
starting
vertex
note
one
hand
degree
internally
shortest
path
x′p
ending
2-vertex
contradicting
remark
3.1.
hand
degree
x′p
path
shorter
ends
vertex
degree
contradicting
remark
3.2
cid:3
lemma
3.8.
ﬂag
signature
proof
cases
dealt
lemma
3.5.
let
consider
lemmas
3.6
3.7
denoting
ﬂag
2-vertex
3-vertex
starting
vertex
sail
containing
start
end
vertices
path
x′p
degree
lemma
2.4
vertex
common
neighbor
two
vertices
lemma
3.5
one
two
must
denote
one
degree
length
x′qu
shorter
contradicting
remark
3.2.
degree
length
x′qu
length
cid:3
contradicting
remark
3.2.
lemma
3.9.
let
h-ﬂag
signature
sail
adjacent
axis
proof
denote
sail
containing
adjacent
axis
path
shorter
ends
vertex
degree
contradicting
remark
3.2
cid:3
michel
bode
babak
farzad
dirk
oliver
theis
conclude
subsection
following
important
consequence
investiga-
tion
ﬂags
per
windmills
subgraphs
induced
sails
next
lemma
shows
complete
windmill
every
edge
already
belongs
sail
lemma
3.10.
edges
complete
windmill
sails
proof
argue
contradiction
consider
edge
whose
vertices
wind-
mill
sail
lemma
2.2
vertices
2-vertices
lemma
3.4
vertices
3-vertices
sail
lemma
shows
3-vertex
axis
endpoints
let
2-vertex
3-vertex
vertices
either
sail
former
contradicts
lemma
2.3
lemma
3.4.
latter
case
let
sail
contains
3-vertex
adjacent
2-vertex
another
sail
let
2-vertex
sail
internally
shortest
path
contradicting
lemma
3.4.
remaining
case
two
3-vertices
distinct
sails
windmill
say
starting
vertex
note
possible
denote
x1p1u1
u1u2
u2p
path
cycle
starting
tip
one
two
sails
taking
edge
ending
tip
two
starting
vertices
sails
may
coincide
case
cycle
lemma
2.4
lemma
2.3
cycle
must
vertex
adjacent
two
vertices
vertex
axis
contradicts
remark
3.2
entails
triangle
hence
ﬂag
lemma
3.5
one
must
2-vertex
may
3-vertex
say
3-vertex
either
lemma
3.7
lemma
3.9
must
adjacent
axis
contradiction
since
vertex
might
adjacent
axis
degree
three
two
neighbors
third
axis
axis
hence
conclude
2-vertices
particular
since
said
adjacent
third
vertex
lemma
2.3
another
vertex
adjacent
two
3-vertices
vertex
would
ﬂag
signature
impossible
lemma
3.5
cid:3
3.2.
ﬂag
graph
narrowed
possible
conﬁgurations
involving
ﬂags
windmills
summarize
results
ﬂag
adjacent
several
2-vertices
tips
sails
one
following
axis
one
3-vertex
adjacent
axis
sail
moreover
one
ﬂag
adjacent
axis
every
3-vertex
adjacent
one
ﬂag
obviously
edges
except
sails
windmill
incident
ﬂags
structure
nicely
dealt
inductive
manner
rather
delving
humongous
list
case
distinctions
remainder
section
show
good
edge-labelings
structure
ﬂags
windmills
modelled
directed
graph
call
ﬂag
graph
tree-like
structure
possibility
ﬂag
adjacent
axis
complication
ﬂag
existent
omitted
construction
ﬂag
graph
let
complete
windmill
contained
ﬂag
adjacent
axis
called
irregular
recall
one
ﬂags
called
regular
important
realize
sail
whose
tip
adjacent
irregular
ﬂag
length
least
girth
least
ﬂag
graph
windmill
directed
bipartite
graph
one
side
bipartition
vertex
set
comprises
ﬂag-vertices
one-to-one
correspondence
regular
ﬂags
side
bipartition
consists
sail-vertices
one-to-one
correspondence
2-vertices
tips
sails
say
sail-vertex
corresponds
2-vertex
contained
two
sails
degenerate
sail-vertex
corresponding
2-vertex
contained
one
sail
called
non-degenerate
two
types
arcs
2-arc
whenever
regular
ﬂag
adjacent
2-vertex
tip
sail
arc
sail-vertex
corresponding
ﬂag-vertex
corresponding
note
case
sail-vertex
non-degenerate
3-arc
whenever
regular
ﬂag
adjacent
3-vertex
arc
ﬂag-vertex
corresponding
sail-vertex
represents
sail
containing
ﬂag
graph
may
contain
anti-parallel
arcs
regular
ﬂag
might
adjacent
3-vertex
sail
note
following
observations
follow
directly
construction
earlier
results
section
see
summary
lemma
3.11.
let
contain
windmill
let
ﬂag
graph
degenerate
sail-vertices
out-degree
non-degenerate
sail-vertices
out-degree
flag-vertices
out-degree
degenerate
sail-vertices
in-degree
non-degenerate
sail-vertices
in-degree
flag-vertices
in-degree
least
moreover
undirected
connected
components
one-to-one
correspondence
blocks
block-decomposition
particular
non-degenerate
sail-
vertices
contained
directed
cycles
cid:3
show
ﬂag
graph
constructed
inductively
basic
elements
construction
rules
basic
element
single
non-degenerate
sail-vertex
basic
element
single
degenerate
sail-vertex
basic
element
ﬂag-vertex
sail-vertex
arc
sail-vertex
ﬂag-vertex
basic
element
cycle
length
michel
bode
babak
farzad
dirk
oliver
theis
basic
element
cycle
even
length
least
ﬂag
graph
extended
following
construction
rules
construction
rule
start
new
connected
component
undirected
sense
adding
one
basic
elements
without
connection
construction
rule
add
sail-vertex
outgoing
2-arc
linking
arbitrary
ﬂag-vertex
construction
rule
add
ﬂag-vertex
sail-vertex
together
3-arc
3-arc
goes
new
ﬂag-vertex
arbitrary
sail-vertex
2-arc
goes
new
sail-vertex
new
ﬂag-vertex
lemma
3.12.
let
contain
windmill
let
ﬂag
graph
constructed
using
basic
elements
construction
rules
proof
show
connected
component
ﬂag
graph
constructed
inductive
manner
follows
let
connected
component
ﬂag
graph
assume
obtained
one
step
construction
rule
sail
vertex
out-degree
in-degree
whose
ﬂag
neighbour
either
out-degree
in-degree
least
construct
c\s
ﬁrst
obtain
applying
construction
rule
notice
deﬁnition
ﬂag
neighbour
must
c\s
constructed
construction
rule
otherwise
sail
vertex
out-degree
in-degree
whose
ﬂag
neighbour
out-degree
in-degree
case
construct
ﬁrst
obtain
applying
construction
rule
cid:3
section
construction
used
inductively
glue
together
graph
in-
duced
windmill
ﬂags
following
section
explain
gluing
operation
typed
graphs
gluing
let
path
local
minimum
value
say
imin
contains
endvertices
deﬁnition
4.1.
typed
graph
types
graph
together
mapping
words
every
vertex
one
three
possible
types
either
type-0
type-1
type-2
vertex
ﬁgures
section
show
graphs
types
vertices
square
brackets
decent
labeling
typed
graph
good
edge-labeling
following
properties
path
two
type-2
vertices
length
least
three
least
one
following
two
conditions
hold
a.1
imin
endpoint
imin
edge
strictly
positive
label
a.2
least
two
imins
path
type-1
vertex
type-2
vertex
length
least
two
b.1
imin
contain
good
edge-labelings
typed
graph
decent
decent
edge-labeling
note
path
satisﬁes
either
conditions
a.1
a.2
also
satis-
ﬁes
b.1
moreover
typed
graph
type-2
vertex
good
edge-labeling
also
decent
path
typed
graph
called
t-simple
type
every
interior
vertex
strictly
less
leave
reader
convince
order
verify
good
edge-labeling
decent
sufﬁces
check
2-simple
paths
1-simple
paths
respectively
continue
discussing
typed
graphs
general
discuss
several
examples
need
remainder
paper
describe
typed
graphs
deﬁne
concrete
decent
edge-labelings
exist
graphs
indeed
rooted
graphs
root
denoted
owed
fact
later
apply
windmills
root
corresponding
axis
windmill
hence
discuss
multiple
versions
graphs
difference
lying
location
root
vertex
example
4.2.
decent
labeling
typed
paths
ending
type-2
vertex
let
path
length
least
two
root
vertex
shown
fig
ending
type-2
vertex
denote
vertex
adjacent
root
type-0
type-1
type-0
remaining
vertices
type-1
vertices
decent
typed
graph
fig
shows
decent
edge-labeling
length
two
3/4
length
least
three
let
vn−1vn
17/24
rest
edges
label
+3/4
+17/24
typed
2-path
decent
labeling
typed
3+-path
decent
labeling
figure
typed
paths
decent
edge-labelings
example
4.3.
decent
labeling
typed
paths
ending
type-1
vertex
let
path
length
least
three
root
shown
fig
type
root
vertex
vertices
type
decent
typed
graph
fig
shows
decent
edge-labeling
additional
edges
dots
label
example
4.4.
decent
labelings
cycles
without
type-2
vertices
let
cycle
type-
type-1
vertices
shown
fig
let
type-0
vertex
remaining
vertices
type-0
type-1
vertices
decent
typed
graph
fig
shows
decent
edge-labelings
length
ﬁve
based
position
vertex
present
two
different
decent
labeling
later
applications
either
decent
edge-labeling
typed
5-cycle
independent
position
michel
bode
babak
farzad
dirk
oliver
theis
−10
17/24
typed
path
decent
labeling
figure
typed
paths
decent
edge-labelings
17/24
17/24
17/24
17/24
17/24
5-cycles
decent
labelings
6+-cycle
decent
labeling
figure
typed
cycles
decent
edge-labelings
example
4.5.
decent
labelings
cycles
one
type-2
vertex
part
consider
typed
graph
consisting
cycle
one
extra
edge
one
end
cycle
shown
top
part
fig
root
cycle
type
type
vertex
cycle
adjacent
two
type
vertices
rest
vertices
type
ﬁgure
shows
decent
labeling
example
4.6.
decent
labelings
cycles
one
type-2
vertex
part
consider
typed
graph
consisting
cycle
one
extra
edge
one
end
cycle
shown
middle
part
fig
root
cycle
type
type-2
vertex
cycle
adjacent
two
type-0
vertices
rest
vertices
type
given
satisfying
2/3
3/4
decent
labeling
constructed
shown
ﬁgure
new
todo
check
example
4.7.
decent
labelings
cycles
one
type-2
vertex
part
iii
consider
typed
graph
consisting
cycle
shown
bottom
part
fig
root
cycle
type
type-2
vertex
cycle
adjacent
two
type-0
vertices
rest
vertices
type
given
satisfying
2/3
3/4
decent
labeling
constructed
shown
ﬁgure
k-wheel
typed
graph
union
cycle
center
vertex
connected
vertices
cycle
called
anchors
distance
cycle
two
anchors
must
least
three
fix
orientation
cycle
successor
anchor
called
bogey
successor
bogey
called
spectator
vertices
cycle
good
edge-labelings
cycle
length
least
edge
sticking
illustration
example
4.5
2/3+α
2/3+α
illustrations
example
4.6
2/3
3/4
2/3+α
illustration
example
4.7
2/3
3/4
figure
cycles
type-2
vertex
decent
edge-labelings
called
boobies
path
contained
cycle
connecting
successive
anchors
called
segment
vertices
following
types
anchors
spectators
type
bogies
type
boobies
type
center
vertex
either
type
type
divide
class
wheels
subclasses
benign
wheels
almost
evil
wheels
evil
wheels
ﬁrst
two
kinds
decent
third
michel
bode
babak
farzad
dirk
oliver
theis
example
4.8.
decent
labelings
benign
wheels
consider
wheel
center
type-1
vertex
contains
least
one
pair
consecutive
anchors
whose
distance
least
four
benign
segment
wheel
typed
graphs
called
benign
wheels
fig
shows
decent
edge-labelings
benign
wheels
9/10
benign
segment
1/10h
9/10
benign
segment
evil
2-wheel
decent
labeling
evil
h-wheel
decent
labeling
figure
benign
wheels
decent
example
4.9.
decent
labeling
almost
evil
wheels
consider
wheel
dis-
tance
every
pair
consecutive
anchors
exactly
three
center
type-0
vertex
typed
graphs
different
evil
wheels
type
center
called
almost
evil
wheels
fig
shows
decent
edge-labelings
almost
evil
wheels
example
4.10.
evil
wheels
decent
distance
every
pair
consecutive
anchors
wheel
exactly
three
center
type-1
vertex
shown
fig
wheel
called
evil
wheel
easily
seen
evil
wheels
good
edge-
labeling
however
decent
remark
4.11.
seen
wheel
evil
examples
4.9
4.8
yield
decent
edge-labeling
words
wheel
evil
decent
4.1.
swell
subgraphs
lemma
4.13
fundamental
motivation
behind
deﬁning
typed
graphs
swell
graphs
deﬁnition
4.12.
let
proper
subgraph
graph
say
swell
subgraph
typed
least
one
type
type
vertex
following
properties
type
vertex
neighbor
good
edge-labelings
+1/2
+1/2
almost
evil
2-wheel
decent
labeling
almost
evil
even
wheel
decent
labeling
+1/2
+1/3
+1/2
+1/3
almost
evil
3-wheel
decent
labeling
almost
evil
odd
wheel
decent
labeling
figure
almost
evil
wheels
decent
labelings
every
type
vertex
one
neighbor
vertex
two
type
vertices
neighbors
shaded
area
fig
example
swell
subgraph
lemma
4.13.
let
decent
typed
graph
critical
graph
contain
swell
subgraph
michel
bode
babak
farzad
dirk
oliver
theis
evil
2-wheel
evil
3-wheel
figure
evil
wheels
decent
figure
swell
subgraph
following
lemma
use
shorthand
denote
negative
number
whose
absolute
value
larger
ﬁnite
absolute
values
proof
lemma
lem
fundamental
assume
otherwise
let
decent
typed
graph
proper
subgraph
critical
graph
prove
good
edge-labeling
deﬁne
graph
deleting
type-0
type-1
vertices
note
deﬁnition
4.1.
since
least
one
type
type
vertex
good
edge-labeling
note
edges
incident
type-1
vertices
take
decent
labeling
scale
nonzero
labels
absolute
value
least
also
take
good
labeling
scale
labels
absolute
value
combine
two
form
labeling
edges
good
edge-labelings
edges
receive
label
prove
forms
good
edge-labeling
consider
cycle
two
local
minima
otherwise
consider
graph
connected
components
path
least
one
must
non-zero
length
let
component
denote
end-vertices
notice
mentioned
relabeling
imin
fact
local
minimum
first
assume
type
least
two
imins
two
fact
two
local
minima
otherwise
imin
endpoint
imin
edge
strictly
positive
label
moreover
scaling
labels
two
labels
value
least
considering
scale
labels
local
minimum
belongs
local
minimum
addition
imin
two
local
minima
type
type
edge
adjacent
label
moreover
deﬁnition
decent
labeling
imin
incident
argument
imin
local
minimum
hence
two
local
minima
finally
type
let
edges
incident
respectively
deﬁnition
swell
subgraph
adjacent
local
minima
labels
cid:3
4.2.
gluing
order
use
decent
typed
graphs
inductive
arguments
fol-
lowing
construction
allows
glue
two
decent
typed
graphs
obtain
new
one
deﬁnition
4.14.
let
typed
graph
types
let
induced
subgraph
say
typed
graph
types
result
gluing
along
min
=
wish
conditions
ensure
decent
motivating
example
reader
might
want
verify
following
fact
need
paper
lemma
4.15.
decent
decent
aim
decompose
windmills
elementary
parts—indeed
parts
need
discussed
examples
4.2–4.6
4.9–4.8
need
considerably
powerful
gluing
mechanism
lemma
4.15.
deﬁne
class
gluable
typed
graphs
glued
2-sum
operations
need
ﬁrst
classify
certain
special
type-2
vertices
michel
bode
babak
farzad
dirk
oliver
theis
deﬁnition
4.16.
given
quadruple
consisting
typed
graph
types
decent
edge
labeling
root
vertex
say
type-2
vertex
locked
distance
two
unique
path
length
two
imin
edge
incident
label
2/3
3/4
call
locking
path
locked
call
connectable
ready
give
complete
deﬁnition
gluing
operation
deﬁnition
4.17.
say
quadruple
consisting
typed
graph
types
decent
edge-labeling
root
vertex
gluable
following
conditions
hold
every
path
length
originating
containing
type-1
vertex
vertex
type
admissible
yv1
v1v2
2/3
3/4
every
1-simple
path2
length
least
one
type-1
vertex
contains
edge
value
least
2/3
type-2
vertex
adjacent
root
let
type-2
vertex
distance
two
every
2-simple
path
except
locking
path
exists
satisﬁes
one
following
d2.i
imin
edge
incident
label
least
3/4
d2.ii
edge
incident
local
minimum
value
1/2
distance
least
three
every
2-simple
path
satisﬁes
edge
incident
local
minimum
value
2/3
3/4
second
imin
edge
prove
gluable
graphs
glued
review
examples
beginning
section
example
4.18.
typed
graphs
decent
labelings
root-vertices
described
examples
previous
subsection
gluable
checking
amounts
mechan-
ically
going
t-simple
paths
graphs
omit
let
prove
gluing
really
works
lemma
4.19.
let
gluable
let
result
glu-
ing
along
moreover
let
otherwise
gluable
proof
purely
mechanical
found
appendix
2recall
deﬁnition
t-simple
page
11.
good
edge-labelings
lemma
4.20.
let
gluable
connectable
type-2
vertex
connectable
type-2
vertex
let
typed
graph
re-
sulting
identifying
gluable
dg1
dg1
gluable
condition
distances
means
identifying
create
needed
labels
two
paths
satisfy
condition
d2.ii
gluing
give
good
edge-labeling
proof
lemma
4.20
found
appendix
operation
adds
graph
kind
described
example
4.6
differs
two
let
gluable
graph
path
deﬁnition
4.17
let
typed
graph
types
described
example
4.6.
specify
edge
la-
beling
let
y1u1
u1v1
deﬁnition
4.17
values
satisfy
conditions
example
4.6
deﬁne
decent
edge-labeling
proof
following
lemma
appendix
lemma
4.21.
typed
graph
resulting
gluing
along
gluable
lemma
create
ﬂags
locked
type-2
vertices
following
lemma
give
option
add
sails
connect
ﬂags
proof
analogous
lemma
4.21.
let
gluable
graph
locking
path
let
typed
graph
types
described
example
4.7.
specify
edge
labeling
let
y1u1
u1w1
deﬁnition
4.16
values
satisfy
conditions
example
4.7
deﬁne
decent
edge
labeling
lemma
4.22.
typed
graph
resulting
gluing
along
gluable
non-existence
windmills
section
prove
following
theorem
mentioned
introduction
section
critical
graph
girth
least
ﬁve
let
windmill
axis
sails
denote
subgraph
induced
ﬂags
regular
say
closure
deﬁne
types
follows
degg
degw
ﬂag
otherwise
prove
following
lemma
5.1.
typed
graph
types
decent
unless
contains
evil
wheel
irregular
ﬂag
contains
almost
evil
wheel
irregular
ﬂag
michel
bode
babak
farzad
dirk
oliver
theis
prove
lemma
disregarding
types
lemma
immediately
derive
following
main
result
theorem
5.2.
every
windmill
closure
contains
induced
sub-
graph
depicted
fig
i.e.
almost
evil
wheel
proof
follows
lemma
5.1
noting
swell
subgraph
invoking
lemma
4.13
cid:3
proof
lemma
5.1
performed
two
steps
ﬁrst
prove
regular
part
gluable
add
irregular
ﬂag
existent
let
subgraph
induced
regular
ﬂags
deﬁne
types
prove
following
lemma
5.3.
exists
edge-labeling
gluable
unless
contains
evil
wheel
proof
suppose
contain
evil
wheel
axis
recall
implies
contain
evil
wheel
subgraph
proove
gluable
associate
basic
elements
laid
lemma
3.12
gluable
graph
one
examples
previous
section
construction
rules
associate
one
operations
lemmas
4.19–
4.21.
induction
implies
gluable
basic
element
corresponds
typed
path
example
4.2
basic
element
corresponds
cycle
example
4.4
basic
element
corresponds
typed
path
example
4.3
basic
element
corresponds
cycle
example
4.5
basic
element
either
corresponds
almost
evil
wheel
exam-
ple
4.9
benign
wheel
example
4.8
evil
wheels
excluded
suppose
graph
represented
partial
ﬂag
graph
gluable
perform
one
construction
rules
obtain
extended
new
ﬂag
graph
explain
use
gluing
lemmas
extend
gluable
graph
construction
rule
corresponds
taking
1-sum
lemma
4.19.
identi-
ﬁcation
takes
place
axes
components
construction
rule
corresponds
adding
path
example
4.2
example
4.7
via
2-sum
operation
lemma
4.20
lemma
4.22
respectively
ﬁrst
case
new
sail-vertex
arc
initiates
corresponds
path
old
ﬂag-vertex
target
arc
identiﬁes
ﬂag
ﬂag
identiﬁed
vertex
path
axis
identiﬁed
root
vertex
path
second
case
ﬂag
type-2
vertex
bottom
part
fig
bottom
path
connecting
corresponding
new
sail-vertex
construction
rule
corresponds
adding
cycle
example
4.6
via
lemma
4.21.
sail-vertex
new
vertices
attached
identiﬁes
sail
degenerate
two
edges
sail
one
path
sail
case
degenerate
closest
axis
correspond
two
vertically
drawn
good
edge-labelings
edges
middle
part
fig
new
ﬂag-vertex
type-2
vertex
picture
new
sail-vertex
corresponds
path
root
type-0
vertex
right
type-2
vertex
path
use
vertex
cid:3
point
following
property
edge-labeling
constructed
proof
remark
5.4.
irregular
ﬂag
every
sail
whose
tip
adjacent
edge-labeling
labels
shown
fig
second
step
necessary
need
add
irregular
ﬂag
step
complete
proof
lemma
5.1.
proof
lemma
5.1.
irregular
ﬂag
exists
lemma
weaker
form
lemma
5.3.
suppose
irregular
ﬂag
exists
denote
take
labeling
lemma
5.3
extend
decent
labeling
let
neighbors
let
yw0
−10
w0xj
verify
resulting
labeling
decent
using
remark
5.4.
since
exists
irregular
ﬂag
since
deﬁnition
4.1
need
check
2-simple
paths
paths
need
check
starting
ending
consider
ﬁrst
paths
staring
type-2
vertex
ending
path
enters
sails
whose
tips
incident
either
axis
vertex
adjacent
axis
two
cases
path
touches
type-1
vertex
reaches
condition
b.1
deﬁnition
4.1
using
fact
edge
label
−10
path
imin
ﬁnd
path
least
two
imins
i.e.
satisﬁes
condition
a.2
secondly
consider
path
starting
ending
type-1
vertex
since
neither
axis
vertices
adjacent
type-1
vertices
edge
label
−10
imin
incident
type-1
vertex
ends
thus
b.1
satisﬁed
leave
reader
verify
fact
good
edge-labeling
cid:3
proof
theorem
1.2
let
minimum
counter
example
theorem
1.2
i.e.
critical
graph
girth
least
average
degree
less
let
deg
denote
degree
vertex
every
vertex
assign
charge
deg
total
charge
graph
deg
average
degree
less
note
assignment
initial
charges
2-vertices
positive
charge
discharge
graph
according
following
rule
sends
every
2-vertex
every
neighbour
sails
tip
charge
via
sails
4+-vertex
end
sails
seen
charges
sent
2-vertices
4+-vertices
via
paths
consisting
3-vertices
show
discharging
phase
every
vertex
graph
michel
bode
babak
farzad
dirk
oliver
theis
nonpositive
charge
contradiction
indeed
let
vertex
consider
following
cases
2-vertex
initial
charge
discharging
sends
total
unit
charge
via
two
tips
receive
charge
discharging
phase
charge
graph
discharged
3-vertex
initial
charge
moreover
gain
lose
charge
discharging
phase
charge
graph
discharged
iii
4-vertex
initial
charge
become
positive
must
receive
charges
via
least
three
incident
edges
implying
axis
windmill
note
holds
true
even
two
sails
share
common
tip
end
lemma
5.1
windmill
must
contain
evil
almost
evil
wheel
shown
fig
fig
seen
cases
axis
windmill
distance
2-vertices
windmill
one
ﬂags
hence
vertex
receives
via
sail
wheel
thus
charge
discharging
either
−1/2
1/2
5-vertex
initial
charge
become
positive
must
receive
charges
via
every
incident
edge
implying
axis
5-windmill
similar
case
lemma
5.1
implies
windmill
contains
evil
almost
evil
wheel
cases
axis
windmill
distance
2-vertices
windmill
one
ﬂags
hence
via
sail
wheel
thus
charge
vertex
receives
discharging
either
6+-vertex
initial
charge
deg
since
receives
unit
charge
via
incident
edge
deg
deg
charge
graph
discharged
conclusion
seen
imposing
lower
bound
girth
facilitates
construction
good
edge-labelings
even
decent
edge-labelings
paper
used
ap-
proach
together
degree-bound
seems
probable
high
girth
beneﬁts
open
problems
good
edge-labeling
example
ara´ujo
conjecture
every
number
pairwise
non-isomorphic
critical
graphs
average
degree
ﬁnite
propose
following
weakening
conjecture
conjecture
7.1.
every
number
pairwise
non-isomorphic
critical
graphs
girth
least
ﬁve
average
degree
ﬁnite
paper
settles
case
without
restriction
girth
modiﬁcation
conjecture
1.1
proposes
naturally
conjecture
7.2
ara´ujo-cohen-giroire-havet/modiﬁed
critical
graph
average
degree
less
exception
k2,3
graph
displayed
fig
acknowledgments
would
like
thank
anonymous
referees
careful
work
good
edge-labelings
references
j´ulio
ara´ujo
nathann
cohen
fr´ed´eric
giroire
fr´ed´eric
havet
good
edge-labelling
graphs
lagos
09—v
latin-american
algorithms
graphs
optimization
symposium
electron
notes
dis-
crete
math.
vol
elsevier
sci
amsterdam
2009
275–280
2579442
good
edge-labelling
ofgraphs
discrete
appl
math
vol
2012+
press
j.-c.
bermond
cosnard
coudert
p´erennes
optimalsolution
ofthemaximum
allrequest
pathgroomingproblem
proceedings
advanced
international
conference
telecommunications
aict06
guadeloupe
france
2006
michel
bode
goodedge-labelingsofgraphs
diploma
thesis
otto
von
guericke
university
magdeburg
2011
preparation
arxiv
paul
bonsma
acharacterizationofextremalgraphswithnomatching-cut
proceedings
european
conference
combinatorics
graph
theory
applications
eurocomb
discrete
mathematics
theoretical
computer
science
proceedings
2005
135–138
paul
bonsma
arthur
farley
andrzej
proskurowski
extremalgraphshavingnomatchingcuts
graph
theory
vol
2011
num
pages
diestel
graphtheory
gtm
springer-verlag
new
york
2006
arthur
farley
andrzej
proskurowski
extremalgraphswithnodisconnectingmatching
proceed-
ings
second
west
coast
conference
combinatorics
graph
theory
computing
eugene
ore.
1983
vol
1984
153–165
749610
85g:05089
graham
primitive
graphs
optimal
vertex
assignments
ann
new
york
acad
sci
175
1970
170–186
0269533
4428
cosnard
j.-c.
bermond
p´erennes
directed
acyclic
graphs
unique
path
property
tech
report
6932
inria
may
2009
abbas
mehrabian
onthedensityofnearlyregulargraphswithagoodedgelabelling
siam
discrete
math
vol
2012+
arxiv:1110.2391
appendix
deferred
proofs
proof
lemma
4.19.
conditions
deﬁnition
4.17
satisﬁed
since
require
check
paths
originating
root
vertex
moreover
good
edge-labeling
remains
show
decent
verify
property
deﬁnition
4.12
let
2-simple
path
two
type-2
vertices
let
w1qy
yqw2
satisfy
d2.i
edges
incident
neither
part
respective
imins
a.2
deﬁnition
4.12
holds
satisﬁes
d2.i
satisﬁes
d2.ii
a.2
deﬁnition
4.12
holds
one
imins
imin
edge
incident
satisfy
d2.ii
a.1
holds
imin
path
length
two
consisting
two
edges
incident
satisﬁes
d2.i
satisﬁes
a.2
holds
satisﬁes
d2.ii
satisﬁes
a.2
holds
satisfy
a.2
holds
verify
property
let
1-simple
path
type-1
vertex
type-2
vertex
note
property
deﬁ-
nition
4.17
holds
d2.i
holds
imin
imin
michel
bode
babak
farzad
dirk
oliver
theis
incident
d2.ii
holds
edge
incident
imin
incident
holds
imin
closer
imin
incident
cid:3
proof
lemma
4.20.
denote
vertex
resulting
identifying
one
resulting
identifying
let
ﬁrst
check
deﬁnition
4.17
a–d
property
deﬁnition
4.17
satisﬁed
new
path
kind
added
conditions
deﬁnition
4.17
b–d
satisﬁed
since
require
check
2-simple
paths
originating
root
vertex
paths
contain
thus
contained
entirely
either
make
sure
good
satisﬁes
conditions
deﬁnition
4.12.
may
assume
w.l.o.g
dg2
ﬁrst
prove
good
let
path
let
path
verify
cycle
two
local
minima
d2.i
holds
two
local
minima
d2.ii
holds
two
local
minima
satisfy
two
local
minima
secondly
prove
properties
deﬁnition
4.12
hold
note
properties
need
consider
paths
containing
interior
vertex
2-simple
case
even
1-simple
leaves
situation
checked
previous
lemma
cid:3
proof
lemma
4.21.
start
proving
good
edge-labeling
let
cycle
containing
edges
cycle
turned
cycle
replacint
path
single
edge
u1y1
show
fact
two
local
minima
implies
two
local
minima
obviously
local
minima
contains
neither
local
minimum
extreme
one
two
say
contains
edge
u1y1
path
p−1
formed
two
edges
label
two
distinct
local
minima
thus
make
sure
local
minima
contains
exactly
one
vertices
modiﬁed
local
minimum
firstly
suppose
value
contains
local
minimum
p−1
local
minimum
two
equal
p−1
local
minimum
secondly
suppose
local
minimum
value
contains
local
minimum
two
equal
local
minimum
path
formed
edge
label
2/3+α
2/3+α
2/3+α
next
show
edge-labeling
satisﬁes
properties
deﬁnition
4.1.
propery
let
type-2
vertex
let
type-2
vertex
let
w-w1-path
one
hand
deﬁnition
4.1
b.1
applied
one
imin
incident
edge
good
edge-labelings
incident
second
distinct
imin
hand
use
d2.i
d2.ii
deﬁnition
4.17
path
indeed
satisﬁes
d2.i
length
two
i.e.
contains
edge
two
imins
satisﬁes
d2.i
length
least
three
two
imins
satisﬁes
d2.ii
length
two
two
imins
satisﬁes
d2.ii
length
three
two
imins
satisﬁes
length
two
two
imins
satisﬁes
length
least
three
two
imins
finally
check
conditions
deﬁnition
4.17
kind
paths
added
beyond
present
result
taking
path
adding
edge
invoking
condition
b.1
deﬁnition
4.12
contains
two
imins
one
edge
cid:3
babak
farzad
mathematics
department
brock
university
st.
catharines
canada
e-mail
address
bfarzad
brocku.ca
michel
bode
dirk
oliver
theis
fakult
¨at
¨ur
mathematik
otto-von-guericke-universit
¨at
magdeburg
universit
¨atsplatz
39106
magdeburg
germany
e-mail
address
theis
ovgu.de
http
//dirkolivertheis.wordpress.com
