tangles
trees
ﬂowers
ben
clarka
geoﬀ
whittlea,1
aschool
mathematics
statistics
operations
research
victoria
university
wellington
p.o
box
600
wellington
new
zealand
abstract
tangle
order
matroid
graph
may
thought
k-connected
component
tangle
order
matroid
graph
satisﬁes
certain
robustness
condition
describe
tree
decomposition
matroid
graph
displays
certain
natural
equivalence
k-separations
matroid
graph
non-trivial
respect
tangle
keywords
connectivity
tangles
tree
decomposition
matroids
introduction
structure
3-separations
3-connected
matroids
described
oxley
semple
whittle
particular
show
every
connected
matroid
least
nine
elements
tree
decomposition
displays
certain
natural
equivalence
non-trivial
separations
result
generalised
aikin
oxley
describe
structure
4-separations
4-connected
matroids
show
ev-
ery
4-connected
matroid
least
elements
tree
decomposition
displays
natural
equivalence
non-trivial
4-separations
natural
believe
analogous
structural
results
hold
highly
connected
matroids
unfortunately
strict
k-connectivity
becomes
in-
creasingly
artiﬁcial
requirement
even
modest
values
example
pro-
jective
geometries
even
4-connected
realistically
matroid
may
identiﬁable
regions
high
connectivity
regions
captured
notion
tangle
matroid
also
diﬃcult
see
existence
tree
decomposition
4-connected
matroids
relies
primarily
fact
connectivity
function
matroid
symmetric
submod-
ular
words
connectivity
system
tangles
introduced
graphs
robertson
seymour
extended
connectivity
systems
geelen
gerards
robertson
whittle
email
addresses
benjamin.clark
msor.vuw.ac.nz
ben
clark
geoff.whittle
vuw.ac.nz
geoﬀ
whittle
1geoﬀ
whittle
supported
marsden
fund
new
zealand
preprint
submitted
elsevier
december
2018
paper
prove
theorems
structure
k-separations
tangles
order
connectivity
systems
loosely
speaking
main
result
paper
says
every
robust
tangle
order
matroid
tree
decomposition
displays
certain
natural
equivalence
k-separations
non-trivial
respect
tangle
operating
high
level
generality
course
consequences
particular
structures
primary
interest
let
matroid
rank
function
recall
connectivity
function
matroid
deﬁned
subsets
note
included
notorious
deﬁnition
paper
pair
connectivity
system
k-separations
matroid
precisely
k-separations
associated
connectivity
system
obtain
results
k-separations
tangles
order
matroids
immediate
consequences
theorems
connectivity
systems
also
obtain
consequences
graphs
follows
let
graph
edge
set
let
denote
number
vertices
incident
edge
edge
diﬃcult
prove
connectivity
system
via
connectivity
system
also
obtain
consequences
k-separations
tangles
order
graphs
paper
consider
applications
graphs
nonetheless
believe
applications
potentially
interest
matroid
may
unique
tangle
given
order
example
connected
matroids
unique
tangles
order
respectively
applying
results
paper
tangles
gives
above-mentioned
tree
struc-
tures
4-connected
matroids
make
connection
explicit
rather
restrict
attention
strict
k-connectivity
focus
some-
general
notion
connectivity
let
integer
matroid
loosely
vertically
k-connected
-separation
either
loosely
vertically
k-connected
matroid
rank
least
tangle
order
moreover
tangle
unique
via
appropriate
interpretation
obtain
section
results
loosely
vertically
k-connected
matroids
particular
prove
natural
notion
equivalence
interesting
k-separations
loosely
verti-
cally
k-connected
matroids
displayed
tree-like
way
readers
may
interested
consequences
general
results
connectivity
systems
end
placed
matter
subsections
end
section
matroid
vertically
k-connected
l-separation
either
important
connectivity
notion
generalises
k-connectivity
graphs
see
example
oxley
chap-
ter
8.6
wish
supplant
terminology
avoid
cumber-
statements
remainder
paper
vertically
k-connected
mean
loosely
vertically
k-connected
another
tree
associated
connectivity
system—and
hence
matroid
graph—is
so-called
tree
tangles
see
example
tree
displays
certain
way
maximal
tangles
ideally
one
would
like
able
associate
tree
connectivity
system
displays
maximal
tangles
representatives
interesting
separations
within
tangles
unfortunately
seem
possible
separations
focus
paper
however
might
possible
attention
restricted
certain
subsets
separations
end
mind
deﬁne
means
collection
separations
tree
compatible
section
tree-compatible
collection
separations
displayed
tree-
like
way
may
associate
tree
connectivity
system
simultaneously
displays
maximal
tangles
certain
interesting
collections
tree-compatible
separations
within
maximal
tangles
leave
question
future
research
speciﬁcally
paper
organised
follows
section
contains
basic
section
deﬁnitions
results
connectivity
systems
tangles
deﬁne
notion
equivalence
k-separations
connectivity
system
respect
ﬁxed
tangle
order
also
deﬁne
means
k-separation
connectivity
system
sequential
respect
ﬁxed
tangle
order
section
introduce
k-ﬂowers
enable
display
collection
crossing
k-separations
section
study
non-sequential
k-separations
interact
k-ﬂowers
prove
theorem
5.10
says
introduce
notion
robustness
tangles
non-sequential
k-separations
interact
maximal
k-ﬂower
coherent
way
section
contains
deﬁnitions
results
tree
decomposi-
tions
finally
section
prove
main
theorem
connectivity
systems
tangles
let
ﬁnite
set
let
integer-valued
function
subsets
call
symmetric
call
submodular
connectivity
function
integer-valued
function
subsets
symmetric
submodular
connectivity
system
ordered
pair
consisting
ﬁnite
set
connectivity
function
let
connectivity
system
let
positive
integer
partition
called
k-separation
subset
said
k-separating
connectivity
function
clear
context
shall
often
abbreviate
k-separation
k-separating
set
k-separation
k-separating
set
respectively
k-separating
set
k-separation
exact
note
consider
k-separation
unordered
partition
make
assumptions
number
elements
sets
make
use
following
elementary
properties
connectivity
func-
tions
lemma
2.1
lemma
2.3
connectivity
function
submodularity
connectivity
function
frequently
used
following
form
write
uncrossing
mean
application
lemma
2.2
lemma
2.2.
let
k-separating
subsets
k-separating
k-separating
tangles
introduced
graphs
robertson
seymour
extended
connectivity
systems
geelen
gerards
robertson
whittle
positive
integer
tangle
order
connectivity
system
collection
subsets
following
properties
hold
-separation
contains
let
tangle
order
connectivity
system
subset
-strong
contained
member
otherwise
-weak
easy
see
supersets
-strong
sets
-strong
subsets
-weak
sets
-weak
partition
-strong
-strong
set
otherwise
-weak
particular
k-separation
-strong
-strong
sets
otherwise
-weak
number
uncrossing
arguments
make
use
fact
partition
-strong
neither
member
unexplained
context
use
phrase
-strong
k-separating
set
-strong
k-separation
without
mention
order
tangle
implicit
order
tangles
vertically
k-connected
matroids
recall
matroid
loosely
vertically
k-connected
every
-separation
either
say
matroid
vertically
k-connected
mean
loosely
vertically
k-connected.
degeneracies
arise
low
rank
past
vertically
k-connected
matroid
unique
tangle
lemma
2.3.
let
vertically
k-connected
matroid
max
unique
tangle
order
moreover
subset
belongs
proof
let
ﬁrst
show
tangle
order
property
follows
immediately
follows
deﬁnition
vertical
k-connectivity
say
thus
holds
consider
say
immediately
contradicts
fact
case
see
contradicting
fact
conclude
also
holds
indeed
tangle
order
remains
show
unique
let
tangle
order
say
-separation
deﬁnition
vertical
k-connectivity
may
assume
assume
choose
contradict
thus
iterating
procedure
leads
contradiction
thus
conclude
interpreting
lemma
2.3
k-connected
matroids
obtain
corollary
2.4.
let
k-connected
matroid
|e|
max
unique
tangle
order
moreover
subset
belongs
|a|
vertically
k-connected
matroid
max
denote
unique
tangle
order
thus
subset
tk-weak
partition
tk-strong
particular
k-connected
tk-weak
|a|
partition
tk-strong
|a|
sequential
equivalent
k-separations
section
tangle
order
connectivity
system
focus
k-separations
-strong
deﬁne
natural
notion
equivalence
-strong
k-separations
deﬁne
means
-strong
k-separation
sequential
respect
let
tangle
order
connectivity
system
-strong
k-separating
set
fully
closed
respect
k-separating
every
non-empty
-weak
set
particular
observe
k-separating
set
proper
subset
fully
closed
respect
-strong
set
separating
lemma
2.1
abbreviate
fully
closed
respect
fully
closed
tangle
clear
context
shall
show
every
-strong
k-separating
set
contained
unique
minimal
k-separating
set
fully
closed
respect
following
lemma
main
step
towards
lemma
3.1.
let
tangle
order
connectivity
system
let
-strong
k-separating
set
fully-closed
k-separating
sets
contain
fully-closed
k-separating
set
proof
let
maximal
respect
properties
assume
towards
contradiction
fully
closed
exists
non-empty
-weak
set
contained
k-separating
properly
contains
contradiction
maximality
therefore
switching
may
assume
meets
partition
-strong
contains
-strong
set
contains
-strong
set
intersection
k-separating
sets
union
k-separating
uncrossing
contradiction
fully
closed
omit
proof
next
result
follows
lemma
3.1
straightforward
induction
corollary
3.2.
let
tangle
order
connectivity
system
let
-strong
k-separating
set
let
set
fully-closed
separating
sets
contain
fully-closed
k-separating
set
contains
let
tangle
order
connectivity
system
let
-strong
k-separating
set
intersection
fully-closed
k-separating
sets
contain
denote
fclt
called
full
closure
respect
corollary
3.2
see
fclt
minimal
respect
fully-closed
k-separating
set
contains
abbreviate
full
closure
respect
full
closure
tangle
clear
context
let
tangle
order
connectivity
system
omit
routine
proof
next
lemma
shows
full
closure
respect
closure
operator
set
-strong
k-separating
sets
lemma
3.3.
let
tangle
order
connectivity
system
let
-strong
k-separating
sets
following
hold
fclt
fclt
fclt
iii
fclt
fclt
fclt
let
tangle
order
connectivity
system
let
-strong
k-separating
sets
say
-equivalent
easy
see
-equivalence
equivalence
fclt
fclt
relation
set
-strong
k-separating
sets
follows
may
suppress
tangle
say
equivalent
tangle
clear
context
let
-strong
k-separating
set
partial
k-sequence
i=1
pairwise
disjoint
non-empty
-weak
subsets
sequence
i=1
fclt
proof
suppose
i=1
k-separating
lemma
3.4.
let
tangle
order
connectivity
system
let
-strong
k-separating
set
i=1
partial
k-sequence
tained
fclt
partition
i=1
fclt
-strong
tains
-strong
set
-strong
set
fclt
thus
uncrossing
k-separating
sets
i=1
partial
k-sequence
i=1
contained
fclt
fclt
fclt
-strong
set
let
smallest
index
con-
i=1
fclt
i=1
fclt
con-
i=1
fclt
contains
i=1
fclt
i=1
fclt
see
fclt
∪xj
k-separating
contradiction
fclt
fully
closed
following
immediate
corollary
lemma
3.4
lemma
3.3.
corollary
3.5.
let
tangle
order
connectivity
system
let
-strong
k-separating
set
i=1
partial
k-sequence
i=1
fclt
let
-strong
k-separating
set
let
fclt
i=1
i=1
partial
k-sequence
easy
see
poset
partial
k-sequence
i=1
i=1
maximal
poset
next
characterise
full
closure
terms
partial
k-sequences
said
maximal
lemma
3.6.
let
tangle
order
connectivity
system
let
-strong
k-separating
set
let
i=1
partial
k-sequence
i=1
maximal
i=1
i=1
lemma
3.4.
conversely
assume
fclt
proof
assume
fclt
lemma
3.4
closed
suppose
i=1
sm+1
empty
-weak
subset
xm+1
partial
k-sequence
sm+1
i=1
maximal
thus
fully-closed
k-separating
set
contains
fclt
therefore
fclt
i=1
maximal
i=1
maximal
follows
i=1
fully
i=1
fully
closed
non-
i=1
i=1
i=1
i=1
i=1
fclt
claim
i=1
contradiction
k-separating
hence
m+1
i=1
i=1
required
extend
relation
-equivalence
set
-strong
separations
natural
way
let
-strong
separations
-equivalent
fclt
fclt
fclt
fclt
easy
see
-equivalence
equivalence
rela-
tion
set
-strong
k-separations
tangle
clear
context
shall
abbreviate
-equivalent
equivalent
let
k-separating
set
say
-sequential
e−x
strong
fclt
k-separation
-sequential
-sequential
k-separating
set
tangle
clear
context
shall
use
sequential
non-sequential
instead
-sequential
-sequential
respectively
clear
every
non-sequential
k-separation
must
-strong
k-separation
remainder
section
devoted
developing
useful
lemmas
k-separations
connectivity
function
-equivalent
respect
tangle
order
following
lemma
provides
economical
test
equivalence
non-
sequential
k-separations
lemma
3.7.
let
tangle
order
connectivity
system
let
two
non-sequential
k-separations
-equivalent
either
fclt
fclt
fclt
fclt
proof
one
direction
lemma
trivial
direction
assume
fclt
fclt
set
-strong
k-separating
set
non-sequential
k-separation
let
i=1
maximal
par-
tial
k-sequence
i=1
maximal
partial
k-sequence
i=1
i=1
partial
k-sequences
i=1
cn−i+1
fclt
lemma
3.4.
lemma
3.3
since
subset
fclt
fclt
fclt
indeed
equivalent
follows
lemma
3.6
i=1
am−i+1
fclt
i=1
fclt
fclt
am−i+1
i=1
cn−i+1
following
lemma
contains
elementary
results
-equivalence
-strong
k-separations
used
frequently
lemma
3.8.
let
tangle
order
connectivity
system
let
-strong
k-separation
non-empty
-weak
set
k-separating
-strong
-equivalent
non-sequential
k-separation
non-empty
weak
set
r∪a
k-separating
r∪a
g−a
-equivalent
iii
non-sequential
k-separation
fclt
fclt
-equivalent
non-sequential
k-separation
k-separating
set
fclt
-equivalent
proof
suppose
non-empty
-weak
set
k-separating
-strong
partial
k-sequence
fclt
fclt
fclt
fclt
corollary
3.5.
prove
show
-strong
apply
assume
towards
contradiction
-weak
partial
sequence
follows
lemma
3.4
fclt
contradiction
non-sequential
iii
suppose
induction
i=1
partial
k-sequence
follows
i=1
-equivalent
i=1
maximal
partial
k-sequence
fclt
i=1
lemma
3.6
fclt
−fclt
-equivalent
prove
ﬁrst
observe
fclt
fclt
fclt
iii
thus
fclt
lemma
3.3
follows
fclt
fclt
furthermore
fact
fclt
follows
fclt
fclt
fclt
lemma
3.3.
i=1
particular
primary
aim
display
non-sequential
k-separations
tree
structure
work
speciﬁc
collection
non-sequential
separations
little
additional
cost
let
set
non-sequential
k-separating
sets
-strong
com-
plements
let
k-separation
say
-separation
set
said
tree
compatible
following
hold
-separation
-strong
separation
-equivalent
separation
-strong
k-separation
example
diﬃcult
see
set
non-sequential
separating
sets
-strong
complements
tree
compatible
case
-separation
simply
non-sequential
k-separation
frequently
make
use
fact
-separation
particular
non-sequential
k-separation
vertically
k-connected
matroids
let
vertically
k-connected
matroid
whose
rank
least
max
recall
denotes
unique
tangle
order
recall
set
strong
thus
exactly
k-separating
set
tk-strong
exactly
k-separating
fully
closed
relative
every
subset
partial
k-sequence
sequence
subsets
i=1
pairwise
disjoint
non-empty
i=1
k-separating
interpretations
apply
strictly
k-connected
except
replace
rank
cardinality
statements
leads
notion
equivalence
k-separating
sets
k-separations
vertically
k-connected
matroids
strictly
k-connected
matroids
3-connected
notions
equivalence
precisely
equivalence
3-separations
deﬁned
oxley
semple
whittle
4-connected
precisely
equivalence
4-separations
deﬁned
aikin
oxley
lemmas
section
obvious
specialisation
interpreted
flowers
tangle
let
tangle
order
connectivity
system
let
positive
integer
-strong
partition
k-ﬂower
petals
pi+1
k-separating
sets
subscripts
interpreted
modulo
next
deﬁne
fundamental
notions
k-ﬂowers
natural
extensions
analogous
notions
ﬂowers
3-connected
matroids
given
let
tangle
order
connectivity
system
let
k-ﬂower
k-separating
set
k-separation
said
displayed
union
petals
non-empty
subset
write
si∈i
k-ﬂower
called
k-anemone
k-separating
non-empty
subset
k-daisy
k-separating
precisely
non-empty
subsets
whose
members
form
consecutive
set
cyclic
order
every
k-ﬂower
k-ﬂower
connectivity
function
see
following
immediate
consequence
theorem
1.1
corollary
4.1.
every
k-ﬂower
either
k-anemone
k-daisy
let
tangle
order
connectivity
system
let
tree
compatible
set
deﬁne
relation
set
k-ﬂowers
follows
let
k-ﬂowers
say
every
-separation
displayed
-equivalent
-separation
displayed
straightforward
verify
relation
quasi-
order
set
k-ﬂowers
say
-equivalent
k-ﬂowers
respect
thus
k-ﬂowers
-equivalent
respect
display
-equivalence
k-separations
exactly
-separations
note
tangle
set
clear
context
shall
abbreviate
-equivalent
respect
equivalent
let
k-ﬂower
let
tree
compatible
set
k-anemone
arbitrary
permutation
set
easy
see
k-ﬂower
equivalent
similarly
k-daisy
permutation
set
corresponds
symmetry
regular
n-gon
easy
see
k-ﬂower
equivalent
say
equal
labels
often
use
phrase
labels
mean
appropriate
permutation
petals
describe
fundamental
method
obtaining
new
k-ﬂowers
old
let
k-ﬂower
ordered
partition
concatenation
indices
pji−1+1
pji
diﬃcult
prove
concatenation
k-ﬂower
also
k-ﬂower
concatenation
say
reﬁnes
following
economical
way
show
-strong
partition
k-ﬂower
lemma
4.2.
let
tangle
order
connectivity
system
let
let
-strong
partition
pi+1
k-separating
k-ﬂower
proof
suppose
pi+1
k-separating
ﬁrst
show
pn∪p1
k-separating
pn∪p1
k-separating
p2∪p3
k-separating
symmetric
sets
k-separating
intersection
set
since
partition
−p3
-strong
deduce
p2∪p3
∪p4
k-separating
uncrossing
repeated
uncrossings
deduce
·∪pn−1
k-separating
complement
·∪pn−1
∪p1
k-separating
thus
union
two
members
consecutive
cyclic
order
k-separating
furthermore
set
intersection
k-separating
sets
pi−1
pi+1
subscripts
interpreted
modulo
since
partition
pi−1
pi+1
pi−1
pi+1
-strong
pi−1
pi+1
thus
k-separating
uncrossing
pi−1
pi+1
therefore
k-ﬂower
let
tangle
order
connectivity
system
let
tree
compatible
set
s-order
k-ﬂower
minimum
number
petals
k-ﬂower
-equivalent
respect
equivalence
k-separations
k-ﬂower
s-order
one
displays
separations
k-ﬂower
s-order
two
displays
exactly
one
-separation
k-ﬂower
s-order
least
three
displays
least
two
-separations
k-ﬂower
s-tight
equivalent
k-ﬂower
fewer
petals
let
let
k-ﬂower
petal
-loose
fclt
petal
labels
consecutive
cyclic
order
next
result
shows
k-ﬂowers
-loose
petals
s-tight
lemma
4.3.
let
tangle
order
connectivity
system
let
tree
compatible
set
let
let
k-ﬂower
fclt
concatenation
-equivalent
respect
proof
assume
fclt
let
since
reﬁnes
follows
immediately
assume
-separation
displayed
contained
either
displayed
thus
may
assume
switching
claim
partition
-separation
-equivalent
set
union
k-separating
sets
intersection
separating
uncrossing
p1∪p2
moreover
g−p1
contains
petal
non-sequential
k-separation
fclt
fclt
lemma
3.3.
thus
-strong
k-separation
lemma
3.3
follows
fclt
fclt
fclt
fclt
non-sequential
k-separation
non-
sequential
k-separation
hence
-equivalent
fact
fclt
fclt
lemma
3.7
separation
displayed
thus
indeed
-equivalent
k-ﬂowers
respect
lemma
4.4.
let
tangle
order
connectivity
system
let
tree
compatible
set
k-ﬂower
s-order
least
two
proof
assume
k-ﬂower
s-order
least
two
displays
least
one
-separation
either
must
contain
lemma
4.5.
let
tangle
order
connectivity
system
let
tree
compatible
set
let
k-ﬂower
s-order
least
two
-loose
petals
non-empty
-weak
set
k-separating
-strong
proof
let
non-empty
-weak
set
separating
4.5.1.
k-separating
subproof
let
set
union
separating
sets
∪p2
·∪pi
set
∪p2
·∪pi
contains
-strong
set
avoids
-strong
set
partition
pi+1
-strong
since
set
intersection
set
k-separating
uncrossing
assume
-weak
4.5.1
sequence
partial
k-sequence
thus
fclt
lemma
3.4
fclt
contradiction
non-sequential
k-separating
set
lemma
4.4.
may
therefore
assume
-strong
seeking
contradiction
suppose
-weak
may
assume
reversing
order
petals
necessary
set
pi−1
intersection
separating
sets
pi−1
pi−1
since
union
pi−1
pi−1
-strong
avoids
-strong
set
partition
-strong
pi−1
k-separating
uncrossing
pi−1
pi−1
partial
k-sequence
pi−1
fclt
pi−1
lemma
3.4
contradiction
-loose
petals
next
lemma
relates
equivalence
k-separations
equivalence
ﬂowers
lemma
4.6.
let
tangle
order
connectivity
system
let
tree
compatible
set
let
k-ﬂower
s-order
least
two
-loose
petals
non-empty
-weak
set
k-separating
k-ﬂower
-equivalent
respect
fclt
fclt
fclt
fclt
proof
suppose
non-empty
-weak
set
k-separating
ﬁrst
show
k-ﬂower
follows
lemma
4.5
partition
-strong
remains
show
member
k-separating
union
two
consecutive
members
k-separating
follows
lemma
3.8
assume
follows
uncrossing
k-separating
thus
k-ﬂower
may
therefore
assume
set
union
k-separating
sets
whose
intersection
partition
clearly
strong
thus
k-separating
uncrossing
moreover
set
pi+1
intersection
k-separating
sets
pi+1
whose
union
-strong
set
avoids
-strong
set
pi+1
pi+1
k-separating
uncrossing
pi+1
thus
satisﬁes
hypotheses
lemma
4.2
k-ﬂower
show
-equivalent
respect
suppose
-separation
displayed
switching
may
assume
union
separating
sets
whose
intersection
since
partition
-strong
follows
thus
k-separating
uncrossing
thus
-equivalent
k-separation
lemma
3.8
-separation
moreover
displayed
thus
suppose
-separation
displayed
switching
may
assume
let
easy
check
k-separating
set
follows
k-separating
set
uncrossing
k-separation
-equivalent
lemma
3.8
thus
-separation
displayed
establishes
let
partial
k-sequence
observe
partial
k-sequence
follows
immediately
corollary
3.5
fclt
fclt
next
result
shows
certain
concatenations
tight
k-ﬂowers
-loose
petals
lemma
4.7.
let
tangle
order
connectivity
system
let
tree
compatible
set
let
s-tight
k-ﬂower
s-order
least
three
let
pj+1
-separation
concatenation
pj+1
-loose
petals
proof
suppose
·∪pj
pj+1
·∪pn
-separation
let
let
pj+1
lemma
immediately
holds
may
assume
seeking
contradiction
suppose
-loose
petal
-loose
petals
lemma
4.3
may
assume
pj+1
fclt
let
i=1
maximal
partial
k-sequence
i=1
partition
∪pj+1
∪x1
∪pj+1
∪x1
-strong
pj+1
contains
-strong
set
pj+1
contains
-strong
set
fclt
thus
pj+1
follows
uncrossing
sets
pj+1
whose
union
pj+1
pj+1
k-separating
process
i=1
pj+1
k-separating
pj+1
⊆sm
clearly
repeated
removing
empty
terms
sequence
pj+1
i=1
partial
k-sequence
pj+1
fclt
lemma
3.4
contradiction
-loose
petals
following
lemma
useful
locating
-separations
displayed
k-ﬂower
lemma
4.8.
let
tangle
order
connectivity
system
let
tree
compatible
set
let
k-ﬂower
s-order
least
three
let
inequivalent
-separations
displayed
-separation
-equivalent
fclt
fclt
-separation
a′′
b′′
-equivalent
displayed
a′′
proof
suppose
-separation
-equivalent
fclt
fclt
may
assume
labels
let
set
indices
let
since
particular
non-sequential
k-separations
fclt
fclt
follows
meets
thus
non-empty
set
indices
moreover
easily
seen
k-separating
set
fact
fclt
follows
separation
displayed
-equivalent
lemma
3.8
thus
-separation
flowers
vertically
k-connected
matroids
let
vertically
k-connected
matroids
max
ﬂower
relative
partition
∪pi+1
k-separating
particular
strictly
k-connected
replace
condition
condition
|pi|
via
interpretations
lemmas
section
straightforward
specialisations
ﬂowers
vertically
k-connected
matroids
conformity
let
tangle
order
connectivity
system
let
tree
compatible
set
k-ﬂower
s-maximal
maximal
quasi-order
main
goal
section
prove
theorem
5.10
loosely
stated
show
tangle
order
satisﬁes
certain
robustness
condition
every
-separation
conforms
s-tight
s-maximal
ﬂower
ﬁrst
study
-separations
interact
k-ﬂowers
develop
necessary
lemmas
prove
theorem
5.10.
avoid
cumbersome
statements
assume
remainder
section
tangle
order
connectivity
system
tree
compatible
set
begin
following
easy
lemma
certain
subsets
petals
k-ﬂower
lemma
5.1.
let
let
k-ﬂower
let
proper
non-empty
subset
-strong
set
proof
suppose
-strong
set
thus
-strong
partition
suppose
belongs
-strong
let
let
k-ﬂower
let
proper
non-empty
set
k-separation
crosses
union
petals
non-empty
sets
say
strongly
crossed
-strong
sets
weakly
crossed
-weak
sets
-strong
k-separation
said
conform
k-ﬂower
either
-equivalent
k-separation
displayed
-equivalent
k-separation
property
contained
petal
let
k-ﬂower
let
-separation
conform
easy
see
crosses
petal
would
like
show
k-ﬂower
reﬁnes
displays
-separation
-equivalent
-strong
k-separation
called
φ-minimum
among
separations
-equivalent
crosses
minimum
number
petals
lemma
5.2.
let
let
k-ﬂower
let
proper
non-empty
subset
k-separating
let
φ-minimum
-separation
crosses
-strong
weakly
crossed
members
iii
weakly
crossed
sequential
k-separating
set
proof
assume
seeking
contradiction
suppose
-weak
k-separating
uncrossing
-equivalent
lemma
3.8.
crosses
fewer
petals
contradiction
φ-minimum
ﬁrst
show
seeking
contradiction
assume
switching
-strong
contradiction
weakly
crossed
thus
follows
lemma
5.1
iii
observe
-strong
k-separating
set
proper
non-empty
subset
k-separating
-weak
sets
moreover
partial
k-sequence
thus
fclt
lemma
3.4
fclt
next
lemma
shows
k-separating
proper
non-empty
union
petals
either
strongly
weakly
crossed
φ-minimum
-separation
lemma
5.3.
let
let
k-ﬂower
let
proper
non-empty
subset
k-separating
φ-minimum
-separation
crosses
either
strongly
weakly
crossed
proof
assume
φ-minimum
-separation
crosses
weakly
crosses
lemma
5.1
thus
may
assume
switching
-strong
lemma
5.2
thus
lemma
5.1
also
-strong
lemma
5.2
therefore
strongly
crosses
next
lemma
shows
-separation
conform
s-tight
k-ﬂower
s-order
two
k-ﬂower
reﬁnes
displays
-separation
-equivalent
lemma
5.4.
let
s-tight
k-ﬂower
-separation
conform
k-ﬂower
reﬁnes
displays
-separation
-equivalent
proof
suppose
-separation
conform
may
assume
possibly
replacing
-equivalent
separation
φ-minimum
clearly
crossed
conform
claim
k-ﬂower
since
s-tight
follows
-separation
lemma
5.2
iii
fact
non-sequential
strongly
crossed
thus
-strong
partition
furthermore
union
two
consecutive
petals
member
k-separating
thus
k-ﬂower
lemma
4.2
let
let
k-ﬂower
suppose
φ-minimum
-separation
conform
let
proper
non-empty
subset
k-separating
say
-strong
either
crossed
strongly
crossed
-weak
weakly
crossed
lemma
5.3
either
-weak
-strong
evidently
petal
-strong
-strong
next
lemma
shows
-weak
petals
obstacles
ﬁnding
k-ﬂower
reﬁnes
displays
-separation
equivalent
lemma
5.5.
let
let
k-ﬂower
let
φ-minimum
-separation
conform
every
petal
-strong
k-ﬂower
reﬁnes
displays
proof
suppose
every
petal
-strong
labels
may
assume
crosses
let
5.5.1.
switching
-strong
subproof
crosses
-strong
switching
may
assume
-strong
-strong
thus
may
assume
cross
switching
assume
-strong
avoids
contradiction
conform
thus
meets
-strong
hence
-strong
assume
labels
chosen
-strong
5.5.2.
k-ﬂower
subproof
members
partition
-strong
furthermore
k-separating
pi+1
k-separating
thus
lemma
4.2
suﬃces
show
k-separating
p1∪p2∪r
3∩g
lemma
5.1
uncrossing
p1∪p2
see
k-separating
furthermore
lemma
5.1
k-separating
uncrossing
follows
5.5.2
induction
number
petals
crossed
k-ﬂower
reﬁnes
displays
s-tight
k-ﬂowers
need
two
-strong
petals
guarantee
every
petal
-strong
show
ﬁrst
need
following
lemma
lemma
5.6.
let
let
k-ﬂower
let
φ-minimum
-separation
conform
weak
concatenation
-strong
equivalent
k-ﬂower
proof
suppose
-weak
concatenation
-strong
5.6.1.
switching
-strong
subproof
assume
ﬁrst
crosses
-strong
switching
may
assume
strong
thus
-strong
assume
cross
switching
may
assume
-strong
contradiction
conform
thus
either
crosses
-strong
assume
labelled
strong
a∩r
lemma
5.1
since
∪a∪r
avoids
set
k-separating
uncrossing
another
uncrossing
argument
whose
intersection
shows
union
k-separating
finally
intersection
k-separating
sets
whose
union
a∪p1
k-separating
uncrossing
∪p2
partial
k-sequence
fclt
lemma
3.4.
thus
equivalent
k-ﬂower
∪p2
lemma
4.3.
lemma
5.7.
let
let
s-tight
k-ﬂower
let
φ-minimal
-separation
conform
two
-strong
petals
every
petal
-strong
proof
assume
two
-strong
petals
seeking
contradiction
suppose
-weak
petal
labels
may
assume
-weak
-strong
-strong
p1∪p2
-strong
p1∪p2
concatenation
-weak
∪p2
-strong
thus
equivalent
k-ﬂower
p1∪p2
lemma
5.6
contradiction
s-tight
thus
every
petal
-strong
consequence
lemma
5.7
lemma
5.2
iii
reﬁne
s-tight
k-ﬂowers
s-order
lemma
5.8.
let
s-tight
k-ﬂower
-separation
conform
k-ﬂower
reﬁnes
displays
-separation
-equivalent
proof
assume
φ-minimum
-separation
con-
form
s-tight
k-ﬂower
s-order
three
displays
least
two
inequivalent
-separations
lemma
5.2
iii
-separations
displayed
strongly
crossed
may
assume
-strong
petals
-strong
lemma
5.7.
follows
lemma
5.5
k-ﬂower
reﬁnes
displays
-separation
-equivalent
one
better
lemma
5.7
lemma
5.9.
let
let
s-tight
k-ﬂower
let
φ-minimum
-separation
conform
one
-strong
petal
every
petal
-strong
proof
two
-strong
petals
conclusion
follows
lemma
5.7.
assume
towards
contradiction
exactly
one
strong
petal
labels
assume
-strong
since
s-tight
k-ﬂower
s-order
least
three
displays
separation
-equivalent
lemma
5.2
iii
-strong
must
contain
least
two
petals
assume
petals
labelled
-strong
also
-strong
thus
concatenation
-weak
-strong
follows
lemma
5.6
k-ﬂower
equivalent
contradiction
s-tight
thus
two
-strong
petals
lemma
5.7
every
petal
-strong
unfortunately
lemma
5.9
much
say
arbitrary
tangles
connectivity
system
consider
8-element
rank-4
matroid
represented
geometrically
cube
see
example
646
point
planes
six
faces
cube
six
diagonal
planes
let
ground
set
let
rank
function
positive
integer
deﬁne
function
subsets
otherwise
straightforward
prove
polymatroid
let
connectivity
function
unique
tangle
order
let
set
non-sequential
-separating
sets
-strong
complements
notation
figure
partition
s-tight
s-maximal
-ﬂower
however
non-sequential
-separation
conform
obtain
analogous
matroid
examples
standard
construction
matroid
elements
freely
added
polymatroid
element
let
positive
integer
let
collection
subsets
satisfying
axioms
robust
tangle
order
connectivity
system
following
property
holds
rt3
note
every
robust
tangle
order
certainly
tangle
order
position
achieve
main
goal
section
figure
matroid
theorem
5.10.
let
robust
tangle
order
connectivity
system
let
tree
compatible
set
s-tight
s-maximal
k-ﬂower
every
-separation
conforms
proof
let
s-tight
s-maximal
k-ﬂower
assume
theorem
fails
φ-minimum
-separation
conform
clearly
lemma
5.4
lemma
5.8
may
assume
assume
towards
contradiction
every
petal
-weak
let
pn−i−1
let
·∪pn−i+1
consider
concatenation
pn−i
petals
either
-weak
-strong
lemma
5.3
-weak
satisﬁes
rt3
petals
pn−i
-weak
must
-strong
moreover
bn−3
-strong
an−3
-weak
thus
smallest
index
-strong
bj−1
-weak
aj−1
-strong
rt3
aj−1
concatenation
aj−1
-strong
follows
lemma
5.6
k-ﬂower
equivalent
contradiction
s-tight
thus
-strong
petal
follows
lemma
5.9
every
petal
-strong
lemma
5.5
k-ﬂower
reﬁnes
displays
-separation
-equivalent
contradiction
s-maximality
partial
k-trees
tree
used
obtain
tree
decomposition
3-connected
matroids
π-labelled
tree
called
maximal
partial
3-tree
use
analogous
π-labelled
tree
obtain
tree
decomposition
theorem
7.1.
exposition
given
therefore
closely
follow
oxley
semple
whittle
let
tangle
order
connectivity
system
let
partition
note
allow
members
empty
let
tree
every
member
labels
vertex
vertices
may
unlabelled
vertex
multiply
labelled
say
π-labelled
tree
vertices
labelled
members
called
bag
vertices
members
called
bags
terminal
bag
bag
labels
leaf
let
π-labelled
tree
deﬁne
partitions
induced
certain
subgraphs
let
subtree
union
bags
label
vertices
subset
displayed
let
edge
partition
displayed
partition
displayed
connected
components
t\e
let
vertex
bag
vertex
partition
displayed
partition
displayed
connected
components
edges
incident
natural
one-to-one
correspondence
connected
components
hence
members
partition
displayed
follows
cyclic
ordering
imposed
edges
incident
cyclically
order
members
partition
displayed
corresponding
order
let
vertex
π-labelled
tree
bag
vertex
let
cyclic
ordering
edges
incident
ﬂower
vertex
partition
displayed
cyclic
order
corresponding
k-ﬂower
k-separations
displayed
k-ﬂower
corresponding
k-ﬂower
vertex
called
k-separations
displayed
k-separation
displayed
displayed
edge
k-ﬂower
vertex
-strong
k-separation
conforms
either
-equivalent
k-separation
displayed
-equivalent
k-separation
property
contained
bag
let
tangle
order
connectivity
system
let
tree
compatible
set
partial
-tree
π-labelled
tree
partition
following
properties
hold
edge
partition
displayed
-strong
k-separation
incident
two
bag
vertices
-separation
non-bag
vertex
labelled
either
moreover
labelled
cyclic
ordering
edges
incident
vertex
labelled
partition
displayed
k-anemone
s-order
least
three
-loose
petals
vertex
labelled
partition
displayed
cyclic
order
induced
cyclic
ordering
edges
incident
k-daisy
s-order
least
three
-loose
petals
every
-separation
conforms
note
displayed
edge
partial
-tree
follows
incident
two
bag
vertices
lemma
4.4
incident
k-ﬂower
vertex
deﬁne
relation
set
partial
-trees
let
partial
-trees
-separation
displayed
-equivalent
-separation
displayed
straightforward
check
quasi-order
set
partial
-trees
-equivalent
respect
notions
equivalence
developed
tangle
set
clear
context
shall
abbreviate
equivalent
respect
equivalent
partial
-tree
s-maximal
maximal
quasi-order
partial
-tree
trivial
display
-separations
let
k-ﬂower
let
tree
compatible
set
φ-labelled
tree
associate
consists
single
bag-vertex
labelled
bag
consists
two
adjacent
bag
vertices
labelled
respectively
assume
let
tree
vertex
set
adjacent
labelled
bag
finally
k-daisy
edges
incident
non-bag
vertex
given
cyclic
ordering
vv1
vvn
s-tight
k-ﬂower
easily
seen
associated
φ-labelled
tree
satisﬁes
ﬁrst
four
partial
-tree
axioms
moreover
following
immediate
consequence
theorem
5.10.
corollary
6.1.
let
robust
tangle
order
connectivity
system
let
tree
compatible
set
s-tight
s-maximal
k-ﬂower
φ-labelled
tree
associated
partial
-tree
next
result
used
proof
theorem
7.1.
lemma
6.2.
let
tangle
order
connectivity
system
let
tree
compatible
set
-separation
s-tight
s-maximal
k-ﬂower
displays
-separation
-equivalent
proof
assume
-separation
s-tight
k-ﬂower
evidently
displays
let
s-maximal
k-ﬂower
let
φ′′
s-tight
k-ﬂower
equivalent
φ′′
s-tight
s-maximal
k-ﬂower
φ′′
φ′′
displays
-separation
-equivalent
remainder
section
devoted
developing
preliminary
lem-
mas
needed
prove
following
lemma
main
component
proof
theorem
7.1.
lemma
6.3.
let
robust
tangle
order
connectivity
system
let
tree
compatible
set
let
non-trivial
partial
tree
-separation
-equivalent
-separation
displayed
partial
-tree
displays
-separation
displayed
let
partial
-tree
terminal
bag
partition
-separation
called
s-terminal-
bag
main
step
towards
proof
lemma
6.3
show
s-terminal-bag
-separation
fclt
fclt
partial
-tree
equivalent
terminal
bag
say
two
k-separations
cross
inter-
sections
non-empty
set
k-separations
laminar
two
separations
cross
following
straightforward
lemma
omit
routine
proof
lemma
6.4.
partial
-tree
set
k-separations
displayed
edges
laminar
lemma
6.5.
let
tangle
order
connectivity
system
let
tree
compatible
set
let
partial
-tree
let
s-terminal-bag
labelling
leaf
non-empty
-weak
set
k-separating
partial
-tree
equivalent
s-terminal-bag
proof
suppose
non-empty
-weak
set
k-separating
k-ﬂower
corresponding
k-ﬂower
vertex
may
assume
petals
labelled
let
π-labelled
tree
obtained
relabelling
leaf
labelled
bag
bag
vertex
labelled
bag
bag
vertex
labelled
bag
non-bag
vertex
labelled
non-bag
vertex
labelled
moreover
cyclic
ordering
imposed
edges
incident
cyclic
ordering
imposed
edges
incident
clear
bag
vertices
non-bag
vertices
also
see
s-terminal-bag
lemma
3.8
remains
show
partial
-tree
equivalent
follows
immediately
satisﬁes
following
three
sublemmas
show
satisﬁes
remaining
partial
-tree
axioms
6.5.1.
non-bag
vertex
k-ﬂower
corresponding
k-ﬂower
vertex
partition
displayed
components
k-ﬂower
equivalent
-loose
petals
subproof
assume
vertex
non-bag
vertex
k-ﬂower
corresponding
k-ﬂower
vertex
partition
displayed
ordering
components
set
union
k-separating
sets
whose
intersection
since
-strong
follows
thus
uncrossing
set
k-separating
follows
lemma
4.6
k-ﬂower
equivalent
-loose
petals
6.5.2.
edge
partition
displayed
components
′\e
-strong
k-separation
moreover
incident
two
bag
vertices
partition
displayed
components
′\e
-separation
-equivalent
-separation
displayed
components
t\e
subproof
let
edge
incident
k-ﬂower
vertex
partition
displayed
components
′\e
-strong
k-separation
6.5.1.
may
therefore
assume
incident
two
bag
vertices
also
incident
two
bag
vertices
partition
displayed
components
t\e
-separation
also
k-separation
displayed
edge
follows
lemma
6.4
cross
thus
may
assume
switching
bag
partition
displayed
components
′\e
k-separating
uncrossing
-equivalent
lemma
3.8
hence
separation
6.5.3.
every
-separation
conforms
subproof
seeking
contradiction
suppose
-separation
conform
conforms
partial
-tree
possibly
replacing
equivalent
separation
may
assume
either
displayed
contained
bag
displayed
follows
immediately
6.5.1
6.5.2
-separation
equivalent
displayed
thus
may
assume
bag
may
assume
non-empty
since
bag
show
-separation
equivalent
since
set
k-separating
uncrossing
lemma
3.8
-strong
k-separation
equivalent
hence
-separation
conforms
contradiction
follows
6.5.1
6.5.2
6.5.3
partial
-tree
moreover
follows
6.5.1
6.5.2
equivalent
partial
-trees
corollary
6.6.
let
tangle
order
connectivity
system
let
tree
compatible
set
let
partial
-tree
let
s-terminal-bag
i=1
partial
k-sequence
i=1
s-terminal-bag
next
show
partial
-tree
equivalent
partial
-tree
-equivalent
terminal
bag
i=1
partial
k-sequence
i=1
lemma
6.7.
let
tangle
order
connectivity
system
let
tree
compatible
set
let
partial
-tree
let
s-terminal-bag
non-empty
-weak
set
k-separating
partial
-tree
equivalent
s-terminal-bag
proof
assume
non-empty
-weak
set
k-separating
let
bag
vertex
labelled
modify
produce
π-labelled
tree
adding
new
vertex
adjacent
relabelling
vertex
bag
labelling
s-terminal-bag
lemma
3.8
easily
veriﬁed
satisﬁes
ﬁrst
four
partial
-tree
axioms
assume
satisfy
axiom
-separation
conform
since
partial
-tree
diﬀers
adding
changing
bag
may
assume
possibly
replacing
equivalent
-separation
non-empty
set
union
k-separating
sets
since
contains
contains
partition
-strong
thus
k-separating
uncrossing
equivalent
lemma
3.8
hence
-separation
conforms
contradiction
thus
indeed
partial
-tree
show
equivalent
partial
-trees
clear
hand
exception
every
-separation
displayed
also
displayed
equivalent
lemma
3.8
displayed
thus
also
equivalent
partial
-trees
partial
-tree
equivalent
s-terminal-bag
corollary
6.8.
let
tangle
order
connectivity
system
let
tree
compatible
set
let
partial
-tree
let
s-terminal-bag
i=1
partial
k-sequence
i=1
lemma
6.9.
let
tangle
order
connectivity
system
let
tree
compatible
set
let
partial
-tree
let
s-terminal-bag
-separation
fclt
fclt
partial
-tree
equivalent
terminal
bag
proof
assume
-separation
fclt
fclt
-equivalent
lemma
3.7.
let
i=1
maximal
partial
k-sequence
let
mal
partial
k-sequence
fclt
i=1
maxi-
i=1
fclt
i=1
lemma
3.6.
corollary
6.6
partial
-tree
equivalent
fclt
s-terminal-bag
ym−i+1
i=1
partial
k-sequence
fclt
corollary
6.8
partial
-tree
equivalent
hence
equivalent
terminal
bag
required
proof
main
theorem
prove
lemma
6.3
theorem
7.1
easily
follow
proof
lemma
6.3.
suppose
-separation
equivalent
-separation
displayed
conforms
may
assume
possibly
replacing
-equivalent
-separation
properly
contained
bag
let
vertex
labelled
distinguish
two
cases
leaf
leaf
consider
case
7.0.1
-separation
subproof
adjacent
bag
vertex
result
follows
immediately
assume
adjacent
k-ﬂower
vertex
let
k-ﬂower
corresponding
contains
hand
contained
petal
contains
petal
lemma
4.4
thus
-separation
corollary
6.8
may
assume
possibly
replacing
equiva-
lent
partial
-tree
replacing
equivalent
-separation
fully
closed
respect
let
k-separating
set
maximal
respect
property
let
e−z
7.0.2
-separation
equivalent
separation
displayed
subproof
since
e−b
contained
contained
follows
-separation
seeking
contradiction
suppose
equivalent
-separation
displayed
labels
chosen
fclt
fclt
since
non-
sequential
fclt
fclt
follows
meets
meets
union
bags
contained
thus
fclt
fclt
lemma
3.3
also
fclt
fclt
lemma
3.7.
fully
closed
follows
contradiction
choice
note
7.0.2
set
-strong
partition
-strong
hence
7.0.3.
k-separating
partial
-tree
displays
subproof
assume
k-separating
let
tree
obtained
adjoining
new
leaf
adjacent
bag
vertex
labelled
relabelled
easily
veriﬁed
satisﬁes
ﬁrst
four
partial
-tree
axioms
assume
satisfy
-separation
conform
since
conforms
partial
-tree
diﬀers
adding
changing
bag
may
assume
possibly
replacing
equivalent
-separation
non-empty
assume
ﬁrst
since
-strong
follows
member
partition
-strong
since
non-sequential
uncrossing
whose
intersection
see
k-separating
thus
equivalent
lemma
3.8
conforms
contradiction
thus
may
assume
k-separating
uncrossing
properly
contained
contradicts
choice
thus
may
assume
hence
k-separating
thus
submodularity
-strong
complement
member
follows
lemma
3.8
equivalent
displayed
conforms
contradiction
follows
contradiction
indeed
partial
-tree
clearly
moreover
-separation
displayed
thus
7.0.3
may
assume
k-separating
k-ﬂower
let
s-tight
s-maximal
k-ﬂower
displays
separation
equivalent
thus
may
assume
fclt
fclt
observe
since
fully
closed
set
contained
hence
contained
may
also
assume
labels
also
displays
-separation
equivalent
since
inequivalent
-separations
may
assume
lemma
4.8
thus
displayed
concatenation
φ′′
pj+1
lemma
6.9
partial
-tree
equivalent
terminal
bag
labelling
vertex
let
π-labelled
tree
obtained
follows
ﬁrst
adjoin
new
ﬂower
vertex
adjacent
adjoin
bag
vertices
adjacent
labelling
respectively
label
according
type
φ′′
necessary
impose
cyclic
order
vv1
vvj
edges
incident
ﬁnally
relabel
claim
partial
-tree
displays
-separation
equivalent
easily
veriﬁed
hold
also
clear
partition
displayed
k-ﬂower
φ′′
pj+1
seen
φ′′
displays
least
two
inequivalent
separations
φ′′
s-order
least
moreover
follows
lemma
4.7
φ′′
-loose
petals
thus
follows
axioms
hold
assume
satisfy
-separation
conform
since
conforms
diﬀers
changing
bag
follows
possibly
replacing
equivalent
-separation
may
assume
contained
bag
s-tight
s-maximal
ﬂower
robust
tangle
follows
theorem
5.10
conforms
thus
-separation
equivalent
fclt
fclt
either
displayed
contained
petal
assume
ﬁrst
holds
lemma
4.8
since
may
assume
displayed
φ′′
hence
displayed
contradiction
thus
may
assume
holds
suppose
contained
petal
since
fclt
fclt
set
non-empty
hence
contained
bag
contradiction
assume
contained
petal
contained
bag
assume
-separation
equivalent
lemma
3.3
lemma
3.7
displayed
conforms
contradiction
thus
every
-separation
conforms
therefore
indeed
partial
-tree
clearly
moreover
displays
-separation
equivalent
therefore
lemma
holds
case
consider
case
choose
k-separating
set
maximal
respect
property
also
contains
member
since
non-trivial
-separation
let
π-labelled
tree
obtained
adjoining
new
leaf
adjacent
bag
vertex
labelled
relabelled
7.0.4.
partial
-tree
subproof
ﬁrst
four
partial
-tree
axioms
hold
immediately
assume
hold
-separation
conform
since
conforms
diﬀers
adding
changing
bag
may
assume
possibly
replacing
equivalent
-separation
non-empty
assume
-weak
follows
since
-separation
non-sequential
k-separating
uncrossing
k-separating
sets
lemma
3.8
k-separation
-separation
equivalent
conforms
contradiction
thus
may
assume
-strong
partition
-strong
k-separating
uncrossing
contradiction
maximality
thus
satisﬁes
indeed
partial
-tree
moreover
labels
leaf
follows
case
displays
-separation
partial
-tree
equivalent
-separation
displayed
hence
displays
-separation
-equivalent
-separation
displayed
last
prove
main
theorem
theorem
7.1.
let
robust
tangle
order
connectivity
system
let
tree
compatible
set
s-maximal
partial
tree
every
-separation
-equivalent
separation
displayed
proof
assume
s-maximal
partial
-tree
-separations
theorem
holds
suppose
-separation
lemma
6.2
s-tight
s-maximal
k-ﬂower
displays
-separation
equivalent
corollary
6.1
partial
-tree
displays
separation
equivalent
thus
may
assume
non-trivial
partial
-tree
theorem
holds
else
lemma
6.3
contradict
s-maximality
collection
k-separations
non-sequential
respect
call
s-maximal
partial
-tree
maximal
partial
k-tree
k-separations
theorem
7.1
becomes
corollary
7.2.
let
robust
tangle
order
connectivity
system
maximal
partial
k-tree
every
k-separation
non-sequential
respect
equivalent
k-separation
displayed
vertically
k-connected
matroids
interpret
corollary
7.2
vertically
k-connected
matroids
recall
vertically
k-connected
matroid
whose
rank
least
max
unique
tangle
order
corollary
7.3.
let
vertically
k-connected
matroid
max
let
maximal
partial
k-tree
every
k-separation
non-sequential
respect
equivalent
k-separation
displayed
finally
note
strictly
k-connected
corollary
7.3
may
replace
condition
max
condition
max
references
aikin
oxley
structure
4-separations
4-connected
matroids
submitted
aikin
oxley
structure
crossing
separations
matroids
advances
applied
mathematics
2008
10–26
geelen
gerards
robertson
whittle
ob-
structions
branch-decomposition
matroids
journal
combinatorial
theory
series
2006
560–570
geelen
gerards
whittle
tree-
decompositions
grids
matroids
journal
combinatorial
theory
series
2009
657–667
tangles
oxley
matroid
theory
second
edition
oxford
university
press
new
york
2011
oxley
semple
whittle
structure
separations
3-connected
matroids
journal
combinatorial
theory
se-
ries
2004
257–293
oxley
semple
whittle
structure
separations
3-connected
matroids
european
journal
combinatorics
2007
1239–1261
robertson
seymour
graph
minors
obstructions
tree-decomposition
journal
combinatorial
theory
series
1991
153–190
