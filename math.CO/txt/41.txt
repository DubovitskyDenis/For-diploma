inducibility
graphs
four
vertices
school
computer
science
mcgill
university
montreal
canada
james.hirst
mail.mcgill.ca
james
hirst
abstract
consider
problem
determining
maximum
induced
density
graph
graph
vertices
limit
density
tends
inﬁnity
called
inducibility
exact
value
quantity
known
handful
small
graphs
speciﬁc
set
complete
multipartite
graphs
answering
questions
brown-sidorenko
exoo
determine
inducibility
paw
graph
proof
obtained
using
semi-
deﬁnite
programming
techniques
based
modern
language
extremal
graph
theory
describe
full
detail
accessible
setting
introduction
following
notation
graphs
deﬁne
number
induced
subgraphs
isomorphic
since
concerned
size
normalize
suitable
way
deﬁning
cid:0
deﬁne
inducibility
graph
cid:1
able
lim
n→∞
max
|=n
diﬃcult
see
limit
always
exists
recent
work
gives
strong
asymptotic
results
large
class
graphs
problem
determining
appears
non-trivial
even
cases
small
graph
let
denote
complement
graph
note
need
consider
one
graph
complementary
pair
inducibility
graphs
less
four
vertices
known
non-trivial
graphs
complement
shown
3/4
non-isomorphic
graphs
four
vertices
ﬁve
complementary
pairs
one
self-complementary
graph
case
complete
graph
four
vertices
trivial
complete
graph
exoo
gave
upper
lower
bounds
remaining
4-vertex
graphs
since
inducibility
graphs
determined
bollob´as
studied
inducibility
balanced
complete
bipartite
graphs
proved
graph
maximizes
balanced
complete
bipartite
graph
resolved
case
k2,2
complement
later
brown
sidorenko
proved
complete
bipartite
graph
graph
maximizes
also
chosen
complete
bipartite
resolving
k1,3
complement
also
gave
generalization
complete
multi-partite
graphs
along
conditions
exact
graph
known
however
inducibility
complete
tri-partite
k1,1,2
classiﬁed
conditions
remain
three
4-vertex
graphs
considering
one
complementary
pair
exact
value
unresolved
k1,1,2
paw
graph
graph
obtained
triangle
adding
pendant
edge
hpaw
path
four
vertices
brown
sidorenko
mentioned
best
construction
know
k1,1,2
balanced
complete
multipartite
graph
parts
5-equipartite
graph
convention
making
use
recent
theory
ﬂag
algebras
semi-deﬁnite
programming
techniques
used
among
papers
determine
k1,1,2
hpaw
show
construction
brown
sidorenko
fact
best
possible
detailed
account
semi-deﬁnite
method
extremal
graph
theory
easily
accessible
description
given
diﬃcult
presented
general
language
accounts
often
given
terms
hypergraphs
give
full
development
methods
obtained
results
notation
diﬀers
slightly
ﬂag
algebras
introduced
razborov
present
next
section
basic
deﬁnitions
needed
following
present
semi-deﬁnite
program
bulk
work
obtaining
results
show
interpret
output
solver
finally
give
techniques
known
new
obtaining
best
possible
proof
preliminaries
2.1
homomorphism
densities
two
graphs
graph
homomorphism
map
preserves
adjacency
i.e
every
deﬁne
probability
uniformly
chosen
map
homomorphism
quantity
called
homomorphism
density
similarly
deﬁne
tind
additional
condition
homomorphisms
also
preserve
non-adjacency
interesting
right
extremal
graph
theory
often
studies
quantity
tinj
deﬁned
probability
uniformly
chosen
injective
map
homomorphism
however
following
lemma
due
lov´asz
szegedy
shows
two
close
error
term
lemma
2.1.
every
two
graphs
tinj
cid:18
cid:19
o|v
|→∞
purposes
lemma
2.1
allow
restrict
attention
nicely
behaved
function
give
alternative
useful
deﬁnition
tind
terms
adjacency
matrix
graphs
let
independent
random
variables
take
values
uniformly
tind
/∈e
two
functions
related
m¨obius
inversion
formula
tind
tind
2.2
graphons
i=1
called
convergent
every
graph
sequence
sequence
graphs
i=1
converges
diﬃcult
construct
convergent
sequences
i=1
limits
recognized
graphs
i.e
graph
limi→∞
every
reason
extremal
solution
problem
often
stated
sequence
graphs
rather
single
graph
however
soft
analytic
approach
enables
avoid
working
sequences
extend
space
graphs
represent
limits
convergent
sequences
graphs
object
extended
space
shown
limit
convergent
graph
sequence
represented
measurable
symmetric
function
let
denote
set
functions
elements
called
graphons
extend
deﬁnition
functions
tind
graphons
let
independent
random
variables
take
values
uniformly
deﬁne
/∈e
tind
let
graph
deﬁne
graphon
follows
let
⌈xn⌉
⌈yn⌉
otherwise
comparing
easy
see
tind
tind
similarly
every
sense
graphons
natural
extension
ﬁnite
graphs
furthering
notion
lov´asz
szegedy
show
space
graphons
complete
sense
every
convergent
sequence
graphons
converges
graphon
also
set
ﬁnite
graph
dense
i∈n
convergent
sequence
graphons
exists
graphon
limi→∞
every
ﬁnite
graph
furthermore
every
graphon
exists
sequence
ﬁnite
graphs
i∈n
limi→∞
wgi
every
graph
graphons
allow
give
simpler
analogue
language
homomorphisms
graph
let
denote
group
automorphisms
deﬁne
tind
max
w∈w
tind
note
fact
maximum
attained
follows
completeness
space
graphons
compactness
2.3
quantum
graphs
k-partially
labeled
graph
graph
vertices
labeled
distinct
natural
numbers
extend
deﬁnition
partially
labeled
graphs
k-partially
labeled
graph
map
deﬁne
conditioned
event
function
j·k
maps
k-partially
labeled
graphs
graphs
unlabeling
labeled
vertices
function
seen
averaging
map
k-partially
labeled
graph
jhk
uniformly
chosen
map
deﬁne
product
k-partially
labeled
graphs
denoted
taking
disjoint
union
graphs
identifying
labeled
vertices
reducing
multiple
edges
note
deﬁnition
property
k-partially
labeled
graphs
compatible
map
let
denote
set
k-partially
labeled
graphs
together
product
structure
commutative
semigroup
let
denote
semigroup
algebra
elements
formal
ﬁnite
linear
combinations
elements
product
obtained
product
distributivity
addition
extend
deﬁnition
functions
j·k
elements
natural
way
linearity
follows
every
ﬁxed
graphon
map
function
algebra
homomorphism
let
denote
intersection
kernels
algebra
homomorphisms
words
subalgebra
obtain
quotient
algebra
/kk
elements
called
k-quantum
graphs
refer
0-quantum
graphs
simply
quantum
graphs
note
every
k-partially
labeled
graph
k-partially
labeled
graph
k-quantum
graph
ind
deﬁned
ind
note
follows
tind
ind
every
partially
labeled
graph
vertices
labeled
called
type
ﬁxed
type
let
partially
labeled
graph
labeled
vertices
induce
subgraph
isomorphic
label
preserving
isomorphism
ind
called
σ-ﬂag
let
ind
ind
σ2-ﬂags
respectively
ind
ind
since
least
one
ind
ind
zero
every
type
vertices
let
subalgebra
spanned
set
σ-ﬂag
non-isomorphic
types
vertices
orthogonal
decomposition
i=1aσi
words
every
aσi
aσj
remark
2.2.
reader
warned
notation
slightly
diﬀers
razborov
σ-ﬂag
razborov
language
corresponds
/|γ
ind
language
number
unlabeled
vertices
refers
group
label
preserving
automorphisms
believe
notation
advantage
product
algebra
operator
j·k
easier
descriptions
crux
results
relies
following
easy
lemma
lemma
2.3.
let
k-quantum
graph
graphons
i=1
αihi
proof
fix
map
let
=pn
xj=1
xi=1
αit
αiαjt
xi=1
αihi
xi=1
xj=1
xi=1
αiαjhi
remark
2.4.
follows
lemma
2.3
k-quantum
graphs
graphon
desired
result
follows
shows
function
j·k
preserves
positivity
matrix
deﬁned
jfi
fjk
positive
semi-deﬁnite
psd
see
note
write
=xi
zizjt
jfi
fjk
zifi
basis
called
semi-deﬁnite
method
extremal
graph
theory
semi-deﬁnite
method
3.1
semi-deﬁnite
program
dual
follows
reﬂection
positivity
characterizations
every
asymptotic
algebraic
inequality
subgraph
densities
follows
positive
semi-deﬁniteness
certain
inﬁnite
matrix
matrix
ﬁnite
would
possible
solve
every
inequality
eﬃciently
using
semi-deﬁnite
programming
however
since
matrix
inﬁnite
practice
one
consider
ﬁnite
sub-matrix
hope
inequality
still
holds
weaker
condition
sub-matrix
positive
semi-deﬁnite
call
approach
semi-deﬁnite
method
extremal
graph
theory
first
let
recall
standard
form
semi-deﬁnite
program
sdp
dual
primal
sdp
formulation
make
use
following
minimize
subject
=pm
i=1
fixi
cid:23
corresponding
dual
program
maximize
subject
cid:23
rn×n
given
rn×n
variables
note
refers
standard
dot
product
refers
inner
product
rn×n
deﬁned
solutions
give
upper
bounds
feasible
solutions
vice-versa
jbi
duality
refers
fact
see
e.g
feasible
quantum
graph
=pm
i=1
αihi
suppose
want
ﬁnd
min
w∈w
many
statements
asymptotic
extremal
graph
theory
converted
form
example
celebrated
goodman
bound
says
minw∈w
choose
two
parameters
large
enough
span
-vertex
graph
every
let
vertices
set
independent
k-quantum
graphs
/2⌋
span
-vertex
k-partially
labeled
graph
non-isomorphic
graphs
vertices
consider
following
semi-deﬁnite
program
i=1
αihi
assume
exactly
expansion
minimize
subject
xk1
i=1
αixhi
matrix
deﬁned
=pm
i=1
βihi
i=1
βixhi
psd
one
interpret
values
note
remark
2.4
shows
semi-deﬁniteness
constraints
fact
necessary
interpretation
solution
lower
bound
choosing
large
enough
lower
bound
often
quite
good
cases
best
possible
case
choice
however
shown
exists
quantum
graphs
choice
give
sharp
bound
fact
show
determining
value
general
quantum
graphs
undecidable
hard
see
convert
form
implement
constraints
semi-deﬁniteness
condition
make
use
fact
block
diagonal
matrix
psd
diagonal
blocks
constraint
implemented
using
one
block
ﬁrst
i=1
βihi
use
last
block
i.e
-th
block
implement
ﬁrst
constraint
want
xk1
xk1
implemented
making
use
constant
matrix
blocks
uv-th
entry
k-th
block
fi0
given
βi0
=pm
3.2
extracting
lower
bound
section
3.1
saw
converted
form
suppose
optimal
solution
dual
problem
discussion
shows
lower
bound
matrix
dual
problem
encodes
proof
extract
constraint
cid:23
xi=1
xi=1
αihi
every
let
denote
k-th
block
block
corresponds
positive
semi-deﬁniteness
constraint
created
denote
k-th
block
every
every
similarly
let
splitting
inner
product
last
block
xk1
constraint
rest
blocks
follows
xi=1
xk=1
xu=1
xv=1
αk1
use
denote
quantum
graph
αk1
slight
abuse
notation
based
fact
αk1
graphons
exchanging
order
summation
using
deﬁnition
reduces
xk=1
xu=1
xv=1
vector
xk=1jzt
zkk
remark
3.1.
matrix
cid:23
vector
k-quantum
graphs
quantum
graph
jzt
azk
trivially
positive
see
notice
map
graphon
write
=xi
deﬁned
positivity
jzt
azk
follows
lemma
2.3.
particular
remark
3.1
shows
quantum
graph
positive
i.e
every
graphon
remark
3.2.
since
positive
semi-deﬁnite
every
block
also
positive
semi-deﬁnite
per-
forming
eigenvalue
decomposition
noting
cid:23
non-negative
eigenvalues
get
useful
form
xi=1
λijg2
span
3.3
remarks
remark
3.2
see
choice
sets
key
obtaining
proof
desired
bound
best
chance
ﬁnding
proof
choose
span
entire
algebra
one
simple
choice
use
set
k-partially
labeled
graphs
/2⌋
vertices
however
resulting
matrix
dense
interests
obtain
small
simple
proof
possible
ﬁrst
measure
note
size
increases
exponentially
parameters
choose
minimal
still
getting
desired
bound
set
ind
/2⌋-vetex
k-partially
labeled
graph
makes
particularly
good
basis
follows
easily
indeed
basis
partition
set
according
type
obtained
restricting
labeled
vertices
partition
corresponding
type
basis
orthogonality
properties
subspaces
enjoy
choice
basis
diagonal
block
matrix
reduces
number
smaller
blocks
one
type
vertices
also
note
even
blocks
required
applying
eigen-
value
decomposition
used
remark
3.2
new
sparser
matrix
get
two
types
i=1
λijg2
jσ1k
jσ2k
every
aσ1
exists
aσ2
jgk
jfk
thus
may
restrict
search
space
include
one
aσ1
aσ2
particular
need
block
type
taken
necessarily
label
preserving
isomorphism
type
structure
studied
detail
provides
decomposition
direct
sum
two
smaller
algebras
group
jσk
acts
permuting
labels
shown
decompose
orthogonally
⊕aσ
invariant
anti-invariant
parts
jσk
xπ∈γ
jσk
choose
basis
according
decomposition
i.e
union
basis
basis
block
reduces
two
smaller
blocks
set
conjectured
extremal
graphons
i.e
graphons
also
make
use
following
let
follows
thus
must
xi=1jg2
xi=1
jg2
jg2
shows
deﬁne
∀w0
reduce
size
block
restricting
basis
ﬁnal
remark
regards
ﬂoating
point
nature
sdp
solver
matrix
output
sdp
corresponds
proof
desired
bound
speciﬁed
degree
ﬂoating
point
error
entries
may
obvious
rational
closed
forms
computer
algebra
systems
quite
good
ﬁnding
likely
solver
degrees
freedom
required
thus
entries
often
somewhat
arbitrary
ﬂoating
point
numbers
resolve
ﬁrst
attempt
restrict
bases
even
aware
obvious
way
best
results
come
repeated
experiments
minimal
size
proof
resolve
remaining
slackness
solver
introduce
constraints
certain
values
close
rational
approximations
ﬁxing
values
remaining
entries
often
uniquely
determined
rational
numbers
solver
work
results
4.1
representing
graphs
give
results
need
notation
able
concisely
express
large
number
partially
labeled
graphs
use
adjacency
list
slightly
modiﬁed
partially
labeled
graphs
labeled
vertices
identiﬁed
labels
vertices
identiﬁed
character
example
4,2
refers
4-vertex
2-partially
labeled
graph
indicated
trailing
subscript
ﬁve
edges
pair
corresponds
edge
4.2
proof
paw
graph
theorem
4.1.
let
hpaw
denote
four
vertex
graph
obtained
triangle
adding
single
edge
tind
hpaw
proof
ﬁrst
give
graphon
achieves
desired
lower
bound
let
1−wk2∪k2
simple
counting
argument
shows
tind
hpaw
1/32
giving
lower
bound
tind
hpaw
1/32
prove
upper
bound
must
show
ind
hpaw
1/32
graphons
need
give
positive
semi-deﬁnite
matrices
vectors
ki-quantum
graphs
pjzt
1/32
ind
hpaw
every
yizik
1/32
ind
hpaw
fact
graphs
vertices
i=1
βihi
i=1
αihi
suﬃces
pjzt
yizik
deﬁne
positive
semi-deﬁnite
matrices
−38
−38
−18
−18

−43
192
cid:18
−43
cid:18

cid:19
cid:19
1920
960
cid:18
120
cid:18
−13
cid:19
−214
−13
−214
839
cid:19
−275
−70
1632
−446
748
−275
−70
−446
vectors
ind
3,1
3,1
3,1
3,1
3,1
ind
4,3
4,3
4,3
4,3
ind
4,3
4,3
4,3
4,3
ind
4,3
4,3
4,3
4,3
ind
4,3
4,3
4,3
4,3
ind
4,3
4,3
4,3
slight
abuse
notation
ind
applied
row
vector
deﬁned
applying
ind
entries
veriﬁed
satisfy
conditions
given
desired
upper
bound
holds
result
follows
4.3
proof
k1,1,2
theorem
4.2.
tind
k1,1,2
125
0.096.
proof
construction
given
brown
sidorenko
corresponds
graphon
wk5
simple
counting
argument
gives
tind
k1,1,2
wk5
12/125
giving
lower
bound
proof
upper
bound
proof
theorem
4.1
except
instead
1/32
ind
hpaw
dealing
12/125
ind
k1,1,2
must
also
take
deﬁned
proof
theorem
4.1
graphs
vertices
matrices
deﬁned


180000
17280
−24912
−79032
17916
27236
−24912
193926
−71271
−62329
−79032
587520
−205728
−185320
17916
−71271
−205728
27236
−62329
−185320
113760
52920
70560
193926
52920
62640
7500
270
2991
−90
2991
33150
−997
−90
−997
5514
1483
3075
3917
5514
14500
8915
12585
1483
9490
3917
12585
9490
11725
9320
8915

100
cid:0
cid:1
43415
95040
−81360
−68250
−225285
43415
−81360
−68250
−225285
417600
350340
749826
−222822
−186960
−400105
749826
−222822
629130
−186960
1425600
−400105
107007
350340
294000
629130
5000
300000



1200000
343560
−310680
−234812
−310680
−234812
53570
119819
−34343
190272
119819
75456
−21579
−34343
−21579
53570
9910


vectors
given
ind
4,1
4,1
4,1
4,1
4,1
ind
4,2
4,2
4,2
ind
4,2
4,2
4,2
4,2
4,2
4,2
ind
4,2
4,2
ind
5,3
5,3
5,3
5,3
ind
5,3
5,3
5,3
5,3
5,3
5,3
5,3
5,3
5,3
conclusion
open
problems
semi-deﬁnite
method
powerful
technique
proving
inequalities
subgraph
densi-
ties
although
drawbacks
proof
gave
case
k1,1,2
obtained
eﬀorts
near
limit
computing
power
run
semi-deﬁnite
program
graphs
seven
vertices
i.e
solver
took
2-3
hours
run
full
precision
search
space
thus
running
time
grows
exponentially
number
vertices
proofs
method
larger
graphs
vertices
seem
feasible
even
small
graphs
elude
remaining
unresolved
graph
vertices
self-complementary
case
tind
interesting
upper
bound
given
exoo
converting
language
1/36
0.0277.
using
semi-deﬁnite
method
improve
ﬂoating
point
bound
roughly
0.0172
conjecture
bound
tight
either
best
construction
know
still
one
given
exoo
involving
kind
blow-up
paley
graph
corresponding
lower
bound
80/4877
0.0164
clear
gap
construction
best
bounds
obtain
acknowledgments
thanks
due
hamed
hatami
introducing
problem
providing
many
enlightening
discussions
regarding
details
paper
thanks
also
due
nserc
research
partially
funded
references
b´ela
bollob´as
chiˆe
nara
shun-ichi
tachibana
maximal
number
induced
complete
bipartite
graphs
discrete
math.
:271–275
1986
jason
brown
alexander
sidorenko
inducibility
complete
bipartite
graphs
graph
theory
:629–645
1994
geoﬀrey
exoo
dense
packings
induced
subgraphs
ars
combin.
22:5–10
1986
michael
freedman
l´aszl´o
lov´asz
alexander
schrijver
reﬂection
positivity
rank
con-
nectivity
homomorphism
graphs
amer
math
soc.
:37–51
electronic
2007
goodman
sets
acquaintances
strangers
party
amer
math
monthly
66:778–783
1959
andrzej
grzesik
maximum
number
triangle-free
graph
arxiv:1102.0962
2011
hamed
hatami
james
hirst
serguei
norine
inducibility
blow-up
graphs
arxiv:1108.5699
2011
hamed
hatami
jan
hladk´y
daniel
kr´al
serguei
norine
alexander
razborov
non-
three-colorable
common
graphs
exist
arxiv:1105.0307
2011
hamed
hatami
jan
hladk´y
daniel
kr´al
serguei
norine
alexander
razborov
number
pentagons
triangle-free
graphs
arxiv:1102.1634
2011
hamed
hatami
serguei
norine
undecidability
linear
inequalities
graph
homomor-
phism
densities
amer
math
soc.
:547–565
2011
jan
hladk´y
daniel
kr´al
serguei
norine
counting
ﬂags
triangle-free
digraphs
arxiv:0908.2791
2009
l´aszl´o
lov´asz
semideﬁnite
programs
combinatorial
optimization
recent
advances
algorithms
combinatorics
volume
cms
books
math./ouvrages
math
smc
pages
137–194
springer
new
york
2003
l´aszl´o
lov´asz
bal´azs
szegedy
limits
dense
graph
sequences
combin
theory
ser
:933–957
2006
l´aszl´o
lov´asz
bal´azs
szegedy
random
graphons
weak
positivstellensatz
graphs
arxiv.org:0902.1327
2009
alexander
razborov
flag
algebras
symbolic
logic
:1239–1282
2007
alexander
razborov
3-hypergraphs
forbidden
4-vertex
conﬁgurations
siam
discrete
math.
:946–963
2010
