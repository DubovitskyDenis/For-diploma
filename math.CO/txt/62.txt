pattern
avoidance
labelled
trees
vladimir
dotsenko
abstract
discuss
new
notion
pattern
avoidance
moti-
vated
operad
theory
pattern
avoidance
planar
labelled
trees
generalisation
various
types
consecutive
pattern
avoidance
studied
consecutive
patterns
words
permu-
tations
coloured
permutations
etc
notion
wilf
equivalence
patterns
permutations
admits
straightforward
generalisa-
tion
sets
tree
patterns
describe
classes
trees
small
numbers
leaves
give
several
bijections
trees
avoiding
pattern
sets
class
also
explain
general
results
tree
pattern
avoidance
exact
asymptotic
enumeration
introduction
pattern
avoidance
words
apart
real
word
interpre-
tation
enumerate
words
containing
obscene
subwords
pattern
avoidance
problem
arises
studying
noncommutative
algebras
monomial
relations
example
describing
words
alphabet
containing
word
fcuk
sub-
word
equivalent
ﬁguring
monomials
generators
x26
form
basis
algebra
khx1
x26
x6x3x21x11
signiﬁcance
algebras
monomial
relations
turn
ex-
plained
theory
¨obner
bases
gives
method
ﬁnding
monomial
replacement
every
algebra
monomial
relations
similarly
consecutive
pattern
avoidance
permu-
tations
coloured
permutations
interpreted
terms
shuﬄe
algebras
monomial
relations
goal
paper
introduce
combinatorics
audience
new
no-
tion
pattern
avoidance
naturally
arising
studying
operads
operads
similar
associative
algebras
associative
al-
gebras
groups
capture
kind
associativity
one
observes
composing
transformations
set
operads
capture
associativity
exhibited
composing
operations
several
ar-
guments
property
operation
one
argument
results
choice
present
choice
alge-
bras
one
may
either
assume
operations
possess
symmetries
allow
symmetries
picture
former
case
pattern
avoidance
question
pattern
avoidance
planar
rooted
trees
papers
combinatorial
spirit
vladimir
dotsenko
operads-inspired
dealing
arising
ques-
tions
enumeration
case
operations
symmetries
corresponding
notion
studied
paper
attempt
give
elementary
introduction
arising
re-
search
area
right
notion
monomial
relation
operations
symmetries
obvious
one
might
think
action
symmetries
makes
every
relation
many
consequences
arising
class
operads
monomial
relations
appears
way
narrow
truly
interesting
useful
way
deﬁne
monomial
relations
avoids
narrowing
things
particular
led
theory
operadic
¨obner
bases
suggested
corresponding
algebraic
object
called
shuﬄe
operad
paper
however
shall
try
concentrate
combinatorial
aspects
subject
touching
algebraic
aspects
brieﬂy
details
algebraic
aspects
see
example
though
attempt
keep
article
relatively
self-contained
familiarity
key
results
theory
consecutive
pattern
avoidance
permutations
could
useful
relevant
historical
information
pattern
avoidance
well
state-of-art
area
reader
referred
recent
monograph
several
types
questions
theory
tree
patterns
meaningful
operadic
viewpoint
first
given
set
patterns
exact
enumeration
results
trees
avoiding
set
important
examples
sort
appear
following
sections
many
cases
corresponding
sequences
numbers
well
known
combinatorics
many
cases
one
ends
sequences
appear
unrelated
classical
enumeration
problems
second
question
asymptotic
enumeration
shall
prove
results
sort
relying
golod–shafarevich
technique
recently
re-
discovered
relation
combinatorics
pattern
avoidance
also
question
recognising
class
generating
functions
arising
type
enumerating
questions
however
word
avoidance
answer
generating
functions
arising
answers
enumerating
avoidance
ﬁnite
sets
words
always
rational
even
consecutive
pattern
avoidance
permutations
class
arising
generating
functions
satisfactory
description
answer
known
one
ignores
leaf
labels
completely
case
generating
functions
algebraic
proved
case
binary
trees
case
ternary
trees
general
case
notion
tree
pattern
avoidance
discussed
follows
one
theorems
additional
assumptions
set
patterns
shuﬄe
regularity
generating
functions
pattern
avoidance
labelled
trees
tree
pattern
avoidance
diﬀerentially
algebraic
i.e
satisfy
non-
linear
diﬀerential
equations
polynomial
coeﬃcients
finally
interesting
enumerate
wilf
equivalence
classes
sets
tree
patterns1
discuss
basic
results
sort
paper
organised
follows
section
deﬁne
planar
labelled
rooted
trees
tree
patterns
show
notion
includes
classical
types
consecutive
pattern
avoidance
par-
ticular
cases
section
present
results
asymptotics
tree
pattern
avoidance
introduce
notion
growth
rate
given
set
patterns
section
formulate
exact
enumeration
result
tree
pattern
avoidance
follows
work
khoroshkin
discuss
consequences
result
related
questions
finally
section
discuss
various
examples
patterns
small
numbers
leaves
sections
also
contains
conjectures
natural
questions
beyond
scope
paper
also
included
appendix
explaining
pattern
avoidance
trees
arises
operadic
context
acknowledgements
wish
thank
anton
khoroshkin
dmitri
piontkovski
sending
copy
forthcoming
preprint
planar
labelled
tree
patterns
2.1.
tree
patterns
trees
vertices
edges
rooted
tree
tree
distinguished
vertex
called
root
rooted
tree
directed
away
root
way
every
vertex
except
root
exactly
one
parent
vertices
whose
common
parent
given
vertex
called
children
vertices
least
one
child
called
internal
vertices
children
called
leaves
planar
rooted
tree
rooted
tree
together
total
order
set
children
vertex
shall
think
embedded
plane
children
vertex
placed
increasing
order
left
right
throughout
paper
fn≥2
ﬁnite
alphabet
represented
disjoint
union
subsets
deﬁnition
planar
x-labelled
rooted
tree
planar
rooted
tree
internal
vertices
exactly
one
child
la-
belling
vertices
fulﬁlling
following
restrictions
every
internal
vertex
children
labelled
ele-
ment
every
leaf
labelled
positive
integer
way
following
two
conditions
satisﬁed
1equivalence
classes
strong
equivalence
might
lead
interesting
combi-
natorial
results
well
much
less
natural
operad
point
view
vladimir
dotsenko
labelling
set
condition
leaf
labels
one-to-one
correspondence
set
number
leaves
local
increasing
condition
temporarily
assign
internal
vertex
smallest
labels
leaves
descendants
thus
every
vertex
internal
vertex
leaf
integer
assigned
internal
vertex
integers
assigned
children
increase
left
right
notation
denote
set
planar
x-labelled
rooted
trees
internal
vertices
leaves
i≥0
set
planar
x-labelled
rooted
trees
leaves
i≥0
l≥1
set
planar
x-labelled
rooted
trees
particular
non-empty
case
consists
exactly
one
element
one-vertex
tree
edges
0,1
since
every
internal
vertex
least
two
children
hence
presence
internal
vertex
end
least
two
leaves
example
let
following
tree
7,8
tree
said
left
right
comb
every
internal
vertex
leftmost
rightmost
child
may
leaf
note
local
increasing
condition
makes
notions
left
right
diﬀerent
example
planar
rooted
tree
left
comb
restriction
leaf
labels
leftmost
leaf
labelled
contrast
right
comb
one
leaf
labelling
satisfying
local
increasing
condition
time
throughout
paper
consider
case
thus
assuming
trees
internal
vertices
number
children
children
assumption
mostly
technical
allows
closed
formulas
various
statements
particular
asymptotic
results
prove
conjecture
section
expected
true
full
generality
one
particular
simpliﬁcation
trees
number
internal
vertices
pattern
avoidance
labelled
trees
number
leaves
related
every
tree
internal
vertices
leaves
let
prove
basic
enumerative
result
useful
later
proposition
|lt
kd−k+1
|xd|k
proof
would
useful
purposes
consider
along
planar
x-labelled
rooted
trees
two
types
trees
denote
set
planar
rooted
trees
leaves
whose
internal
vertices
labelled
set
planar
rooted
trees
leaves
whose
internal
vertices
labelled
whose
leaves
labelled
possible
ways
recall
kd−k+1
general
case
note
kd−k+1
|xd|k
times
larger
since
every
internal
vertices
acquire
label
also
clear
|lt
kd−k+1
|tkd−k+1
since
internal
vertices
tree
one
permutations
subtrees
fulﬁls
local
increasing
condition
finally
|tkd−k+1
kd−k+1
since
leaf
labelling
allowed
tkd−k+1
formula
follows
cid:3
subtree
planar
labelled
rooted
tree
always
mean
subtree
root
one
internal
vertices
internal
vertex
children
also
children
way
guarantee
labels
internal
vertices
make
sense
note
second
condition
leaf-labelling
assigns
internal
vertex
tree
temporary
integer
label
subtree
tree
almost
belongs
leaves
labelled
integers
local
increasing
condition
satisﬁed
labelling
set
condition
might
satisﬁed
replacing
subtree
leaves
leaf
labels
unique
order-
preserving
way
shall
obtain
tree
call
standardisation
vladimir
dotsenko
deﬁnition
tree
said
contain
tree
pattern
exists
subtree
otherwise
said
avoid
example
let
recall
tree
example
consider
subtree
represented
thick
lines
following
ﬁgure
subtree
acquires
leaf
numbering
standard-
isation
get
occurs
tree
pattern
throughout
paper
consider
one
type
tree
patterns
often
use
words
tree
pattern
one
say
pla-
nar
labelled
rooted
tree
pattern
hope
reader
appre-
ciate
attempt
abbreviate
things
let
set
labels
consider
pattern
avoidance
planar
x-labelled
trees
central
question
arising
theory
pattern
avoidance
enumeration
objects
avoid
given
set
forbidden
patterns
generally
contain
exactly
occurrences
patterns
question
naturally
leads
following
equivalence
relations
tree
patterns
two
sets
tree
patterns
said
wilf
equivalent
notation
every
number
p-avoiding
trees
leaves
equal
number
′-avoiding
trees
leaves
case
non-consecutive
permutation
patterns
notion
introduced
wilf
generally
said
strongly
equivalent
notation
every
every
number
trees
leaves
occurrences
patterns
equal
number
trees
leaves
occurrences
patterns
enumeration
shall
primarily
use
exponential
generat-
ing
functions
respect
number
leaves
trees
example
generating
functions
label
set
respec-
|p∩lt
|zl
|xn|zn
pattern
set
pn≥1
pl≥1
tively
shall
denote
set
trees
avoiding
pattern
set
no-p
subset
consisting
trees
leaves
no-p
corresponding
generating
function
denoted
pattern
avoidance
labelled
trees
fno-p
fno-p
xl≥1
|lt
no-p
|zl
remark
one
also
include
second
variable
generating
series
count
internal
vertices
separately
use
series
gno-p
l≥1
|lt
no-p
|tizl
particular
would
make
sets
ﬁnite
internal
ver-
tices
trees
allowed
single
child
label
set
includes
keep
exposition
simple
avoid
discussing
subtleties
key
feature
exponential
generating
functions
con-
text
planar
x-labelled
rooted
trees
expressed
following
proposition
proposition
suppose
two
sets
planar
x-labelled
rooted
trees
let
deﬁne
set
follows
consists
trees
occurrence
tree
pattern
rooted
root
additional
condition
subtrees
rooted
leaves
pattern
occurrences
tree
patterns
proof
clearly
xl≥1
remains
note
coeﬃcient
number
ordered
forests
tree
patterns
total
leaf
set
therefore
thought
enumerator
forests
satisfying
increasing
condition
minimal
leaves
cid:3
2.2.
tree
patterns
types
consecutive
patterns
section
assume
simplicity
corresponds
considering
binary
tree
patterns
ﬁrst
observation
|x|
set
permuta-
tions
naturally
embedded
left
combs
recall
left
comb
conditions
put
labels
left
combs
leaves
one-to
one
correspondence
permuta-
tions
length
denote
tree
corresponding
permutation
subtrees
one-to-one
correspon-
dence
subwords
notion
tree
pattern
left
combs
corresponds
precisely
notion
consecutive
pattern
permutations
moreover
set
consecutive
permutation
vladimir
dotsenko
patterns
contains
left
combs
corresponding
elements
right
comb
three
leaves
number
trees
leaves
avoid
equal
number
permu-
tations
length
avoid
|x|
construction
left
combs
leads
naturally
notion
pattern
avoidance
coloured
permutations
moreover
set
words
given
alphabet
naturally
embedded
right
combs
indeed
re-
call
right
comb
leaves
exactly
one
way
label
leaves
fulﬁl
local
increasing
condition
obtain
planar
x-labelled
rooted
tree
remains
label
internal
vertices
ways
one-to-one
correspondence
a-words
length
denote
tree
corresponding
word
subtrees
one-to-one
correspondence
subwords
notion
tree
pattern
right
combs
corresponds
precisely
notion
divisor
words
moreover
set
words
consists
right
combs
corre-
sponding
elements
left
combs
three
leaves
number
trees
leaves
avoid
equal
number
words
length
without
divisors
also
possible
way
round
replace
trees
objects
resembling
permutations
words
let
assume
|x|
ignoring
technical
assumption
al-
ways
merely
lead
coloured
objects
sort
natural
way
straighten
tree
patterns
thus
translate
questions
similar
questions
patterns
sequences
re-
call
total
number
planar
labelled
rooted
tree
patterns
case
equal
double
factorial
number
2nn
number
also
equal
number
permutations
mul-
tiset
numbers
appearing
two
occurrences
greater
every
planar
labelled
rooted
binary
tree
easy
assign
recursively
permutation
sort
convenient
think
left
comb
subtrees
grafted
places
right
children
internal
vertices
denote
subtrees
order
leftmost
one
rightmost
one
subtree
leaf
labels
belonging
subset
strictly
speak-
ing
trees
sort
consider
usual
identify
planar
labelled
rooted
trees
via
standardisation
may
apply
obtaining
permutations
appropriate
multisets
assume
takes
one-vertex
tree
empty
word
put
pattern
avoidance
labelled
trees
example
112332
122133
122331
leads
meaningful
notion
generalised
permutation
pattern
would
interesting
investigate
no-
tion
properly
particular
explore
links
patterns
set
partitions
also
see
constructions
adapted
asymptotic
enumeration
section
discuss
results
asymptotic
enumeration
trees
avoiding
given
set
patterns
results
turn
way
mimicking
results
asymptotic
enumeration
consecutive
patterns
permutations
main
tool
following
result
adaptation
classical
golod–shafarevich
in-
equality
closely
related
similar
inequality
symmetric
operads
theorem
every
possibly
inﬁnite
pattern
set
fol-
lowing
coeﬃcient-wise
inequality
power
series
fno-p
fno-p
fno-p
proof
let
consider
two
series
ﬁnite
sets
set
subset
consisting
trees
whose
subtrees
rooted
children
root
avoid
patterns
set
subset
set
pairs
consisting
pairs
exists
subtree
rooted
root
trees
rooted
leaves
avoid
patterns
proposition
implies
|bn|
|cn|
xn≥1
xn≥1
fno-p
fno-p
therefore
power
series
inequality
translates
|cn|
|bn|
|lt
no-p
follows
observation
exists
obvious
surjec-
tion
no-p
onto
tree
either
avoids
pattern
rooted
root
cid:3
vladimir
dotsenko
corollary
suppose
power
series
negative
coeﬃcients
|lt
no-p
zn−1
non-
proof
let
according
lagrange
inversion
formula
coeﬃcients
compositional
inverse
gh−1i
gh−1i
zn−1
zn−1
assumption
power
series
gh−1i
non-
negative
coeﬃcients
according
theorem
power
series
fno-p
fno-p
fno-p
fno-p
non-negative
coeﬃcients
well
see
fno-p
gh−1i
fno-p
xn≥1
cid:18
zn−1
cid:19
fno-p
xn≥1
cid:18
zn−1
cid:19
means
every
|lt
no-p
zn−1
exactly
want
prove
cid:3
use
result
prove
following
theorem
gives
se-
ries
examples
set
p-avoiding
trees
leaves
grows
rapidly
namely
times
number
trees
leaves
constant
part
proof
parallel
corresponding
proof
theorem
suppose
power
series
|xd|zd−1
root
|lt
no-p
|xd|
d−1
d−1
n−1
|lt
proof
recall
set
non-empty
therefore
power
series
zd−1
shall
consider
series
+xt≥2
aktk
pattern
avoidance
labelled
trees
cid:16
|xd|
zd−1
cid:17
fact
coeﬃcients
series
use
coeﬃcients
non-negative
positive
multiple
number
certain
labelled
trees
internal
vertices
assumption
power
series
root
|xd|
let
consider
multiplicative
inverse
pl≥0
bltl
clearly
bn−1
k=2
akbn−k
let
prove
induction
β−1bn−1
indeed
statement
obvious
otherwise
evidently
positive
note
induction
hypothesis
bn−1
β1−kbn−k
αd−1
bn−1
akbn−k
bn−1
xk=2
akβk−1bn−1
xk=2
bn−1
−xk≥2
β−1bn−1
−xk≥2
akβk
statement
follows
hence
kth
coeﬃcient
greater
equal
β−k
therefore
coeﬃcient
α−k
d−1
akβk−1bn−1
β−1bn−1
cid:17
cid:16
|xd|αd−1
greater
equal
cid:16
|xd|
α−k
d−1
d−1
cid:18
cid:17
cid:19
d−1
xk≥1
means
consequently
cid:18
cid:19
d−1
since
coeﬃcients
non-negative
corollary
applies
deduce
|lt
kd−k+1
no-p
d−1
kd−k+1
α−k
d−1
α−k
d−1
view
formula
simpliﬁes
|lt
kd−k+1
no-p
α−k
d−1
α−k
d−1
αd−1
|xd|αd−1
|lt
kd−k+1
easily
transformed
inequality
want
prove
cid:3
vladimir
dotsenko
theorem
particular
used
obtain
estimates
case
one
tree
pattern
case
|x|
trees
internal
vertices
arity
carrying
label
theorem
suppose
|x|
coincides
one-element
set
set
forbidden
patterns
consists
one
single
pattern
internal
vertices
every
pair
except
exists
positive
number
depending
actual
pattern
|lt
no-p
cn−1|lt
d−1
proof
enough
show
pairs
except
polynomial
zd−1
kd−k+1
positive
root
denoting
zd−1
see
enough
prove
polynomial
ktk
kd−k+1
positive
root
note
derivative
ktk−1
kd−k+1
polynomial
positive
root
cid:16
kd−k+1
k−1
thus
prove
positive
root
enough
prove
minimal
value
attained
negative
using
formula
tk−1
see
suﬃces
prove
kd−k+1
k−1
cid:17
k−1
kkk
true
cases
consider
since
true
left
hand
side
increases
either
increases
cid:3
results
suggest
new
numerical
invariant
set
patterns
deﬁnition
growth
rate
set
patterns
lim
sup
n→∞
|lt
no-p
|lt
n−1
expect
methods
section
easily
generalised
prove
every
set
labels
depending
every
pattern
least
internal
vertices
positive
growth
moreover
computer
experiments
suggest
follow-
ing
conjecture
generalising
warlimont
conjecture
consectuive
patterns
proved
recently
ehrenborg
kitaev
perry
via
beautiful
link
consecutive
pattern
avoidance
spectral
theory
integral
operators
unit
cube
holds
tree
patterns
pattern
avoidance
labelled
trees
conjecture
every
set
labels
exists
integer
every
pattern
least
internal
vertices
numbers
|lt
no-p
|lt
would
interesting
adapt
approach
tree
patterns
adaptation
addition
consequences
asymptotic
enumeration
questions
may
substantial
interest
operad
theory
well
another
natural
question
arising
asymptotic
enumeration
understand
growth
hierarchies
tree
patterns
using
strategy
otherwise
exact
enumeration
cluster
inversion
formula
following
result
power
series
inversion
simultaneously
generalisation
inversion
formula
planar
tree
patterns
cluster
inversion
formula
goulden
jackson
words
permutations
result
proved
simple
homological
algebra
formulate
diﬀerent
way
interested
reader
easily
prove
directly
using
inclusion-exclusion
formula
similarly
usual
cluster
inversion
deﬁnition
let
set
patterns
tree
together
collection
subtrees
said
k-cluster
following
two
conditions
hold
every
subtree
occurrence
pattern
every
edge
joins
two
internal
vertices
edge
two
internal
vertices
deﬁnition
set
0-clusters
set
labels
informally
k-cluster
tree
completely
covered
copies
patterns
let
denote
number
k-clusters
tree
leaves
theorem
compositional
inverse
fno-p
computed
via
clusters
follows
h−1i
no-p
xn≥1
k≥0
kcn
following
consequence
general
inversion
formula
direct
analogue
planar
labelled
tree
patterns
inversion
formula
planar
tree
patterns
vladimir
dotsenko
corollary
suppose
two
com-
plementary
sets
tree
patterns
leaves
corresponding
generating
functions
pattern
avoidance
inverse
fno-p
fno-q
fno-q
fno-p
proof
easy
see
case
k-clusters
one-to-
one
correspondence
trees
avoid
tree
admits
unique
covering
patterns
signs
inversion
formula
match
suggested
since
case
underlying
tree
every
n-cluster
leaves
cid:3
note
left
right
combs
corresponding
consecutive
permutation
patterns
words
clusters
left
combs
left
right
combs
corresponding
usual
goulden–jackson
clusters
patterns
words
instantly
proves
following
result
corollary
suppose
two
sets
consecutive
permutation
patterns
words
wilf
equivalent
two
sets
tree
patterns
consisting
left
right
combs
corresponding
given
permutation
patterns
words
wilf
equivalent
tree
patterns
case
permutations
expect
least
case
single
pattern
careful
study
self-overlaps
overlap
sets
equivalently
overlap
maps
would
beneﬁcial
studying
wilf
equivalence
shall
discuss
detail
elsewhere
mentioning
particular
case
brieﬂy
next
section
let
conclude
section
open
question
consecu-
tive
patterns
permutations
mendes
remmel
developed
symmetric
functions
method
enumeration
permutations
avoiding
given
set
patterns
natural
expect
method
generalised
deal
case
tree
patterns
pos-
sibly
making
use
plethysm
symmetric
functions
formulas
compute
compositions
power
series
inversion
for-
mulas
completion
algebra
symmetric
functions
exist
operadic
context
provided
homological
algebra
particular
operadic
koszul
duality
symmetric
operads
however
move
abstract
trees
representatives
planar
labelled
rooted
trees
studied
paper
clear
way
incorporate
symmetric
functions
picture
examples
5.1.
case
|x|
section
assume
|x|
work
binary
trees
use
labels
internal
vertices
simplify
notation
suppress
formulas
write
simply
etc
pattern
avoidance
labelled
trees
begin
classifying
wilf
classes
pattern
sets
three
leaves
theorem
exist
exactly
four
wilf
classes
sets
pattern
sets
three
leaves
proof
theorem
follows
two
lemmas
give
pre-
cise
description
ﬁve
wilf
classes
lemma
5.1.
three
patterns
wilf
equivalent
number
trees
leaves
avoiding
either
equal
proof
let
denote
correspondence
set
p1-avoiding
trees
set
p2-avoiding
trees
deﬁned
recursively
follows
let
represent
tree
no-p1
deﬁnition
left
comb
subtrees
listed
along
way
root
grafted
right-looking
leaves
determine
apply
subtrees
reverse
order
grafting
words
graft
place
tk−1
place
etc
clearly
identiﬁes
no-p1
no-p2
correspondence
set
p1-avoiding
trees
set
p3-avoiding
trees
deﬁned
recursively
well
deﬁnition
let
represent
tree
no-p1
left
comb
subtrees
listed
along
way
root
grafted
right-looking
leaves
note
set
no-p3
set
left
combs
leaves
induction
may
assume
already
know
left
combs
let
left
comb
whose
right-looking
leaves
listed
along
way
root
right-looking
leaves
right-looking
leaves
tk−1
right-looking
leaves
observation
easily
proved
induction
label
right-looking
leaf
farthest
root
equal
smallest
leaf
label
shows
construct
inverse
identiﬁed
no-p1
no-p3
addition
since
set
no-p3
set
left
combs
leaves
cardinality
three
subsets
|p|
exactly
diﬀerent
p-avoiding
tree
leaves
cid:3
vladimir
dotsenko
lemma
5.2.
three
two-pattern
sets
wilf
equivalent
number
trees
leaves
avoiding
either
sets
equal
proof
indeed
p-avoiding
tree
leaves
right
comb
avoiding
tree
leaves
left
comb
labels
right-
looking
leaves
increasing
along
way
root
p-avoiding
tree
leaves
left
comb
labels
right-looking
leaves
decreasing
along
way
root
therefore
three
subsets
|p|
exactly
one
p-avoiding
tree
leaves
alternatively
one
apply
inversion
formula
lemma
5.1
conclude
exponential
generating
function
every
one-pattern
set
equal
log
computing
in-
verse
adjusting
signs
instantly
shows
exponential
generating
function
every
two-pattern
set
exp
exponential
generating
function
sequence
cid:3
since
empty
pattern
set
pattern
set
containing
trees
three
leaves
form
wilf
classes
theorem
follows
cid:3
pattern
sets
least
four
leaves
partial
results
note
patterns
four
leaves
therefore
number
sets
tree
patterns
leaves
equal
215
32768
complete
classiﬁcation
wilf
classes
already
heavy
task
shall
present
simple
result
classiﬁcation
wilf
classes
sets
consisting
single
pattern
pattern
avoidance
labelled
trees
theorem
exist
exactly
ﬁve
wilf
classes
sets
one
pattern
four
leaves
proof
theorem
follows
sequence
lemmas
give
precise
description
ﬁve
wilf
classes
lemma
6.1.
three
patterns
equivalent
wilf
proof
bijective
proof
completely
analogous
lemma
5.1
leave
reader
ﬁll
details
cid:3
lemma
6.2.
six
patterns
wilf
equivalent
proof
let
denote
let
show
exhibiting
one-to-one
correspon-
dence
p1-avoiding
patterns
p2-avoiding
ones
tree
avoids
put
avoids
contains
may
assume
occurrence
root
otherwise
ﬁnd
internal
vertices
closest
root
roots
occurrences
apply
recursively
vertices
let
denote
put
constructed
bijection
p1-avoiding
trees
containing
p2-avoiding
trees
containing
case
handled
similar
way
let
show
exhibiting
one-to-one
correspon-
dence
p1-avoiding
patterns
p4-avoiding
ones
tree
avoids
put
avoids
contains
may
assume
occurrence
root
otherwise
ﬁnd
internal
vertices
closest
root
roots
occurrences
apply
recursively
vertices
let
denote
put
note
vertex
tree
vladimir
dotsenko
occurrence
rooted
root
however
occurrence
easily
seen
imply
occurrence
contradiction
constructed
bijection
p1-avoiding
trees
containing
p2-avoiding
trees
containing
equivalence
established
inductively
similarly
done
lemma
5.1.
finally
easiest
way
see
equivalence
via
inverse
generating
functions
basically
structure
self-overlaps
two
self-overlaps
one
rigid
one
labelling
leaves
consistent
local
increasing
condition
one
admits
three
diﬀerent
leaf
labellings
allows
inductively
constructed
bijections
be-
tween
clusters
control
coeﬃcients
inverse
series
leave
details
reader
cid:3
lemma
6.3.
four
patterns
wilf
equivalent
proof
corresponding
permutation
patterns
wilf
equivalent
corollary
applies
cid:3
combining
lemmas
somewhat
lengthy
computa-
tion
showing
class
described
lemma
6.1
sequence
count-
ing
trees
avoiding
patterns
class
begins
756
7657
class
described
lemma
6.2
sequence
count-
ing
trees
avoiding
patterns
class
begins
739
7392
class
described
lemma
6.3
sequence
count-
ing
trees
avoiding
patterns
class
begins
738
7364
pattern
sequence
counting
trees
avoiding
pattern
begins
740
7420
pattern
sequence
counting
trees
avoiding
pattern
begins
737
7336
conclude
exactly
ﬁve
wilf
classes
cid:3
ﬁve
integer
sequences
saw
previous
proof
two
seem
appear
online
encyclopedia
integer
sequences
third
one
matches
a088789
sequence
coeﬃcients
pattern
avoidance
labelled
trees
compositional
inverse
power
series
1+exp
ﬁrst
one
matches
a183611
take
care
diﬀerence
number-
ing
described
sequence
coeﬃcients
power
series
satisfying
diﬀerential
equation
ﬁrst
descriptions
surprising
inversion
formula
suggests
inverse
series
makes
lots
sense
combinato-
rially
second
description
related
results
khoroshkin
piontkovski
proved
cases
generating
function
indeed
satisfy
diﬀerential
equation
however
patterns
wilf
class
covered
results
appearance
diﬀerential
equation
enumeration
problem
would
another
bit
evidence
supporting
general
conjec-
ture
states
every
ﬁnite
set
patterns
corresponding
generating
function
satisﬁes
non-linear
diﬀerential
equation
polynomial
coeﬃcients
natural
ask
tree
patterns
hardest
avoid
fewest
numbers
trees
avoid
tree
patterns
easiest
avoid
largest
numbers
trees
avoid
examining
proof
previous
theorem
performing
computer
experiments
arrived
following
conjecture
closely
related
conjecture
elizalde
noy
permutation
identity
permutation
easiest
avoid
conjecture
naka-
mura
permutation
transposition
last
two
entries
hardest
avoid
conjecture
let
denote
rcn
left
comb
leaves
whose
leaf
labels
increase
along
way
root
left
comb
leaves
whose
leaf
labels
decrease
along
way
root
right
comb
leaves
respectively
patterns
rcn
rcn−1
easiest
avoid
pattern
hardest
avoid
5.2.
case
|x|
throughout
section
assume
work
binary
trees
two
possible
labels
internal
ver-
tices
words
following
result
still
easy
obtain
hand
theorem
exist
exactly
two
wilf
classes
sets
one
pattern
three
leaves
exactly
ten
wilf
classes
sets
two
patterns
three
leaves
proof
first
let
note
inversion
formula
work
trees
avoiding
patterns
respectively
avoidance
patterns
allowed
pattern
either
use
one
internal
vertex
label
case
theorem
means
exists
one
allowed
tree
number
leaves
vladimir
dotsenko
use
two
diﬀerent
internal
vertex
labels
case
way
build
allowed
tree
leaves
avoidance
patterns
theorem
follows
se-
quence
lemmas
give
precise
description
ten
wilf
classes
lemmas
7.1–7.7
almost
obvious
since
trees
counted
admit
explicit
descriptions
omit
proofs
note
switch
complements
instead
listing
ten-
element
sets
list
complements
set
tree
patterns
three
leaves
lemma
7.1.
six
sets
whose
complements
set
tree
pat-
terns
three
leaves
wilf
equivalent
number
trees
leaves
avoiding
either
sets
equal
lemma
7.2.
two
sets
whose
complements
set
tree
patterns
three
leaves
wilf
equivalent
number
trees
leaves
avoiding
either
sets
equal
cid:16
cid:17
even
cid:16
n−1
cid:17
cid:16
n+1
cid:17
odd
lemma
7.3.
ten
sets
whose
complements
set
tree
pat-
terns
three
leaves
wilf
equivalent
number
trees
leaves
avoiding
either
sets
equal
lemma
7.4.
sets
whose
complements
set
tree
pat-
terns
three
leaves
pattern
avoidance
labelled
trees
wilf
equiva-
lent
number
trees
leaves
avoiding
either
sets
equal
lemma
7.5.
two
sets
whose
complements
set
tree
patterns
three
leaves
wilf
equivalent
number
trees
leaves
avoiding
either
sets
equal
equal
lemma
7.6.
two
sets
whose
complements
set
tree
patterns
three
leaves
wilf
equivalent
number
trees
leaves
avoiding
either
sets
equal
equal
lemma
7.7.
two
sets
whose
complements
set
tree
patterns
three
leaves
wilf
equivalent
number
trees
leaves
avoiding
either
sets
equal
lemma
7.8.
six
sets
whose
complements
set
tree
pat-
terns
three
leaves
wilf
equivalent
number
trees
leaves
avoiding
either
sets
equal
number
involutions
sn−1
proof
examining
structure
allowed
trees
see
case
right
comb
increasing
decreasing
left
comb
possibly
leaves
replaced
pairs
leaves
examining
leaf
labels
one
easily
extract
decomposition
involution
product
disjoint
cycles
gives
one-to-one
correspondence
cid:3
lemma
7.9.
two
sets
whose
complements
set
tree
patterns
three
leaves
wilf
equivalent
vladimir
dotsenko
number
trees
leaves
avoiding
either
sets
equal
nth
fibonacci
number
fn+1
fn−1
proof
examining
structure
allowed
trees
see
case
right
comb
possibly
leaves
replaced
pairs
leaves
leaf
labels
increasing
globally
along
path
root
therefore
number
trees
trying
compute
equal
number
sequences
sum
known
fibonacci
number
cid:3
lemma
7.10.
two
sets
whose
complements
set
tree
patterns
three
leaves
wilf
equivalent
number
trees
leaves
avoiding
either
sets
twice
number
alternating
permutations
sn−1
proof
clearly
allowed
tree
left
comb
labels
along
path
root
alternate
leaf
labels
therefore
statement
obvious
alternating
permutations
come
leaf
labels
twice
reﬂect
fact
two
alternating
sequences
length
cid:3
cid:3
computer-aided
investigation
shows
following
statement
true
theorem
sets
patterns
leaves
wilf
classes
1-element
sets
wilf
classes
2-element
sets
wilf
classes
3-element
sets
wilf
classes
4-element
sets
189
wilf
classes
5-element
sets
202
wilf
classes
6-element
sets
189
wilf
classes
7-element
sets
wilf
classes
8-element
sets
wilf
classes
9-element
sets
wilf
classes
10-element
sets
wilf
classes
11-element
sets
conclude
section
let
mention
promising
direction
towards
new
bijective
proofs
enumeration
wilf
equivalence
classes
case
unlabelled
planar
trees
many
bijections
constructed
word
notation
trees
used
word
notation
construction
crucial
importance
operad
theory
discovered
hoﬀbeck
de-
ﬁned
partial
ordering
compatible
operad
structure
pattern
avoidance
labelled
trees
set
tree
monomials
used
formulate
prove
pbw
criterion
koszul
operads
later
partial
or-
dering
extended
total
ordering
still
compatible
operad
structure
ordering
one
key
ingredients
¨obner
bases
machinery
case
operads
latter
total
ordering
coming
replacing
tree
pair
path
perm
consisting
path
sequence
path
se-
quence
words
alphabet
permutation
perm
set
leaves
questions
pattern
avoidance
trees
translated
questions
pattern
avoidance
type
data
corresponding
notion
pattern
certain
mixture
classical
notion
divisor
word
notion
generalised
pattern
permutations
diﬀerent
na¨ıve
notion
generalised
pattern
coloured
permutations
way
thinking
patterns
trees
useful
bijective
proofs
hope
address
detail
elsewhere
appendix
shuffle
operads
patterns
trees
appendix
recall
relevant
deﬁnitions
operad
theory
explain
notion
pattern
avoidance
trees
arises
naturally
context
let
denote
ord
category
whose
objects
non-empty
ﬁnite
ordered
sets
order-preserving
bijections
morphisms
also
denote
vect
category
vector
spaces
lin-
ear
operators
morphisms
usually
enough
assume
vec-
tor
spaces
ﬁnite-dimensional
though
sometimes
generality
needed
one
assumes
instance
graded
ﬁnite-dimensional
homogeneous
components
deﬁnition
non-symmetric
collection
contravariant
functor
category
ord
category
vect
shall
refer
images
individual
sets
components
collec-
tion
let
two
non-symmetric
collections
shuﬄe
composition
product
non-symmetric
collec-
tion
◦sh
deﬁned
formula
◦sh
⊗

sum
taken
shuﬄing
surjections
surjections
min
min
whenever
shuﬄe
operad
monoid
category
non-symmetric
collections
equipped
shuﬄe
composition
product
vladimir
dotsenko
deﬁnition
counterpart
classical
one
one
deals
ﬁnite
sets
without
speciﬁed
order
surjections
allowed
deﬁne
composition
corresponding
monoids
called
symmetric
operads
monoids
widely
used
algebra
topology
since
capture
algebraic
properties
compositions
operations
several
arguments
particular
algebras
certain
type
like
associative
algebras
lie
algebras
viewed
modules
monoid
kind
formed
operations
deﬁned
algebras
given
type
point
view
proves
useful
however
computational
purposes
fact
ﬁnite
sets
symmetries
gets
way
turns
shuﬄe
operads
allow
deal
troubles
arising
every
symmetric
operad
viewed
shuﬄe
operad
since
every
ordered
set
viewed
unordered
set
monoids
monoidal
category
vector
spaces
usual
tensor
product
associative
algebras
one
present
associative
algebras
via
generators
relations
relations
monomials
generators
corresponding
algebra
admits
straightforward
basis
consisting
monomials
avoiding
monomials
set
relations
general
elegant
description
obtain
one
uses
machinery
¨obner
bases
¨obner
basis
special
choice
set
relations
allows
ﬁnd
monomial
replacement
given
algebra
algebra
generators
monomial
relations
natural
monomial
basis
also
basis
set
monomial
relations
provided
leading
terms
relations
forming
¨obner
basis
natural
try
ﬁnd
appropriate
¨obner
bases
theory
operads
operads
symmetries
turns
impossible
every
symmetric
operad
monomial
replace-
ment
however
shuﬄe
operads
turns
possible
let
little
bit
precise
similarly
case
associative
alge-
bras
shuﬄe
operad
presented
via
generators
relations
quotient
free
operad
space
generators
non-symmetric
collection
collection
ordered
bases
components
functor
ord
ord
free
shuﬄe
operad
generated
admits
basis
tree
monomials
deﬁned
combinatorially
precisely
planar
x-labelled
rooted
trees
studied
throughout
paper
shuﬄe
composition
tree
monomials
tree
monomial
crucial
feature
shuﬄe
operads
admit
good
monomial
orderings
therefore
one
talk
leading
terms
relations
precisely
exist
several
ways
introduce
total
ordering
tree
monomials
way
pattern
avoidance
labelled
trees
shuﬄe
compositions
respect
total
ordering
increasing
one
monomials
compose
increases
result
furthermore
algebraic
statement
tree
monomial
obtained
another
tree
monomial
shuﬄe
compositions
divisible
monoid
means
combinatorial
language
occurs
pattern
ingredients
relate
questions
shuﬄe
operads
pattern
avoidance
trees
¨obner
basis
ideal
free
shuﬄe
operad
system
generators
leading
monomial
every
element
divisible
one
leading
terms
elements
system
generators
allows
perform
long
division
modulo
computing
every
element
canonical
representative
tree
monomials
avoiding
leading
terms
elements
normal
monomials
form
basis
quotient
ideal
words
shuﬄe
operads
admit
monomial
replacements
thus
clear
enumerating
trees
avoiding
given
set
patterns
literally
corresponds
computing
dimensions
components
operads
presented
generators
relations
course
ﬁrst
step
compute
¨obner
basis
see
algorithm
approaching
problem
point
view
asymptotic
enumeration
also
meaningful
fact
area
operad
theory
primarily
concerned
quotients
operad
describing
associative
algebras
better
known
theory
varieties
associative
algebras
asymptotic
questions
codimension
growth
among
core
questions
even
attempts
use
¨obner
bases
formalism
context
see
example
expect
approach
prove
useful
context
references
roland
bacher
gilles
schaeﬀer
generating
series
coloured
planar
trees
s´em
lothar
combin
2005/07
art
b55e
eric
babson
einar
steingr´ımsson
generalized
permutation
patterns
classiﬁcation
mahonian
statistics
s´em
lothar
combin
2000
art
b44b
anders
claesson
generalized
pattern
avoidance
european
combin
2001
961–971
jason
bell
teow
goh
exponential
lower
bounds
number
words
uniform
length
avoiding
pattern
inform
comput
205
2007
1295–1306
jason
bell
lance
small
question
kaplansky
algebra
258
2002
386–388
vladimir
dotsenko
freeness
theorems
operads
via
gr¨obner
bases
s´eminaires
congr
2011
61–76
vladimir
dotsenko
anton
khoroshkin
free
resolutions
via
gr¨obner
bases
preprint
arxiv:0912:4895
vladimir
dotsenko
vladimir
dotsenko
anton
khoroshkin
gr¨obner
bases
operads
duke
math
153
2010
363–396
vladimir
dotsenko
anton
khoroshkin
shuﬄe
algebras
homology
con-
secutive
pattern
avoidance
preprint
arxiv:1109.2690
10.
richard
ehrenborg
sergey
kitaev
peter
perry
spectral
approach
con-
secutive
pattern-avoiding
permutations
preprint
arxiv:1009.2119
11.
sergi
elizalde
asymptotic
enumeration
permutations
avoiding
generalized
pat-
terns
adv
appl
math
2006
138–155
12.
sergi
elizalde
marc
noy
consecutive
patterns
permutations
adv
appl
math
2003
1-2
110–125
formal
power
series
algebraic
combina-
torics
scottsdale
2001
13.
nathan
gabriel
katherine
peske
lara
pudwell
samuel
tay
pattern
avoid-
ance
ternary
trees
preprint
arxiv:1110:2225
14.
ira
gessel
richard
stanley
stirling
polynomials
combinatorial
theory
ser
1978
24–33
15.
antonio
giambruno
mikhail
zaicev
polynomial
identities
asymptotic
methods
mathematical
surveys
monographs
122
american
mathematical
society
providence
2005.
xiv+352
16.
victor
ginzburg
mikhail
kapranov
koszul
duality
operads
duke
math
1994
203–272
17.
evgeny
golod
igor
shafarevich
class
ﬁeld
tower
izv
akad
nauk
sssr
ser
mat
1964
261–272
18.
eric
hoﬀbeck
poincar´e–birkhoﬀ–witt
criterion
koszul
operads
manuscripta
math
131
2010
1-2
87–110
19.
v´ıt
jel´ınek
touﬁk
mansour
pattern-avoiding
partitions
electron
com-
bin
2008
art
r39
20.
ian
goulden
david
jackson
inversion
theorem
cluster
decompo-
sitions
sequences
distinguished
subsequences
london
math
soc
1979
567–576
21.
alexei
kanel-belov
louis
halle
rowen
computational
aspects
polynomial
identities
research
notes
mathematics
peters
ltd.
wellesley
2005.
xxii+378
22.
anton
khoroshkin
dmitri
piontkovski
generating
series
ﬁnitely
pre-
sented
operads
preparation
23.
anton
khoroshkin
boris
shapiro
using
homological
duality
consecutive
pattern
avoidance
electron
combin
2011
vol
art
24.
sergey
kitaev
patterns
permutations
words
monographs
theoretical
computer
science
springer
2011
25.
martin
klazar
counting
pattern-free
set
partitions
generalization
stirling
numbers
second
kind
european
combin
2000
367–378
26.
martin
klazar
growth
rates
permutations
set
partitions
ordered
graphs
objects
electron
combin
2008
art
r75
27.
victor
latyshev
combinatorial
generators
multilinear
polynomial
identities
math
sci
149
2008
1107–1112
28.
jean-louis
loday
inversion
integral
series
enumerating
planar
trees
s´em
lothar
combin
2005
art
b53d
29.
touﬁk
mansour
pattern
avoidance
coloured
permutations
s´em
lothar
com-
bin
2001/02
art
b46g
electronic
30.
anthony
mendes
jeﬀrey
remmel
permutations
words
counted
con-
secutive
patterns
adv
appl
math
2006
443–480
31.
brian
nakamura
computational
approaches
consecutive
pattern
avoidance
permutations
preprint
arxiv:1102.2480.
pattern
avoidance
labelled
trees
32.
john
noonan
doron
zeilberger
goulden-jackson
cluster
method
exten-
sions
applications
implementations
diﬀer
equations
appl
1999
4-5
355–377
33.
susan
parker
combinatorics
functional
composition
inversion
ph.d.
thesis
brandeis
1993
34.
dmitri
piontkovski
kurosh
problem
varieties
algebras
fundam
prikl
mat
2008
171–184
35.
narad
rampersad
applications
power
series
method
pattern
avoid-
ance
electronic
comb
2011
article
p134
36.
eric
rowland
pattern
avoidance
binary
trees
combin
theory
ser
117
2010
741–758
37.
bruce
sagan
pattern
avoidance
set
partitions
ars
combin
2010
79–96
38.
neil
sloane
on-line
encyclopedia
integer
sequences
available
via
url
http
//www.research.att.com/∼njas/sequences/
39.
richard
stanley
enumerative
combinatorics
vol
cambridge
university
press
cambridge
1999.
xii+581
40.
victor
ufnarovskij
combinatorial
asymptotic
methods
algebra
algebra
encyclopaedia
math
sci.
vol
springer
berlin
1995
1–196
41.
richard
warlimont
permutations
avoiding
consecutive
patterns
ann
univ
sci
budapest
sect
comput
2003
373–393
42.
herbert
wilf
patterns
permutations
discrete
math
257
2002
2-3
575–583
mathematics
research
unit
university
luxembourg
campus
kirchberg
rue
richard
coudenhove-kalergi
l-1359
luxembourg
grand
duchy
lux-
embourg
e-mail
address
vladimir.dotsenko
uni.lu
