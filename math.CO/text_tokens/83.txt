pattern
avoid
ternari
tree
nathan
depart
mathemat
rice
univers
houston
usa
katherin
depart
mathemat
comput
scienc
concordia
colleg
moorhead
usa
lara
depart
mathemat
comput
scienc
valparaiso
univers
valparaiso
usa
samuel
depart
mathemat
kenyon
colleg
gambier
usa
abstract
paper
consid
enumer
ternari
tree
root
order
tree
vertex
child
avoid
contigu
ternari
tree
pattern
begin
ﬁnding
recurr
relat
sever
simpl
tree
pattern
complex
tree
comput
gener
function
extend
known
algorithm
binari
tree
next
present
altern
notat
tree
use
ﬁnd
biject
explain
certain
pair
tree
pattern
yield
avoid
gener
function
final
compar
biject
known
replac
rule
binari
tree
gener
biject
larger
class
tree
support
nsf
grant
introduct
notion
one
object
avoid
anoth
studi
permut
word
tion
graph
although
pattern
avoid
proven
use
languag
describ
connect
variou
combinatori
object
also
attract
broad
interest
pure
enum
topic
one
combinatori
problem
receiv
much
attent
recent
year
count
number
permut
length
avoid
certain
smaller
permut
permut
avoid
permut
mean
subsequ
although
classic
case
permut
pattern
problem
allow
given
subsequ
special
case
attack
success
via
varieti
techniqu
studi
contain
consecut
subpermut
latter
question
answer
varieti
techniqu
includ
also
exist
algorithm
techniqu
cluster
method
approach
question
use
gener
function
two
natur
question
aris
given
permut
mani
permut
length
avoid
two
forbidden
permut
avoid
gener
function
paper
consid
analog
question
plane
tree
tree
paper
root
order
focu
ternari
tree
tree
vertex
order
child
vertex
child
leaf
vertex
child
intern
vertex
ternari
tree
intern
vertex
leaf
number
oei
clear
exist
ternari
tree
tree
odd
number
leaf
ﬁrst
ternari
tree
depict
figur
conceptu
plane
tree
avoid
tree
pattern
instanc
anywher
insid
pattern
avoid
tree
studi
variou
context
steyaert
flajolet
flajolet
sipala
steyaert
flajolet
sedgewick
dotsenko
recent
khoroshkin
piontkovski
consid
gener
function
gener
unlabel
tree
diﬀer
context
rowland
explor
contigu
pattern
avoid
binari
tree
root
order
tree
vertex
child
two
motiv
choos
particular
tree
ﬁrst
clear
natur
deﬁnit
mean
root
order
tree
contain
contigu
order
pattern
unclear
gener
tree
second
natur
biject
binari
tree
tree
studi
two
main
object
first
develop
algorithm
ﬁnd
gener
function
number
binari
tree
avoid
given
tree
pattern
adapt
count
number
occurr
given
pattern
second
determin
equival
class
binari
tree
pattern
classifi
two
tree
equival
number
binari
tree
avoid
avoid
complet
classiﬁc
binari
tree
eight
leaf
use
class
develop
replac
biject
equival
binari
tree
paper
extend
rowland
work
explor
pattern
avoid
ternari
tree
case
gener
tree
tree
vertex
child
ﬁrst
comput
recurr
relat
count
tree
avoid
ternari
tree
pattern
seven
leaf
next
adapt
rowland
algorithm
ﬁnd
function
equat
avoid
gener
function
arbitrari
ternari
tree
pattern
final
give
biject
tree
avoid
sever
pair
equival
tree
pattern
begin
gener
process
gener
case
tree
appendix
contain
equival
class
ternari
tree
pattern
nine
leaf
found
use
mapl
packag
ternarytre
mapl
packag
given
third
author
websit
http
deﬁnit
notat
follow
rowland
deﬁnit
avoid
ternari
tree
contain
tree
pattern
contigu
root
order
subtre
convers
avoid
subtre
exampl
consid
three
tree
shown
figur
contain
pattern
occur
begin
center
child
root
see
bold
subtre
howev
avoid
vertex
child
extend
left
center
child
figur
three
ternari
tree
deﬁn
avt
set
ternari
tree
avoid
pattern
avt
particularli
interest
determin
gener
function
avt
variou
pattern
explor
particular
ternari
tree
pattern
list
ternari
tree
note
howev
reﬂect
avt
avtr
symmetri
reﬂect
omit
label
tree
doubl
subscript
notat
ﬁrst
subscript
give
number
leaf
tree
second
subscript
distinguish
distinct
tree
pattern
depth
use
label
throughout
remaind
paper
recurr
simpl
tree
pattern
section
ﬁnd
recurr
relat
number
tree
avoid
sever
tree
figur
tree
discu
structur
tree
avoid
given
tree
pattern
recurr
gener
function
found
structur
list
equival
tree
pattern
clear
context
simpli
write
lieu
avt
avt
figur
ternari
tree
avoid
ﬁnd
let
look
tree
must
structur
order
avoid
consid
intern
vertex
left
child
descend
thu
must
leaf
center
child
root
subtre
number
leaf
final
right
child
also
root
subtre
total
leaf
subtre
must
precis
leaf
thu
possibl
subtre
begin
center
child
possibl
subtre
right
child
also
avoid
take
summat
possibl
valu
give
recurr
relat
initi
condit
recurr
ternari
tree
leaf
one
tree
one
leaf
avoid
tree
pattern
one
leaf
tree
leaf
comput
use
standard
techniqu
obtain
ﬁrst
term
sequenc
two
thing
worth
note
avoid
sequenc
first
term
catalan
number
oei
second
sequenc
interspers
zero
ternari
tree
even
number
leaf
second
observ
true
avoid
sequenc
ternari
tree
pattern
tree
avoid
need
make
one
alter
name
center
child
instead
leftmost
child
vertex
child
therefor
ﬁnd
avoid
next
ﬁnd
number
tree
avoid
consid
intern
vertex
tree
avoid
two
nonexclus
possibl
child
intern
vertex
first
leftmost
child
child
center
right
child
otherwis
center
child
child
left
right
child
two
case
equival
avoid
respect
howev
one
instanc
left
center
child
child
exactli
tree
count
ﬁrst
two
case
subtract
recurr
relat
left
initi
condit
recurr
relat
use
standard
techniqu
obtain
give
littl
number
oei
interspers
zero
also
avoid
sequenc
two
case
exist
avoid
either
left
center
right
center
child
descend
well
term
need
subtract
avoid
neither
left
right
child
child
thu
consid
tree
pattern
examin
connect
tree
avoid
littl
number
look
one
combinatori
interpret
littl
number
number
binari
tree
vertex
right
edg
color
either
solid
dash
note
elsewher
paper
concern
strictli
binari
tree
intern
vertex
precis
child
strictli
ternari
tree
intern
vertex
precis
child
current
interpret
littl
number
howev
binari
tree
strict
intern
vertex
may
child
consid
follow
map
set
color
binari
tree
set
strict
ternari
tree
avoid
vertex
binari
tree
draw
vertex
consid
pair
binari
tree
left
child
center
child
right
child
via
solid
edg
left
child
right
child
via
dash
edg
right
child
vertex
creat
step
child
add
child
exactli
child
exampl
color
binari
tree
figur
map
ternari
tree
figur
figur
color
binari
tree
correspond
ternari
tree
note
ternari
tree
produc
algorithm
certainli
avoid
sinc
vertex
solid
right
edg
dash
right
edg
time
accordingli
vertex
result
ternari
tree
never
right
child
left
child
child
process
obviou
invers
exampl
look
eleven
color
binari
tree
eleven
tree
avoid
color
binari
tree
shown
imag
map
figur
figur
map
color
binari
tree
ternari
tree
avoid
ﬁnd
number
tree
avoid
consid
two
case
intern
vertex
tree
avoid
first
left
child
child
center
right
child
root
subtre
leaf
leaf
respect
second
case
left
child
three
child
avoid
vertex
child
anoth
consecut
child
four
vertex
center
right
child
center
right
child
left
child
root
subtre
leaf
respect
therefor
given
sum
two
case
ﬁnd
recurr
relat
tree
avoid
see
instead
avoid
two
consecut
vertex
avoid
two
consecut
vertex
therefor
recurr
comput
avoid
sequenc
oei
interspers
zero
clearli
would
extrem
diﬃcult
solv
recurr
directli
gener
function
turn
tree
pattern
avoid
gener
function
abl
ﬁnd
recurr
relat
hand
argument
parallel
complex
problem
aris
overcount
undercount
instead
adapt
rowland
gener
function
algorithm
tree
avoid
binari
tree
pattern
deal
ternari
tree
pattern
gener
function
algorithm
saw
previou
section
straightforward
comput
given
ternari
tree
pattern
avoid
gener
function
hand
small
tree
pattern
howev
type
comput
quickli
becom
impract
increasingli
complex
tree
pattern
reason
develop
algorithm
ﬁnd
function
equat
satisﬁ
avoid
gener
function
ternari
tree
pattern
first
howev
make
one
notat
adjust
let
gener
function
number
ternari
tree
avoid
contain
tree
pattern
root
recal
alreadi
speciﬁ
tree
contain
pattern
contain
contigu
root
order
subgraph
contain
pattern
root
contain
copi
root
coincid
root
therefor
new
notat
gener
function
ternari
tree
begin
tree
avoid
given
singl
vertex
root
algorithm
use
ﬁnd
similar
rowland
algorithm
binari
tree
account
addit
child
intern
vertex
algorithm
produc
sequenc
gener
function
use
recurs
method
initi
gener
function
interest
written
term
anoth
gener
function
new
gener
function
introduc
recurs
step
deduc
anoth
recurr
term
gener
function
tree
pattern
use
denot
left
center
right
subtre
respect
appropri
may
write
tℓtctr
also
requir
one
oper
tree
pattern
use
denot
intersect
tree
pattern
conceptu
tree
pattern
produc
draw
root
coincid
formal
singl
vertex
recurs
sℓscsr
tℓtctr
note
although
consid
tree
make
intersect
notat
seem
misnom
set
tree
tree
pattern
root
intersect
set
tree
tree
pattern
root
inde
set
tree
tree
pattern
root
new
notat
prepar
give
algorithm
ﬁnd
equal
singl
vertex
tree
first
notic
unless
singl
vertex
tree
gener
function
tree
singl
vertex
root
alway
account
one
tree
one
leaf
rest
tree
avoid
pattern
root
next
introduc
new
gener
function
need
deriv
new
recurr
function
recogn
tree
pattern
root
made
three
subtre
respect
root
howev
account
tree
avoid
individu
overcount
tree
root
pattern
respect
therefor
observ
hold
tree
pattern
tree
pattern
repeatedli
use
observ
deriv
new
recurr
gener
function
aris
comput
complet
system
equat
guarante
system
eventu
complet
sinc
depth
pattern
introduc
process
depth
ﬁnite
mani
tree
pattern
depth
complet
system
equat
elimin
unwant
variabl
function
equat
algorithm
comput
ternari
tree
pattern
initi
let
let
var
var
let
var
let
step
elimin
variabl
comput
function
equat
system
equat
illustr
algorithm
use
comput
avoid
gener
function
step
initi
var
obtain
step
consid
var
var
sinc
relabel
consid
obtain
var
var
sinc
consid
three
equat
let
elimin
give
equat
simpl
tree
usual
solv
result
function
equat
directli
howev
quartic
function
equat
characterist
result
complex
tree
pattern
although
function
equat
simpl
explicit
solut
use
comput
arbitrarili
mani
coeﬃcient
gener
function
make
substitut
isol
coeﬃcient
power
set
equal
zero
function
equat
ﬁnd
sequenc
oei
interspers
zero
complet
classiﬁc
ternari
tree
leaf
given
appendix
along
function
equat
term
correspond
avoid
quenc
note
given
tree
pattern
algorithm
given
section
gener
system
equat
maximum
total
degre
auxiliari
variabl
system
elimin
produc
polynomi
function
equat
guarante
alway
algebra
khoroshkin
piontkovski
independ
show
gener
function
algebra
case
gener
tree
howev
work
done
diﬀer
context
biject
ternari
tree
discuss
two
method
enumer
tree
look
connect
speciﬁc
set
tree
recal
sever
ternari
tree
paper
pattern
avoid
sequenc
one
tree
distinct
found
gtki
pattern
said
wilf
equival
explain
certain
pair
tree
pattern
tki
tkj
wilf
equival
rowland
accomplish
ﬁnding
biject
member
avtki
order
present
biject
clear
concis
way
ﬁrst
present
altern
notat
ternari
tree
use
notat
describ
biject
explain
wilf
equival
ternari
tree
pattern
gener
map
avtkj
gtkj
word
notat
tree
subsect
repres
tree
set
integ
word
notat
easili
extend
tree
tree
vertex
child
foundat
word
represent
parent
deﬁnit
parent
intern
vertex
tree
exactli
child
leaf
exampl
one
parent
two
parent
word
notat
repres
tree
set
word
word
follow
path
root
parent
construct
set
follow
algorithm
label
child
intern
vertex
tree
left
right
ternari
tree
vertex
left
child
label
center
child
right
child
denot
path
root
tree
parent
integ
word
length
path
root
parent
ﬁrst
number
word
repres
child
root
label
refer
child
vertex
given
label
valu
exampl
let
look
look
parent
reach
path
begin
root
go
root
left
child
vertex
center
child
word
notat
denot
set
reach
one
parent
go
root
left
child
root
center
child
becom
set
note
order
tree
uniqu
deﬁn
set
path
root
parent
singl
vertex
tree
repres
empti
set
tree
set
contain
empti
word
set
denot
tree
given
figur
set
denot
ternari
tree
given
figur
also
note
algorithm
clearli
revers
particular
creat
tree
word
follow
procedur
creat
root
give
root
child
label
left
right
word
give
child
root
child
label
child
repeat
process
level
denot
give
child
child
vertex
given
child
take
intersect
tree
obtain
step
ﬁnd
ﬁnal
tree
note
repres
tree
word
set
word
new
idea
exampl
stanley
show
repres
plane
tree
certain
integ
sequenc
parenthes
word
subject
certain
constraint
altern
represent
tree
consid
speciﬁc
erti
word
notat
relev
question
pattern
avoid
first
note
set
word
one
word
preﬁx
anoth
redund
resent
tree
sinc
word
speciﬁ
path
within
tree
word
preﬁx
word
path
speciﬁ
necessarili
part
path
speciﬁ
includ
superﬂu
deﬁnit
let
set
word
alphabet
word
preﬁx
anoth
word
name
arbitrari
set
word
describ
tree
write
set
set
consid
set
word
correspond
tree
pattern
note
tree
given
mhi
begin
possibl
empti
preﬁx
mhi
follow
exactli
order
sequenc
element
may
may
follow
addit
sequenc
number
contain
exist
mhi
exampl
tree
pattern
contain
notic
preﬁx
ﬁrst
third
word
exactli
sequenc
word
howev
avoid
even
though
contain
sequenc
number
word
word
begin
preﬁx
sequenc
begin
follow
subsect
btki
denot
biject
tree
avoid
tki
tree
avoid
tkj
ﬁnd
map
analyz
word
notat
tree
readi
present
biject
wilf
equival
tree
pattern
tkj
pattern
tree
avoid
none
left
vertex
child
avoid
none
center
vertex
child
order
map
tree
avoid
tree
avoid
deﬁn
biject
switch
center
subtre
everi
vertex
left
subtre
vertex
term
word
notat
tree
avoid
word
avoid
word
thu
deﬁn
replac
everi
word
everi
exampl
clear
map
onto
preserv
number
leaf
pattern
tree
avoid
two
consecut
left
vertex
child
avoid
two
consecut
center
vertex
child
word
notat
tree
avoid
pair
consecut
avoid
pair
consecut
thu
deﬁn
tree
avoid
replac
set
word
origin
deﬁn
deﬁn
way
reason
exampl
state
map
biject
pattern
tree
avoid
vertex
child
descend
left
center
child
avoid
vertex
child
descend
left
right
child
therefor
deﬁn
biject
switch
right
center
subtre
vertex
use
word
notat
equival
deﬁn
replac
everi
everi
exampl
clear
onto
preserv
number
leaf
pattern
use
word
notat
tree
avoid
none
word
follow
avoid
none
word
follow
therefor
deﬁn
replac
exampl
previou
exampl
clear
biject
preserv
number
leaf
pattern
use
word
notat
tree
avoid
none
word
follow
avoid
none
word
follow
therefor
deﬁn
replac
everi
everi
everi
clearli
map
word
contain
sequenc
word
contain
sequenc
exampl
previou
exampl
clear
biject
preserv
number
leaf
pattern
biject
bit
complic
previou
map
consid
function
deﬁn
follow
procedur
appli
word
contain
follow
noth
otherwis
locat
ﬁrst
copi
particular
suppos
copi
map
pair
word
contain
occurr
iter
step
new
word
creat
produc
none
contain
follow
exampl
ﬁrst
iter
map
second
iter
give
word
order
prove
biject
ﬁrst
construct
invers
function
start
root
tree
work
downward
consid
currenc
word
pair
form
denot
common
preﬁx
two
word
suﬃx
note
occurr
possibl
multipl
word
form
invers
map
given
follow
process
level
begin
root
replac
occurr
part
occurr
multipl
occurr
level
appli
step
one
occurr
aﬀect
word
denot
occurr
level
therefor
order
appli
step
occurr
ith
level
irrelev
iter
step
success
level
begin
root
discard
word
preﬁx
anoth
set
word
exampl
ﬁrst
level
occurr
given
step
replac
set
step
requir
check
next
level
order
lowest
highest
see
occur
sixth
level
given
word
thu
replac
obtain
third
iter
step
replac
fourth
iter
replac
left
set
appli
step
see
note
expect
earlier
exampl
easi
see
fact
map
tree
avoid
tree
avoid
clear
invers
thu
also
clear
biject
claim
preserv
number
leaf
step
biject
step
chang
structur
consid
arbitrari
occurr
path
root
root
occurr
given
preﬁx
occurr
step
biject
map
word
preﬁx
word
word
preﬁx
result
longer
word
preﬁx
see
vertex
given
path
one
leaf
name
second
child
leaf
leaf
howev
also
see
vertex
given
path
one
le
child
leaf
result
word
preﬁx
could
alreadi
word
preﬁx
sinc
would
entail
occurr
vertex
given
path
word
add
subtract
number
leaf
sinc
preﬁx
word
replac
thu
creat
new
vertex
iter
step
occurr
reason
hold
see
number
leaf
number
leaf
account
wilf
equival
tree
pattern
leaf
gener
approach
biject
section
gener
previou
six
biject
biject
larger
class
tree
pattern
particular
present
biject
certain
tree
pattern
avoid
gener
function
one
parent
tree
pattern
repres
singl
word
word
notat
consid
two
tree
pattern
word
notat
exist
biject
map
biject
set
tree
avoid
set
tree
avoid
particular
map
replac
letter
list
tree
exampl
map
send
consid
tree
avoid
given
list
notat
replac
integ
exampl
gener
tree
denot
set
word
avoid
appli
biject
letter
set
word
word
contain
instanc
avoid
theorem
map
onto
preserv
number
leaf
proof
fact
onto
follow
fact
induc
map
permut
show
preserv
number
leaf
enough
show
intern
vertex
given
tree
uniqu
intern
vertex
number
child
leaf
consid
word
describ
path
let
number
distinct
letter
follow
preﬁx
word
child
leaf
consid
sinc
distinct
letter
follow
must
distinct
letter
follow
preﬁx
mean
vertex
whose
path
root
given
child
leaf
hold
true
everi
vertex
prove
number
leaf
remain
gener
biject
tree
one
interest
properti
consid
word
notat
tree
also
read
word
notat
tree
say
biject
pair
tree
necessarili
discov
wilf
equival
correspond
pair
tree
final
note
biject
section
given
biject
explain
wilf
equival
ternari
tree
pattern
leaf
note
one
biject
given
section
guarante
exist
result
section
biject
tree
lone
except
method
sinc
involv
cut
integ
word
repres
tree
rather
relabel
appendix
also
give
comput
data
equival
ternari
tree
pattern
leaf
turn
ternari
tree
pattern
fall
three
distinct
wilf
class
mani
equival
also
explain
gener
biject
section
moreov
biject
except
one
may
clearli
seen
replac
fact
see
biject
sens
rowland
binari
tree
pattern
paper
last
biject
replac
biject
consid
exampl
consid
tree
whose
word
represent
shown
figur
tree
contain
two
copi
tree
pattern
one
copi
root
near
bottom
tree
one
copi
append
deepest
left
leaf
hand
imag
tree
repres
also
shown
figur
tree
contain
two
copi
tree
one
root
one
deeper
tree
howev
lower
copi
copi
copi
append
deepest
leaf
true
replac
biject
copi
transform
copi
subtre
descend
leaf
copi
move
entireti
subtre
descend
leaf
copi
clearli
case
biject
remain
open
question
determin
whether
exist
replac
biject
ternari
tree
avoid
ternari
tree
avoid
figur
ternari
tree
word
represent
mani
biject
overlap
rowland
idea
replac
biject
howev
propos
consid
tree
set
integ
word
provid
insight
process
develop
wilf
equival
tree
pattern
conclus
throughout
paper
investig
pattern
avoid
ternari
tree
extend
previou
work
binari
tree
began
ﬁnding
recurr
relat
gener
function
hand
sever
simpl
ternari
tree
pattern
make
comput
avoid
sequenc
easier
howev
develop
algorithm
base
rowland
gorithm
binari
tree
ﬁnd
gener
function
tree
avoid
given
tree
pattern
next
classiﬁ
tree
pattern
group
togeth
anc
sequenc
abl
ﬁnd
biject
set
tree
avoid
speciﬁc
pair
two
equival
tree
pattern
tki
tkj
pair
tree
form
tree
avoid
tki
one
avoid
tkj
state
sever
biject
speciﬁc
pair
tree
pattern
gener
biject
tree
avoid
pattern
equival
class
tree
permut
acknowledg
author
thank
eric
rowland
number
present
suggest
support
gener
mani
tree
graphic
requir
paper
appendix
appendix
list
ternari
tree
nine
leaf
classifi
avoid
gener
function
sequenc
class
give
function
equat
satisﬁ
list
ﬁrst
term
includ
zero
correspond
avoid
sequenc
simpl
explicit
form
includ
avoid
sequenc
class
list
onlin
encyclopedia
integ
sequenc
without
interspers
zero
includ
appropri
refer
breviti
reﬂect
omit
class
oei
catalan
number
class
oei
littl
number
class
oei
number
mode
connect
point
class
oei
expans
class
oei
gener
function
satisﬁ
class
oei
gener
function
given
refer
dotsenko
pattern
avoid
label
tree
preprint
http
flajolet
sedgewick
analyt
combinator
cambridg
univers
press
flajolet
sipala
steyaert
analyt
variat
common
sion
problem
automaton
languag
program
proc
icalp
lectur
note
comput
scienc
vol
springer
goulden
jackson
invers
theorem
cluster
decomposit
sequenc
distinguish
subsequ
london
math
soc
khoroshkin
piontkovski
gener
seri
ﬁnite
present
operad
prepar
noonan
zeilberg
cluster
method
extens
tion
implement
diﬀer
equat
applic
rowland
pattern
avoid
binari
tree
combin
theori
ser
stanley
enum
combinator
cambridg
univers
press
sloan
encyclopedia
integ
sequenc
avail
http
steyaert
flajolet
pattern
tree
analysi
info
control
