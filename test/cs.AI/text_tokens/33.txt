effici
algorithm
estim
state
sequenc
imprecis
hidden
markov
model
jasper
bock
gert
cooman
abstract
present
efﬁcient
exact
algorithm
estim
state
sequenc
output
observ
imprecis
hidden
markov
model
ihmm
uncertainti
link
one
state
next
link
state
output
repres
use
coher
lower
previs
notion
independ
associ
credal
network
repres
ihmm
epistem
irrelev
consid
best
ate
state
sequenc
maxim
sequenc
posterior
joint
state
model
condit
observ
output
sequenc
associ
gain
function
indic
state
sequenc
correspond
generalis
ﬁnding
state
sequenc
highest
posterior
probabl
hmm
precis
transit
output
probabl
phmm
argu
comput
complex
worst
quadrat
length
markov
chain
cubic
number
state
essenti
linear
number
maxim
state
sequenc
binari
ihmm
investig
experiment
number
maxim
state
sequenc
depend
model
paramet
also
present
simpl
toy
applic
optic
charact
recognit
demonstr
algorithm
use
robustifi
infer
made
precis
probabl
model
introduct
artiﬁci
intellig
probabilist
graphic
model
becom
increasingli
power
tool
amongst
hidden
markov
model
hmm
deﬁnit
amongst
simplest
perhap
also
amongst
popular
one
import
applic
hmm
involv
ﬁnding
sequenc
hidden
state
highest
posterior
probabl
observ
sequenc
output
hmm
precis
local
transit
emiss
probabl
quit
efﬁcient
dynam
program
algorithm
due
viterbi
perform
task
probabilist
local
model
coher
lower
previs
know
algorithm
literatur
comput
complex
come
even
close
viterbi
paper
take
ﬁrst
step
toward
remedi
situat
describ
imprecis
hidden
markov
model
special
case
credal
tree
special
case
credal
network
epistem
irrelev
section
show
particular
use
idea
underli
algorithm
involv
independ
natur
extens
margin
extens
construct
conserv
joint
model
imprecis
local
transit
emiss
model
also
deriv
number
interest
use
formula
construct
result
section
assum
basic
knowledg
theori
coher
lower
sion
generalis
classic
probabl
allow
incomplet
speciﬁc
probabl
includ
short
introduct
theori
section
section
explain
sequenc
observ
lead
collect
call
maxim
state
sequenc
find
seem
daunt
task
ﬁrst
search
space
grow
exponenti
length
markov
chain
howev
key
word
phrase
hidden
markov
model
state
sequenc
estim
imprecis
probabl
maxim
coher
lower
previs
messag
pass
credal
tree
irrelev
jasper
bock
gert
cooman
section
use
basic
formula
found
section
deriv
appropri
version
bellman
principl
optim
allow
exponenti
reduct
search
space
use
number
addit
trick
abl
section
devis
algorithm
efﬁcient
construct
maxim
state
sequenc
prove
section
algorithm
essenti
linear
number
maxim
sequenc
quadrat
length
chain
cubic
number
state
perceiv
complex
compar
viterbi
algorithm
especi
realis
latter
make
simplifi
step
resolv
tie
le
arbitrarili
order
produc
singl
optim
state
sequenc
someth
allow
algorithm
reason
becom
clear
section
consid
special
case
binari
ihmm
investig
mental
number
maxim
state
sequenc
depend
model
paramet
comment
interest
structur
emerg
give
heurist
explan
show
algorithm
efﬁcienc
section
calcul
maxim
sequenc
speciﬁc
ihmm
length
conclud
section
simpl
toy
applic
optic
charact
recognit
demonstr
advantag
algorithm
give
clear
indic
estihmm
algorithm
abl
robustifi
exist
viterbi
algorithm
intellig
manner
order
make
main
argument
readabl
possibl
releg
technic
proof
appendix
freshen
coher
lower
previs
begin
basic
theori
coher
lower
previs
see
ref
studi
ref
recent
survey
coher
lower
previs
special
type
imprecis
probabl
model
roughli
speak
wherea
classic
probabl
theori
assum
subject
uncertainti
repres
singl
probabl
mass
function
theori
imprecis
probabl
effect
work
set
possibl
probabl
mass
function
therebi
allow
imprecis
well
indecis
model
repres
peopl
unfamiliar
theori
look
way
robustifi
classic
theori
perhap
easiest
way
understand
interpret
use
approach
consid
set
probabl
mass
function
deﬁn
discret
set
possibl
state
mass
function
associ
linear
previs
expect
oper
deﬁn
set
map
also
call
gambl
expect
valu
associ
probabl
mass
function
deﬁn
lower
previs
correspond
set
follow
lower
envelop
linear
previs
inf
gambl
sup
similarli
deﬁn
upper
previs
gambl
mostli
talk
lower
previs
sinc
follow
conjugaci
relat
two
model
mathemat
equival
event
subset
set
possibl
valu
event
associ
indic
gambl
assum
valu
imprecis
hidden
markov
model
estim
state
sequenc
imprecis
hidden
markov
model
outsid
call
inf
lower
probabl
event
similarli
upper
probabl
shown
function
satisﬁ
follow
set
interest
mathemat
properti
deﬁn
coher
lower
previs
min
real
homogen
superaddit
everi
set
mass
function
uniqu
deﬁn
coher
lower
previs
gener
convers
hold
howev
limit
set
mass
function
close
make
credal
correspond
coher
lower
previs
impli
use
theori
coher
lower
previs
tool
reason
close
convex
set
probabl
mass
function
longer
explicitli
refer
credal
set
simpli
talk
coher
lower
previs
use
keep
mind
alway
uniqu
credal
set
correspond
coher
lower
previs
uniqu
credal
set
given
special
kind
imprecis
model
vacuou
lower
previs
model
repres
complet
ignor
therefor
set
possibl
mass
function
credal
set
shown
easili
everi
correspond
lower
previs
given
min
condit
lower
upper
previs
extens
classic
condit
expect
function
deﬁn
similar
intuit
obviou
way
lower
envelop
associ
set
condit
mass
function
consid
variabl
variabl
condit
lower
previs
set
gambl
function
gambl
gambl
whose
valu
lower
previs
condit
event
lower
previs
satisﬁ
condit
call
condit
lower
previs
separ
coher
sometim
use
extend
domain
condit
lower
previs
let
gambl
number
condit
lower
previs
involv
number
variabl
must
separ
coher
also
make
sure
satisfi
stringent
joint
coher
requir
explain
detail
would
take
far
refer
ref
detail
discuss
motiv
present
purpos
sufﬁc
say
joint
coher
close
relat
make
sure
condit
lower
previs
lower
envelop
associ
condit
mass
function
satisfi
bay
rule
given
lower
previs
correspond
condit
lower
previs
jointli
coher
uniqu
deﬁn
howev
shown
ref
alway
lie
natur
regular
extens
use
natur
extens
condit
coher
lower
previs
deﬁn
given
min
smallest
conserv
way
condit
lower
previs
correspond
condit
everi
probabl
mass
function
credal
set
observ
take
lower
envelop
condit
mass
function
use
regular
extens
condit
coher
lower
previs
deﬁn
max
vacuou
thu
max
vacuou
jasper
bock
gert
cooman
give
greatest
inform
condit
lower
previs
jointli
coher
origin
uncondit
lower
previs
correspond
take
mass
function
credal
set
condit
observ
take
lower
envelop
natur
regular
extens
coincid
differ
latter
case
natur
extens
vacuou
regular
extens
usual
remain
inform
introduct
coher
lower
previs
interpret
altern
entat
close
convex
set
probabl
mass
function
approach
often
adopt
sensit
analyst
rather
intuit
peopl
use
work
classic
probabl
theori
sake
complet
mention
coher
lower
previs
also
given
behaviour
interpret
without
use
notion
probabl
mass
function
lower
previs
gambl
interpret
supremum
accept
buy
price
subject
will
pay
order
gain
possibl
neg
reward
outcom
experi
determin
see
ref
inform
regard
interpret
basic
notion
imprecis
hidden
markov
model
depict
use
follow
probabilist
graphic
model
state
sequenc
output
sequenc
figur
tree
represent
hidden
markov
model
natur
number
state
variabl
assum
valu
respect
ﬁnite
set
output
variabl
assum
valu
respect
ﬁnite
set
denot
gener
valu
ˆxk
gener
valu
local
uncertainti
model
assum
follow
local
uncertainti
model
variabl
margin
lower
previs
deﬁn
set
map
gambl
subsequ
state
condit
lower
previs
deﬁn
call
transit
model
order
maintain
uniform
notat
also
denot
margin
lower
previs
condit
lower
previs
denot
variabl
may
assum
singl
valu
whose
valu
therefor
certain
gambl
interpret
gambl
whose
valu
lower
previs
gambl
condit
addit
output
condit
lower
previs
deﬁn
call
emiss
model
gambl
interpret
gambl
whose
valu
lower
previs
gambl
condit
estim
state
sequenc
imprecis
hidden
markov
model
take
local
margin
transit
emiss
uncertainti
model
separ
coher
recal
simpli
mean
lower
previs
coher
uncondit
lower
previs
everi
coher
everi
interpret
graphic
structur
assum
graphic
entat
figur
repres
follow
irrelev
assess
condit
mother
variabl
variabl
tree
alli
irrelev
variabl
descend
say
variabl
epistem
irrelev
variabl
observ
affect
belief
mathemat
state
term
lower
previs
use
introduc
mathemat
notat
describ
joint
variabl
tree
figur
denot
tupl
tupl
joint
variabl
assum
valu
set
joint
variabl
assum
valu
set
gener
valu
denot
gener
valu
exampl
consid
variabl
mother
variabl
figur
variabl
variabl
descend
interpret
graphic
structur
figur
impli
know
condit
valu
addit
learn
valu
variabl
chang
belief
epistem
irrelev
weaker
strong
independ
condit
usual
associ
credal
network
name
usual
given
probabilist
graphic
model
coher
lower
previs
local
uncertainti
model
recent
work
shown
use
weaker
condit
guarante
efﬁcient
algorithm
exist
updat
belief
singl
target
node
credal
tree
essenti
linear
number
node
tree
joint
uncertainti
model
use
local
uncertainti
model
want
construct
global
model
joint
lower
previs
variabl
tree
joint
lower
previs
jointli
coher
local
model
encod
epistem
irrelev
assess
encod
tree
iii
small
possibl
special
case
gener
problem
credal
tree
discuss
solv
great
detail
ref
section
summaris
solut
ihmm
give
heurist
justiﬁc
refer
ref
proof
joint
model
present
inde
conserv
lower
previs
coher
local
model
captur
epistem
irrelev
assess
encod
tree
proceed
recurs
manner
consid
consid
smallest
coher
joint
lower
previs
variabl
ihmm
depict
figur
repres
subtre
tree
repres
figur
lower
previs
act
margin
model
ﬁrst
state
variabl
note
global
model
look
identiﬁ
condit
lower
previs
reason
given
section
aim
develop
recurs
express
enabl
construct
use
express
eventu
yield
global
model
ﬁrst
step
combin
joint
model
variabl
deﬁn
thick
dot
line
figur
local
smaller
lower
previs
correspond
larger
credal
set
jasper
bock
gert
cooman
figur
subtre
ihmm
involv
variabl
model
variabl
deﬁn
lead
joint
model
variabl
deﬁn
dot
line
figur
trivial
sinc
must
solut
le
obviou
joint
model
construct
mani
differ
way
impos
condit
ﬁrst
condit
separ
coher
condit
lower
previs
jointli
coher
margin
model
second
rather
obviou
condit
coincid
respect
domain
third
condit
model
captur
epistem
irrelev
assess
encod
tree
particular
state
condit
two
variabl
epistem
independ
word
epistem
irrelev
one
anoth
model
meet
condit
call
condit
independ
product
gener
speak
condit
independ
product
uniqu
call
smallest
conserv
possibl
condit
independ
product
alway
exist
condit
independ
natur
extens
denot
summaris
given
condit
independ
natur
extens
properti
studi
great
detail
ref
purpos
paper
sufﬁc
recal
studi
much
like
independ
product
precis
probabl
estim
state
sequenc
imprecis
hidden
markov
model
independ
natur
extens
factoris
impli
particular
gek
call
gambl
valu
express
ﬁrst
equal
actual
factoris
properti
second
equal
hold
coincid
respect
domain
third
equal
follow
conjugaci
relat
coher
condit
fourth
use
shorthand
notat
mmax
mmin
also
use
analog
notat
mnmax
mnmin
second
ﬁnal
step
combin
joint
model
variabl
deﬁn
local
model
abl
deﬁn
joint
model
variabl
deﬁn
shown
elsewher
conserv
coher
way
mean
margin
extens
also
known
law
iter
lower
expect
lead
allow
rang
practic
purpos
use
see
equival
recal
express
indic
gambl
assum
valu
interest
lower
upper
probabl
without
much
use
equat
deriv
follow
express
number
interest
lower
upper
probabl
assum
throughout
exampl
deriv
equat
appendix
jasper
bock
gert
cooman
equival
local
upper
previs
posit
sens
assumpt
weak
restrict
practic
purpos
probabilist
local
model
usual
construct
ad
margin
error
around
precis
model
therebi
make
upper
transit
probabl
posit
construct
howev
allow
lower
transit
probabl
zero
someth
happen
often
practic
problem
proposit
assumpt
local
upper
previs
posit
impli
estim
state
output
hidden
markov
model
state
directli
observ
output
gener
aim
use
output
estim
state
concentr
follow
problem
suppos
observ
output
sequenc
estim
state
sequenc
use
essenti
bayesian
approach
need
allow
fact
work
imprecis
rather
precis
probabl
model
updat
ihmm
ﬁrst
step
approach
consist
updat
tion
joint
model
observ
output
mention
section
uniqu
coher
way
perform
updat
howev
particular
problem
solv
paper
happen
make
differ
updat
method
use
long
coher
time
choos
use
least
inform
coher
updat
method
regular
extens
later
section
show
coher
updat
method
yield
result
sinc
follow
posit
assumpt
proposit
regular
extens
lead
consid
updat
lower
previs
given
max
gambl
use
coher
joint
lower
previs
hard
prove
strictli
decreas
continu
function
therefor
uniqu
zero
see
lemma
iii
appendix
consequ
fact
hard
infer
strictli
decreas
continu
charact
sign
either
neg
posit
equal
zero
see
also
illustr
conserv
coher
way
yield
vacuou
model
estim
state
sequenc
imprecis
hidden
markov
model
equat
crucial
import
howev
gener
want
allow
zero
may
happen
allow
lower
transit
probabl
zero
requir
follow
posit
assumpt
proposit
gener
speak
invalid
second
equival
equat
turn
implic
limit
speciﬁc
type
gambl
form
still
prove
follow
import
theorem
theorem
local
upper
previs
posit
sign
ﬁxed
valu
posit
neg
zero
maxim
state
sequenc
next
step
consist
use
posterior
model
ﬁnd
best
estim
state
sequenc
bayesian
approach
usual
done
solv
optimis
problem
associ
gain
function
everi
candid
state
sequenc
select
best
estim
state
sequenc
maximis
posterior
expect
gain
result
state
sequenc
maxim
posterior
probabl
generalis
approach
toward
work
imprecis
probabl
model
criterion
use
decid
estim
optim
given
gain
function
maxim
maxim
number
desir
properti
make
sure
work
well
optimis
context
behaviour
point
view
well
robust
approach
shall
see
present
express
strict
prefer
two
state
sequenc
estim
follow
behaviour
interpret
express
subject
lower
previs
dispos
pay
strictli
posit
amount
util
replac
gain
associ
estim
gain
associ
estim
see
ref
section
detail
altern
robust
point
view
express
condit
mass
function
credal
set
associ
updat
lower
previs
state
sequenc
posterior
probabl
strictli
higher
posterior
probabl
state
sequenc
binari
relat
thu
deﬁn
strict
partial
order
irreﬂex
transit
binari
relat
set
state
sequenc
consid
estim
optim
undomin
maxim
strict
partial
order
opt
use
last
equival
follow
theorem
summari
aim
paper
develop
efﬁcient
algorithm
ﬁnding
set
maxim
estim
opt
statement
section
coher
updat
method
would
yield
result
regular
extens
justiﬁ
sinc
coher
updat
uniqu
need
motiv
statement
special
case
use
regular
extens
updat
model
optim
estim
given
special
case
howev
ﬁnd
jasper
bock
gert
cooman
ﬁrst
inequ
follow
monoton
coher
lower
previs
consequ
therefor
ﬁnd
sequenc
optim
result
opt
use
natur
extens
updat
joint
model
optim
state
sequenc
still
given
ﬁnal
equival
would
longer
hold
us
theorem
assum
use
regular
extens
perform
updat
joint
model
howev
special
case
natur
extens
deﬁnit
lead
updat
model
equal
vacuou
one
therefor
ﬁnd
min
impli
special
case
found
regular
extens
also
result
sequenc
optim
mean
opt
thu
shown
special
case
set
optim
sequenc
regardless
whether
use
natur
regular
extens
updat
joint
model
sinc
everi
coher
updat
method
lie
two
method
opt
depend
updat
method
long
coher
coher
updat
uniqu
thu
equal
regular
extens
therebi
make
result
trivial
case
therefor
conclud
result
paper
depend
particular
updat
method
chosen
long
coher
instead
look
maxim
state
sequenc
one
could
also
use
decis
criterion
ﬁrst
approach
consid
could
consist
tri
ﬁnd
state
sequenc
maximis
posterior
lower
probabl
argmax
well
known
sequenc
particular
guarante
also
maxim
sequenc
ﬁnding
sequenc
seem
much
complic
cours
know
maxim
solut
could
determin
solut
compar
posterior
lower
probabl
far
see
howev
calcul
seem
trivial
task
comput
point
view
expect
similar
comput
difﬁculti
yet
anoth
approach
also
sider
consist
ﬁnding
sequenc
sequenc
maximis
expect
gain
least
one
condit
mass
function
credal
set
associ
updat
lower
previs
similarli
solut
one
also
known
contain
within
set
maxim
one
construct
main
reason
approach
efﬁcient
compar
one
explicitli
calcul
valu
lower
previs
need
know
sign
therebi
allow
work
directli
joint
model
instead
updat
model
maxim
subsequ
shall
see
order
ﬁnd
set
maxim
estim
use
consid
gener
set
maxim
subsequ
deﬁn
opt
ˆxk
opt
ˆxk
interpret
set
immedi
consid
follow
part
origin
ihmm
take
margin
model
ﬁrst
state
commun
cassio
campo
estim
state
sequenc
imprecis
hidden
markov
model
state
subsequ
output
subsequ
argu
section
correspond
joint
lower
previs
precis
sequenc
output
opt
set
state
sequenc
estim
undomin
estim
clear
set
opt
eventu
look
also
written
opt
use
recurs
equat
fix
look
equat
see
use
deriv
manag
express
lower
previs
ˆxk
easili
done
see
appendix
use
tion
togeth
algebra
manipul
consid
three
differ
case
ˆxk
use
notat
introduc
section
ˆxk
ˆxk
ˆxk
ˆxk
ˆxn
ˆxk
ˆxn
ˆxk
ˆxk
ˆxk
deﬁn
given
sequenc
state
found
simpl
backward
recurs
start
principl
optim
determin
state
sequenc
opt
directli
use
equat
clearli
exponenti
complex
length
chain
go
take
dynam
program
approach
reduc
complex
deriv
recurs
equat
set
optim
sub
sequenc
opt
jasper
bock
gert
cooman
theorem
principl
optim
ˆxk
ˆxk
ˆxk
ˆxk
opt
opt
ˆxk
immedi
consequ
ﬁnd
opt
cand
cand
set
sequenc
still
element
opt
accord
theorem
cand
opt
denot
concaten
state
sequenc
set
state
posk
deﬁn
posk
equat
simpliﬁ
cand
opt
local
lower
previs
posit
gener
true
gener
case
consid
upper
previs
requir
posit
also
introduc
follow
notat
candxk
cand
algorithm
find
maxim
state
sequenc
use
equat
devis
algorithm
construct
set
opt
maxim
state
sequenc
recurs
manner
initi
use
backward
recurs
begin
deﬁn
auxiliari
notion
first
consid
threshold
ˆxk
ˆxk
min
ˆxk
next
deﬁn
αmax
max
max
max
use
equat
calcul
efﬁcient
use
follow
backward
recurs
dynam
program
procedur
αmax
max
max
αmax
αmax
max
max
max
max
max
start
estim
state
sequenc
imprecis
hidden
markov
model
max
αmax
final
let
max
αopt
ˆxk
max
ˆxk
ˆxk
reformul
optim
condit
turn
αopt
culat
equat
extrem
use
prove
appendix
allow
signiﬁcantli
simplifi
equat
follow
ˆxk
cand
ˆxk
αopt
opt
reduc
opt
ˆxn
ˆxn
αopt
recurs
solut
method
aim
algorithm
determin
set
opt
efﬁcient
recurs
opt
determin
straightforward
manner
everi
use
criterion
exampl
consid
simpl
binari
hmm
maxim
element
simpli
state
trivial
repres
could
exampl
ﬁnd
opt
opt
next
let
run
backward
ﬁrst
build
set
cand
use
deﬁnit
equat
result
previou
recurs
step
set
use
determin
opt
criterion
exampl
continu
discuss
exampl
set
cand
construct
use
equat
instanc
reduc
equat
ﬁnd
cand
opt
appli
criterion
everi
element
set
ﬁnd
set
opt
instanc
could
equal
analogu
method
use
continu
way
eventu
reach
yield
desir
set
maxim
sequenc
opt
opt
possibl
bottleneck
solut
lie
use
criterion
terion
alreadi
much
efﬁcient
origin
one
still
lead
exponenti
complex
set
cand
number
element
exponenti
length
consid
sequenc
therefor
present
method
avoid
check
inequ
criterion
element
cand
ﬁrst
trick
consist
use
efﬁcient
data
structur
store
set
optim
sequenc
simpli
list
element
could
also
list
optim
sequenc
would
impli
store
inform
multipl
time
sinc
part
sequenc
therefor
choos
repres
list
optim
sequenc
collect
tree
structur
way
tree
construct
obviou
follow
exampl
jasper
bock
gert
cooman
exampl
consid
follow
set
sequenc
repres
set
way
use
inform
get
lost
memori
space
waist
exampl
sequenc
start
way
would
much
efﬁcient
store
common
subsequ
therefor
prefer
repres
set
collect
tree
depict
next
step
exploit
data
structur
order
appli
criterion
efﬁcient
start
construct
set
cand
repres
type
data
structur
exampl
consid
set
sequenc
exampl
opt
sinc
length
sequenc
suppos
alreadi
construct
set
previou
recurs
step
furthermor
sake
exampl
let
assum
use
equat
construct
set
cand
cand
opt
set
cand
consist
two
subset
construct
separ
subset
opt
would
normal
take
quit
effort
compos
sinc
concaten
individu
element
opt
howev
use
represent
come
ad
one
node
two
link
alreadi
exist
data
structur
opt
opt
opt
conceptu
want
repres
set
tree
would
look
like
ﬁgure
left
estim
state
sequenc
imprecis
hidden
markov
model
howev
store
way
comput
bad
idea
would
mean
construct
complet
binari
tree
exponenti
depth
tree
therefor
rememb
set
sequenc
repres
tree
without
actual
construct
depict
right
cand
opt
set
cand
look
trivial
construct
join
two
subset
opt
depict
follow
equat
data
structur
repres
opt
contain
data
structur
repres
cand
left
ﬁnd
subset
efﬁcient
manner
present
method
construct
subset
cand
prove
subset
inde
opt
everi
ﬁrst
deﬁn
αopt
deﬁn
equat
let
αopt
recurs
deﬁn
αopt
αopt
αopt
everi
αopt
optim
tree
construct
follow
method
select
subset
given
set
cand
construct
use
equat
first
everi
check
whether
αmax
αopt
use
gener
notat
ˆxk
condit
satisﬁ
next
choos
arbitrari
ˆxk
check
everi
set
cand
follow
condit
satisﬁ
αopt
αmax
ˆxk
jasper
bock
gert
cooman
ˆxk
easili
calcul
use
equat
notic
αopt
alreadi
known
previou
recurs
step
denot
αopt
inequ
true
gener
concaten
state
ˆxk
creat
set
state
sequenc
ˆxk
everi
ˆxk
previou
step
bundl
set
obtain
larger
set
state
sequenc
ˆxk
next
step
consid
arbitrari
ˆxk
check
everi
set
cand
ˆxk
follow
condit
satisﬁ
αopt
αmax
ˆxk
ˆxk
calcul
easili
use
equat
sinc
αopt
alreadi
calcul
previou
step
denot
αopt
inequ
hold
gener
concaten
ˆxk
creat
set
state
sequenc
ˆxk
everi
ˆxk
previou
step
bundl
set
obtain
larger
set
state
sequenc
ˆxk
clear
way
eventu
end
set
sequenc
ˆxk
consid
arbitrari
ˆxk
check
everi
set
cand
ˆxk
follow
condit
hold
αopt
ˆxk
denot
case
ˆxn
concaten
ˆxk
creat
set
state
sequenc
ˆxk
everi
ˆxk
previou
step
bundl
set
ﬁnalli
obtain
set
state
sequenc
ˆxk
subset
set
cand
start
theorem
subset
cand
obtain
use
optim
tree
construct
equal
opt
exampl
continu
exampl
follow
optim
tree
construct
start
check
everi
whether
αmax
suppos
case
symbolis
give
correspond
node
represent
green
colour
leftmost
part
ﬁgure
follow
theorem
everi
sequenc
opt
either
start
sinc
set
ˆxk
exampl
cours
trivial
set
ˆxk
would
would
obtain
result
everi
sequenc
opt
start
repres
partial
inform
set
opt
trivial
way
rightmost
part
ﬁgure
αopt
αmax
cand
opt
next
step
need
check
criterion
everi
ˆxk
found
previou
step
begin
ˆxk
start
look
set
cand
simpli
subset
sequenc
cand
start
tree
represent
cand
check
whether
set
come
check
node
ˆxk
daughter
valu
sinc
estim
state
sequenc
imprecis
hidden
markov
model
αopt
αopt
αopt
node
ˆxk
also
daughter
αmax
inde
case
need
check
whether
αmax
suppos
criterion
met
found
ﬁrst
subsequ
ˆxk
name
symbolis
ﬁgure
give
child
node
ˆxk
green
colour
daughter
get
colour
red
part
set
sequenc
ˆxk
construct
step
theorem
also
mean
none
element
opt
start
subsequ
ˆxk
know
tree
repres
sequenc
cand
start
complet
tree
explicitli
construct
creat
problem
sinc
need
tree
check
whether
set
condit
trivial
met
complet
set
therefor
left
check
criterion
ˆxk
everi
might
instanc
ﬁnd
αmax
might
ﬁnd
αmax
αopt
result
check
summaris
leftmost
part
ﬁgure
correspond
sequenc
ˆxk
theorem
possibl
start
sequenc
element
opt
easili
store
depict
tree
represent
see
rightmost
part
follow
ﬁgure
αopt
cand
opt
keep
perform
step
optim
tree
construct
way
theorem
state
data
structur
built
check
criterion
repres
set
opt
set
might
look
like
opt
figur
clarifi
set
construct
notic
inde
never
explicitli
construct
set
tree
represent
sinc
everi
time
reach
red
node
descend
node
construct
jasper
bock
gert
cooman
cand
opt
figur
clariﬁc
construct
cand
addit
comment
need
order
produc
assess
lower
upper
transit
emiss
probabl
conserv
coher
model
correspond
assess
due
comonoton
addit
impli
ˆxk
aqk
ˆxk
therefor
equat
lead
ˆxk
side
smallest
possibl
valu
threshold
ˆxk
ing
assess
ˆxk
lead
conserv
infer
therefor
largest
possibl
set
maxim
sequenc
correspond
assess
ˆxk
discuss
algorithm
complex
preparatori
calcul
begin
preparatori
calcul
y
equat
threshold
ˆxk
equat
tional
complex
clearli
cubic
number
state
linear
number
node
calcul
αmax
equat
linear
number
max
estim
state
sequenc
imprecis
hidden
markov
model
node
quadrat
number
state
complex
ﬁnding
αopt
equat
linear
number
node
cubic
number
state
complex
optim
tree
construct
comput
complex
optim
tree
construct
le
trivial
let
start
note
construct
essenti
consist
repeat
small
step
name
ad
state
ˆx
alreadi
construct
ˆxk
perform
step
sequenc
ˆxk
ﬁrst
check
whether
cand
ˆxk
done
constant
time
sinc
represent
reduc
step
check
whether
node
daughter
data
structur
cand
ˆxk
next
ˆxk
check
inde
case
need
check
αmax
two
criterion
everi
call
perform
search
step
complex
linear
number
state
meet
criterion
note
ˆx
concaten
ˆxk
αopt
prove
perform
search
step
alway
yield
least
one
ˆx
concaten
ˆxk
theorem
consid
arbitrari
sequenc
ˆxk
creat
perform
optim
tree
construct
alway
least
one
cand
ˆxk
inequ
αmax
exampl
visual
represent
mean
everi
green
node
alway
least
one
green
child
impli
green
sequenc
length
ˆxk
hold
αopt
situat
depict
therefor
imposs
next
notic
everi
optim
sequenc
ˆxk
yield
optim
tree
construct
built
ad
extra
state
ˆx
alreadi
construct
sequenc
ˆxk
repeat
go
ad
state
mean
perform
one
search
step
theorem
impli
perform
search
step
also
mean
ad
least
one
state
therefor
construct
one
maxim
sequenc
ˆxk
never
take
search
step
length
sequenc
sinc
perform
one
search
step
linear
number
state
construct
one
maxim
sequenc
linear
length
sequenc
number
state
determin
set
opt
maxim
sequenc
thu
linear
number
sequenc
length
sequenc
number
state
recurs
construct
solut
construct
opt
recurs
let
run
ﬁxed
construct
set
opt
everi
mean
optim
tree
construct
alreadi
shown
identifi
ˆxk
ˆxk
sequenc
length
zero
jasper
bock
gert
cooman
construct
set
linear
number
sequenc
length
sequenc
number
state
mean
perform
recurs
construct
quadrat
length
sequenc
quadrat
number
state
roughli
linear
number
maxim
sequenc
gener
complex
complet
algorithm
consist
preparatori
calcul
recurs
construct
solut
conclud
quadrat
number
node
cubic
number
state
roughli
speak
linear
number
maxim
sequenc
comparison
viterbi
algorithm
precis
hmm
state
sequenc
timat
problem
solv
efﬁcient
viterbi
algorithm
whose
complex
linear
number
node
quadrat
number
state
howev
algorithm
emit
singl
optim
probabl
state
sequenc
even
case
multipl
equal
probabl
optim
solut
cours
simpliﬁ
problem
would
content
give
singl
maxim
solut
ensu
version
algorithm
would
complex
similar
viterbi
allow
fair
comparison
viterbi
algorithm
would
need
alter
viterbi
algorithm
way
longer
resolv
tie
arbitrarili
emit
equal
probabl
optim
state
sequenc
new
version
remain
linear
number
node
quadrat
number
state
also
ad
complex
easili
seen
note
emit
optim
sequenc
linear
number
thu
possibl
exponenti
possibl
solut
would
exampl
equal
probabl
complex
part
algorithm
recurs
construct
solut
differ
viterbi
approach
linear
quadrat
number
node
differ
come
ihmm
mutual
incompar
solut
wherea
phmm
optim
solut
indiffer
equal
probabl
make
sure
algorithm
phmm
requir
forward
loop
case
estihmm
algorithm
perform
optim
tree
construct
believ
ad
complex
reason
price
pay
robust
work
model
offer
experi
linear
complex
number
maxim
sequenc
probabl
best
hope
also
see
abl
ﬁnd
maxim
sequenc
efﬁcient
provid
number
reason
small
say
tend
increas
exponenti
length
chain
algorithm
howev
cleverli
design
could
overcom
hurdl
number
maxim
sequenc
import
studi
behaviour
detail
order
take
closer
look
number
maxim
sequenc
depend
transit
probabl
model
evolv
let
imprecis
local
model
grow
shall
see
number
display
interest
behaviour
explain
even
predict
extent
allow
easi
visualis
limit
discuss
binari
ihmm
state
output
variabl
assum
two
possibl
valu
say
describ
binari
stationari
ihmm
ﬁrst
consid
binari
stationari
hmm
precis
transit
probabl
go
one
state
next
complet
determin
number
unit
interv
probabl
state
state
probabl
state
state
pin
hmm
also
need
specifi
margin
probabl
ﬁrst
state
two
emiss
everi
construct
set
opt
linear
complex
number
maxim
element
stage
estim
state
sequenc
imprecis
hidden
markov
model
probabl
probabl
emit
output
state
probabl
emit
output
state
binari
case
coher
model
found
tamin
take
convex
mixtur
precis
model
mixtur
coefﬁcient
vacuou
model
mixtur
coefﬁcient
lead
model
simplifi
analysi
let
emiss
model
remain
precis
use
mixtur
coefﬁcient
margin
transit
model
rang
zero
one
evolv
precis
hmm
toward
ihmm
vacuou
margin
transit
model
precis
emiss
model
explain
basic
idea
use
chain
length
two
examin
viour
ihmm
length
two
follow
precis
probabl
fix
output
sequenc
valu
use
algorithm
calcul
correspond
number
maxim
state
sequenc
rang
unit
interv
result
repres
conveni
form
heat
plot
plot
correspond
output
sequenc
number
maxim
state
sequenc
clearli
pend
transit
abil
rather
larg
part
iliti
space
colour
white
get
singl
maxim
would
tiguou
region
see
higher
number
appear
present
exampl
binari
chain
length
two
highest
sibl
number
maxim
quenc
cours
four
dark
grey
area
three
maxim
sequenc
two
light
grey
region
plot
show
happen
let
increas
grey
area
expand
number
maxim
sequenc
increas
even
ﬁnd
small
area
colour
black
four
possibl
state
sequenc
maxim
local
due
rel
high
imprecis
local
model
give
use
robust
estim
state
sequenc
produc
output
sequenc
small
area
one
maxim
state
sequenc
quit
small
seem
resembl
strip
narrow
line
tend
zero
suggest
abl
explain
least
qualit
area
come
look
compat
precis
model
region
ihmm
produc
differ
maxim
mutual
incompar
sequenc
widen
version
locu
indiffer
precis
hmm
locu
indiffer
mean
set
correspond
two
given
state
sequenc
equal
posterior
probabl
choic
cours
arbitrari
differ
valu
would
yield
compar
result
jasper
bock
gert
cooman
provid
exampl
ﬁnd
follow
express
four
possibl
state
sequenc
equat
two
express
express
correspond
two
state
sequenc
equal
posterior
probabl
sinc
result
equat
function
six
possibl
combin
deﬁn
locu
indiffer
depict
line
follow
ﬁgure
part
locu
depict
blue
darker
bolder
monochrom
version
per
demarc
three
region
state
sequenc
optim
highest
posterior
probabl
happen
transit
model
becom
cise
roughli
speak
nearbi
valu
origin
enter
pictur
effect
turn
locu
line
differ
band
parabl
emerg
gion
two
imal
sequenc
seen
origin
locu
ferenc
compar
ﬁgure
locu
heat
plot
given
extend
argument
chain
length
three
chain
length
three
determin
locu
indiffer
precis
model
complet
analog
manner
use
margin
model
emiss
model
previou
exampl
result
line
indiffer
output
sequenc
look
follow
estim
state
sequenc
imprecis
hidden
markov
model
compar
visualis
ber
maxim
element
sequenc
resembl
quit
strike
exampl
black
area
correspond
number
maxim
sequenc
least
four
show
algorithm
power
order
demonstr
algorithm
inde
quit
efﬁcient
let
determin
maxim
sequenc
random
output
sequenc
length
consid
binari
stationari
hmm
present
follow
precis
margin
emiss
probabl
practic
applic
probabl
output
variabl
valu
correspond
hidden
state
variabl
usual
quit
high
explain
chosen
close
respect
contrast
previou
experi
let
transit
probabl
vari
follow
valu
ihmm
use
determin
maxim
sequenc
gener
mix
precis
local
model
vacuou
one
use
mixtur
coefﬁcient
margin
transit
emiss
model
figur
display
ﬁve
maxim
sequenc
correspond
highlight
output
sequenc
sinc
emiss
probabl
chosen
quit
accur
surpris
output
sequenc
one
maxim
sequenc
addit
indic
bold
face
state
valu
differ
output
output
sequenc
see
model
repres
indecis
valu
state
variabl
move
away
end
sequenc
result
phenomenon
call
dilat
jasper
bock
gert
cooman
note
anoth
paper
occur
infer
credal
tree
proceed
leaf
toward
root
efﬁcienc
algorithm
took
second
calcul
maxim
reason
could
done
fast
algorithm
linear
number
solut
case
let
grow
exampl
number
maxim
sequenc
output
sequenc
determin
second
demonstr
complex
inde
linear
number
solut
algorithm
efﬁcient
calcul
maxim
sequenc
even
long
output
sequenc
applic
optic
charact
recognit
ﬁrst
simpl
toy
applic
use
estihmm
gorithm
tri
detect
mistak
word
written
word
gard
hidden
sequenc
gener
output
sequenc
artiﬁci
corrupt
word
way
simul
tion
process
perfectli
reliabl
output
optic
charact
recognit
ocr
devic
lead
observ
output
sequenc
may
contain
error
tri
detect
compar
result
viterbi
algorithm
show
algorithm
offer
robust
solut
gener
hmm
local
uncertainti
model
must
identiﬁ
origin
observ
letter
margin
model
ﬁrst
letter
origin
word
transit
model
subsequ
letter
emiss
model
observ
letter
sake
simplic
assum
stationar
make
transit
emiss
model
independ
identiﬁc
local
model
ihmm
use
imprecis
dirichlet
model
idm
exampl
margin
model
appli
idm
lead
follow
simpl
ation
count
word
sampl
text
ﬁrst
letter
posit
real
hyperparamet
express
degre
caution
infer
exampl
let
transit
emiss
model
proceed
similarli
count
transit
one
charact
anoth
respect
origin
word
observ
process
way
obtain
lower
upper
transit
emiss
probabl
singleton
point
section
sufﬁc
run
algorithm
note
chosen
zero
local
model
would
becom
precis
estihmm
algorithm
would
reduc
viterbi
algorithm
version
resolv
tie
arbitrarili
see
section
identiﬁc
local
model
precis
hmm
use
similar
precis
dirichlet
model
approach
perk
prior
prior
strength
exampl
python
programm
macbookpro
figur
estim
state
sequenc
imprecis
hidden
markov
model
precis
margin
model
lead
follow
simpl
identiﬁc
number
state
result
let
ﬁrst
discu
speciﬁc
exampl
differ
actual
result
obtain
use
viterbi
estihmm
algorithm
order
illustr
import
advantag
latter
ocr
softwar
mistakenli
read
italian
word
quanto
ouanto
use
precis
model
viterbi
algorithm
correct
mistak
suggest
origin
correct
word
duanto
estihmm
algorithm
hand
use
imprecis
model
return
cuanto
duanto
fuanto
quanto
maxim
undomin
solut
includ
correct
one
cours
would
still
pick
correct
solut
set
exampl
use
dictionari
human
use
estihmm
algorithm
manag
reduc
search
space
possibl
ﬁve
letter
word
much
smaller
set
four
word
given
notic
solut
viterbi
algorithm
includ
maxim
solut
estihmm
return
one
easili
prove
alway
case
simul
ocr
devic
artiﬁci
corrupt
ﬁrst
word
ﬁrst
canto
dant
divina
commedia
result
correctli
read
word
word
contain
error
tri
correct
error
use
estihmm
viterbi
algorithm
compar
approach
result
summaris
follow
tabl
total
number
viterbi
correct
solut
wrong
solut
estihmm
correct
solut
includ
correct
solut
includ
total
number
correct
ocr
wrong
ocr
viterbi
algorithm
main
conclus
appli
output
ocr
devic
result
decreas
number
incorrect
word
number
correct
word
rise
howev
viterbi
algorithm
also
introduc
new
error
correctli
read
word
estihmm
algorithm
manag
suggest
origin
correct
word
one
solut
case
assum
abl
detect
correct
word
percentag
correct
word
rise
appli
estihmm
algorithm
therebi
outperform
viterbi
algorithm
almost
secondli
also
notic
estihmm
algorithm
never
introduc
new
error
word
alreadi
correct
cours
sinc
estihmm
algorithm
allow
multipl
solut
instead
singl
one
surpris
manag
increas
amount
time
suggest
correct
solut
would
happen
even
ad
random
extra
solut
solut
viterbi
algorithm
give
extra
solut
seen
improv
done
smartli
investig
distinguish
case
estihmm
algorithm
return
singl
solut
return
multipl
solut
look
viterbi
estihmm
algorithm
compar
two
case
estihmm
algorithm
return
singl
solut
word
alreadi
mention
singl
solut
alway
coincid
one
given
viterbi
algorithm
result
estihmm
viterbi
algorithm
summaris
follow
tabl
jasper
bock
gert
cooman
estihmm
singl
solut
total
number
singl
correct
solut
singl
wrong
solut
total
number
correct
ocr
wrong
ocr
percentag
word
correctli
read
ocr
softwar
instead
global
result
estihmm
algorithm
singl
solut
serf
indic
word
tri
correct
fairli
high
probabl
alreadi
correct
also
see
eventu
percentag
correct
word
slight
improv
alreadi
correct
appli
algorithm
next
look
remain
word
estihmm
algorithm
return
one
maxim
element
case
see
signiﬁc
differ
result
viterbi
estihmm
algorithm
sinc
viterbi
algorithm
never
return
one
result
algorithm
list
follow
tabl
total
number
correct
ocr
wrong
ocr
total
number
estihmm
multipl
solut
correct
solut
includ
correct
solut
includ
viterbi
correct
solut
wrong
solut
ﬁrst
import
conclus
drawn
tabl
estihmm
indecis
serf
rather
strong
indic
word
appli
algorithm
inde
contain
error
estihmm
algorithm
return
multipl
solut
origin
word
incorrectli
read
ocr
softwar
case
second
conclus
relat
ﬁrst
estihmm
indecis
also
serf
indic
result
return
viterbi
algorithm
le
reliabl
percentag
correct
word
appli
viterbi
algorithm
drop
contrast
global
percentag
estihmm
algorithm
howev
still
give
correct
word
one
solut
case
almost
high
global
percentag
set
given
estihmm
algorithm
contain
correct
solut
viterbi
algorithm
manag
pick
correct
solut
set
case
see
estihmm
algorithm
seem
notic
deal
difﬁcult
word
therefor
give
multipl
solut
decid
conclud
experi
estihmm
use
appli
make
result
viterbi
algorithm
robust
gain
appreci
like
wrong
estihmm
algorithm
return
multipl
solut
serf
indic
robust
issu
would
occur
solv
problem
viterbi
algorithm
case
estihmm
return
multipl
solut
decid
wherea
viterbi
algorithm
pick
one
set
fairli
arbitrari
choic
therebi
increas
amount
error
made
advantag
method
detect
robust
issu
leav
option
solv
differ
way
ﬁrst
method
would
pick
correct
word
set
possibl
solut
way
current
applic
could
done
use
dictionari
human
expert
anoth
method
deal
robust
issu
would
conclud
need
data
order
build
better
model
le
sensit
choic
prior
appli
estihmm
algorithm
theori
viterbi
algorithm
return
multipl
indiffer
solut
practic
almost
never
estim
state
sequenc
imprecis
hidden
markov
model
use
new
model
could
check
whether
robust
issu
satisfactorili
dealt
conclus
interpret
graphic
structur
imprecis
hidden
markov
model
credal
network
epistem
irrelev
lead
efﬁcient
algorithm
ﬁnding
maxim
undomin
state
sequenc
given
output
sequenc
preliminari
simul
show
even
transit
model
imprecis
number
maxim
element
seem
reason
low
fairli
larg
region
paramet
space
high
number
maxim
element
concentr
fairli
small
region
remain
seen
whether
observ
corrobor
deeper
theoret
analysi
ﬁrst
simpl
toy
applic
clearli
show
estihmm
algorithm
abl
robustifi
result
viterbi
algorithm
reduc
amount
wrong
conclus
give
extra
possibl
solut
intellig
manner
add
extra
solut
speciﬁc
case
viterbi
algorithm
robust
issu
therebi
also
serv
indic
reliabl
result
given
viterbi
algorithm
interest
avenu
research
would
compar
estihmm
algorithm
method
also
tri
robustifi
viterbi
algorithm
although
method
start
precis
model
introduc
safeti
rather
imprecis
exampl
tri
ﬁnd
probabl
solut
practic
applic
similar
comparison
result
could
therefor
prove
interest
leav
topic
futur
research
clear
point
whether
idea
similar
one
discuss
could
use
deriv
similarli
efﬁcient
algorithm
imprecis
hidden
markov
model
whose
graphic
structur
interpret
credal
network
strong
independ
could
interest
relev
stringent
independ
condit
lead
joint
model
le
imprecis
therefor
produc
fewer
maxim
state
sequenc
although
contain
solut
acknowledg
jasper
bock
fellow
research
foundat
flander
fwo
ghent
univers
develop
algorithm
describ
context
master
thesi
close
cooper
gert
cooman
act
thesi
supervisor
present
articl
describ
main
result
master
thesi
research
cooman
support
sbo
project
vlaanderen
paper
beneﬁt
discuss
marco
zaffalon
alessandro
antonucci
alessio
benavoli
cassio
campo
erik
quaeghebeur
filip
herman
grate
marco
zaffalon
provid
travel
fund
allow
visit
idsia
discu
practic
applic
refer
richard
bellman
dynam
program
princeton
univers
press
princeton
fabio
cozman
credal
network
artiﬁci
intellig
campo
huet
moral
probabl
interv
tool
uncertain
reason
intern
journal
uncertainti
fuzzi
system
gert
cooman
filip
herman
alessandro
antonucci
marco
zaffalon
epistem
irrelev
credal
net
case
imprecis
markov
tree
intern
journal
approxim
reason
gert
cooman
enriqu
miranda
marco
zaffalon
independ
natur
extens
artiﬁci
intellig
accept
public
gert
cooman
matthia
troffa
dynam
program
determinist
system
uncertain
gain
intern
journal
approxim
reason
gert
cooman
matthia
troffa
enriqu
miranda
exact
function
journal
mathemat
analysi
applic
jasper
bock
gert
cooman
nathan
huntley
matthia
troffa
normal
form
backward
induct
decis
tree
coher
lower
previs
annal
oper
research
submit
public
enriqu
miranda
survey
theori
coher
lower
previs
intern
journal
approxim
reason
januari
enriqu
miranda
updat
coher
lower
previs
ﬁnite
space
fuzzi
set
system
januari
enriqu
miranda
gert
cooman
margin
extens
theori
coher
lower
previs
intern
journal
approxim
reason
septemb
lawrenc
rabin
tutori
hmm
select
applic
speech
recognit
proceed
ieee
februari
matthia
troffa
decis
make
uncertainti
use
imprecis
probabl
intern
journal
approxim
reason
januari
andrew
viterbi
error
bound
convolut
code
asymptot
optimum
decod
algorithm
ieee
transact
inform
theori
peter
walley
statist
reason
imprecis
probabl
chapman
hall
london
peter
walley
infer
multinomi
data
learn
bag
marbl
journal
royal
statist
societi
seri
discuss
appendix
proof
main
result
appendix
justifi
formula
give
proof
proposit
theorem
frequent
use
term
posit
neg
decreas
increas
therefor
start
clarifi
mean
say
posit
neg
call
function
deﬁn
increas
decreas
iii
proof
equat
infer
equat
sinc
see
transform
reformul
take
account
equat
sinc
repeat
step
eventu
yield
equat
last
step
use
equal
follow
equat
estim
state
sequenc
imprecis
hidden
markov
model
proof
equat
infer
conjugaci
equat
sinc
conjugaci
lemma
see
equat
transform
reformul
use
conjugaci
equat
sinc
last
inequ
true
know
conjugaci
lemma
repeat
step
eventu
yield
equat
last
step
use
equal
follow
equat
conjugaci
lemma
consid
coher
lower
previs
min
max
proof
prove
inequ
min
max
one
one
ﬁrst
one
follow
sinc
know
impli
use
conjugaci
last
equal
gambl
yield
impli
max
conclud
follow
appli
inequ
proof
proposit
observ
ﬁrst
inequ
lemma
second
one
posit
assumpt
equat
element
equal
follow
way
easili
prove
jasper
bock
gert
cooman
time
use
posit
assumpt
equat
last
iti
proof
theorem
consid
function
deﬁn
real
follow
equat
rightmost
zero
also
know
continu
lemma
least
one
zero
lemma
henc
least
one
posit
zero
neg
zero
henc
prove
theorem
come
prove
impli
sinc
turn
impli
prove
implic
consid
two
differ
case
case
real
coefﬁcient
written
conjugaci
make
neg
decreas
function
sinc
posit
assumpt
proposit
coefﬁcient
consid
two
possibl
case
know
decreas
function
lemma
therefor
argument
equat
decreas
pointwis
lemma
impli
decreas
function
therefor
hand
know
lemma
impli
express
arbitrari
ﬁrst
two
inequ
due
lemma
conjugaci
yield
equal
last
inequ
consequ
posit
assumpt
proposit
also
case
therefor
ﬁnd
case
real
proof
case
alreadi
shown
coefﬁcient
neg
decreas
function
togeth
lemma
impli
turn
lemma
vii
impli
decreas
function
left
consid
coefﬁcient
two
possibl
lemma
impli
decreas
function
therefor
argument
equat
decreas
estim
state
sequenc
imprecis
hidden
markov
model
pointwis
lemma
impli
decreas
function
therefor
hand
know
lemma
impli
ﬁrst
two
inequ
follow
lemma
conjugaci
yield
equal
last
inequ
consequ
posit
assumpt
proposit
also
case
ﬁnd
lemma
let
coher
lower
previs
consid
map
deﬁn
real
follow
statement
hold
concav
continu
least
one
zero
iii
decreas
uniqu
zero
ident
zero
zero
neg
decreas
decreas
uniqu
zero
vii
neg
interv
also
decreas
proof
start
prove
follow
directli
lemma
consid
concav
inequ
follow
subsequ
step
due
prove
continu
consid
see
inequ
follow
last
equal
due
conjugaci
henc
prof
lipschitz
continu
therefor
also
continu
prove
notic
min
min
min
min
max
max
max
max
inequ
consequ
lemma
last
equal
follow
lemma
sinc
continu
impli
exist
zero
min
max
properti
iii
prove
consid
see
decreas
sinc
jasper
bock
gert
cooman
ﬁrst
inequ
follow
last
equal
know
least
one
zero
must
uniqu
decreas
prove
ﬁrst
note
also
impli
lemma
choos
min
min
max
max
time
use
lemma
conjugaci
conclud
proof
start
notic
due
deﬁnit
see
equat
fact
proof
alreadi
shown
allow
conclud
left
prove
decreas
interv
contradict
suppos
decreas
interv
interv
sinc
zero
also
choos
exist
contradict
concav
establish
prove
observ
lemma
impli
three
case
consid
iii
exhaust
mutual
exclus
case
consid
iii
impli
decreas
uniqu
zero
remain
prove
vii
repeat
argument
proof
see
neg
interv
case
consid
iii
obtain
iii
decreas
entir
domain
deﬁnit
decreas
lemma
consid
coher
lower
previs
two
gambl
proof
start
pointwis
posit
min
therefor
min
use
ﬁrst
inequ
follow
therefor
whenc
inde
proof
analog
min
impli
min
proof
equat
let
ˆxk
ˆxk
sinc
ˆxk
impli
ˆxk
ˆxk
turn
impli
ˆxk
prove
equat
ﬁrst
equal
follow
equat
second
equal
hold
impli
estim
state
sequenc
imprecis
hidden
markov
model
third
equal
follow
conjugaci
last
one
follow
equat
proof
equat
sinc
ˆxn
lemma
yield
ˆxn
proof
equat
ˆxk
ˆxk
ˆxk
ˆxk
ˆxk
ˆxk
ˆxk
ˆxk
ˆxk
prove
equat
reason
equal
hold
analog
one
given
proof
equat
proof
theorem
fix
ˆxk
assum
opt
ˆxk
show
ˆxk
opt
follow
assumpt
ˆxk
preﬁx
state
sequenc
state
ˆxk
form
state
sequenc
impli
ˆxk
infer
equat
ˆxk
ˆxk
ˆxk
ˆxk
tell
inde
ˆxk
opt
proof
equat
first
consid
everi
determin
opt
set
element
ˆxn
ˆxn
ˆxn
ˆxn
max
condit
equival
optim
condit
take
account
equat
show
condit
also
equival
ˆxn
ˆxn
max
see
consid
two
differ
case
max
ˆxn
inequ
max
trivial
satisﬁ
sinc
ˆxn
ˆxn
posit
assumpt
max
inequ
equival
equat
ˆxn
ˆxn
ˆxn
max
ˆxn
max
ˆxn
ˆxn
ˆxn
ˆxn
ˆxn
max
max
ˆxn
max
ˆxn
ˆxn
use
equat
equat
reformul
ˆxn
αopt
complet
proof
equival
next
consid
fix
must
determin
opt
know
principl
optim
limit
candid
optim
sequenc
ˆxk
set
cand
consid
ˆxk
must
check
whether
ˆxk
see
equat
jasper
bock
gert
cooman
ˆxk
inequ
automat
satisﬁ
inde
ˆxk
posk
infer
equat
ˆxk
ˆxk
equat
tell
ˆxk
ˆxk
posk
know
equat
opt
ˆxk
impli
ˆxk
henc
ˆxk
equat
mean
limit
check
inequ
ˆxk
ˆxk
must
check
whether
ˆxk
ˆxk
see
equat
equat
lemma
equival
max
ˆxk
ˆxk
ˆxn
αopt
ˆxk
seen
equival
ˆxk
αopt
turn
seen
equival
ˆxk
max
ˆxk
use
cours
reason
complet
analog
one
use
case
sinc
inequ
must
hold
everi
ˆxk
infer
equat
must
ˆxk
αopt
must
check
condit
candid
sequenc
ˆxk
cand
prof
equat
proof
theorem
proof
consist
two
part
ﬁrst
prove
everi
sequenc
ˆxk
obtain
optim
tree
construct
element
opt
secondli
prove
sequenc
part
set
sequenc
obtain
optim
tree
construct
element
opt
let
start
prove
everi
sequenc
ˆxk
obtain
optim
tree
construct
element
opt
follow
last
step
optim
tree
construct
everi
ˆxk
construct
set
element
cand
ˆxk
therefor
equat
also
cand
last
step
also
impli
αmax
equat
repeat
use
equat
follow
equat
ˆxk
element
opt
conclud
show
sequenc
part
set
sequenc
obtain
optim
tree
construct
element
opt
sequenc
part
set
sequenc
obtain
optim
tree
construct
either
impli
element
cand
ﬁrst
case
follow
directli
equat
αmax
element
opt
second
case
see
seen
αmax
repeat
use
equat
equival
αopt
follow
equat
element
opt
proof
theorem
prove
contradict
condit
would
fulﬁll
optim
tree
construct
would
stop
set
opt
would
empti
contradict
sinc
everi
ﬁnite
partial
order
set
least
one
maxim
element
consid
equat
impli
least
one
sequenc
αmax
prove
ﬁrst
state
sequenc
meet
criterion
theorem
cand
ˆxk
set
αmax
inequ
ˆxk
equival
αmax
mean
know
ˆxk
found
use
optim
tree
construct
impli
αopt
ˆxk
follow
αopt
ˆxk
seen
equat
sinc
know
αopt
impli
αopt
αopt
equat
ﬁnd
αmax
ˆxk
satisﬁ
ﬁrst
criterium
αopt
αopt
estim
state
sequenc
imprecis
hidden
markov
model
prove
state
αmax
αmax
follow
lemma
element
cand
lemma
impli
ˆxk
also
satisﬁ
second
criterium
mean
sufﬁc
equat
prove
set
cand
ˆxk
ˆxk
sinc
cand
ˆxk
least
one
ˆxk
element
cand
furthermor
chosen
element
cand
lemma
fix
ˆxk
choos
arbitrari
ˆxk
belong
cand
ˆxk
belong
cand
proof
simplifi
notat
proof
conveni
use
altern
notat
opt
togeth
equat
impli
cand
conclud
proof
consid
check
ˆxq
posq
see
deﬁnit
exist
denot
lowest
case
equat
know
element
cand
belong
cand
cand
equat
also
know
cand
hold
ˆxq
posq
exist
ˆxq
posq
choos
follow
repeat
use
equat
belong
cand
alreadi
know
cand
belong
sinc
sequenc
set
notic
cand
built
repeatedli
use
conclud
proof
given
ˆxk
belong
cand
impli
ˆxq
αopt
αmax
ˆxt
furthermor
equat
equat
tell
ˆxt
know
αopt
ˆxq
element
cand
impli
sinc
cand
built
repeatedli
use
equat
sequenc
ˆxk
lemma
consid
αmax
proof
belong
cand
conclud
proof
opt
αmax
know
equat
therefor
equat
togeth
posit
assumpt
impli
jasper
bock
gert
cooman
conjugaci
impli
use
equat
see
conclud
proof
sinc
opt
equat
ˆx
