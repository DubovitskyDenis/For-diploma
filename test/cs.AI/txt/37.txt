learning
onto-relational
rules
inductive
logic
programming
dipartimento
informatica
università
degli
studi
bari
aldo
moro
italy
francesca
lisi
a,1
abstract
rules
complement
extend
ontologies
semantic
web
re-
fer
rules
onto-relational
since
combine
dl-based
ontology
lan-
guages
knowledge
representation
formalisms
supporting
relational
data
model
within
tradition
logic
programming
deductive
databases
rule
authoring
demanding
knowledge
engineering
task
auto-
mated
though
partially
applying
machine
learning
algorithms
chapter
show
inductive
logic
programming
ilp
born
intersection
ma-
chine
learning
logic
programming
considered
major
approach
relational
learning
adapted
onto-relational
learning
sake
illustration
provide
details
speciﬁc
onto-relational
learning
solution
problem
learning
rule-based
deﬁnitions
concepts
roles
ilp
keywords
inductive
logic
programming
rule
languages
systems
integration
rules
ontologies
deductive
databases
introduction
rules
widely
used
knowledge
engineering
knowledge
representation
powerful
way
modeling
knowledge
broadest
sense
rule
could
statement
says
certain
conclusion
must
valid
whenever
certain
premise
satisﬁed
i.e
statement
could
read
sentence
form
rules
successfully
applied
ﬁelds
logic
programming
deductive
databases
rules
play
also
role
semantic
web
architecture
interest
area
grown
rapidly
recent
years
testiﬁed
rules
in-
terchange
format
rif
activity
w3c
rules
rif
perspective
would
allow
integration
transformation
derivation
data
numerous
sources
dis-
tributed
scalable
transparent
manner
great
variety
rule
languages
rule
engine
technologies
rif
consists
core
language3
used
along
set
standard
non-standard
extensions
extensions
need
combinable
single
uniﬁed
language
expressive
power
two
directions
followed
monotonic
extensions
towards
full
first
order
logic
fol
non-monotonic
extensions
based
tradition
debate
around
rif
taken
long
time
also
1corresponding
author
francesca
lisi
dipartimento
informatica
università
degli
studi
bari
aldo
moro
italy
e-mail
lisi
di.uniba.it
2http
//www.w3.org/2005/rules/wiki/rif_working_group
3http
//www.w3.org/tr/rif-core/
due
controversial
issue
rules
top
aside
ontologies
consensus
fact
rules
complement
extend
ontologies
indeed
rules
used
combination
ontologies
means
specify
ontologies
also
frequently
applied
ontologies
draw
inferences
express
constraints
spec-
ify
policies
react
events
discover
new
knowledge
transform
data
etc
particular
rif
rules
refer
rdf
owl
facts
since
design
owl
based
family
expressive
description
logics
dls
see
chapter
introduction
dialects
rif
likely
inspired
hybrid
systems
integrate
dls
rule
formalisms
interest
chapter
shall
refer
onto-relational
rule
languages
apart
speciﬁc
ontology
language
integration
ontologies
rules
already
present
existing
knowledge
bases
kbs
notably
cyc4
consists
terms
consti-
tute
vocabulary
i.e
ontology
assertions
relate
terms
include
simple
ground
assertions
rules
acquisition
rules
large
kbs
like
cyc
demanding
activ-
ity
indeed
according
estimate
cyc
project
human
experts
produce
rules
rate
approximately
three
per
hour
evaluate
average
twenty
rules
per
hour
also
untrained
knowledge
engineers
rule
authoring
may
difﬁcult
rule
reviewing
feasible
although
still
difﬁcult
partial
automation
rule
authoring
task
e.g.by
applying
machine
learning
algorithms
see
chapter
introduction
help
even
though
automatically
produced
rules
guaranteed
correct
fact
rules
turn
correct
found
need
editing
assertible
yet
mentioned
rule
re-
viewing
less
critical
rule
authoring
order
partially
automate
authoring
onto-relational
rules
bunch
techniques
collectively
known
name
inductive
logic
programming
ilp
seems
particularly
promising
following
reasons
ilp
born
intersection
widely
recognized
major
approach
relational
learning
apart
framework
distinguishing
feature
ilp
also
respect
forms
use
prior
domain
knowledge
form
logical
theory
induction
process
chapter
take
critical
look
ilp
proposals
learning
relational
rules
ontology
background
theory
proposals
try
overcome
difﬁculties
accommodating
ontologies
relational
learning
work
using
seman-
tic
meta-knowledge
cyc
inductive
bias
ilp
system
another
attempt
solving
problem
though
empirically
conversely
promote
extension
relational
learning
called
onto-relational
learning
orl
accounts
on-
tologies
clear
elegant
well-founded
manner
resorting
onto-relational
rule
languages
chapter
sake
illustration
provide
details
speciﬁc
orl
solution
problem
learning
rule-based
deﬁnitions
concepts
roles
ilp
chapter
organized
follows
section
devoted
preliminaries
applications
databases
ontologies
well
ilp
section
provides
state-
of-the-art
survey
ilp
proposals
learning
onto-relational
rules
section
describes
depth
powerful
proposals
section
concludes
chapter
ﬁnal
remarks
outlines
directions
future
work
4http
//cyc.com/cyc/technology/whatiscyc_dir/
preliminaries
1.1.
logic
programming
databases
logic
programming
rooted
fragment
clausal
logics
cls
known
horn
clausal
logic
hcl
basic
element
cls
atom
form
tki
predicate
symbol
term
term
either
constant
variable
complex
term
obtained
applying
functor
simpler
term
constant
variable
functor
predicate
symbols
belong
mutually
disjoint
alphabets
literal
atom
either
negated
clause
universally
quantiﬁed
disjunction
literals
usually
universal
quantiﬁers
omitted
simplify
notation
alternative
notations
clause
set
literals
clause
implica-
tion
program
set
clauses
hcl
admits
so-called
deﬁnite
clauses
deﬁnite
clause
implication
form
atoms
i.e
clause
exactly
one
positive
literal
right-
hand
side
left-hand
side
implication
called
head
body
clause
respectively
note
body
intended
existentially
quantiﬁed
conjunctive
formula
∃α1
furthermore
deﬁnite
clauses
called
rules
facts
respectively
model-theoretic
semantics
hcl
based
notion
herbrand
interpretation
i.e
interpretation
constants
function
symbols
assigned
simple
meanings
allows
symbols
set
clauses
interpreted
purely
syntactic
way
separated
real
instantiation
corresponding
proof-theoretic
semantics
based
closed
world
assumption
cwa
i.e
presumption
currently
known
true
false
deductive
reasoning
hcl
formalized
proof
theory
clausal
logic
resolution
comprises
single
inference
rule
two
clauses
appropriate
form
derives
new
clause
consequence
resolution
sound
ev-
ery
resolvent
implied
parents
also
refutation
complete
empty
clause
derivable
resolution
set
horn
clauses
unsatisﬁable
negation
failure
naf
related
cwa
amounts
believing
false
every
predicate
proved
true
clauses
naf
literals
body
called
normal
clauses
concept
stable
model
answer
set
used
deﬁne
declarative
semantics
normal
logic
programs
according
semantics
logic
program
may
several
alternative
models
possibly
none
corresponding
possi-
ble
view
reality
also
based
stable
model
answer
set
semantics
answer
set
programming
asp
alternative
paradigm
oriented
towards
difﬁcult
search
problems
deﬁnite
clauses
played
prominent
role
rise
deductive
databases
precisely
functor-free
non-recursive
deﬁnite
clauses
basis
language
dat-
alog
deductive
databases
generally
denoted
datalog¬
treated
naf
restriction
datalog
positive
rules
i.e.
rules
without
naf
literals
denoted
datalog
based
distinction
extensional
in-
tensional
predicates
datalog
program
divided
two
parts
exten-
sional
part
denoted
edb
set
facts
involving
extensional
predi-
cates
whereas
intensional
part
idb
set
clauses
main
reasoning
task
datalog
query
answering
query
datalog
program
datalog
clause
form
datalog
atom
answer
query
substitution
variables
answer
correct
respect
datalog
program
answer
set
query
set
answers
correct
w.r.t
ground
words
answer
set
query
set
ground
instances
logical
consequences
answers
computed
refutation
disjunctive
datalog
denoted
datalog∨
variant
datalog
dis-
junctions
may
appear
rule
heads
therefore
datalog∨
considered
fragment
hcl
advanced
versions
datalog¬∨
also
allow
negation
bodies
handled
according
semantics
negation
cls
deﬁning
semantics
datalog¬∨
program
complicated
presence
disjunction
rules
heads
makes
underlying
disjunctive
logic
programming
inher-
ently
nonmonotonic
i.e
new
information
invalidate
previous
conclusions
among
many
alternatives
one
widely
accepted
semantics
datalog¬∨
extension
stable
model
semantics
disjunctive
case
1.2.
logic
programming
ontologies
integration
ontologies
follows
tradition
research
so-called
hybrid
systems
i.e
systems
constituted
two
subsystems
deal-
ing
distinct
portions
single
performing
speciﬁc
reasoning
procedures
motivation
investigating
developing
systems
improve
two
basic
features
formalisms
namely
representational
adequacy
deductive
power
preserving
crucial
feature
i.e
decidability
indeed
dls
cls
fol
fragments
incomparable
expressiveness
semantics
combinable
different
degrees
integration
tight
loose
full
semantic
integration
tight
model
hybrid
deﬁned
union
two
models
one
part
one
part
share
domain
particular
combining
dls
cls
tight
manner
easily
lead
unde-
cidability
interaction
scheme
part
hybrid
solve
semantic
mismatch
dls
cls
requirement
known
dl-safety
respect
property
hybrid
system
carin
unsafe
interaction
scheme
left
unrestricted
conversely
al-log
guar-
antees
safe
interaction
scheme
means
syntactic
restrictions
finally
dl+log¬∨
weakly
dl-safe
relaxes
condition
dl-safety
distinguishing
features
three
frameworks
summarized
table
discussed
section
1.2.1
1.2.2
1.2.3
respectively
semantic
integration
loose
part
part
separate
components
connected
minimal
interface
exchanging
knowledge
ex-
ample
one
kind
coupling
integration
scheme
asp
dls
illustrated
5we
prefer
dl+log¬∨
original
name
dl+log
order
emphasize
features
lan-
guage
table
three
frameworks
suitable
representing
onto-relational
rules
carin
al-log
dl+log¬∨
language
language
horn
clauses
integration
rule
head
literals
rule
body
literals
tight
dl-unsafe
dl/horn
literals
dl/horn
literals
alc
datalog
clauses
datalog¬∨
clauses
tight
dl-safe
datalog
literal
alc/datalog
literals
roles
tight
weakly
dl-safe
dl/datalog
literals
dl/datalog¬
literals
semantics
reasoning
herbrand
models+dl
models
sld-resolution+tableau
calculus
decidability
instantiations
idem
idem
yes
stable
models+dl
models
stable
model
computation
boolean
cq/ucq
containment
instantiations
dls
boolean
cq/ucq
con-
tainment
decidable
implementation
yes
e.g
yes
e.g
unknown
derives
previous
work
authors
extension
asp
higher-order
reasoning
external
evaluations
implemented
system
dlvhex6
semantic
integration
full
separation
vocabularies
two
parts
hybrid
one
kind
coupling
achieved
means
logic
minimal
knowledge
negation
failure
complete
picture
computational
properties
systems
combining
on-
tologies
datalog
rules
found
updated
survey
literature
hybrid
dl-cl
systems
suggested
reading
1.2.1.
carin
comprehensive
study
effects
combining
dls
cls
precisely
horn
rules
found
special
attention
devoted
alcn
re-
sults
study
summarized
follows
answering
conjunctive
queries
alcn
tboxes
decidable
query
answering
alcn
extended
non-
recursive
datalog
rules
concepts
roles
occur
rule
bodies
also
decidable
reduced
answering
union
conjunctive
queries
ucq
iii
rules
recursive
query
answering
becomes
undecidable
decidability
regained
disallowing
certain
combinations
constructors
logic
decid-
ability
regained
requiring
rules
role-safe
least
one
variable
role
literal
must
occur
non-dl-atom
integration
framework
proposed
known
carin
therefore
dl-unsafe
reasoning
carin
based
constrained
sld-resolution
i.e
extension
sld-resolution
tableau
calculus
dls
deal
literals
rules
constrained
sld-refutation
complete
sound
method
answering
ground
queries
6http
//www.kr.tuwien.ac.at/research/systems/dlvhex/
ucq
predicate
alphabet
fol
sentence
form
~x.conj1
conjn
tuple
variable
symbols
conji
set
atoms
whose
predicates
whose
arguments
either
constants
variables
ucq
1.2.2.
al-log
al-log
hybrid
system
integrates
safely
alc
datalog
particular
variables
occurring
body
rules
may
constrained
alc
concept
assertions
used
typing
constraints
makes
rules
applicable
explic-
itly
named
objects
carin
query
answering
decided
using
constrained
sld-
resolution
however
al-log
decidable
runs
single
non-deterministic
exponential
time
1.2.3.
dl+log¬∨
hybrid
framework
dl+log¬∨
allows
i.e
expressed
extended
weakly
dl-safe
datalog¬∨
rules
weak
dl-safeness
allows
overcome
main
representational
limits
dl-safe
approaches
e.g
possibility
expressing
ucqs
keeping
integration
scheme
still
decidable
dl+log¬∨
two
semantics
deﬁned
fol
semantics
semantics
particular
latter
extends
stable
model
semantics
datalog¬∨
according
dl-predicates
still
interpreted
owa
datalog-predicates
inter-
preted
cwa
notice
semantics
entailment
reduced
sat-
isﬁability
analogously
answering
reduced
satisﬁability
prob-
lem
statement
satisﬁability
ﬁnite
dl+log¬∨
kbs
relies
problem
known
boolean
cq/ucq
containment
problem8
shown
decidability
reasoning
dl+log¬∨
thus
ground
query
answering
depends
decidability
boolean
cq/ucq
containment
problem
currently
shiq
one
expressive
dls
problem
decidable
1.3.
inductive
logic
programming
inductive
logic
programming
ilp
born
intersection
borrowed
framework
i.e
hcl
precisely
concept
learning
inherited
inferential
mechanisms
induction
prominent
generalization
however
distinguishing
feature
ilp
respect
forms
concept
learning
use
prior
knowledge
domain
interest
called
background
knowledge
therefore
induction
ilp
generalizes
individual
instances/observations
presence
ﬁnding
valid
hypotheses
validity
depends
underlying
setting
present
exist
several
formalizations
induction
ilp
classiﬁed
according
following
two
orthogonal
dimensions
scope
induction
discrimination
characterization
representation
observations
ground
deﬁnite
clauses
ground
unit
clauses
dis-
criminant
induction
aims
inducing
hypotheses
discriminant
power
required
tasks
like
classiﬁcation
classiﬁcation
observations
encompass
positive
neg-
ative
examples
characteristic
induction
suitable
ﬁnding
regularities
data
set
corresponds
learning
positive
examples
second
dimension
affects
notion
coverage
i.e
condition
hypothesis
explains
observation
learning
entailment
hypotheses
clausal
theories
observations
ground
deﬁnite
clauses
hypothesis
covers
observation
hypothesis
logi-
cally
entails
observation
learning
interpretations
hypotheses
clausal
the-
8this
problem
called
existential
entailment
ories
observations
herbrand
interpretations
ground
unit
clauses
hypothesis
covers
observation
observation
model
hypothesis
concept
learning
generalization
traditionally
viewed
search
par-
tially
ordered
space
inductive
hypotheses
according
vision
inductive
hypothesis
ilp
clausal
theory
induction
single
clause
requires
structuring
searching
iii
bounding
space
clauses
first
focus
clarifying
notion
ordering
clauses
ordering
allows
determining
one
two
clauses
general
since
partial
orders
considered
uncomparable
pairs
clauses
admitted
given
usefulness
or-
ders
proposed
reckon
among
generalized
subsumption
major
interest
chapter
given
two
deﬁnite
clauses
standardized
apart
deﬁnite
program
say
cid:23
iff
exists
ground
substitution
head
head
body
body
skolem
substitution
respect
generalized
subsumption
also
called
semantic
generality
contrast
orders
purely
syntactic
general
case
undecidable
however
datalog
decidable
admits
least
general
generalization
structured
space
hypotheses
searched
means
reﬁnement
operators
reﬁnement
operator
function
computes
set
specializations
generalizations
clause
according
whether
top-down
bottom-up
search
performed
two
kinds
reﬁnement
operator
there-
fore
called
downward
upward
respectively
deﬁnition
reﬁnement
operators
presupposes
investigation
properties
various
orderings
usually
coupled
speciﬁcation
declarative
bias
bounding
space
clauses
iii
bias
concerns
anything
constrains
search
theories
e.g
language
bias
speciﬁes
syntactic
constraints
linkedness
connectedness
clauses
search
space
deﬁnite
clause
linked
literal
linked
literal
linked
least
one
terms
linked
term
literal
linked
linking-chain
length
occurs
head
linking-chain
length
term
linked
linking-chain
length
link-depth
term
length
shortest
linking-chain
clause
connected
variable
occurring
head
also
occurs
body
ilp
onto-relational
rule
learning
state
art
hybrid
systems
combining
dls
cls
tight
integration
scheme
recently
attracted
attention
ilp
community
chooses
carin-aln
resorts
al-log
builds
upon
shiq+log
comparative
analysis
three
reported
table
considered
attempts
accommodating
on-
tologies
ilp
indeed
deal
aln
alc
shiq
ontologies
respec-
tively
remind
reader
aln
alc
incomparable
dls
whereas
dls
family
enrich
alc
constructors
closely
related
systems
integrating
dls
cls
hybrid
formalims
arising
study
many-sorted
logics
fol
language
combined
sort
language
regarded
elementary
respect
study
sorted
downward
reﬁnement
also
considered
contribution
problem
interest
chapter
finally
work
done
discovering
frequent
association
patterns
form
dl-safe
rules
2.1.
learning
carin-aln
rules
framework
proposed
focuses
discriminant
induction
adopts
ilp
setting
learning
interpretations
hypotheses
represented
carin-aln
non-recursive
rules
horn
literal
head
plays
role
target
concept
coverage
relation
hypotheses
examples
adapts
usual
one
learning
interpretations
case
hybrid
carin-aln
generality
relation
be-
tween
two
hypotheses
deﬁned
extension
generalized
subsumption
procedures
testing
coverage
relation
generality
relation
based
exis-
tential
entailment
algorithm
carin
following
kietz
studies
learnability
carin-aln
thus
providing
pre-processing
method
enables
ilp
systems
learn
carin-aln
rules
2.2.
learning
al-log
rules
hypotheses
represented
constrained
datalog
clauses
linked
con-
nected
range-restricted
compliant
bias
object
identity
unlike
framework
general
meaning
valid
whatever
scope
induction
generality
relation
one
hypothesis
language
adaptation
general-
ized
subsumption
named
b-subsumption
al-log
framework
gives
raise
quasi-order
checked
decidable
procedure
based
constrained
sld-resolution
coverage
relations
ilp
settings
learning
interpre-
tations
learning
entailment
deﬁned
basis
query
answering
al-log
opposed
framework
implemented
ilp
system
32,33
precisely
instantiation
case
characteristic
in-
duction
interpretations
considered
indeed
system
supports
variant
popular
data
mining
task
frequent
pattern
discovery
rich
prior
con-
ceptual
knowledge
taken
account
discovery
process
order
ﬁnd
patterns
multiple
levels
description
granularity
search
space
patterns
represented
unary
conjunctive
queries
al-log
organized
according
b-subsumption
performed
applying
ideal
downward
reﬁnement
operator
2.3.
learning
shiq+log
rules
ilp
framework
presented
represents
hypotheses
shiq+log
rules
organizes
according
generality
ordering
inspired
generalized
subsumption
resulting
hypothesis
space
searched
means
reﬁnement
operators
either
top-down
bottom-up
analogously
framework
encompasses
scopes
induction
differently
assumes
ilp
setting
learning
en-
tailment
coverage
relation
generality
relation
boil
query
answering
shiq+log
thus
reformulated
satisﬁability
problems
com-
pared
framework
shows
added
value
summarized
follows
first
relies
expressive
i.e
shiq
second
allows
inducing
deﬁnitions
new
concepts
i.e
rules
shiq
literal
head
9the
bias
considered
extension
una
semantic
level
syntactic
one
al-log
starting
point
deﬁnition
either
equational
theory
quasi-order
constrained
datalog
clauses
table
three
ilp
frameworks
suitable
learning
onto-relational
rules
learning
carin-aln
rules
learning
al-log
rules
learning
shiq+log
rules
prior
knowledge
carin-aln
ontology
language
aln
rule
language
hypothesis
language
target
predicate
hcl
carin-aln
non-recursive
rules
horn
predicate
al-log
alc
datalog
al-log
non-recursive
rules
datalog
predicate
shiq+log
shiq
datalog
shiq+log
non-recursive
rules
shiq/datalog
predicate
logical
setting
scope
induction
interpretations
prediction
interpretations/entailment
prediction/description
entailment
prediction/description
generality
order
coverage
test
ref
operators
extension
carin-aln
carin
query
answering
n.a
extension
al-log
al-log
query
answering
downward
extension
shiq+log
dl+log¬∨
query
answering
downward/upward
implementation
application
unknown
yes
see
yes
see
third
adopts
ﬂexible
form
integration
part
i.e
weakly-safe
one
work
reported
29,25
generalizes
results
decidable
instan-
tiation
dl+log¬∨
following
section
illustrates
learning
dl+log¬
rules
support
evolution
ontologies
learning
rule-based
deﬁnitions
concepts
roles
ilp
ontology
evolution
timely
adaptation
ontology
changed
business
requirements
trends
ontology
instances
patterns
usage
ontology-based
application
well
consistent
management/propagation
changes
de-
pendent
elements
opposed
ontology
modiﬁcation
ontology
evolution
must
preserve
consistency
ontology
according
one
distinguish
conceptual
speciﬁcation
representation
changes
section
consider
conceptual
changes
ontology
due
exten-
sional
knowledge
i.e.
facts
instance
level
ontology
previously
unknown
classiﬁed
may
become
available
particular
consider
task
deﬁn-
ing
new
concepts
roles
provide
intensional
counterpart
extensional
knowledge
show
task
reformulated
orl
problem
ex-
ample
new
facts
loner
joe
loner
mary
loner
paul
concerning
known
individuals
may
raise
need
deﬁnition
concept
loner
ontol-
ogy
one
deﬁnition
learned
facts
together
prior
knowledge
joe
mary
paul
i.e
facts
concerning
already
available
ontol-
ogy
crucial
requirement
deﬁnition
must
expressed
formula
similar
following
provide
means
learning
rule-based
deﬁnitions
concepts/roles
framework
dl+log¬
3.1.
learning
problem
assume
ontology
integrated
datalog¬
database
form
dl+log¬
problem
inducing
rule-based
deﬁnitions
concepts/roles
occur
formalized
follows
deﬁnition
given
dl+log¬
background
theory
predicate
name
target
predicate
set
assertions
either
true
false
examples
set
dl+log¬
deﬁnitions
language
hypotheses
problem
building
rule-based
deﬁnition
induce
set
hypothesis
dl+log¬
rules
completeness
covers
w.r.t
consistency
cover
w.r.t
background
theory
deﬁnition
split
intensional
part
i.e.
tbox
plus
idb
extensional
part
i.e.
abox
plus
edb
also
denote
sets
concept
role
datalog
predicate
names
occurring
respectively
note
example
suppose
dl+log¬
adapted
built
upon
al-
phabets
rich/1
unmarried/1
wants-to-marry/2
loves/2
famous/1
scientist/1
meets/3
consisting
following
intensional
knowledge
rich⊓unmarried
wants-to-marry−.⊤
wants-to-marry
loves
rich
famous
¬scientist
happy
famous
wants-to-marry
following
extensional
knowledge
unmarried
mary
unmarried
joe
famous
mary
famous
paul
famous
joe
scientist
joe
meets
mary
paul
italy
meets
mary
joe
germany
meets
joe
mary
italy
concerns
individuals
mary
joe
paul
italy
germany
hypothesis
language
deﬁnition
given
set
declarative
bias
con-
straints
allows
generation
dl+log¬
rules
starting
three
disjoint
al-
phabets
also
distinguish
order
specify
datalog
predicates
occur
positive
negative
literals
respectively
precisely
consider
dl+log¬
rules
form
~y1
~ym
~z1
~zk
¬u1
~w1
¬uq
~wq
~yj
~zl
~wt
atom
following
restrictions
admissible
rules
must
compliant
datalog-safeness
every
variable
occurring
must
appear
least
one
atoms
~y1
~ym
~z1
~zk
weak
dl-safeness
every
head
variable
must
appear
least
one
atoms
~y1
~ym
also
guarantee
conditions
linkedness
connectedness
usually
as-
sumed
ilp
satisﬁed
example
suppose
target
predicate
concept
loner
lloner
de-
ﬁned
lloner
lloner
famous/1
happy/1
rich/1
unmarried/1
following
dl+log¬
rules
lloner
hloner
hloner
hloner
loner
famous
loner
famous
unmarried
loner
famous
¬happy
belong
lloner
represent
hypotheses
deﬁnition
loner
example
suppose
role
likes
target
predicate
set
llikes
llikes
llikes
happy/1
meets/3
rich/1
loves/2
wants-to-marry/2
provides
building
blocks
language
llikes
following
dl+log¬
rules
hlikes
hlikes
hlikes
likes
meets
likes
meets
happy
likes
meets
rich
belonging
llikes
considered
hypotheses
deﬁnition
likes
set
examples
deﬁnition
contains
assertions
kind
~ai
target
predicate
~ai
tuple
individuals
occurring
abox
note
role
name
tuple
~ai
pair
individuals
assume
however
possibly
incomplete
description
example
reference
example
suppose
following
concept
assertions
eloner
eloner
eloner
loner
mary
loner
joe
loner
paul
examples
target
predicate
loner
example
reference
example
following
role
assertions
elikes
elikes
elikes
likes
mary
italy
likes
mary
germany
likes
joe
italy
assumed
examples
target
predicate
likes
3.2.
ingredients
ilp
solution
order
solve
learning
problem
hand
ilp
methodological
approach
language
hypotheses
needs
equipped
coverage
relation
deﬁnes
mappings
set
examples
generality
order
cid:23
cid:23
search
space
deﬁnition
coverage
relation
depends
representation
choice
ex-
amples
normal
ilp
setting
appropriate
learning
problem
hand
extended
dl+log¬
framework
depicted
deﬁnition
follows
deﬁnition
say
rule
covers
cover
resp
example
~ai
w.r.t
background
theory
iff
~ai
6|=
~ai
resp.
note
coverage
test
reduced
query
answering
w.r.t
dl+log¬∨
turn
reformulated
satisﬁability
problem
example
reference
example
rule
hloner
nm-models
hloner
eloner
whereas
hloner
analogous
reasons
rule
hloner
covers
example
eloner
satisfy
famous
mary
covers
also
eloner
covers
eloner
covers
eloner
eloner
eloner
example
reference
example
rule
hlikes
nm-models
b∪hlikes
also
elikes
elikes
analogous
reasons
rule
hlikes
covers
elikes
covers
example
elikes
satisfy
meets
mary
italy
covers
elikes
whereas
hlikes
covers
elikes
elikes
deﬁnition
generality
order
hypotheses
must
consider
peculiar-
ities
chosen
generalized
subsumption
subsequently
extended
deal
naf
literals
suitable
problem
hand
adapted
case
dl+log¬
rules
following
provide
characterization
resulting
gener-
ality
order
denoted
cid:23
relies
reasoning
tasks
known
dl+log¬∨and
test
procedure
derived
deﬁnition
let
two
dl+log¬
rules
standardized
apart
dl+log¬
skolem
substitution
respect
say
general
w.r.t
denoted
cid:23
iff
ex-
ists
ground
substitution
head
head
body
body
say
strictly
general
w.r.t
say
equivalent
denoted
w.r.t
denoted
cid:23
iff
cid:23
cid:23
iff
cid:23
example
let
consider
rules
reported
example
variable
renaming
hloner
hloner
loner
famous
loner
famous
unmarried
order
check
whether
hloner
hloner
condition
immediately
veriﬁed
condition
cid:23
respect
hloner
hloner
holds
let
x/a
skolem
substitution
a/a
ground
substitution
hloner
famous
unmarried
famous
ground
query
answering
problem
dl+log¬
easily
proved
nm-
models
famous
unmarried
satisfy
famous
thus
case
hloner
hloner
incomparable
hloner
viceversa
hold
also
hloner
hloner
hloner
cid:23
example
reference
example
proved
hlikes
hlikes
conversely
rules
hlikes
hlikes
hlikes
incomparable
note
hlikes
hlikes
hlikes
likes
meets
loves
likes
meets
wants-to-marry
also
belong
llikes
proved
hlikes
hlikes
hlikes
hlikes
hlikes
hlikes
note
decidability
proved
dl+log¬
rules
therefore
space
like
following
one
able
traverse
hypothesis
space
top
follows
decidability
dl+log¬
also
quasi-order
i.e.
reﬂexive
transitive
relation
searched
reﬁnement
operators
deﬁnition
let
dl+log¬
hypothesis
language
built
three
ﬁnite
disjoint
alphabets
deﬁne
downward
reﬁne-
set
ρor
contains
ment
operator
ρor
cid:23
obtained
applying
one
following
reﬁnement
rules
hadddatalit_b+i
body
body
rm+1
~ym+1
rm+1
rm+1
~ym+1
body
var
head
var
body
haddontolit_bi
body
body
sk+1
~zk+1
sk+1
exist
~zl
body
sk+1
var
head
var
body
hspecontolit_bi
body
body
~zl
~zl
hadddatalit_b−i
body
body
¬uq+1
~wq+1
uq+1
uq+1
~wq+1
body
~wq+1
var
body+
function
or-foil
10.
13.
endwhile
14.
return
l|h′
ρor
or-foil-choosebest
−|b
endwhile
+|b
figure
or-foil
foil-like
algorithm
learning
onto-relational
rules
rules
ρor
correct
i.e
obtained
applying
rules
ρor
proved
intuitively
observing
act
body
thus
condition
deﬁnition
satisﬁed
furthermore
straightforward
notice
application
rules
ρor
reduces
number
models
particular
hspecontolit_bi
intuition
follows
semantics
dls
condition
also
fulﬁlled
example
reference
example
applying
hadddatalit_b+i
hloner
loner
produces
hloner
hadddatalit_b−i
note
reﬁnement
rule
applied
hloner
hloner
specialized
means
haddontolit_bi
among
reﬁnements
hloner
hloner
example
reference
example
applying
hadddatalit_b+i
hlikes
likes
specialized
hlikes
produces
hlikes
hlikes
means
hadddatalit_bi
haddontolit_bi
note
reﬁnement
also
obtained
reﬁnement
rule
applied
hlikes
via
hspecontolit_bi
hlikes
hlikes
hlikes
hlikes
3.3.
ilp
algorithm
ingredients
identiﬁed
previous
section
starting
point
deﬁnition
ilp
algorithms
figure
reports
main
procedure
foil-like
algorithm
named
or-foil
learning
onto-relational
rules
or-foil
analogously
foil10
10foil
popular
ilp
algorithm
learning
sets
rules
used
classiﬁer
outer
loop
steps
2-12
corresponds
variant
sequential
covering
algorithm
i.e.
learns
new
rules
one
time
removing
positive
examples
covered
latest
rule
attempting
learn
next
rule
steps
11-12
hypothesis
space
search
performed
or-foil
best
understood
viewing
hierarchically
iteration
outer
loop
steps
2-13
adds
new
rule
disjunctive
hypothesis
effect
new
rule
generate
current
disjunctive
hypothesis
i.e.
increase
number
instances
classiﬁes
positive
adding
new
disjunct
viewed
level
search
bottom-up
search
space
hypotheses
beginning
speciﬁc
empty
disjunction
step
terminating
hypothesis
sufﬁciently
general
cover
positive
training
examples
step
inner
loop
steps
5-9
performs
ﬁne-grained
search
determine
exact
deﬁnition
new
rule
loop
searches
second
hypothesis
space
consisting
conjunctions
literals
ﬁnd
conjunction
form
body
new
rule
within
space
conducts
top-down
hill-climbing
search
beginning
general
precondi-
tions
possible
step
reﬁning
rule
step
avoids
negative
examples
select
promising
specialization
candidates
generated
itera-
tion
or-foil-choosebest
called
step
considers
performance
can-
didate
chooses
one
maximizes
information
gain
measure
computed
according
following
formula
gain
log2
log2
number
distinct
variable
bindings
positive
examples
covered
rule
still
covered
conﬁdence
degree
thus
gain
positive
iff
informative
sense
shannon
information
theory
i.e
iff
conﬁdence
degree
increases
literals
add
increase
conﬁdence
degree
information
gain
tends
favor
literals
offer
best
compromise
conﬁdence
degree
number
examples
covered
one
may
think
use
conﬁdence
degree
deﬁned
dl-foil
see
chapter
details
takes
owa
account
indeed
many
individuals
may
available
classiﬁed
instances
target
concept
negation
requires
different
setting
able
deal
unlabeled
individuals
example
reference
example
example
suppose
eloner
eloner
eloner
outer
loop
or-foil
starts
hloner
reﬁned
iter-
turn
ations
inner
loop
precisely
ﬁrst
specialized
hloner
since
covers
negative
examples
specialized
hloner
rule
hloner
added
hloner
hypothesis
cover
negative
ex-
amples
point
algorithm
stops
hloner
covers
positive
examples
hloner
example
following
example
example
assume
elikes
elikes
cover
negative
examples
one
positive
example
end
ﬁrst
iteration
hlikes
elikes
included
hlikes
since
final
remarks
directions
research
building
rules
within
ontologies
poses
several
challenges
researchers
investigating
suitable
hybrid
dl-cl
formalisms
also
community
historically
interested
application
areas
knowledge
acquisition
bottleneck
particularly
severe
particular
orl
may
open
new
opportunities
make
systems
available
support
knowledge
engineer
demanding
task
i.e
deﬁning
rules
extend
complement
ontology
thus
orl
may
produce
time
cost
savings
chapter
revised
literature
addressing
problem
learning
onto-relational
rules
ilp
works
found
propose
solution
problem
47,24,27
adopt
carin-
aln
al-log
shiq+log
framework
respectively
note
matching
table
table
one
may
ﬁgure
state-of-the-art
directions
research
onto-relational
rules
viewpoint
also
he/she
get
suggestions
appropriate
among
ilp
frameworks
implemented
certain
intended
application
speciﬁc
solution
illustrated
section
takes
advantage
augmented
expressive
power
thanks
chosen
dl+log¬∨
instantiation
supports
evolution
ontologies
creation
concept/role
change
operations
boil
addition
new
rules
input
comparative
analysis
ilp
frameworks
reviewed
section
com-
mon
feature
emerges
proposals
resort
buntine
generalized
subsumption
ex-
tend
non-trivial
way
choice
due
fact
among
semantic
gen-
erality
orders
ilp
generalized
subsumption
applies
deﬁnite
clauses
therefore
suits
well
hypothesis
language
three
frameworks
following
guidelines
new
ilp
frameworks
designed
deal
differently
expressive
hybrid
dl-cl
languages
according
chosen
e.g.
learning
carin-alcn
rules
clausal
language
chosen
e.g.
learning
recursive
carin
rules
integration
scheme
e.g.
learning
carin
rules
dl-literals
head
important
require-
ment
deﬁnition
semantic
generality
relation
hypotheses
take
account
background
knowledge
course
generalized
subsumption
may
turn
suitable
cases
e.g
case
learning
dl+log∨
rules
also
would
interesting
investigate
nature
rules
i.e.
intended
context
usage
may
impact
learning
process
scope
induction
variables
learning
problem
statement
example
problem
learning
al-log
rules
classiﬁcation
purposes
differ
greatly
apparently
similar
learning
problem
faced
finally
worthy
consider
hybrid
formalisms
loose
full
integration
scheme
besides
theoretical
issues
future
work
devoted
implementa-
tion
application
moving
practice
issues
like
efﬁciency
scalability
be-
come
paramount
importance
concerns
may
drive
attention
ilp
research
towards
less
expressive
hybrid
frameworks
order
gain
tractability
e.g
in-
stantiations
dl+log¬∨
dl-lite
applications
come
many
use
cases
semantic
web
rules
speciﬁed
rif
w3c
working
group
references
borgida
relative
expressiveness
description
logics
predicate
logics
artiﬁcial
intelli-
gence
1–2
:353–367
1996
buntine
generalized
subsumption
application
induction
redundancy
artiﬁcial
intel-
ligence
:149–176
1988.
cabral
r.c
kahlert
matuszek
m.j.
witbrock
summers
converting
semantic
meta-
knowledge
inductive
bias
kramer
pfahringer
editors
inductive
logic
programming
volume
3625
lecture
notes
computer
science
pages
38–50
springer
2005
calvanese
lenzerini
rosati
vetere
dl-lite
practical
reasoning
rich
dls
haarslev
möller
editors
proc
2004
int
workshop
description
logics
volume
104
ceur
workshop
proceedings
ceur-ws.org
2004
ceri
gottlob
tanca
always
wanted
know
datalog
never
dared
ask
ieee
transactions
knowledge
data
engineering
:146–166
1989
ceri
gottlob
tanca
logic
programming
databases
springer
1990
raedt
logical
relational
learning
springer
2008
f.m
donini
lenzerini
nardi
schaerf
al-log
integrating
datalog
description
logics
journal
intelligent
information
systems
:227–252
1998
drabent
eiter
ianni
krennwallner
lukasiewicz
maluszynski
hybrid
reasoning
rules
ontologies
bry
maluszynski
editors
semantic
techniques
web
rewerse
perspective
volume
5500
lncs
pages
1–49
springer
2009
eiter
gottlob
mannila
disjunctive
datalog
acm
transactions
database
systems
:364–418
1997
eiter
ianni
lukasiewicz
schindlauer
tompits
combining
answer
set
programming
description
logics
semantic
web
artiﬁcial
intelligence
172
12-13
:1495–1539
2008
eiter
ianni
schindlauer
tompits
uniform
integration
higher-order
reasoning
external
evaluations
answer-set
programming
ijcai
pages
90–96
2005
a.m.
frisch
substitutional
framework
sorted
deduction
fundamental
results
hybrid
reason-
ing
artiﬁcial
intelligence
49:161–198
1991
a.m.
frisch
sorted
downward
reﬁnement
building
background
knowledge
reﬁnement
operator
inductive
logic
programming
džeroski
flach
editors
inductive
logic
programming
volume
1634
lecture
notes
artiﬁcial
intelligence
pages
104–115
springer
1999
a.m.
frisch
a.g.
cohn
thoughts
afterthoughts
1988
workshop
principles
hybrid
reasoning
magazine
:84–87
1991
gelfond
lifschitz
classical
negation
logic
programs
disjunctive
databases
new
generation
computing
3/4
:365–386
1991
glimm
horrocks
lutz
sattler
conjunctive
query
answering
description
logic
shiq
journal
artiﬁcial
intelligence
research
31:151–198
2008
goasdoué
lattès
m.-c.
rousset
use
carin
language
algorithms
informa-
tion
integration
picsel
system
int
cooperative
information
systems
:383–401
2000.
horrocks
angele
decker
kifer
grosof
wagner
rules
ieee
intelligent
systems
18:76–83
2003.
józefowska
lawrynowicz
lukaszewski
role
semantics
mining
frequent
patterns
knowledge
bases
description
logics
rules
theory
practice
logic
programming
:251–289
2010.
j.-u
kietz
learnability
description
logic
programs
matwin
sammut
editors
inductive
logic
programming
volume
2583
lnai
pages
117–132
springer
2003
d.b
lenat
r.v
guha
pittman
pratt
shepherd
cyc
toward
programs
common
sense
commun
acm
:30–49
1990
a.y
levy
m.-c.
rousset
combining
horn
rules
description
logics
carin
artiﬁcial
intelligence
104:165–209
1998
f.a
lisi
building
rules
top
ontologies
semantic
web
inductive
logic
program-
ming
theory
practice
logic
programming
:271–300
2008
f.a
lisi
inductive
logic
programming
databases
datalog
dl+log
theory
practice
logic
programming
:331–359
2010
f.a
lisi
esposito
efﬁcient
evaluation
candidate
hypotheses
al-log
camacho
king
srinivasan
editors
inductive
logic
programming
volume
3194
lecture
notes
artiﬁcial
intelligence
pages
216–233
springer
2004
f.a
lisi
esposito
foundations
onto-relational
learning
železný
lavraˇc
editors
inductive
logic
programming
volume
5194
lecture
notes
artiﬁcial
intelligence
pages
158–175
springer
2008
f.a
lisi
esposito
learning
shiq+log
rules
ontology
evolution
gangemi
keizer
presutti
stoermer
editors
semantic
web
applications
perspectives
swap2008
volume
426
ceur
workshop
proceedings
ceur-ws.org
2008
f.a
lisi
esposito
nonmonotonic
onto-relational
learning
raedt
editor
inductive
logic
programming
volume
5989
lecture
notes
computer
science
pages
88–95
2010
f.a
lisi
malerba
bridging
gap
horn
clausal
logic
description
logics
inductive
learning
cappelli
turini
editors
ai*ia
2003
advances
artiﬁcial
intelligence
volume
2829
lecture
notes
artiﬁcial
intelligence
pages
49–60
springer
2003
f.a
lisi
malerba
ideal
reﬁnement
descriptions
al-log
horvath
yamamoto
editors
inductive
logic
programming
volume
2835
lecture
notes
artiﬁcial
intelligence
pages
215–232
springer
2003
f.a
lisi
malerba
inducing
multi-level
association
rules
multiple
relations
machine
learning
55:175–210
2004
f.a
lisi
al-quin
onto-relational
learning
system
semantic
web
mining
int
semantic
web
information
systems
:1–22
2011.
j.w
lloyd
foundations
logic
programming
springer
2nd
edition
1987
v.w
marek
truszczynski
stable
models
alternative
logic
programming
paradigm
k.r
apt
v.w
marek
truszczynski
d.s
warren
editors
logic
programming
paradigm
25-year
perspective
pages
169–181
springer
1999
t.m
mitchell
generalization
search
artiﬁcial
intelligence
18:203–226
1982
motik
rosati
reconciling
description
logics
rules
acm
2010
motik
sattler
studer
query
answering
owl-dl
rules
journal
web
semantics
:41–60
2005
muggleton
inductive
logic
programming
new
generation
computing
:295–317
1991
s.-h.
nienhuys-cheng
wolf
foundations
inductive
logic
programming
volume
1228
lecture
notes
artiﬁcial
intelligence
springer
1997
fridman
noy
m.c.a
klein
ontology
evolution
schema
evolution
knowledge
information
systems
:428–440
2004.
j.r.
quinlan
learning
logical
deﬁnitions
relations
machine
learning
5:239–266
1990
rosati
decidability
complexity
integrating
ontologies
rules
journal
web
semantics
:61–73
2005
rosati
semantic
computational
advantages
safe
integration
ontologies
rules
fages
soliman
editors
principles
practice
semantic
web
reasoning
volume
3703
lecture
notes
computer
science
pages
50–64
springer
2005
rosati
dl+log
tight
integration
description
logics
disjunctive
datalog
doherty
mylopoulos
c.a
welty
editors
proc
tenth
international
conference
principles
knowl-
edge
representation
reasoning
pages
68–78
aaai
press
2006
rosati
combining
description
logic
ontologies
nonrecursive
datalog
rules
cal-
vanese
lausen
editors
web
reasoning
rule
systems
volume
5341
lecture
notes
computer
science
pages
13–27
springer
2008
rouveirol
ventos
towards
learning
carin-aln
cussens
frisch
editors
inductive
logic
programming
volume
1866
lecture
notes
artiﬁcial
intelligence
pages
191–208
springer
2000
ruckhaus
kolovski
parsia
cuenca
grau
integrating
datalog
owl
exploring
al-log
approach
etalle
truszczynski
editors
logic
programming
volume
4079
lecture
notes
computer
science
pages
455–456
springer
2006
sakama
nonmonotonic
inductive
logic
programming
eiter
faber
truszczynski
editors
logic
programming
nonmonotonic
reasoning
volume
2173
lecture
notes
computer
science
pages
62–80
springer
2001
stojanovic
maedche
motik
stojanovic
user-driven
ontology
evolution
management
gómez-pérez
v.r
benjamins
editors
knowledge
engineering
knowledge
management
ontologies
semantic
web
volume
2473
lncs
pages
285–300
springer
2002
