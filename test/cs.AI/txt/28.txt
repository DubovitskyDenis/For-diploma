definition
terms
multi
agent
systems
dimiter
dobrev
institute
mathematics
informatics
bulgarian
academy
sciences
acad
bonchev
str.
1113
sofia
bulgaria
dobrev
2-box.com
abstract
questions
consider
make
present
definition
terms
multi-agent
systems
means
find
new
answer
question
old
answer
new
form
new
form
definition
interest
theory
multi-agent
systems
gives
better
understanding
theory
important
work
help
answer
second
question
want
make
program
capable
constructing
model
environment
every
multi-agent
model
equivalent
single-agent
model
multi-agent
models
natural
accordingly
easily
discoverable
keywords
artificial
intelligence
multi-agent
systems
definition
introduction
previous
articles
author
1-13
address
issue
defining
problem
formulated
way
articles
concerning
multi-agent
systems
14-16
one
may
say
formalisation
used
1-13
special
case
formalisation
used
14-16
special
case
results
limit
single
agent
indeed
formalisation
1-13
obtained
special
case
formalisation
14-16
articles
1-13
nonetheless
interest
since
address
different
issue
words
two
problems
type
given
that…
find…
given
problems
found
different
still
problems
significantly
interconnected
connection
used
ways
ideas
second
problem
used
develop
first
one
vice
versa
j-th
agent
moment
formulation
problem
multi-agent
systems
given
one
world
multiple
internal
states
one
initial
state
world
number
agents
inhabiting
world
also
one
world
function
function
world
two
arguments
first
one
current
state
world
second
n-th
set
actions
number
agents
function
world
returns
new
internal
state
world
results
current
one
actions
agents
words
initial
state
si+1=world
...
action
question
examined
whether
given
agent
strategy
achieving
maintaining
certain
condition
summarized
naturally
examining
question
regards
group
several
agents
group
called
coalition
strategy
function
determines
actions
agent
coalition
function
depend
upon
thing
strategy
depends
upon
current
state
world
strategy
dependent
history
words
dependent
way
current
state
world
reached
means
depends
neither
upon
...
si-1
states
upon
previous
actions
...
dependent
history
strategy
dependent
upon
future
natural
since
strategy
dependent
future
actions
opponents
would
rendered
unusable
future
actions
opponents
unknown
last
component
could
influence
strategy
n-th
set
...
strategy
may
depend
upon
actions
opponents
current
moment
let
assume
agents
act
simultaneously
none
aware
actions
performed
agents
moment
assumption
holds
undetermined
aspect
problem
thus
formulated
assumed
agents
would
acting
consecutively
seeing
actions
would
completely
determined
system
case
would
attribute
agent
strategy
maintaining
certain
attribute
coalition
rest
agents
strategy
achieving
negation
attribute
opposite
direction
implication
holds
cases
order
see
current
formulation
attribute
valid
let
consider
following
example
let
world
two
states
odd
even
let
world
inhabited
two
agents
capable
two
actions
let
world
even
state
sum
module
two
actions
two
agents
zero
new
state
world
depend
upon
old
one
situation
neither
agents
strategy
maintaining
even
state
strategy
achieving
odd
state
i.e
characteristic
valid
formulation
problem
definition
formulation
problem
difference
world
inhabited
single
agent
question
another
difference
former
case
assumed
agents
could
see
everything
i.e.
could
see
current
state
world
latter
case
assumed
agent
i.e.
receives
information
words
assume
one
function
view
restricts
information
receives
thus
like
horse
blinders
since
receive
view
isolated
case
view
injection
function
sees
everything
possible
simple
worlds
problem
strategies
depend
upon
current
state
world
simply
state
visible
dependent
upon
visible
history
row
view
view
...
view
action
moment
words
receives
much
less
information
agents
first
problem
knows
saw
first
problem
agents
know
everything
since
perceive
current
state
world
i.e.
see
everything
first
problem
assumed
given
concrete
world
concrete
condition
achieved
maintained
question
whether
strategy
achieve
respectively
maintain
condition
problem
world
unknown
task
perform
well
unknown
world
order
define
perform
well
need
introduce
meaning
life
make
task
easier
let
choose
one
particular
meaning
life
follows
let
two
subsets
set
values
view
function
call
victory
loss
aim
life
victories
fewer
losses
course
assumed
distinguishes
two
subsets
i.e.
knows
lost
first
problem
question
whether
strategy
exists
latter
certain
specific
strategy
wanted
precisely
wanted
computable
strategy
stated
program
thus
incomputable
strategy
proven
6-7
strategy
i.e.
exists
moreover
algorithm
given
calculates
unfortunately
algorithm
completely
useless
work
within
reasonable
timeframe
algorithm
exists
complete
task
finite
number
steps
becomes
useless
finite
number
steps
actuality
infinite
elaborate
problem
multi-agent
systems
reasonable
assume
agents
perceive
everything
part
world
words
assume
functions
view1
...
viewn
limit
incoming
information
agents
case
strategy
agent
dependent
upon
current
state
world
upon
visible
history
row
viewj
viewj
...
viewj
action
j-th
agent
moment
i.e.
strategy
depend
upon
agent
seen
done
elaborate
problem
way
solving
problem
goes
understanding
world
words
must
find
model
unknown
world
placed
algorithm
6,7
function
way
already
said
algorithm
usable
search
model
unknown
world
must
first
choose
set
formal
models
among
looking
one
suit
best
limited
within
set
single-agent
worlds
practical
look
formal
model
within
much
larger
set
multi-agent
worlds
multi-agent
world
exists
equivalent
single-agent
one
words
changing
set
formal
models
changing
definition
stated
still
multi-agent
worlds
natural
much
easier
find
suitable
model
within
set
already
said
multi-agent
world
exists
corresponding
single-agent
one
usually
much
complex
difficult
comprehend
multi-agent
counterpart
multi-agent
worlds
simpler
separate
part
complexity
world
single
object
call
agent
human
beings
think
much
way
explore
world
surrounds
come
across
people
might
take
part
environment
words
might
assume
live
single-agent
world
sole
inhabitants
entire
universe
instead
accept
people
besides
makes
model
world
surrounds
simpler
easier
comprehend
often
also
accept
existence
abstract
objects
god
fate
luck
lock
person
tower
thus
placing
single-agent
world
bound
start
introducing
additional
agents
agents
actually
need
order
explain
surrounding
world
instance
person
assume
wind
rational
trying
tell
something
decide
certain
object
looking
askance
may
break
words
people
created
disposition
interpret
world
surrounds
multi-agent
system
times
apt
somewhat
far
direction
talking
multi-agent
models
means
make
clear
different
agents
considered
equal
quite
natural
divide
agents
friends
enemies
well-meaning
stupid
agent
much
use
similarly
another
agent
may
enemy
cunning
one
render
even
harmful
separating
part
world
particular
agent
adhering
principle
objects
suitable
transformed
agents
whose
behaviour
complex
difficult
anticipate
usually
thinking
objects
people
animals
point
regarding
object
vacuum
cleaner
example
separate
agent
answer
much
behaviour
vacuum
cleaner
quite
clear
hidden
complexity
might
separated
description
world
important
attribute
ability
look
world
eyes
another
agent
one
reason
model
world
must
multi-
agent
one
note
simple
proof
fact
multi-agent
world
exists
corresponding
single-agent
one
proof
let
program
calculates
function
world1
multi-agent
world
n-1
programs
calculating
behaviour
rest
agents
i.e.
agents
except
function
world2
respective
single-agent
world
composite
functions
proof
poses
three
questions
firstly
whether
exist
functions
describing
behaviour
agents
answer
yes
since
agent
bound
perform
certain
strategy
i.e.
exists
function
describing
behaviour
natural
languages
meant
strategy
clever
behaviour
strategy
behaviour
second
question
whether
functions
describing
world
strategies
agents
determined
examined
question
saw
real
importance
let
assume
common
cases
present
functions
determined
third
last
question
assume
functions
computable
i.e.
programs
calculate
one
hand
assumption
unnecessary
proof
without
hand
nothing
stop
assuming
functions
computable
since
finite
part
values
part
moment
birth
present
moment
words
must
approximate
functions
using
part
finite
nothing
stop
choosing
function
approximation
computable
program
calculate
undetermined
function
let
assume
programs
using
inbuilt
random-number
generator
words
departing
slightly
traditional
concept
computability
assume
pseudo-random
numbers
random
concept
computability
case
need
distinguish
random
pseudo-random
numbers
dealing
short
interval
time
moment
birth
present
moment
i.e.
pseudo-random
numbers
unlikely
start
repeating
cyclically
likely
discover
laws
generate
concrete
example
discuss
concrete
example
artificial
world
artificial
mean
created
people
must
compete
artificial
opponent
playing
game
tic-tac-toe
articles
attempt
find
single-agent
model
world
rather
difficult
task
opponent
also
part
world
renders
model
quite
complex
course
seen
artificial
opponent
well-defined
world
well-defined
indefiniteness
opponent
would
transferred
onto
world
well
short
single-agent
model
world
function
becomes
complex
description
contains
description
artificial
opponent
world
artificial
opponent
part
landscape
renders
rather
complex
whenever
places
appears
board
one
game
much
simpler
assume
appear
placed
agent
need
know
exact
algorithm
governing
agent
still
knowing
may
use
suffice
assume
malevolent
agent
trying
harm
exactly
idea
malevolent
agent
min-max
algorithm
grounded
algorithm
means
chess
programs
think
note
playing
tic-tac-toe
choose
think
appear
someone
else
placing
much
way
sunbathing
beach
choose
believe
clouds
appear
placed
sky
somebody
former
case
call
someone
opponent
later
god
suntan
assume
respectively
clouds
appear
might
also
assume
completely
random
process
neither
foresee
influence
assumption
good
need
influence
process
win
game
respectively
get
tan
want
look
complex
interdependence
might
describe
appearance
clouds
assuming
presence
opponent
respectively
god
suntan
result
simpler
model
case
natural
try
influence
process
cheating
opponent
propitiating
god
suntan
typical
example
human
behaviour
bringing
gifts
god
bribing
clerk
aim
solving
certain
problem
strategy
renders
question
whether
model
adequate
instance
whether
god
clerk
question
actually
exist
definite
answer
yes
possible
case
normally
communicate
directly
gods
clerks
resort
intermediaries
instead
example
priest
suntan
receives
gifts
pass
god
sure
god
actually
exists
even
know
certain
whether
priest
exists
whether
figment
imagination
i.e.
seeing
hearing
someone
necessarily
mean
exist
accept
existence
simplest
explanation
see
hear
answer
question
god
suntan
exists
answer
matter
matters
whether
bringing
gifts
god
ensure
sunny
days
words
matters
whether
certain
model
true
whether
works
possible
talk
true
untrue
models
divide
models
different
classes
according
equivalent
relation
model
infinite
number
equivalent
course
may
consider
equivalent
models
undistinguishable
search
representative
equivalence
class
going
solve
problem
either
looking
model
basis
visible
history
infinite
number
models
visible
history
yet
equivalent
i.e.
differ
future
somewhere
else
alternative
variants
past
order
predict
future
plan
actions
accordingly
choose
among
infinite
number
possibilities
single
concrete
model
one
normally
assumed
simpler
models
probable
ones
ockham
razor
principle
sometimes
easy
tell
simplest
realistic
model
choose
one
accept
truth
instance
accept
existence
god
suntan
offer
gifts
hardly
help
probably
harm
either
formalisation
world
example
examine
formalisation
world
playing
tic-tac-toe
board
3x3
eye
move
across
board
characteristic
world
see
single
box
rest
board
remains
hidden
must
manage
imagine
words
interesting
world
perceive
everything
i.e.
view
function
inaction
six
possible
moves
disposal
left
right
place
current
box
new
game
makes
new
move
placing
game
must
clear
board
new
game
started
command
new
game
needed
left/
right
figure
gives
idea
moves
disposal
till
described
possible
exit
remains
describe
entrance
view
function
returns
five
bits
information
two
show
contents
current
box
empty
three
bits
special
let
call
victory
loss
wrong
move
first
two
provide
meaning
life
said
meaning
victories
fewer
losses
third
bit
guiding
one
said
correspond
pain
instinct
theoretically
knows
wrong
moves
must
avoided
may
times
choose
place
one
move
appears
useful
people
people
first
two
bits
missing
meaning
life
defined
left
guiding
instincts
pain
pleasure
words
person
joins
game
tic-tac-toe
may
decide
game
important
meaning
life
nothing
important
world
winning
game
first
glance
would
appear
defined
something
different
natural
intellect
former
clearly
defined
life
goal
latter
truth
definition
natural
intellect
special
case
artificial
intelligence
limit
worlds
victory
loss
human
beings
clear
goal
multi-agent
formalisation
world
stated
multi-agent
formalisation
useful
expect
resulting
model
simpler
natural
single-agent
formalisation
order
formalise
world
simply
pick
artificial
opponent
separate
separate
agent
course
artificial
agent
well-defined
i.e.
played
accordance
strictly
assigned
algorithm
order
regard
artificial
opponent
independent
agent
assume
bound
fixed
playing
algorithm
instead
capable
acting
however
wants
way
easily
move
single-agent
multi-agent
model
game
still
going
would
result
asymmetrical
model
would
rather
two
agents
equal
prefer
symmetrical
models
one
considerable
difficulties
necessity
providing
education
course
holds
true
natural
intellect
provide
human
teacher
coach
sparring
partner
etc
would
expensive
time-
consuming
prefer
use
another
program
order
avoid
write
program
specifically
purpose
prefer
let
play
thus
teaching
course
order
play
world
symmetrical
may
assume
different
roles
problem
use
different
agents
problem
want
something
intellect
governing
number
agents
time
much
vein
idea
computer
governing
number
virtual
machines
two
agents
symmetrical
world
safely
assume
governed
single
common
intellect
discover
laws
world
time
agents
maintain
different
current
state
agent
example
tic-tac-toe
world
important
finite
state
automaton
providing
information
exact
location
eye
board
lot
processor
time
needed
order
discover
automaton
sought
among
set
finite
automata
quite
sensible
find
use
agents
course
eyes
two
agents
different
columns
board
automaton
different
state
agents
case
two
agents
advantages
symmetrical
world
appear
rather
insignificant
need
twice
little
computer
time
major
importance
still
creating
stage
setting
debugging
stated
program
creation
program
must
stages
find
much
easier
agents
governed
program
working
conditions
otherwise
end
two
responsible
different
agents
resulting
behaviours
totally
different
agents
inhabited
two
different
worlds
natural
feed
different
data
program
behaviour
inevitably
different
cases
advantages
symmetrical
model
quite
significant
namely
thousands
agents
instance
let
imagine
first
robots
appear
shop
function
may
assume
autonomous
i.e.
computer
performing
separate
copy
program
assumption
rather
doubtful
least
would
require
robot
taught
separately
much
probable
assumption
robots
small
computers
compressing
input
information
transferring
central
computer
execute
copy
program
central
number
virtual
agents
robot
one
controlling
directly
model
number
advantages
one
teach
every
robot
prepare
lasagne
taught
one
rest
know
introduce
robot
separately
one
knows
could
even
use
robots
telephones
could
say
want
pete
robot
tell
pete
invited
tonight
course
robot
use
phone
call
pete
robot
necessary
since
robots
governed
brain
paraphrase
saying
left
hand
know
right
one
advantages
model
become
even
obvious
examine
scheme
street
traffic
today
flow
vehicle
operated
people
autonomous
intellect
order
synchronise
flow
need
traffic
lights
street
marking
traffic
codes
etc.
result
flow
traffic
slow
unsafe
let
imagine
flow
vehicles
operated
single
shared
opposed
car
opinion
might
road
junction
look
cars
driving
great
speed
along
streets
passing
without
traffic
lights
yet
without
crashing
possible
secret
traffic
participants
governed
single
intelligence
one
person
dancing
floor
problem
synchronising
movements
left
right
hand
two
dancers
problem
synchronisation
becomes
almost
unsolvable
dancing
lot
tricks
similar
ones
used
street
traffic
tricks
learning
movements
beforehand
agreeing
one
partner
lead
follow
much
better
result
might
achieved
dancing
couple
governed
single
intelligence
would
perfect
synchronisation
without
need
rules
beforehand
agreements
concrete
example
look
like
example
symmetrical
two-agent
world
one
board
3x3
agent
seeing
one
box
time
capable
moving
across
board
independently
opponent
internal
state
world
determined
position
board
coordinates
eye
first
agent
coordinates
eye
second
one
two
bits
information
showing
agent
turn
whether
game
i.e.
whether
one
agents
expected
place
say
new
game
order
agent
able
place
must
turn
agent
tries
place
receive
message
wrong
move
appear
board
said
game
tic-tac-toe
one
agents
wins
see
victory
see
loss
one
agents
always
place
order
symmetrical
world
cover
eye
second
agent
pair
magical
glasses
see
vice
versa
agents
think
placing
opponent
still
world
entirely
symmetrical
since
initial
moment
one
agents
turn
however
minor
asymmetry
real
importance
also
introduce
time-trouble
rule
neither
agents
block
game
moving
across
board
without
placing
move
time-trouble
rule
state
agent
whose
turn
ten
steps
order
place
move
fails
lose
game
turn
pass
agent
may
say
new
game
thus
clearing
board
neither
agent
anything
ten
moves
one
lose
game
another
ten
lose
number
ten
course
random
change
another
world
different
game
rules
wiser
decide
upon
certain
number
think
within
terms
concrete
world
time-trouble
rule
add
internal
state
world
counter
count
number
steps
turn
passed
one
agents
counter
visible
agents
view
function
show
course
agent
count
ten
problem
know
start
counting
sees
new
board
know
opponent
placed
move
ten
steps
order
place
able
tell
many
steps
left
know
many
steps
ago
opponent
placed
new
strategy
player
whose
turn
move
across
empty
boxes
looking
new
trying
place
move
time
time
assumption
opponent
already
played
turn
could
also
base
time-trouble
rule
upon
number
steps
taken
upon
amount
real
time
passed
however
would
complicate
model
depend
upon
amount
time
needs
order
make
step
much
easier
assume
time
constant
i.e.
certain
number
steps
corresponds
certain
amount
real
time
choose
think
real
time
exist
thing
number
steps
artificial
world
look
two-agent
world
standpoint
first
agent
get
single-agent
world
similar
one
described
4,5,11,12
difference
world
placed
immediately
appeared
board
happens
certain
number
steps
earlier
inbuilt
opponent
saw
everything
accordingly
able
place
move
agent
sees
sees
needs
time
i.e.
steps
order
around
board
examine
reach
min-max
procedure
managed
build
model
world
world
roughly
managed
find
finite
state
automaton
describing
current
coordinates
eye
also
found
predicate
describing
position
board
three-place
predicate
whose
arguments
coordinates
eye
time
i.e.
number
current
step
basis
predicate
first-row
formulae
described
conditions
reaching
victory
words
found
world
model
correctly
described
rules
game
however
could
finish
task
could
build
program
capable
playing
tic-tac-toe
basis
program
note
predicate
describing
position
board
returns
three
possible
values
better
talk
predicate
function
pair
predicates
one
describing
however
technical
details
overlook
left
unfinished
reaching
min-max
procedure
another
similar
one
like
max-sum
one
exactly
idea
multi-agent
model
help
apply
min-max
procedure
want
make
plan
future
moves
natural
apply
min-max
principle
versus
world
words
calculate
maximum
possible
steps
could
take
minimum
possible
reactions
world
discussed
possibility
found
leads
directly
combinatorial
explosion
please
note
move
ten
corresponding
steps
opponent
must
first
move
empty
box
place
move
means
tree
min-max
procedure
becomes
ten
times
higher
since
know
complexity
min-max
exponentially
dependent
height
tree
becomes
clear
way
leads
directly
combinatorial
explosion
render
min-max
procedure
functioning
must
based
principle
versus
agent
aim
must
realize
matters
world
tic-tac-toe
position
board
course
position
directly
visible
i.e.
abstraction
saw
find
predicate
describing
position
board
words
abstraction
understand
next
thing
must
realize
change
position
board
difficult
deduce
placing
empty
box
lead
change
position
i.e.
change
value
predicate
current
next
difficult
realize
move
across
thus
reach
empty
boxes
means
recognise
possible
moves
disposal
next
abstraction
must
reach
idea
virtual
opponent
inhabiting
world
right
place
empty
boxes
ready
apply
min-max
procedure
thing
left
decide
whether
agent
friend
foe
words
whether
procedure
min-max
max-max
easy
let
believer
good
assume
agent
friend
soon
change
instead
helping
like
friend
agent
begins
playing
hostile
possible
way
words
agent
quickly
lose
trust
considered
foe
variants
world
example
let
look
several
variants
world
order
see
min-max
possibly
strategy
words
world
may
single
foe
type
variants
well
let
take
world
time
inhabited
four
agents
playing
tic-tac-toe
let
first
one
place
second
one
etc.
words
first
third
agent
playing
second
fourth
one
procedure
case
type
max-min-max-min
first
max
possible
moves
second
third
agent
one
playing
side
let
change
game
assume
third
agent
bribed
team
i.e.
places
worst
possible
way
instead
best
procedure
case
max-min-min-min
let
assume
agents
three
four
think
play
completely
randomly
result
max-min-average-average
procedure
average
stand
arithmetic
mean
possible
moves
variants
looked
agents
play
consecutively
i.e.
waits
turn
let
look
variant
example
agents
play
simultaneously
let
beginning
game
first
agent
two
place
board
time
likes
let
get
new
ten
steps
let
second
agent
order
example
i.e.
waiting
turns
time-trouble
rules
case
agents
try
make
move
box
let
first
one
priority
make
line
time
game
considered
draw
still
possible
use
procedure
similar
min-max
worlds
like
even
though
tree
possible
developments
much
complex
world
agents
waiting
turns
conclusion
multi-agent
models
right
way
solving
problem
creating
even
though
algorithm
great
extent
clear
still
remain
solved
number
technical
conceptual
problems
functioning
prototype
could
created
references
dobrev
magazine
bulgaria
november'2000
pp.12-13
bulgarian
also
english
dobrev
cope
arbitrary
world
magazine
bulgaria
february'2001
pp.12-13
bulgarian
also
english
dobrev
definition
artificial
intelligence
mathematica
balkanica
new
series
vol
2005
fasc
1-2
pp.67-74
dobrev
testing
one
artificial
world
proceedings
xi-th
international
conference
kds
2005
june
2005
varna
bulgaria
pp.461-464
dobrev
arbitrary
world
proceedings
5th
panhellenic
logic
symposium
july
2005
university
athens
athens
greece
62-67
dobrev
formal
definition
artificial
intelligence
international
journal
information
theories
applications
vol.12
number
2005
pp.277-285
dobrev
formal
definition
algorithm
satisfies
definition
proceedings
xii-th
international
conference
kds
2006
june
2006
varna
bulgaria
pp.230-237
dobrev
parallel
definition
chess
playing
program
definition
international
journal
information
theories
applications
vol.1
number
2007
pp.196-199
dobrev
two
fundamental
problems
connected
xii
international
conference
knowledge-dialogue-solution
june
2007
varna
bulgaria
dobrev
sunshine
method
finding
finite
automata
trends
mathematics
informatics
july
2007
sofia
bulgaria
dobrev
second
attempt
build
model
tic-tac-toe
game
international
book
series
information
science
computing
book
advanced
research
artificial
intelligence
june'2008
pp.146-152
dobrev
generator
simple
implications
http
//www.dobrev.com/ai/app4.html
dobrev
project
http
//www.dobrev.com/ai/
valentin
goranko
lecture
given
faculty
mathematics
informatics
sofia
university
sofia
summer
2009
