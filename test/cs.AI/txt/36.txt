arbitrary
world
dimiter
dobrev
institute
mathematics
informatics
bulgarian
academy
sciences
soﬁa
1113
bulgaria
e-mail
dobrev.com
april
2005
abstract
order
build
create
program
copes
well
arbitrary
world
paper
restrict
attention
one
concrete
world
represents
game
tick-tack-toe
world
simple
one
suﬃciently
complicated
task
people
manage
main
diﬃculty
world
player
see
entire
internal
state
world
build
model
order
understand
world
model
oﬀer
consist
ﬁnal
automata
ﬁrst
order
formulas
world
tick-tack-toe
game
paper
observe
concrete
artiﬁcial
world
ﬁnd
world
test
examples
compiler
strawberry
prolog
start
example
program
world
2.spj
see
one
panel
ﬁve
lamps
three
checkboxes
one
button
observe
program
test
intelligence
really
made
distinguish
use
also
test
human
level
intelligence
rules
test
step
device
lives
artiﬁcial
world
make
step
select
move
check-
boxes
press
button
next
step
purpose
order
cope
well
world
make
victories
less
losses
bad
moves
make
victory
lamp
named
victory
ﬂashes
respectively
make
loss
bad
move
respective
lamp
ﬂashes
figure
panel
course
cope
well
world
understand
ﬁrst
extremely
diﬃcult
even
know
behind
panel
hidden
game
tick-tack-toe
main
problem
see
entire
internal
state
game
obvious
see
ﬁve
lamps
carry
enough
information
anyway
spare
enough
time
experiments
world
understand
start
cope
well
sure
manage
artiﬁcial
world
manage
cope
well
real
world
much
complicated
really
spare
years
education
understanding
real
world
try
understand
orld2
alone
understand
diﬃculties
program
overcome
better
try
ﬁrst
orld1
much
easier
hidden
information
every
step
observe
internal
state
orld1
words
function
iew
gives
lamps
status
internal
state
world
injective
deﬁnition
going
make
program
able
cope
orld2
want
build
ﬁrst
question
accept
deﬁnition
given
short
description
deﬁnition
step
device
copes
well
arbitrary
world
world
set
internal
states
one
starting
state
two
functions
orld
iew
function
orld
return
new
state
world
current
state
device
move
state
checkboxes
function
iew
inform
device
see
function
return
state
lamps
current
state
world
one
device
copes
better
another
makes
victories
less
losses
deﬁnition
diﬀers
called
turing
test
separates
intellect
education
alan
turing
described
device
copes
well
natural
world
actually
even
human
without
education
device
already
educated
start
test
device
specially
built
natural
world
includes
within
information
real
world
case
orld2
problem
build
program
copes
well
tick-tack-toe
world
many
programs
play
game
successfully
one
ﬁnd
goal
build
program
specialised
orld2
class
worlds
big
possible
best
case
real
world
inside
class
suppose
program
know
anything
world
starts
living
making
steps
program
collect
information
alone
make
task
building
program
extremely
diﬃcult
detailed
description
world
orld2
play
tick-tack-toe
artiﬁcial
partner
call
tom
tom
strategy
simple
plays
every
time
randomly
correct
move
see
whole
board
game
every
step
see
one
cell
state
two
yellow
lamps
ﬁrst
lamp
mean
cross
second
lamp
mean
lamp
nothing
cell
lamps
never
together
checkboxes
select
eight
possible
commands
moves
four
move
eye
board
one
command
puts
cross
position
eye
another
one
new
game
command
last
two
commands
used
give
bad
move
every
time
play
one
tick-tack-toe
set
ﬁnished
one
lamps
victory
loss
ﬂashes
depending
set
set
equal
lamps
ﬂash
simultaneously
end
set
play
new
game
command
cells
cleaned
become
empty
orld2
made
way
end
set
able
continue
observe
tick-tack-toe
board
order
understand
lost
observation
important
understanding
world
left/
right
figure
world
right
right
left
left
figure
automate
left/
right/
every
time
try
something
allowed
lamp
bad
move
ﬂash
red
internal
state
world
stay
un-
changed
examples
bad
moves
ﬁrst
column
try
move
left
try
put
cross
cell
empty
set
give
command
new
game
end
set
model
world
order
understand
orld2
build
model
world
build
model
consist
simple
parts
parts
ﬁnal
automata
maximum
three
states
small
automata
exists
possibility
ﬁnd
brutal
force
creative
approach
bigger
automata
possibility
due
combinatory
explosion
automate
describe
position
eye
fol-
lowing
one
three
states
automate
correspond
left
middle
right
column
board
change
state
occurs
new
game/
victory
loss
game
game
new
game
figure
automate
makes
move
left
right
moves
change
state
automate
ﬂash
stands
bad
move
means
try
play
left
left
column
lamp
bad
move
ﬂash
actually
peculiarity
automate
allow
ﬁnd
actually
huge
number
ﬁnal
automata
three
states
one
special
connected
rule
automate
ﬁrst
state
plays
left
result
bad
move
two
states
move
left
every
time
correct
course
automate
fundamental
understanding
orld2
gives
information
column
eye
analogicaly
ﬁnd
automate
say
row
eye
two
automata
together
give
co-ordinates
eye
also
analogicaly
ﬁnd
automate
two
states
give
information
whether
game
play
new
game
command
interesting
automate
change
state
due
lamp
status
one
lamps
victory
loss
ﬂash
order
begin
understand
rules
play
without
bad
moves
need
easy
rules
like
sees
cross
plays
put
cross
result
bad
move
simple
rules
like
represented
like
ﬁnal
automate
single
state
way
constant
rules
deterministic
automata
described
rules
orld2
start
playing
correctly
without
bad
moves
anyway
enough
order
understand
world
cope
well
purpose
need
idea
situation
board
game
status
unfortunately
possible
situations
board
much
power
course
situations
really
possible
much
anyway
impossible
ﬁnd
automate
many
states
brutal
force
describe
situation
board
diﬀerent
way
put
empty
put
game
new
game
figure
automata
introduce
special
undeterministic
ﬁnal
automate
second
level
change
states
depending
condition
automata
ﬁrst
level
automata
use
automata
actually
build
new
automata
one
every
possible
co-ordinates
eye
condition
true
automate
state
automate
state
condition
game
true
automate
state
game
peculiarity
automate
allow
ﬁnd
fact
automate
state
cross
condition
true
sees
cross
peculiarity
also
help
determine
state
undeterministic
automate
understand
orld2
fact
puts
cross
tom
answer
immediately
putting
board
actually
need
also
rule
tom
put
one
response
describe
rule
need
ﬁrst
order
formula
look
something
like
appear
appear
formula
read
follows
every
moment
appears
cell
cell
cell.
univer-
sum
formula
set
moments
natural
numbers
plus
set
cells
automata
need
one
predicate
iso
true
automate
state
moment
ac-
cept
appear
formula
iso
iso
prev
function
prev
gives
previous
moment
moment
formula
start
understand
game
needs
also
understand
win
lose
needs
concept
line
diagonal
board
model
orld2
start
planing
future
world
plan
next
move
use
algorithm
min-max
like
programs
play
tick-tack-toe
paper
gives
idea
make
program
cope
successfully
tick-tack-toe
world
without
knowing
apriory
any-
thing
world
program
far
references
dobrev
strawberry
prolog
http
//www.dobrev.com
dobrev
project
http
//www.dobrev.com/ai
dobrev
magazine
bulgaria
november
2000
dobrev
cope
arbitrary
world
magazine
bulgaria
february
2001
dobrev
deﬁnition
artiﬁcial
intelligence
mathematica
balkanica
new
series
vol
2005
fasc
1-2
67-74
turing
intelligent
machinery
1948
report
national
physical
laboratory
machine
intelligence
eds
meltzer
michie
1969
turing
computing
machinery
intelligence
1950
mind
433-460
turing
machine
think
1956
volume
world
mathematics
james
newman
2099-2123
simon
schuster
