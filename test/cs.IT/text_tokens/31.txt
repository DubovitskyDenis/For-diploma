ieee
transact
commun
gener
piggyback
code
distribut
storag
system
shuai
qin
senior
member
ieee
zulin
member
ieee
xuesen
laboratori
space
technolog
china
academi
space
technolog
beij
china
electron
inform
engin
beihang
univers
beij
china
email
yuanshuai
wzulin
abstract
paper
gener
piggyback
construct
distribut
storag
system
consid
variou
protect
instanc
piggyback
instanc
analysi
demonstr
proport
protect
instanc
determin
averag
repair
bandwidth
systemat
node
optim
proport
protect
instanc
repair
ratio
gener
piggyback
code
approach
zero
instead
number
pariti
check
node
tend
inﬁniti
furthermor
comput
complex
repair
singl
systemat
node
cost
gener
piggyback
code
le
exist
piggyback
design
part
paper
accept
ieee
global
commun
confer
ieee
globecom
correspond
author
huang
octob
draft
ieee
transact
commun
index
term
piggyback
distribut
storag
system
md
node
repair
introduct
nowaday
distribut
storag
system
ds
increasingli
employ
network
applic
data
ds
deploy
multipl
storag
devic
howev
discret
devic
prone
failur
malfunct
mainten
order
ensur
reliabl
store
data
even
occurr
node
unavail
ds
suppos
introduc
redund
resist
storag
node
failur
replic
simplest
redund
fashion
adopt
improv
reliabl
mani
ds
googl
file
system
hadoop
distribut
file
system
hdf
rapid
growth
amount
storag
data
erasur
code
becom
better
choic
ds
compar
replic
abl
provid
order
magnitud
reliabl
increas
storag
resourc
consumpt
result
sever
system
oceanstor
total
recal
window
azur
storag
googl
colossu
employ
erasur
code
techniqu
improv
storag
efﬁcienc
maximum
distanc
separ
md
code
one
kind
erasur
code
introduc
mani
ds
optim
storag
efﬁcienc
md
properti
use
recov
miss
data
ds
consid
ds
deploy
md
code
one
node
storag
system
fail
data
store
node
requir
reconstruct
miss
data
failur
node
time
amount
store
data
need
recov
miss
data
thu
usag
network
disk
signiﬁcantli
high
repair
efﬁcienc
low
address
repair
issu
mani
code
construct
reduc
transmiss
data
repair
failur
node
statement
three
type
node
repair
exact
repair
function
repair
exact
repair
systemat
part
howev
exact
repair
consid
practic
octob
draft
ieee
transact
commun
ds
dimaki
deﬁn
amount
transmiss
data
repair
one
singl
fail
node
repair
bandwidth
author
deriv
optim
tradeoff
storag
repair
bandwidth
theoret
bound
propos
regener
code
lie
tradeoff
curv
exist
construct
regener
code
studi
howev
optim
tradeoff
provid
regener
code
deriv
function
repair
almost
interior
point
tradeoff
achiev
exact
repair
md
array
code
anoth
import
class
erasur
code
use
dd
advantag
simpl
encod
decod
procedur
easili
implement
hardwar
devic
mani
design
md
array
code
evenodd
rdp
star
zigzag
code
present
storag
commun
applic
howev
repair
bandwidth
md
array
code
achiev
theoret
bound
rashmi
propos
new
kind
distribut
storag
code
call
piggyback
code
reduc
data
amount
read
download
node
repair
key
idea
piggyback
code
take
sever
instanc
exist
base
code
attach
linear
combin
symbol
protect
instanc
instanc
henc
miss
symbol
protect
instanc
abl
recov
solv
linear
equat
instead
md
decod
piggyback
simpl
use
construct
improv
repair
efﬁcienc
miss
node
sever
design
piggyback
code
present
design
abl
save
repair
bandwidth
one
fail
node
averag
facebook
warehous
cluster
new
hadoop
distribut
file
system
hdf
employ
piggyback
code
improv
repair
efﬁcienc
although
piggyback
code
practic
easi
implement
reduct
repair
bandwidth
propos
piggyback
design
still
gap
theoret
bound
regener
code
rashmi
shah
ramchandran
gave
three
speciﬁc
piggyback
octob
draft
ieee
transact
commun
construct
second
one
repres
efﬁcient
construct
term
repair
bandwidth
descript
show
code
abl
save
repair
bandwidth
paper
investig
mechan
reduct
repair
bandwidth
use
piggyback
code
recoveri
method
systemat
symbol
distinguish
instanc
piggyback
code
protect
stripe
stripe
analysi
lower
bound
repair
bandwidth
code
impli
proport
protect
instanc
determin
repair
efﬁcienc
piggyback
construct
paper
ﬁrstli
present
gener
piggyback
design
variou
protect
protect
stripe
order
obtain
variou
proport
protect
stripe
second
lower
bound
upper
bound
repair
bandwidth
gener
piggyback
code
introduc
analysi
two
bound
indic
optim
proport
protect
stripe
repair
ratio
deﬁn
averag
repair
bandwidth
fraction
amount
origin
messag
gener
piggyback
code
approach
zero
instead
number
pariti
check
node
tend
inﬁniti
closer
minimum
storag
regener
msr
code
theoret
lower
bound
last
comput
complex
repair
singl
fail
systemat
node
analyz
result
show
gener
piggyback
code
abl
provid
efﬁcient
repair
littl
complex
overhead
remaind
paper
organ
follow
section
brieﬂi
introduc
back
framework
code
section
iii
perform
analysi
repair
efﬁcienc
code
gener
piggyback
code
present
section
final
conclus
given
section
maximum
distanc
separ
code
background
consid
linear
block
code
code
length
dimens
repres
minimum
ham
distanc
code
call
md
code
minimum
octob
draft
ieee
transact
commun
ham
distanc
meet
singleton
bound
md
code
import
class
linear
block
code
given
paramet
minimum
distanc
reach
maximum
possibl
valu
thu
md
code
abl
correct
mani
erasur
given
md
code
extens
appli
mani
ds
storag
system
initi
origin
messag
divid
inform
packet
subsequ
packet
encod
packet
store
node
respect
md
properti
messag
node
could
reconstruct
origin
messag
thu
system
abl
toler
failur
storag
node
piggyback
framework
subsect
introduc
piggyback
framework
basi
ing
piggyback
code
piggyback
framework
guarante
ds
abl
employ
piggyback
code
without
extra
cost
storag
moreov
decod
properti
code
adopt
origin
ds
minimum
distanc
md
properti
ruin
piggyback
reconstruct
gener
piggyback
framework
oper
multipl
instanc
exist
base
code
add
sever
design
function
data
instanc
onto
instanc
base
code
piggyback
framework
arbitrari
fact
attract
featur
practic
piggyback
framework
ds
enjoy
repair
bandwidth
reduct
small
modiﬁc
base
exist
code
consid
linear
block
code
repres
encod
function
suppos
origin
messag
encod
symbol
system
use
base
code
piggyback
framework
instanc
illustr
octob
draft
ieee
transact
commun
stripe
stripe
stripe
node
node
node
stripe
fig
piggyback
framework
shown
row
correspond
storag
node
column
call
stripe
independ
origin
messag
piggyback
function
import
consider
piggyback
function
ad
stripe
linear
combin
origin
messag
stripe
principl
guarante
stripe
piggyback
framework
decod
recurs
process
stripe
piggyback
function
ad
origin
messag
directli
recov
use
decod
procedur
stripe
decod
easi
comput
ad
piggyback
function
subtract
store
symbol
decod
similar
way
decod
procedur
stripe
ﬁnish
avail
piggyback
function
base
code
stripe
obtain
subtract
piggyback
function
recov
statement
symbol
store
one
node
independ
sometim
invert
linear
transform
perform
simplifi
comput
transform
still
retain
decod
properti
piggyback
framework
code
piggyback
framework
describ
rashmi
present
three
design
piggyback
code
differ
consider
second
design
octob
draft
ieee
transact
commun
construct
purpos
pursu
high
efﬁcienc
repair
statement
code
save
repair
bandwidth
systemat
node
sake
simpl
descript
md
code
systemat
form
chosen
base
code
denot
number
pariti
check
node
code
consist
stanc
base
code
repres
associ
origin
messag
vector
length
stripe
shown
follow
form
node
node
node
node
encod
vector
correspond
pariti
check
symbol
base
code
piggyback
function
code
linear
combin
systemat
symbol
ﬁrst
stripe
ad
last
pariti
check
symbol
last
stripe
construct
piggyback
function
taken
three
step
evenli
possibl
without
loss
gener
suppos
multipl
deﬁn
three
variabl
follow
first
systemat
node
split
node
set
henc
ﬁrst
node
set
size
remain
size
octob
draft
ieee
transact
commun
ˆvi
ivi
node
piggyback
function
ivi
node
invert
linear
transform
fig
store
symbol
piggyback
node
second
deﬁn
two
set
vector
length
ˆvi
ˆvi
introduc
select
vector
ˆvi
segment
select
vector
deﬁn
follow
separ
tupl
vector
mjpi
correspond
systemat
node
therefor
diagon
matrix
size
diagon
posit
final
add
piggyback
function
pariti
check
symbol
last
node
henc
node
follow
form
shown
invert
linear
transform
introduc
reduc
complex
ˆvi
node
repair
final
symbol
node
illustr
repair
bandwidth
code
use
repair
ratio
repres
measur
repair
efﬁcienc
distribut
storag
code
repair
ratio
deﬁn
averag
amount
transfer
data
need
repair
one
octob
draft
ieee
transact
commun
failur
node
fraction
origin
messag
subsect
recal
repair
procedur
one
systemat
node
code
repair
ratio
γsi
comput
consid
ds
deploy
code
sake
simpl
descript
repres
ﬁrst
stripe
protect
stripe
whose
systemat
symbol
involv
piggyback
function
deﬁn
protect
symbol
meanwhil
last
stripe
repres
stripe
whose
systemat
symbol
name
symbol
systemat
node
fail
repair
procedur
node
recov
miss
protect
symbol
repair
procedur
describ
algorithm
miss
symbol
assum
node
belong
one
node
set
describ
algorithm
repair
algorithm
code
recov
miss
symbol
base
code
code
systemat
md
form
accord
md
properti
directli
recov
get
piggyback
function
involv
miss
protect
system
statement
piggyback
function
contain
piggyback
function
linear
combin
protect
symbol
download
pariti
check
symbol
contain
piggyback
function
subtract
item
left
piggyback
function
involv
recov
miss
protect
symbol
includ
surviv
protect
symbol
also
involv
piggyback
function
obtain
step
download
surviv
symbol
subtract
piggyback
function
reconstruct
solv
left
linear
combin
octob
draft
ieee
transact
commun
algorithm
symbol
need
download
step
symbol
need
step
step
size
number
download
symbol
otherwis
size
symbol
download
denot
averag
repair
bandwidth
one
systemat
node
bsi
number
systemat
node
node
set
size
number
systemat
node
node
set
size
thu
bsi
tth
thu
repair
ratio
γsi
γsi
bsi
tth
iii
effici
analysi
code
section
analysi
repair
efﬁcienc
perform
introduc
notat
ratio
measur
repair
efﬁcienc
one
stripe
repair
bandwidth
systemat
symbol
amount
origin
messag
stripe
consid
piggyback
code
stripe
assum
ratio
stripe
node
piggyback
code
γsi
follow
form
denot
proport
stripe
thu
repair
ratio
systemat
octob
γsi
piηi
draft
ieee
transact
commun
recal
code
describ
section
repair
procedur
deal
miss
protect
symbol
two
differ
measur
md
decod
adopt
recoveri
symbol
amount
download
repair
one
miss
symbol
symbol
regard
miss
protect
symbol
solv
linear
combin
employ
averag
bandwidth
depend
size
node
set
contain
failur
node
denot
ηnp
ratio
protect
stripe
respect
amount
origin
messag
one
stripe
equal
symbol
store
systemat
node
henc
ηnp
although
approxim
valu
given
equat
obviou
ηnp
repair
procedur
protect
stripe
requir
le
download
symbol
compar
protect
stripe
mechan
reduct
repair
bandwidth
use
piggyback
code
remaind
section
explor
critic
factor
inﬂuenc
repair
efﬁcienc
analysi
γsi
proport
stripe
rewrit
γsi
repres
proport
protect
stripe
thu
form
equat
γsi
ηnp
ηnp
mean
tell
nonneg
integ
satisfi
follow
inequ
inequ
quadrat
arithmet
octob
draft
abl
ieee
transact
commun
thu
tth
equal
multipl
case
γsi
reach
lower
bound
min
γsi
min
γsi
accord
equat
γsi
approach
number
pariti
check
node
tend
inﬁnit
code
abl
save
repair
bandwidth
ds
whose
paramet
given
order
improv
repair
efﬁcienc
structur
piggyback
design
suppos
modiﬁ
analysi
protect
ratio
smaller
ηnp
impli
repair
efﬁcienc
piggyback
code
may
improv
increas
accord
equat
actual
larger
mean
protect
symbol
involv
one
piggyback
function
lead
reduct
therefor
possibl
improv
repair
efﬁcienc
piggyback
code
optim
proport
protect
stripe
gener
piggyback
code
section
present
gener
construct
contain
variou
protect
stripe
analysi
perform
clarifi
relationship
repair
ratio
proport
protect
stripe
result
show
propos
gener
piggyback
code
abl
provid
efﬁcient
node
repair
optim
repair
ratio
γsi
gener
piggyback
code
approach
zero
number
pariti
check
node
tend
inﬁniti
octob
draft
ieee
transact
commun
node
node
node
node
node
fig
instanc
base
code
code
design
similarli
choos
systemat
md
code
base
code
gener
piggyback
code
pariti
check
number
two
paramet
introduc
repres
number
protect
piggyback
stripe
respect
figur
depict
instanc
accord
construct
principl
piggyback
framework
piggyback
function
ad
stripe
involv
origin
messag
stripe
sake
simpl
analysi
add
piggyback
function
pariti
check
symbol
stripe
redeﬁn
stripe
piggyback
stripe
illustr
symbol
store
stripe
divid
region
region
contain
systemat
symbol
protect
stripe
region
contain
systemat
symbol
ﬁrst
pariti
check
symbol
piggyback
stripe
region
contain
pariti
check
symbol
protect
stripe
region
contain
last
pariti
check
symbol
piggyback
stripe
systemat
node
failur
happen
repair
procedur
suppos
regener
octob
draft
ieee
transact
commun
miss
symbol
region
similar
code
systemat
symbol
region
accord
md
properti
miss
symbol
one
row
region
could
recov
surviv
symbol
row
systemat
symbol
region
piggyback
function
construct
protect
piggyback
function
suppos
embed
region
size
region
piggyback
function
design
noteworthi
fact
fail
protect
symbol
one
row
region
simultan
recov
solv
set
linear
combin
order
guarante
enough
piggyback
function
simultan
recov
miss
symbol
region
follow
inequ
must
satisﬁ
choos
paramet
remaind
subsect
method
construct
piggyback
function
illustr
follow
construct
empti
piggyback
array
column
piggyback
array
correspond
one
piggyback
function
fill
protect
symbol
region
piggyback
array
protect
symbol
region
form
array
shown
step
take
symbol
rowwis
array
ﬁll
piggyback
array
obvious
divis
last
row
piggyback
array
would
full
obtain
piggyback
function
add
region
protect
symbol
alloc
piggyback
array
sum
symbol
column
thu
piggyback
function
obtain
ad
region
arbitrari
order
remark
piggyback
function
summat
protect
symbol
octob
draft
ieee
transact
commun
result
recoveri
miss
protect
symbol
could
simpl
exampl
present
illustr
partit
method
repair
procedur
exampl
consid
systemat
md
code
base
code
set
denot
length
input
messag
vector
thu
origin
storag
array
protect
symbol
region
fill
piggyback
array
sum
symbol
column
achiev
six
piggyback
function
final
gener
piggyback
code
construct
follow
octob
draft
ieee
transact
commun
analysi
repair
bandwidth
recal
construct
piggyback
function
divid
systemat
symbol
partit
piggyback
function
uneven
deﬁn
size
piggyback
function
number
contain
systemat
symbol
region
without
loss
gener
assum
size
denot
obvious
satisfi
suppos
systemat
node
fail
remain
symbol
store
region
except
node
need
reconstruct
md
properti
amount
transmit
step
symbol
region
pariti
check
symbol
contain
piggyback
function
requir
recov
miss
protect
symbol
moreov
compon
along
subtract
download
pariti
check
symbol
howev
left
piggyback
function
still
involv
protect
symbol
besid
henc
symbol
region
need
assum
size
piggyback
function
ni
download
amount
systemat
symbol
region
step
ni
deriv
total
bandwidth
repair
systemat
node
symbol
region
octob
draft
ieee
transact
commun
need
download
time
consid
pariti
check
symbol
store
region
suppos
size
piggyback
function
embed
pariti
check
symbol
repair
procedur
pariti
check
symbol
need
download
time
meanwhil
involv
systemat
symbol
region
need
download
time
therefor
total
repair
bandwidth
systemat
node
averag
repair
ratio
γsi
γsi
rewrit
equat
γsi
without
loss
gener
assum
divid
thu
piggyback
function
size
rest
one
size
γsi
go
γsi
ds
paramet
base
code
given
thu
γsi
vari
differ
valu
order
explor
relationship
γsi
proport
protect
octob
draft
ieee
transact
commun
low
low
low
low
fig
lower
upper
bound
variou
instanc
deriv
follow
lower
upper
bound
γsi
γsi
γsi
rewrit
lower
upper
bound
function
γlow
γup
γlow
γup
exampl
assum
code
rate
base
code
variou
figur
show
curv
γlow
γup
illustr
lower
bound
γlow
upper
bound
γup
close
moreov
reach
extrem
point
optim
impli
gener
piggyback
code
obtain
optimum
γsi
appropri
paramet
octob
draft
ieee
transact
commun
analyz
optimum
condit
γsi
deriv
γlow
γup
respect
list
follow
let
γup
follow
equal
zero
work
minimum
valu
γlow
min
γlow
min
γup
result
indic
min
γlow
determin
number
pariti
check
node
min
γup
determin
howev
high
code
rate
min
γup
dominantli
determin
min
γup
correspond
close
min
γlow
word
exist
aliz
piggyback
code
whose
repair
ratio
close
lower
bound
figur
show
curv
min
γlow
min
γup
impli
min
γsi
min
γlow
end
subsect
perform
asymptot
analysi
min
γsi
min
γsi
compar
repair
ratio
minimum
storag
regener
msr
code
limit
min
γsi
min
γsi
approach
inﬁniti
lim
lim
min
γsi
min
γsi
lim
lim
describ
msr
code
correspond
best
storag
efﬁcienc
one
two
import
class
regener
code
repair
bandwidth
one
failur
octob
draft
ieee
transact
commun
min
low
min
min
min
fig
minimum
valu
γsi
γsi
node
repres
size
origin
messag
denot
number
access
surviv
node
dimens
msr
code
sake
simpl
comparison
set
code
rate
msr
code
provid
highest
repair
efﬁcienc
thu
curv
min
γsi
min
γsi
shown
show
min
γsi
approach
zero
instead
number
pariti
check
node
tend
inﬁniti
result
compar
code
gener
piggyback
code
abl
provid
efﬁcient
node
repair
le
bandwidth
moreov
min
γsi
closer
theoret
lower
bound
repair
ratio
tabl
compar
repair
efﬁcienc
code
gener
piggyback
code
variou
code
paramet
illustr
increas
number
pariti
check
node
gener
piggyback
code
reach
smaller
repair
bandwidth
octob
draft
ieee
transact
commun
sy
sy
min
min
γmsr
fig
lower
bound
averag
repair
bandwidth
tabl
effici
comparison
differ
explicit
code
code
gener
piggyback
code
stripe
γsi
stripe
γsi
analysi
decod
complex
subsect
complex
node
repair
procedur
gener
piggyback
code
analyz
ﬁrst
comparison
code
perform
shown
comput
complex
repair
singl
systemat
node
cost
gener
piggyback
code
much
le
code
statement
piggyback
code
adopt
two
kind
calcul
octob
draft
ieee
transact
commun
repair
fail
node
md
decod
use
recoveri
miss
symbol
piggyback
stripe
solv
linear
combin
employ
struct
miss
symbol
protect
stripe
recal
gener
piggyback
code
protect
stripe
piggyback
stripe
repair
procedur
systemat
node
describ
order
recov
miss
symbol
piggyback
stripe
symbol
requir
denot
vector
represent
work
equat
kpj
henc
md
decod
recoveri
one
miss
symbol
piggyback
stripe
cost
multipl
addit
consid
recoveri
miss
symbol
protect
stripe
accord
descript
denot
piggyback
function
involv
togeth
protect
symbol
order
reconstruct
region
store
symbol
contain
need
surviv
protect
symbol
also
requir
henc
ﬁgure
follow
comput
pariti
check
symbol
step
cost
multipl
addit
subtract
pariti
check
symbol
thu
addit
need
subtract
surviv
protect
symbol
form
left
thu
addit
requir
actual
repres
size
piggyback
function
equal
therefor
solv
linear
combin
one
miss
protect
symbol
cost
multipl
addit
averag
octob
draft
ieee
transact
commun
tabl
comput
complex
node
repair
multipl
addit
md
decod
solv
linear
combin
comput
complex
md
decod
solv
linear
combin
list
tabl
accord
analysi
solv
linear
combin
introduc
ing
code
reduc
repair
bandwidth
partial
miss
symbol
code
miss
protect
symbol
need
simultan
recov
solv
group
linear
function
result
perform
gaussian
elimin
howev
gener
piggyback
code
piggyback
function
simpl
summat
protect
symbol
compar
calcul
md
decod
solv
linear
combin
cost
addit
thu
gener
piggyback
framework
abl
provid
high
repair
efﬁcienc
signiﬁcantli
reduc
repair
bandwidth
singl
fail
systemat
node
low
comput
complex
conclus
discuss
paper
present
gener
piggyback
construct
variou
protect
instanc
piggyback
instanc
compar
previou
design
propos
gener
gyback
code
save
repair
bandwidth
optim
proport
protect
instanc
number
pariti
check
node
tend
inﬁniti
averag
repair
bandwidth
fraction
total
messag
approach
zero
moreov
complex
analysi
demonstr
gener
piggyback
code
abl
efﬁcient
repair
fail
node
reason
octob
draft
ieee
transact
commun
complex
overhead
fact
look
piggyback
function
view
code
back
code
perfect
encount
code
small
minimum
ham
distanc
code
larg
minimum
ham
distanc
repair
systemat
symbol
piggyback
stripe
reli
base
code
stripe
base
code
strong
capabl
due
larg
minimum
distanc
howev
result
strong
correl
among
symbol
thu
decod
good
code
request
larg
amount
data
access
repair
protect
stripe
piggyback
function
linear
combin
protect
systemat
symbol
word
symbol
togeth
piggyback
function
consid
linear
code
small
minimum
distanc
sinc
bad
code
weak
correl
among
symbol
decod
request
small
amount
data
access
acknowledg
sincer
thank
shu
lin
zhiy
wang
construct
suggest
paper
receiv
fund
nsaf
grant
nation
natur
scienc
foundat
china
grant
also
sponsor
laboratori
independ
innov
project
qian
xuesen
laboratori
space
technolog
refer
ghemawat
gobioff
leung
googl
ﬁle
system
proc
acm
sigop
oper
system
review
vol
borthakur
hdf
architectur
guid
onlin
avail
http
weatherspoon
kubiatowicz
erasur
code
replic
quantit
comparison
proc
system
iptp
rhea
eaton
geel
weatherspoon
zhao
kubiatowicz
pond
oceanstor
prototyp
proc
usenix
conf
file
storag
technolog
fast
bhagwan
tati
cheng
savag
voelker
total
recal
system
support
autom
avail
manag
proc
conf
network
system
design
implement
nsdi
octob
draft
ieee
transact
commun
calder
wang
ogu
nilakantan
skjolsvold
mckelvi
srivastav
simitci
window
azur
storag
highli
avail
cloud
storag
servic
strong
consist
proc
acm
symposium
oper
system
principl
colossu
onlin
avail
http
dimaki
ramchandran
suh
survey
network
code
distribut
storag
proceed
ieee
vol
dimaki
godfrey
wainwright
ramchandran
network
code
distribut
storag
system
ieee
tran
inf
theori
vol
cullina
dimaki
search
minimum
storag
regener
code
proc
annu
allerton
conf
control
rashmi
shah
kumar
ramchandran
explicit
construct
optim
exact
regener
code
distribut
storag
proc
annu
allerton
conf
control
suh
ramchandran
md
code
distribut
storag
use
interfer
align
proc
ieee
int
symp
inf
theori
rashmi
shah
kumar
optim
code
distribut
storag
msr
mbr
point
via
construct
ieee
tran
inf
theori
vol
tang
paramp
framework
construct
minim
storag
regener
code
optim
properti
ieee
tran
inf
theori
vol
shah
rashmi
kumar
kannan
distribut
storag
code
nonachiev
interior
point
tradeoff
ieee
tran
inf
theori
vol
blaum
bradi
bruck
menon
evenodd
efﬁcient
scheme
toler
doubl
disk
failur
raid
architectur
ieee
tran
comput
vol
bohossian
bruck
wagner
md
code
factor
complet
graph
ieee
tran
inf
theori
vol
bruck
md
array
code
optim
encod
ieee
tran
inf
theori
vol
corbett
english
goel
grcanac
kleiman
leong
sankar
pariti
doubl
disk
failur
correct
proc
usenix
confer
file
storag
technolog
fast
huang
star
efﬁcient
code
scheme
correct
tripl
storag
node
failur
ieee
tran
comput
vol
tamo
wang
bruck
zigzag
code
md
array
code
optim
rebuild
ieee
tran
inf
theori
vol
octob
draft
ieee
transact
commun
rashmi
shah
ramchandran
piggyback
design
framework
distribut
storag
code
proc
ieee
int
symp
inf
theori
rashmi
shah
ramchandran
piggyback
design
framework
distribut
storag
code
onlin
avail
http
rashmi
shah
dikang
hairong
dhruba
kannan
solut
network
challeng
data
recoveri
distribut
storag
system
studi
facebookwarehous
cluster
present
part
usenix
workshop
hot
topic
storag
file
system
yang
tang
systemat
piggyback
design
minimum
storag
regener
code
ieee
tran
inf
theori
vol
octob
draft
