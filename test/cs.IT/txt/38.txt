correlation
boolean
functions
sequences
random
variables
farhad
shirani
chaharsooghi
electrical
engineering
computer
science
university
michigan
ann
arbor
michigan
48105
email
fshirani
umich.edu
sandeep
pradhan
electrical
engineering
computer
science
university
michigan
ann
arbor
michigan
48105
email
pradhanv
umich.edu
abstract—in
paper
establish
new
inequality
tying
together
eﬀective
length
maximum
correlation
outputs
arbitrary
pair
boolean
functions
operate
two
sequences
correlated
random
variables
derive
new
upper-bound
correlation
outputs
functions
upper-bound
useful
various
disciplines
deal
common-information
build
upon
witsenhausen
bound
maximum-correlation
previous
upper-bound
take
eﬀective
length
boolean
functions
account
one
possible
application
new
bound
characterize
communication-cooperation
tradeoﬀ
multi-terminal
communications
problem
lower-
bounds
eﬀective
length
boolean
functions
due
rate-distortion
constraints
problem
well
lower
bounds
output
correlation
diﬀerent
nodes
due
multi-terminal
nature
problem
introduction
fundamental
problem
broad
theoretical
practical
interest
characterize
maximum
correlation
outputs
pair
functions
random
sequences
consider
two
distributed
agents
shown
figure
pair
correlated
discrete
memoryless
sources
dms
fed
two
agents
agents
make
binary
decision
goal
problem
maximize
correlation
outputs
agents
subject
speciﬁc
constraints
decision
functions
study
setup
impact
variety
disciplines
instance
taking
agents
two
encoders
distributed
source
coding
problem
two
transmitters
interference
channel
problem
alice
bob
secret
key-generation
problem
two
agents
distributed
control
problem
special
case
problem
study
common-
information
generated
two
agents
example
consider
two
encoders
slepian-wolf
setup
let
independent
non-constant
binary
random
variables
encoder
observing
dms
encoder
observing
agree
value
probability
one
random
variable
called
observed
two
encoders
encoders
require
sum-
rate
equal
transmit
source
decoder
gives
reduction
rate
equal
fig
correlated
boolean
decision
functions
entropy
compared
transmission
sources
independent
point-to-point
channels
gain
performance
directly
related
entropy
desirable
maximize
entropy
encoders
authors
investigated
multi-letterization
increasing
showed
multi-
method
letterization
lead
increase
precisely
prove
following
statement
let
two
sequences
dmss
let
two
sequences
functions
converge
one
another
probability
normalized
entropies
less
equal
entropy
large
stronger
version
result
proved
witsenhausen
maximum
correlation
outputs
upper-
bounded
subject
following
restrictions
decision
functions
entropy
binary
output
ﬁxed
agents
cooperate
shown
maximum
correlation
achieved
users
output
single
element
string
without
processing
e.g
user
outputs
ﬁrst
element
corresponding
string
used
conclude
common-information
induced
multi-letterization
result
used
extensively
variety
areas
information
theory
security
control
many
problems
additional
constraints
set
admissible
decision
functions
example
one
consider
constraints
eﬀective
length
decision
functions
valid
assumption
instance
case
···
xny1
···
ynagent1agent2e
2f0
1gf
2f0
communication
systems
users
lower-bounds
eﬀective
lengths
due
rate-distortion
requirements
problem
paper
problem
additional
constraints
considered
new
upper-bound
correlation
outputs
arbitrary
pairs
boolean
functions
derived
bound
presented
function
dependency
spectrum
boolean
functions
done
several
steps
first
eﬀective
length
additive
boolean
function
deﬁned
use
method
similar
map
boolean
functions
set
real-valued
functions
using
tools
real
analysis
ﬁnd
additive
decomposition
functions
decomposition
components
well-
deﬁned
eﬀective
lengths
using
decomposition
ﬁnd
dependency
spectrum
boolean
function
de-
pendency
spectrum
generalization
eﬀective
length
deﬁned
non-additive
boolean
functions
lastly
use
dependency
spectrum
derive
new
upper-bound
rest
paper
organized
follows
section
presents
notation
used
paper
section
iii
develops
useful
mathematical
machinery
analyze
boolean
function
section
contains
main
result
paper
finally
section
concludes
paper
notation
section
introduce
notation
used
paper
represent
random
variables
capital
letters
sets
denoted
calligraphic
letters
particu-
larly
set
natural
numbers
real
numbers
shown
respectively
random
variables
n-length
vector
···
denoted
binary
string
···
written
vector
random
variables
···
cid:44
example
take
denoted
vector
denoted
x101
vector
x110
two
binary
strings
write
binary
string
deﬁne
cid:44
denotes
hamming
weight
lastly
vector
element-wise
complement
iii
dependency
spectrum
function
section
study
correlation
output
boolean
function
subsets
input
particularly
interested
answers
questions
strongly
ﬁrst
element
aﬀect
output
eﬀect
ampliﬁed
take
account
well
subset
random
variables
almost
determines
value
output
formulate
questions
mathematical
terms
ﬁnd
characterization
dependency
spectrum
boolean
function
dependency
spectrum
vector
captures
correlation
diﬀerent
subsets
input
elements
element
output
intermediate
step
deﬁne
eﬀective
length
additive
boolean
function
deﬁnition
boolean
function
i∈j
addition
deﬁned
cid:80
operator
binary
addition
eﬀective
length
deﬁned
cardinality
set
general
boolean
function
e.g
non-additive
ﬁnd
decomposition
set
functions
whose
eﬀective
length
well-deﬁned
first
provide
mapping
set
boolean
functions
set
real
functions
allows
use
tools
available
real
analysis
analyze
functions
fix
discrete
memoryless
source
boolean
function
deﬁned
let
real-valued
function
corresponding
represented
deﬁned
follows
1
otherwise
remark
note
zero
mean
variance
random
variable
ﬁnite
variance
probability
space
2xn
pxn
set
func-
tions
denoted
precisely
deﬁne
cid:44
2xn
pxn
separable
hilbert
space
measur-
able
functions
since
dms
isomorphy
relation
hx,1
hx,1
···
hx,1
hx,1
holds
indicates
tensor
product
example
let
n=1
hilbert
space
hx,1
space
measurable
functions
space
spanned
two
linearly
independent
functions
˜h1
˜h2
conclude
space
two-dimensional
remark
tensor
operation
real
multiplication
cid:44
let
i.e
basis
hx,1
basis
would
set
real
multiplications
basis
elements
example
gives
decomposition
space
hx,1
next
introduce
another
decomposition
hx,1
turns
useful
let
ix,1
subset
measurable
functions
mean
let
γx,1
set
constant
real
functions
argue
hx,1
ix,1
γx,1
gives
decomposition
hx,1
ix,1
γx,1
linear
sub-
spaces
hx,1
ix,1
null
space
linear
functional
takes
arbitrary
function
hx,1
expected
value
null
space
non-zero
linear
functional
hyper-space
hx,1
ix,1
one-dimensional
subspace
hx,1
remark
˜e1
ix,1
conclude
element
ix,1
written
c˜e1
γx,1
also
one
dimensional
spanned
function
hx,1
one
consider
arbitrary
element
write
˜f1
˜f2
˜f1
ix,1
˜f2
γx,1
replacing
hx,1
ix,1
γx,1
−
i=1hx,1
i=1
ix,1
γx,1
⊕i∈
0,1
gi1
gi2
···
gin
γx,1
ix,1
used
distributive
property
tensor
products
direct
sums
remark
equation
interpreted
follows
˜ei
˜ei
gi1
gi2
···
gin
˜ei
viewed
component
function
j|i
set
ﬁnd
decomposition
cid:80
sense
collection
˜ei|
cid:80
components
whose
eﬀective
length
order
clarify
notation
provide
following
example
example
let
binary
symmetric
source
let
binary
function
corresponding
real
function
cid:44
lagrange
interpolation
gives
x1x2−
given
decomposition
˜e1,1
˜e0,1
˜e1,0
˜e0,0
variances
functions
given
var
var
˜e0,1
var
˜e1,0
var
˜e1,1
ﬁnd
decomposition
cid:80
shall
see
next
section
variances
play
major
role
determining
correlation
preserving
properties
vector
whose
elements
include
variances
called
dependency
spectrum
perspective
eﬀective
length
function
variance
distributed
˜e0,1
˜e1,0
eﬀective
length
one
variance
˜e1,1
eﬀective
length
two
similar
examples
arbitrary
˜ei
˜ei
gi1
gi2
···
gin
characterize
˜ei
terms
products
basis
elements
using
following
result
linear
algebra
lemma
let
vector
spaces
ﬁeld
also
let
basis
dimension
element
⊗i∈
jn∈
jnv
j1⊗v
···⊗v
written
cid:80
j2∈
···
cid:80
j1∈
cid:80
1
since
take
values
set
ix,1
γx,1
one-dimensional
binary
source
deﬁne
single
element
set
basis
ix,1
also
cid:81
function
spans
γx,1
using
lemma
˜ei
it=1
interested
variance
˜ei
next
proposition
show
˜ei
uncorrelated
derive
expression
variance
˜ei
proposition
deﬁne
variance
˜ei
following
hold
˜ei
˜ej
cid:44
words
˜ei
uncorrelated
˜e2
proof
follows
direct
calculation
holds
next
ﬁnd
characterization
˜ei
independence
lemma
˜ei
exn|xi
˜e|xi
cid:80
˜ej
gives
unique
orthog-
onal
decomposition
hilbert
spaces
gi1
⊗gi2
···⊗
gin
proof
please
refer
appendix
following
example
clariﬁes
notation
used
lemma
example
consider
case
following
decomposition
hx,2
hx,2
ix,1
ix,1
ix,1
γx,1
γx,1
ix,1
γx,1
γx,1
let
arbitrary
function
hx,2
unique
decomposition
form
given
follows
˜e1,1
˜e1,0
˜e0,1
˜e0,0
˜e1,1
ex2|x1
˜e|x1
ex1|x2
˜e|x2
ex1
˜e1,0
ex2|x1
˜e|x1
ex1
˜e0,1
ex1|x2
˜e|x2
ex1
˜e0,0
ex1
straightforward
show
˜ei
belong
corresponding
subspaces
instance
˜e0,1
mean
function
i.e
constant
ex2
cid:0
˜e0,1
cid:1
˜e0,1
γx,1
ix,1
following
proposition
describes
properties
˜ei
derived
proof
lemma
proposition
following
hold
exn
˜ei
exn|xj
˜ei|xk
˜ei
exn
˜ei
˜ek
cid:44
exn|xk
˜ei|xk
lastly
derive
expression
exi
˜ej
cid:88
˜ei
decomposition
form
equation
variance
component
decomposition
given
following
recursive
formula
exi
cid:44
xn|xi
let
˜ej
cid:17
exi
exi
˜ej
exi
proof
exi
exi
exi
exi
cid:88


˜el|xi
˜ej
˜ei
varxi
˜ei
exi
˜e2
lemma
arbitrary
corresponding
real
function
let
cid:80
˜e|xi
cid:80
2
cid:16
exn|xi
˜e|xi
˜ej
exn|xi
cid:88

cid:88

cid:88

cid:88

exn|xi
˜e|xi
cid:88
cid:88
cid:16
cid:17
xn|xi
˜e|xi
cid:88
cid:16
cid:17
xn|xi
˜e|xi
cid:88
cid:16
cid:17
xn|xi
˜e|xi
cid:88
cid:17
cid:16
xn|xi
˜e|xi
cid:88
cid:88
cid:17
cid:16
xn|xi
˜e|xi
cid:88
cid:16
cid:17
xn|xi
˜e|xi
cid:88
cid:17
cid:16
xn|xi
˜e|xi
cid:88
xn|xi
˜e|xi
cid:88
xn|xi
˜e|xi
xn|xi
˜e|xi
cid:88

exi
cid:88
cid:17
cid:16
cid:88
cid:88
cid:88
cid:88
cid:88
exi
exn|xi
˜el|xi
˜ej
exi
exi
exj
˜e2
exi
exi
exi
exi
cid:88
cid:88
exi
exi
exi
exi
exj
˜e2
exj
˜e2
˜ej
˜ej
˜ej
˜el
˜ej
˜el
˜ej
exi
exi
exi
˜ej
exi
cid:88
exn|xi
˜el|xi
˜ej
exi
˜ej
˜ek
exi
˜e2

follows
proposition
follows
decomposition
equation
uses
linearity
expec-
tation
uses
proposition
holds
used
proposition
corollary
arbitrary
corresponding
real
function
decomposition
cid:80
let
variance
denoted
cid:80
˜ej
corollary
special
case
lemma
taken
ones
vector
following
provides
deﬁnition
dependency
spectrum
boolean
function
deﬁnition
dependency
spectrum
boolean
function
vector
variances
0,1
called
dependency
spectrum
next
section
use
dependency
spectrum
upper-bound
maximum
correlation
outputs
two
arbitrary
boolean
functions
correlation
preservation
arbitrary
functions
cid:80
cid:44
let
cid:80
proceed
presenting
main
result
paper
let
pair
dms
consider
two
arbitrary
boolean
functions
let
cid:44
give
decomposition
functions
deﬁned
previous
section
following
theorem
provides
upper-bound
probability
equality
theorem
let
cid:44
cid:44
following
bound
holds
cid:44
cid:88
cid:88
cid:115
cid:88
cid:115
cid:88
cid:115
cid:88
cid:115
cid:88
cip
cip
cid:44
variance
˜ei
real
function
corresponding
variance
˜fi
ﬁnally
cid:44
proof
please
refer
appendix
remark
decreasing
order
increase
cid:44
variance
dis-
tributed
˜ei
lower
i.e
operate
smaller
blocks
particularly
lower
bound
minimized
setting
˜ej
otherwise
1
recovers
result
derived
relation
dependency
spectrum
boolean
function
correlation
preserving
properties
used
variety
disciplines
example
communication
problems
cooperation
among
diﬀerent
nodes
network
requires
correlated
outputs
linked
dependency
spectrum
results
derived
hand
restrictions
dependency
spectrum
based
rate-distortion
requirements
better
performance
requires
larger
eﬀective
lengths
investigate
show
large
blocklength
single-letter
coding
strategies
used
networks
sub-optimal
various
problems
conclusion
derived
new
bound
maximum
correlation
boolean
functions
operating
pairs
sequences
random
variable
bound
presented
function
dependency
spectrum
functions
developed
new
mathematical
apparatus
analyzing
boolean
functions
provided
formulas
decomposing
boolean
function
additive
components
calculating
dependency
spectrum
functions
new
bound
wide
ranging
applications
security
control
information
theory
appendix
proof
lemma
proof
uniqueness
decomposition
follows
isomorphy
relation
stated
equation
prove
˜ei
given
lemma
indeed
decomposition
components
direct
sum
equivalently
show
cid:80
first
check
equality
cid:80
cid:88
˜et
exn|xt
˜e|xt
cid:88
˜ei
˜ei
gi1
gi2
···
gin
cid:88
length
vector
whose
elements
ones
˜ei
let
denote
˜et
˜ei
˜ei
˜ei
0,1
used
function
exn|xn
˜f|xn
holds
since
cid:44
remains
show
˜ei
gi1
gi2
···
gin
next
proposition
provides
means
verify
property
proposition
fix
deﬁne
cid:44
s|is
cid:44
s|is
element
gi1
gi2
···
gin
constant
mean
proof
deﬁnition
element
gi1
gi2
···
gin
tensor
product
let
cid:80
satisﬁes
conditions
proposition
conversely
show
function
satisfying
conditions
˜fj
˜fj
⊗···⊗g
assume
cid:88
˜fj|x∼ik
˜fi|x∼ik
cid:88
cid:88
exn|x∼ik
˜fj|x∼ik
cid:88
exn|x∼ik
exn|x∼ik
˜fj
jk=0
jk=0
j≥i
j≥i
˜fj
used
linearity
expectation
˜fj
···
last
two
equalities
use
fact
means
satisﬁes
properties
far
cid:88
j≥i
˜fj
assume
cid:48
cid:88
˜fj|x∼ik
cid:48
exn|x∼ik
cid:48
˜fj|x∼ik
cid:48
shown
cid:80
cid:88
˜fj
cid:88
cid:88
˜fj
exn|x∼ik
cid:48
cid:80
j≥i
cid:48
j≥i
cid:48
j≥i
i≥j≥i
˜fj
˜fi
assumption
˜fi
gi1
⊗gi2
···
gin
returning
original
problem
enough
show
˜ei
satisfy
conditions
proposition
prove
stronger
result
presented
next
proposition
proposition
following
hold
exn
˜ei
exn|xj
˜ei|xk
˜ei
exn
˜ei
˜ek
cid:44
exn|xk
˜ei|xk
proof
two
n-length
binary
vectors
write
set
equipped
well-founded
set
i.e
subset
least
one
minimal
element
following
presents
principle
noetherian
induction
well-founded
sets
proposition
principle
noetherian
induction
let
cid:52
well-founded
set
prove
property
true
elements
suﬃcient
prove
following
induction
basis
true
minimal
elements
induction
step
non-minimal
element
true
minimal
true
use
noetherian
induction
prove
result
let
jth
element
standard
basis
exn|x
˜e|x
smoothing
property
expectation
˜ei
exn
˜ei
exn
assume
exn
˜ej
exn|xi
˜e|xi
cid:88
exn
cid:88

exn
˜ej
cid:88
˜ej
exn
˜ei
exn
function
induction
˜ei
exn|xi
˜e|xi
cid:80
statement
also
proved
induction
exn|xi
˜e|xi
˜ek
also
function
let
deﬁned
kth
element
standard
basis
take
cid:48
cid:44
cid:48
exn
˜ei
˜ei
cid:48
exn
exn|x
˜e|x
exn|x
cid:48
˜e|x
cid:48
exn
exn|x
˜e|x
exn
exn|x
cid:48
˜e|x
cid:48
used
memoryless
property
source
results
smoothing
property
expectation
extend
argument
noetherian
induction
fix
cid:48
assume
exn
˜ej
˜ej
cid:48
cid:48
exn
˜e2
cid:48
exn
˜ei
˜ek
exn

exn|xi
˜e|xi
cid:88

cid:0
exn|xi
˜e|xi
exn|xk
˜e|xk
cid:1
cid:88
cid:88
cid:16
cid:17
˜ej
˜ej
cid:48
exn|xi
˜e|xi
exn
cid:48
exn
cid:88
cid:48
exn
˜ej
˜ej
cid:48
exn|xk
˜e|xk
cid:88
cid:16
cid:17
cid:48
˜ejexn|xk
˜e|xk
exn


˜ej
cid:48
second
third
terms
expression
simpliﬁed
follows
first
note
˜ei
exn|xi
˜e|xi
cid:88
˜ej
cid:88
˜ej
exn|xi
˜e|xi
j≤i
goal
simplify
exn
˜ejexn|xj
cid:48
˜e|xj
cid:48
proceed
considering
two
diﬀerent
cases
case
cid:2
cid:2
replacing
terms
original
equality
get
let
cid:88
exn
˜ejexn|xk
˜e|xk
exn
˜ej
cid:88
exn
˜ej
˜el
l≤k
l≤k
cid:88
l≤k
˜ej
arguments
cid:48
exn
exn
˜ei
˜ek
exn
cid:88
cid:48
exn
exn
˜e2
exn
˜e2
exn
˜e2
cid:17
cid:48
exn
˜e2
cid:48
˜ej
cid:48
exn|xi
˜e|xi
cid:16
cid:0
exn|xi
˜e|xi
exn|xk
˜e|xk
cid:1
cid:88
cid:88
cid:0
exn|xi
˜e|xi
exn|xk
˜e|xk
cid:1
cid:88
xn|xi∧k
|xi∧k
cid:88

cid:88
j≤i∧k
xn|xi∧k
|xi∧k
exn
cid:48
exn
˜e2
cid:48
cid:48
j≤i∧k
exn
˜e2
cid:48
exn
˜e2
exn
˜e2
˜ej
j≤i∧k

exn
exn
used
˜ei
uncorrelated
proved
xi∧k
exn
xi∧k
cid:0
exn|xi
˜e|xi
exn|xk
˜e|xk
cid:1
cid:88


cid:88

cid:88

cid:88
x|i−k|+
exn|xi
˜e|xi
xn|xi∧k
˜e|xi∧k
xi∧k
xn|xi∧k
|xi∧k
exn
x|i−k|+
xi∧k
x|k−i|+


x|k−i|+
exn|xk
˜e|xk
case
assume
cid:0
exn|xi
˜e|xi
exn|xk
˜e|xk
cid:1
cid:88
exn
˜ei
˜ek
exn
cid:48
exn
˜e2
cid:48
cid:48
exn
˜e2
xn|xi
˜e|xi
cid:88
cid:48
exn
˜e2
cid:88
cid:48
exn
exn
˜e2
cid:48
cid:88
cid:48
cid:88
cid:48
exn
˜e2
cid:88
exn
˜e2
j≤i
case
proof
similar
case
clearly
|i|
claim
holds
assume
true
|j|
take
˜ej
exn|xk
arbitrarily
ﬁrst
prove
claim
exn|xk
˜ei|xk
exn|xk
exn|xi
cid:88

cid:1
cid:88
cid:0
exn|xi
˜e|xi
|xk
exn|xk
˜e|xk
cid:88
cid:88
exn|xk
˜ej|xk
cid:88
cid:88
exn|xk−is
˜ei−is|xk−is

|xk
exn|xk
˜ej|xk
cid:88
˜ej
cid:88
cid:88
j≤i−it
exn|xk
˜ej|xk
exn|xk
˜ej|xk
j≤i−it
cid:44
cid:44
exn|xk
˜ej|xk
exn|xk
˜ei−is|xk
used
also
follows
uses
ﬁnally
uses
induction
assumption
extend
result
general
fix
assume
claim
true
i.e
exn|xk
˜exj|xk
exn|xi
˜e|xi
cid:88
cid:1
cid:88
˜ej|xk
exn|xk
˜ej|xk

exn|xk
˜ei|xk
exn|xk
cid:0
exn|xi
˜e|xi
|xk
exn|xk
˜e|xk
cid:88
exn|xk
˜ej
j≤k
j≤k
remark
second
condition
equivalent
con-
dition
proposition
fourth
condition
equivalent
proposition
using
propositions
conclude
˜ei
gi1⊗gi2⊗
···
gin
completes
proof
lemma
proof
theorem
proof
proof
involves
three
main
steps
first
bound
pearson
correlation
real-valued
func-
tions
second
step
relate
correlation
probability
two
functions
equal
derive
lower
bound
finally
third
step
use
lower
bound
proved
ﬁrst
two
steps
derive
upper
bound
step
remark
expectation
functions
pearson
correlation
given
goal
bound
value
exn
1−q
1−r
cid:88

cid:88
˜ei
0,1
˜fk

exn
exn
cid:88
cid:88
0,1
exn
˜ei
˜fk
0,1
0,1
used
remark
use
linearity
expectation
using
fact
˜ei
gi1
gi2
···
gin
lemma
cid:89
˜ei
˜et
˜fk
˜ft
replace
˜ei
˜fk
exn
˜ei
˜fk
exn
˜et
cidkexn
˜et
˜ft


˜fs
cid:89
ks=1
it=1
it=1
cid:89
ci


cid:89

cid:89

eyn
cid:89
cid:16
cid:89
exn
it=1
kt=1
it=1

cid:89
exn
˜et
it=1
kt=0
cidk
it=0
kt=1
˜et
˜ft
cid:17
cid:16
cid:17
cidk
nip
˜e2
it=1
cip
kt=1
cid:89
dk


cid:17

˜ft
cid:16
replace
values
cip
cid:88
2rq
cid:112
cid:88
cid:112
cid:112
cip
cid:88
cid:88
cid:112
cip
cip
hand
˜e2
cid:80
last
equality
follows
fact
˜ei
uncorrelated
proves
lower
bound
next
use
lower
bound
derive
upper
bound
step
upper-bound
derived
considering
function
complement
i.e
cid:44
case
corresponding
real
function
used
fact
pair
dms
independent
cid:44
holds
since
proposition
˜ei
˜fi
prove
lemma
used
proposition
lemma
let
two
arbitrary
zero-mean
real
valued
functions
proof
please
refer
using
equations
get
cip
cid:88
step
use
results
step
one
derive
bound
cid:44
deﬁne
cid:44
cid:44
cid:44
cid:44
exn
dqr
write
equation
terms
cid:44
cid:44
using
following
relations
solving
get
r
r
cid:80
exn
˜e˜h
−exn
cid:88
cid:115
cid:88
step
˜fi
using
method
previous
cip
cid:115
cid:88
cid:88
cid:44
hand
cid:44
cid:44
cid:44
cid:44
cid:88
cip
cip
cid:115
cid:88
cid:115
cid:88
cid:115
cid:88
cid:115
cid:88
cid:88
cid:44
cip
completes
proof
references
gacs
körner
common
information
far
less
mutual
information
problems
control
information
theory
vol
119–162
1972
witsenhausen
sequences
pair
dependent
random
vari-
ables
siam
journal
applied
mathematics
vol
100–113
1975
chaharsooghi
sahebi
pradhan
distributed
source
coding
absence
common
components
information
theory
proceedings
isit
2013
ieee
international
symposium
july
2013
1362–1366
bogdanov
mossel
extracting
common
random
bits
correlated
sources
ieee
transactions
information
theory
vol
6351–6355
oct
2011
csiszar
narayan
common
randomness
secret
key
gener-
ation
helper
ieee
transactions
information
theory
vol
344–366
mar
2000
mahajan
nayyar
teneketzis
identifying
tractable
de-
centralized
control
problems
basis
information
structure
2008
46th
annual
allerton
conference
communication
control
computing
sept
2008
1440–1449
reed
simon
methods
modern
mathematical
physics
functional
analysis
new
york
academic
press
inc.
ltd.
1972
shirani
heidari
pradhan
sub-optimality
single-
letter
coding
multi-letter
communications
arxiv.org
jan
2017
shirani
pradhan
correlation
boolean
functions
sequences
random
variables
arxiv.org
jan
2017
