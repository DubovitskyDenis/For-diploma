stochastic
joint
radio
computational
resource
management
multi-user
mobile-edge
computing
systems
yuyi
mao
jun
zhang
s.h
song
khaled
letaief
fellow
ieee
abstract
mobile-edge
computing
mec
recently
emerged
prominent
technology
liberate
mobile
devices
computationally
intensive
workloads
ofﬂoading
proximate
mec
server
make
ofﬂoading
effective
radio
computational
resources
need
dynamically
managed
cope
time-varying
computation
demands
wireless
fading
channels
paper
develop
online
joint
radio
computational
resource
management
algorithm
multi-user
mec
systems
objective
minimizing
long-term
average
weighted
sum
power
consumption
mobile
devices
mec
server
subject
task
buffer
stability
constraint
speciﬁcally
time
slot
optimal
cpu-cycle
frequencies
mobile
devices
obtained
closed
forms
optimal
transmit
power
bandwidth
allocation
computation
ofﬂoading
determined
gauss-
seidel
method
mec
server
optimal
frequencies
cpu
cores
optimal
mec
server
scheduling
decision
derived
closed
forms
besides
delay-improved
mechanism
proposed
reduce
execution
delay
rigorous
performance
analysis
conducted
proposed
algorithm
delay-improved
version
indicating
weighted
sum
power
consumption
execution
delay
obey
1/v
tradeoff
control
parameter
simulation
results
provided
validate
theoretical
analysis
demonstrate
impacts
various
parameters
index
terms
mobile-edge
computing
dynamic
voltage
frequency
scaling
radio
computational
resource
management
lyapunov
optimization
authors
department
electronic
computer
engineering
hong
kong
university
science
technology
clear
water
bay
kowloon
hong
kong
e-mail
ymaoac
eejzhang
eeshsong
eekhaled
ust.hk
khaled
letaief
also
hamad
bin
khalifa
university
doha
qatar
e-mail
kletaief
hbku.edu.qa
part
work
presented
ieee
global
communications
conference
globecom
washington
dec.
2016
introduction
increasing
popularity
smart
mobile
devices
driving
development
computation-
intensive
mobile
applications
advanced
features
e.g.
interactive
online
gaming
gesture
face
recognition
voice
control
well
modeling
poses
stringent
requirements
quality
computation
experience
easily
satisﬁed
mobile
devices
due
limited
resources
e.g.
processing
speed
memory
size
battery
energy
result
new
solutions
handle
explosive
computation
demands
ever-increasing
computation
quality
requirements
emerging
mobile-edge
computing
mec
promising
technology
release
tension
computation-intensive
applications
resource-limited
mobile
devices
different
conventional
cloud
computing
systems
rely
remote
public
clouds
induce
long
latency
due
data
exchange
mec
offers
computation
capability
within
radio
access
network
therefore
ofﬂoading
computation
tasks
mobile
devices
mec
servers
quality
computation
experience
including
energy
consumption
execution
latency
greatly
improved
related
works
computation
ofﬂoading
cloud
computing
systems
attracted
signiﬁcant
attention
computer
science
communications
research
communities
recent
years
order
pro-
long
battery
lifetime
improve
computation
performance
various
code
ofﬂoading
frameworks
e.g.
maui
thinkair
proposed
nevertheless
efﬁciency
computation
ofﬂoading
mec
highly
depends
wireless
channel
condition
compu-
tation
ofﬂoading
requires
effective
wireless
data
transmission
mobile
devices
mec
servers
therefore
computation
ofﬂoading
policies
take
wireless
channel
condition
consideration
extensively
studied
recently
tasks
strict
execution
deadline
local
execution
energy
consumption
minimized
adopting
dynamic
voltage
frequency
scaling
dvfs
techniques
energy
consumption
computation
ofﬂoading
optimized
via
data
transmission
scheduling
joint
optimization
communication
computational
resource
allocation
femto-cloud
computing
systems
proposed
cloud
server
formed
set
femto
access
points
study
extended
cloud
radio
access
networks
c-rans
mobile
cloud
computing
capability
besides
resource
allocation
policies
proposed
mec
systems
based
time
division
multiple
access
tdma
orthogonal
frequency-division
multiple
access
ofdma
game-theoretic
decentralized
computation
ofﬂoading
algorithms
proposed
multi-user
mec
systems
single-
multi-channel
wireless
environments
respectively
moreover
dynamic
computation
ofﬂoading
policies
developed
mec
systems
powered
energy
harvesting
wireless
power
transfer
applications
replacing/recharing
device
batteries
costly
difﬁcult
recently
novel
task
ofﬂoading
framework
based
network-assisted
device-to-device
d2d
communications
proposed
enables
resource
sharing
among
mobile
users
however
limitations
commonly
adopted
assumptions
typically
assumed
computation
tasks
strict
delay
requirements
new
task
generated
old
tasks
completed/abandoned
assumptions
make
computation
ofﬂoading
design
tractable
short-term
performance
e.g.
performance
executing
single
task
mobile
device
needs
considered
thus
associated
optimization
problems
typically
deterministic
nevertheless
may
impractical
applications
tolerate
certain
period
execution
latency
e.g.
multi-media
streaming
ﬁle
backup
types
applications
long-term
system
performance
relevant
stochastic
task
models
adopted
particular
coupling
among
randomly
arrived
tasks
ignored
stochastic
computation
ofﬂoading
policies
developed
order
minimize
long-term
average
energy
consumption
stochastic
control
algorithm
proposed
determines
ofﬂoaded
software
components
application
delay-optimal
stochastic
task
scheduling
policy
single-user
mec
systems
proposed
based
markov
decision
process
energy-delay
tradeoff
single-user
mec
systems
multi-core
mobile
device
heterogeneous
types
mobile
applications
investigated
respectively
mec
systems
multiple
devices
optimal
design
becomes
challenging
compared
single-user
mec
systems
computational
resource
task
execution
radio
resource
computation
ofﬂoading
shared
multiple
mobile
devices
words
optimal
system
operations
multi-user
mec
systems
temporally
correlated
due
random
computation
task
arrivals
also
spatially
coupled
due
competition
among
multiple
devices
moreover
freedom
parallel
local
remote
processing
makes
mobile
execution
strategy
computation
ofﬂoading
policy
operations
mec
server
interdependent
consequently
intelligent
joint
allocation
radio
computational
resource
considered
maximize
beneﬁts
mec
initial
investigation
multi-user
mec
systems
delay-tolerant
applications
conducted
however
focused
computational
resource
scheduling
failed
address
radio
resource
management
contributions
paper
investigate
stochastic
joint
radio
computational
resource
management
multi-user
mec
systems
major
contributions
summarized
follows
consider
general
mec
system
multiple
mobile
devices
physically
proximate
mec
server
frequency
division
multiple
access
fdma
mec
server
limited
computation
capability
generalizes
previous
work
mec
server
assumed
computationally
powerful
unlimited
computational
resources
average
weighted
sum
power
consumption
mobile
devices
mec
server
adopted
performance
metric
able
address
cost
power
consumption
different
nodes
mec
systems
available
radio
computational
resources
jointly
managed
optimize
mec
system
including
cpu-cycle
frequencies
mobile
server
cpus
transmit
power
bandwidth
allocation
computation
ofﬂoading
well
task
scheduling
decision
mec
server1
critical
highly
non-
trivial
design
consideration
multi-user
mec
systems
since
optimal
system
operations
temporally
spatially
correlated
due
stochastic
computation
task
arrivals
competition
among
multiple
devices
available
resources
respectively
average
weighted
sum
power
consumption
minimization
problem
subject
task
buffer
stability
constraint
formulated
assuming
causal
side
information
task
arrival
wireless
channel
processes
challenging
stochastic
optimization
problem
involves
large
amount
well
decision
variables
low-complexity
online
algorithm
proposed
based
lyapunov
optimization
time
slot
system
operation
determined
solving
deterministic
problem
cpu-cycle
frequencies
mec
server
scheduling
decision
obtained
closed
forms
transmit
power
bandwidth
allocation
obtained
efﬁcient
gauss-seidel
method
besides
delay-improved
mechanism
designed
proposed
algorithm
1in
conference
version
paper
cpu-cycle
frequencies
local
cpus
transmit
power
bandwidth
allocation
computation
ofﬂoading
optimized
since
mec
server
assumed
unlimited
computational
resources
besides
power
consumption
mec
server
viewed
constant
included
optimization
performance
analysis
conducted
proposed
algorithm
delay-improved
ver-
sion
shows
capability
achieving
asymptotic
optimality
also
explicitly
characterizes
tradeoff
weighted
sum
power
consumption
execution
delay
simulation
results
corroborate
theoretical
analysis
show
proposed
algorithms
able
balance
weighted
sum
power
consumption
execution
delay
performance
addition
impacts
various
parameters
revealed
demonstrate
necessity
joint
consideration
radio
computational
resource
management
multi-user
mec
systems
offer
valuable
guidelines
real
deployment
organization
organization
paper
follows
introduce
system
model
formulate
average
weighted
sum
power
consumption
minimization
problem
section
section
iii
respectively
online
joint
radio
computational
resource
management
algorithm
well
delay-improved
mechanism
developed
section
conduct
performance
analysis
proposed
algorithms
section
simulation
results
shown
section
conclude
paper
section
vii
system
model
cid:20
cid:11
cid:12
cid:15
cid:171
cid:15
cid:3
cid:23
cid:11
cid:12
cid:55
cid:68
cid:86
cid:78
cid:3
cid:69
cid:88
cid:73
cid:73
cid:72
cid:85
cid:86
cid:20
cid:11
cid:12
cid:48
cid:39
cid:20
cid:21
cid:11
cid:12
cid:48
cid:40
cid:38
cid:3
cid:86
cid:72
cid:85
cid:89
cid:72
cid:85
cid:23
cid:11
cid:12
cid:48
cid:39
cid:21
cid:22
cid:11
cid:12
cid:48
cid:39
cid:22
cid:48
cid:39
cid:23
fig
mobile-edge
computing
system
four
mobile
devices
mds
queue
lengths
task
buffer
ith
mobile
device
task
buffer
maintained
mec
server
device
beginning
tth
time
slot
denoted
respectively
consider
mobile-edge
computing
mec
system
shown
fig
single-
core
mobile
devices
running
computation-intensive
applications
assisted
mec
server
corresponds
scenarios
mobile
devices
relatively
weak
computation
capability
mec
supreme
need
internet
things
iot
applications
wireless
sensor
networks
wsns
surveillance
however
proposed
algorithms
adapted
multi-core
mobile
devices
minor
modiﬁcations
mec
server
could
small
data
center
installed
wireless
access
point
deployed
telecom
operator
therefore
accessed
mobile
devices
wireless
channels
execute
computation
tasks
behalf
mobile
devices
besides
readily
available
wireless
channel
state
information
wireless
joint
radio
computational
resource
management
realized
mec
systems
innovative
feature
supported
traditional
cloud
computing
systems
ofﬂoading
part
computation
tasks
mec
server
mobile
devices
could
enjoy
higher
level
quality
computation
experience
also
reduce
battery
energy
consumption
available
system
bandwidth
shared
mobile
devices
using
fdma
noise
power
spectral
density
receiver
mec
server
denoted
time
slotted
time
slot
length
convenience
denote
index
sets
mobile
devices
time
slots
respectively
ease
reference
list
key
notations
system
model
table
computation
task
task
queueing
models
assume
mobile
devices
running
independent
ﬁne-grained
tasks
beginning
tth
time
slot
bits
computation
tasks
arrive
ith
mobile
device
processed
starting
time
slot
without
loss
generality
assume
different
time
slots
independent
identically
distributed
i.i.d
within
min
max
time
slot
part
computation
tasks
ith
mobile
device
denoted
executed
local
cpu
bits
computation
tasks
ofﬂoaded
mec
server
arrived
yet
executed
ofﬂoaded
tasks
queued
task
buffer
mobile
device
sufﬁciently
large
capacity
queue
lengths
task
buffers
beginning
tth
time
slot
denoted
evolves
according
following
equation
max
table
summary
key
notations
notation
description
ptx
pser
system
bandwidth
index
set
time
slots
mobile
devices
amount
tasks
arrived
ith
mobile
device
beginning
time
slot
queue
length
task
buffer
ith
mobile
device
beginning
time
slot
queue
length
task
buffer
maintained
mec
server
ith
mobile
device
beginning
time
slot
amount
tasks
executed
locally
ith
mobile
device
time
slot
amount
tasks
ofﬂoaded
mec
server
time
slot
ith
mobile
device
amount
tasks
ith
mobile
device
executed
mec
server
time
slot
cpu-cycle
frequency
ith
mobile
device
time
slot
power
consumption
cpu
ith
mobile
device
time
slot
transmit
power
ith
mobile
device
time
slot
cpu-cycle
frequency
mth
cpu
core
mec
server
time
slot
power
consumption
mec
server
time
slot
proportion
bandwidth
allocated
ith
mobile
device
time
slot
channel
power
gain
ith
mobile
device
mec
server
time
slot
amount
tasks
departing
task
buffer
ith
mobile
device
tth
time
slot
mec
server
maintains
task
buffer
mobile
device
store
tasks
ofﬂoaded
yet
executed
server
assumed
sufﬁciently
large
capacity
similar
one
mobile
side
denote
queue
lengths
task
buffers
mec
server
beginning
tth
time
slot
denote
task
scheduling
decision
mec
server
tth
time
slot
amount
tasks
nth
mobile
device
executed
mec
server
time
slot
therefore
evolves
according
following
equation
max
min
max
indicates
tasks
executed
locally
mobile
devices
stored
task
buffers
mec
server
worthwhile
note
departure
function
may
larger
amount
tasks
corresponding
local
task
buffer
depending
decided
system
operation
case
excessive
communication
rates
allocated
transmitting
dummy
task
inputs
necessary
processed
mec
server
without
loss
generality
assume
tasks
buffers
empty
initially
i.e.
local
execution
model
order
process
one
bit
computation
task
input
ith
mobile
device
cpu
cycles
needed
depends
types
applications
obtained
off-line
measurements
denote
cpu-cycle
frequency
ith
mobile
device
tth
time
slot
exceed
maximum
value
max
thus
expressed
l−1
according
circuit
theories
cpu
power
dominated
dynamic
power
originates
toggling
activities
logic
gates
inside
cpu
proportional
cirfc
cmos
circuits
vcir
circuit
voltage
cpu-cycle
frequency
respectively
besides
operating
low
voltage
limits
cpu-cycle
frequency
approximately
linear
chip
voltage
therefore
power
consumption
local
execution
ith
mobile
device
given
by2
κmob
κmob
effective
switched
capacitance
cpu
ith
mobile
device
related
chip
architecture
mec
server
execution
model
computation
ofﬂoading
ofﬂoad
computation
tasks
mec
server
execution
input
bits
tasks
need
delivered
mec
server
assume
wireless
channels
mobile
devices
mec
server
i.i.d
frequency-ﬂat
block
fading
denote
small-scale
fading
channel
power
gain
ith
mobile
device
mec
server
tth
time
slot
assumed
bounded
mean
value
i.e.
thus
channel
power
gain
ith
mobile
device
mec
server
represented
2in
order
apply
proposed
algorithms
scenarios
multi-core
cpus
available
devices
modiﬁed
l−1
respectively
number
cpu
cores
ith
mobile
device
κmob
max
denote
cpu-cycle
frequency
effective
switched
capacitance
maximum
cpu-cycle
frequency
zth
cpu
core
ith
mobile
device
respectively
could
determined
mobile
device
constraints
max
proposed
algorithms
z=1
pzi
z=1
κmob
pzi
d0/di
path-loss
constant
path-loss
exponent
reference
distance
distance
ith
mobile
device
mec
server
since
fdma
utilized
according
shannon-hartley
formula
amount
computation
tasks
ofﬂoaded
ith
mobile
device
time
slot
given
log2
cid:16
ptx
n0ω
cid:17
=
ptx
transmit
power
maximum
value
max
proportion
bandwidth
allocated
ith
mobile
device
denote
bandwidth
allocation
vector
chosen
feasible
set
i.e.
mec
server
scheduling
mec
server
equipped
m-core
cpu
cpu
cores
could
heterogeneous
set
cpu
cores
denoted
denote
cpu-cycle
frequency
mth
cpu
core
tth
time
slot
less
maximum
value
fcm
max
thus
power
consumption
cpu
cores
mec
server
expressed
cid:12
cid:12
pi∈n
pser
xm∈m
κser
κser
effective
switched
capacitance
mth
cpu
core
mec
server
cpu
cycles
offered
server
cpu
allocated
computation
tasks
ofﬂoaded
different
mobile
devices
i.e.
mec
server
scheduling
decision
satisfy
following
constraint
xn∈n
xm∈m
means
number
cpu
cycles
needed
completing
ds,1
larger
available
cpu
cycles
mec
server
iii
problem
formulation
section
ﬁrst
introduce
performance
metrics
namely
average
weighted
sum
power
consumption
mec
system
average
sum
queue
length
task
buffers
average
weighted
sum
power
consumption
minimization
problem
task
buffer
stability
constraint
formulated
performance
metrics
focus
power
consumption
task
execution
processes
local
server
cpus
well
transmit
power
computation
ofﬂoading
energy
consumed
purposes
e.g.
powering
screens
mobile
devices
supporting
basic
operations
mec
system
ignored
simplicity
therefore
adopt
average
weighted
sum
power
consumption
different
entities
mec
system
performance
metric
deﬁned
follows
lim
→+∞
xt=0
xi∈n
ptx
+1pser
weight
power
consumption
ith
mobile
device
weight
power
consumption
mec
server
parameters
adjusted
address
cost
power
consumption
different
nodes
mec
system
well
balance
power
consumption
mobile
devices
mec
server
assumed
constants
throughout
paper
convenience
denote
pi∈n
ptx
+1pser
i.e.
limt
→+∞
according
little
law
average
execution
delay
experienced
mobile
device
proportional
average
number
tasks
waiting
mec
system
sum
queue
length
task
buffers
device
server
sides
thus
average
sum
queue
length
task
buffers
mobile
device
used
measurement
execution
delay
written
t=0
lim
→+∞
xt=0
average
weighted
sum
power
consumption
minimization
denote
system
operation
tth
time
slot
ptx
ptx
ptx,1
ptx
fc,1
therefore
average
weighted
sum
power
consumption
minimization
problem
formu-
lated
bandwidth
allocation
constraint
denotes
cpu-cycle
frequency
transmit
power
constraints
mobile
devices
cpu-cycle
frequencies
constraint
cpu
cores
mec
server
mec
server
scheduling
constraint
imposed
enforces
task
buffers
mean
rate
stable
guarantees
arrived
computation
tasks
completed
ﬁnite
delay
min
s.t
max
ptx
max
fcm
max
xn∈n
xm∈m
|qi
|ti
lim
→+∞
lim
→+∞
remark
difﬁcult
identify
stochastic
optimization
problem
operations
mobile
device
side
including
cpu-cycle
frequencies
local
cpus
well
transmit
power
bandwidth
allocation
computation
ofﬂoading
mec
server
side
including
mec
server
scheduling
cpu-cycle
frequencies
multiple
cpu
cores
need
determined
time
slot
highly
challenging
problem
large
amount
including
channel
task
buffer
state
information
handled
large
number
variables
determined
also
optimal
decisions
temporally
correlated
due
randomly
arrived
tasks
besides
efﬁcient
resource
management
policy
mobile
devices
mec
server
critical
since
ofﬂoading
computation
tasks
either
over-conservative
over-aggressive
manner
result
ineffective
use
available
computational
resources
moreover
spatial
coupling
bandwidth
allocation
among
different
mobile
devices
poses
additional
challenge
radio
resource
management
also
interdependent
computational
resource
management
therefore
joint
optimization
radio
computational
resource
allocation
essential
instead
solving
directly
consider
modiﬁed
version
denoted
obtained
replacing
+|pi∈n
1/n
thus
task
departure
function
computation
ofﬂoading
i.e.
continuous
differentiable
respect
helps
develop
efﬁcient
asymptotically
optimal
online
algorithm
also
feasible
besides
although
optimal
value
larger
made
arbitrarily
close
setting
sufﬁciently
small
result
focus
remainder
paper
online
joint
radio
computational
resource
management
algorithm
section
propose
online
joint
radio
computational
resource
management
algorithm
solve
based
lyapunov
optimization
assistance
lyapunov
optimization
framework
able
resolve
challenging
stochastic
optimization
problem
solving
deterministic
per-time
slot
problem
time
slot
optimal
solution
obtained
low
complexity
besides
delay-improved
mechanism
designed
proposed
lyapunov
optimization-based
algorithm
next
section
show
proposed
algorithm
delay-improved
version
capable
achieving
asymptotic
optimality
reveal
power-delay
tradeoff
multi-user
mec
systems
lyapunov
optimization-based
online
algorithm
present
algorithm
ﬁrst
deﬁne
lyapunov
function
2xi∈n
cid:2
cid:3
thus
conditional
lyapunov
drift
written
accordingly
lyapunov
drift-plus-penalty
function
expressed
bits2·
w−1
control
parameter
proposed
algorithm
ﬁrst
ﬁnd
upper
bound
feasible
speciﬁed
lemma
lemma
arbitrary
max
ptx
max
fcm
max
pi∈n
≤pm∈m
upper
bounded
i.e.
xi∈n
xi∈n
constant
proof
please
refer
appendix
main
idea
proposed
online
joint
radio
computational
resource
management
algorithm
minimize
upper
bound
right-hand
side
algorithm
online
joint
radio
computational
resource
management
algorithm
beginning
tth
time
slot
obtain
determine
ptx
solving
ppts
min
−xi∈n
−xi∈n
s.t
pi∈n
ptx
+1pser
update
according
respectively
set
time
slot
amount
tasks
waiting
task
buffers
maintained
low
level
meanwhile
weighted
sum
power
consumption
mobile
devices
mec
server
minimized
proposed
algorithm
summarized
algorithm
deterministic
optimization
problem
ppts
needs
solved
time
slot
worthy
note
objective
function
ppts
corresponds
right-hand
side
constraints
except
task
buffer
stability
constraint
retained
ppts
optimal
solution
ppts
developed
next
subsection
optimal
solution
ppts
subsection
develop
optimal
solution
ppts
including
optimal
cpu-cycle
frequencies
local
cpus
transmit
power
bandwidth
allocation
computation
ofﬂoading
well
mec
server
scheduling
cpu-cycle
frequencies
cpu
cores
mec
server
seen
ppts
solved
optimally
solving
three
sub-problems
optimal
cpu-cycle
frequencies
local
cpus
straightforward
show
optimal
cpu-cycle
frequencies
local
cpus
time
slot
obtained
solving
following
sub-problem
sp1
sp1
min
xi∈n
cid:0
−qi
l−1
s.t
max
wiκmob
cid:1
3the
terms
affected
omitted
objective
function
ppts
first
since
objective
function
sp1
convex
constraints
linear
sp1
convex
optimization
problem
besides
objective
function
constraints
sp1
decomposed
individual
optimization
done
separately
mobile
device
therefore
optimal
achieved
either
stationary
point
−qi
l−1
one
boundary
points
given
wiκmob
min
cid:26
max
3κmob
iwiv
cid:27
max
=
remark
note
non-decreasing
desirable
execute
decreases
tasks
order
keep
queue
length
local
task
buffer
small
besides
κmob
particular
larger
value
weight
ppts
becomes
larger
thus
local
cpu
slows
frequency
reduce
power
consumption
larger
value
system
places
emphasis
minimizing
power
consumption
ith
mobile
device
also
contributes
reduction
hand
larger
value
κmob
local
execution
becomes
less
effective
cpu
cycles
joule
energy
needed
process
per
bit
task
input
leads
smaller
cpu-cycle
frequency
worthwhile
mention
although
depends
optimal
local
cpu
speeds
temporally
correlated
optimal
computation
ofﬂoading
decisions
derived
sequel
since
affect
task
buffer
dynamics
optimal
transmit
power
bandwidth
allocation
optimal
obtained
solving
following
sub-problem
sp2
min
ptx
−xi∈n
·xi∈n
wiptx
s.t
ptx
max
non-convex
general
order
solve
sp2
identify
important
property
optimal
solution
shown
following
lemma
lemma
set
mobile
devices
denoted
i|i
optimal
transmit
power
bandwidth
allocation
given
proof
arbitrary
non-decreasing
function
ptx
term
wiptx
objective
function
sp2
non-decreasing
contribution
value
ptx
i.e.
besides
objective
function
sp2
thus
portion
bandwidth
exceeding
originally
allocated
ith
mobile
device
re-allocated
devices
i.e.
lemma
implies
mobile
device
ofﬂoad
amount
tasks
local
task
buffer
greater
task
buffer
server
intuitively
amount
tasks
waiting
mec
server
relatively
large
ofﬂoading
tasks
incurs
transmit
power
consumption
also
brings
detrimental
effect
execution
delay
thus
inferior
local
execution
hence
ruling
mobile
devices
simplify
sp2
follows
sp′
min
ptx
xi∈
xi∈
wiptx
s.t
ptx
max
xi∈
since
log2
cid:0
ptx
n0ω
cid:1
concave
respect
ptx
perspective
function
i.e.
|ptx
/αi
jointly
concave
respect
ptx
therefore
sp′
convex
optimization
problem
thus
standard
convex
algorithms
interior
point
method
applied
optimal
solution
however
generic
convex
algorithms
suffer
relatively
high
complexity
developed
general
convex
problems
make
full
use
problem
structures
motivated
propose
solve
sp′
optimizing
transmit
power
bandwidth
allocation
alternating
manner
iteration
optimal
transmit
powers
obtained
closed
forms
optimal
bandwidth
allocation
determined
lagrangian
method
since
sp′
convex
feasible
region
cartesian
product
ptx
alternating
minimization
procedure
guaranteed
converge
global
optimal
solution
termed
gauss-seidel
method
literature
next
derive
solution
iteration
gauss-seidel
method
ﬁxed
bandwidth
transmit
power
allocation
respectively
optimal
transmit
power
ﬁxed
bandwidth
allocation
optimal
transmit
power
mobile
devices
obtained
solving
ppwr
min
ptx
xi∈
xi∈
wiptx
s.t
ptx
max
similar
sp1
ppwr
decomposed
individual
mobile
device
optimal
achieved
either
stationary
point
wiptx
one
boundary
points
given
closed
form
min
cid:26
max
cid:26
−ti
=
max
2·v
·wi
cid:27
max
cid:27
optimal
bandwidth
allocation
ﬁxed
transmit
power
allocation
ptx
optimal
bandwidth
allocation
obtained
solving
following
problem
pbw
min
xi∈
s.t
xi∈
challenging
bandwidth
allocation
coupled
among
different
mobile
devices
fortunately
lagrangian
method
offers
effective
solution
pbw
speciﬁcally
partial
lagrangian
pbw
written
as4
cid:16
cid:17
xi∈
lagrangian
multiplier
associated
pi∈
ptx
based
karush-kuhn-tucker
kkt
optimal
lagrangian
conditions
optimal
bandwidth
allocation
multiplier
satisfy
following
equation
set
xi∈
max
pi∈
ddr
ptx
deﬁne
otherwise
denotes
root
dαi
positive
unique
∂αi
4we
slightly
abuse
notation
using
denote
dαi
decreases
limαi
→0+
ddr
dαi
thus
suggests
bisection
search
optimal
chosen
dαi
limαi
→+∞
ddr
ddr
maxi∈
ddr
maxi∈
ddr
dαi
|αi
=1−|
|·ǫa
dαi
|αi
=ǫa
satisfypi∈
max
1−|
|·ǫa
andpi∈
max
respectively
hence
obtained
bisection
search
cid:16
ǫai
ptx
searching
process
optimal
terminated
|pi∈
max
accuracy
algorithm
ptx
optimal
bandwidth
allocation
details
lagrangian
method
pbw
summarized
algorithm
remark
proposed
gauss-seidel
method
updates
transmit
power
bandwidth
allocation
alternately
iteration
converge
optimal
solution
sp′
sublinear
convergence
rate
iteration
major
complexity
comes
lagrangian
method
optimal
bandwidth
allocation
employs
bisection
search
∂αi
cid:17
iterations
time
slot
corresponds
terminate
within
log2
cid:16
−λl
accuracy
requirement
given
besides
order
search
optimal
log2
cid:0
needed
order
determine
mobile
device
accuracy
requirement
therefore
algorithm
terminate
within
ﬁnite
number
evaluations
functions
given
log2
cid:0
cid:1
evaluations
cid:1
log2
cid:16
−λl
optimal
cpu-cycle
frequencies
scheduling
mec
server
decou-
pling
ptx
ppts
ﬁnd
optimal
cpu-cycle
frequencies
cpu
cores
mec
server
obtained
solving
following
sub-problem
optimal
scheduling
decision
cid:17
∂αi
sp3
min
−xi∈n
xm∈m
κser
s.t
fcm
max
xn∈n
xm∈m
difﬁcult
verify
sp3
convex
problem
thus
standard
convex
algorithms
algorithm
lagrangian
method
pbw
set
10−7
˜λl
˜λu
imax
200
10−4
|pi∈
cid:16
cid:17
imax
cid:16
˜λl
˜λu
cid:17
set
max
cid:16
cid:17
pi∈
˜λl
else
˜λu
endif
endwhile
used
interestingly
identifying
important
structure
optimal
solution
shown
following
lemma
able
solve
sp3
closed
form
lemma
feasible
exists
optimal
solution
sp3
one
mobile
device
scheduled
i.e.
|ds
mobile
device
scheduled
one
highest
value
l−1
whose
device
index
denoted
imax
proof
please
refer
appendix
based
lemma
therefore
simplify
sp3
imax
imax
−timax
sp′
min
imax
s.t
xm∈m
κser
fcm
max
imax
limax
xm∈m
imax
optimal
solution
given
following
corollary
5|x|0
denotes
number
non-zero
elements
vector
multiple
devices
maximum
schedule
one
smallest
device
index
preserves
optimality
therefore
assume
value
l−1
mobile
device
highest
value
l−1
unique
following
ease
presentation
corollary
optimal
solution
sp′
also
sp3
given
+1limax
min
cid:26
fcm
max
timax
=
pm∈m
exists
optimal
solution
sp′
imax
κser
cid:27
fcm
max
imax
l−1
imax
proof
since
timax
imax
limax
pm∈m
thus
substituting
imax
l−1
imax
optimal
solution
function
ﬁnd
pm∈m
objective
+1κser
given
together
lemma
complete
proof
0≤fc
≤fcm
max
−timax
l−1
imax
min
remark
one
main
beneﬁt
proposed
online
algorithm
require
prior
information
computation
task
arrival
wireless
channel
fading
processes
makes
also
applicable
unpredictable
environments
besides
proposed
algorithm
low
complexity
time
slot
optimal
cpu-cycle
frequencies
local
server
cpus
well
mec
server
scheduling
decision
obtained
closed
forms
computation
ofﬂoading
policy
determined
efﬁcient
alternating
minimization
algorithm
furthermore
shown
next
section
achievable
performance
proposed
algorithm
analytically
characterized
helps
demonstrate
asymptotic
optimality
delay-improved
mechanism
algorithm
system
operation
determined
optimal
solution
per-time
slot
problem
ppts
excludes
task
buffer
underﬂow
constraint
i.e.
departure
functions
either
may
greater
actual
amount
tasks
corresponding
buffers
particular
one
mobile
device
scheduled
mec
server
time
slot
according
lemma
corollary
part
available
cpu
cycles
mec
server
may
wasted
excessive
computational
resource
re-allocated
devices
inspired
observation
propose
delay-improved
mechanism
algorithm
subsection
proposed
delay-improved
mechanism
decision
center
maintains
set
virtual
task
buffers
θvir
θvir
tracks
states
actual
task
buffers
θact
knowledge
θvir
used
compute
optimal
solution
per-time
slot
problem
according
algorithm
modify
mec
server
scheduling
decision
˜ds
actual
implementation
according
procedures
shown
algorithm
algorithm
delay-improved
mechanism
act
limax
timax
pm∈m
arg
maxi∈n
vir
l−1
otherwise
line
set
˜ds
exit
imax
sort
mobile
devices
according
descending
order
vir
l−1
mobile
device
ith
highest
value
vir
l−1
multiple
devices
values
vir
l−1
order
device
indices
let
denote
sort
according
ascending
i.e.
imax
determine
number
scheduled
mobile
devices
re-allocate
cpu
cycles
offered
mec
server
according
i=1
act
pm∈m
cid:9
otherwise
nser
−pi
nser
act
cid:17
l−1
nser
otherwise
nser
ifpi∈n
act
pm∈m
nser
min
cid:8
n|pn


cid:16
pm∈m
˜ds
act
following
proposition
show
performance
delay-improved
mechanism
including
average
weighted
sum
power
consumption
average
execution
delay
worse
achieved
algorithm
proposition
power
consumption
mobile
devices
mec
server
delay-improved
mechanism
i.e.
algorithm
algorithm
average
execution
delay
i.e.
average
sum
queue
length
increased
proof
property
power
consumption
performance
straightforward
proof
delay
performance
obtained
verifying
act
vir
act
vir
via
mathematical
induction
omitted
brevity
worthwhile
emphasize
proposed
delay-improved
mechanism
able
secure
beneﬁts
algorithm
mentioned
remark
enhancing
average
execution
delay
performance
without
incurring
extra
power
consumption
performance
analysis
section
provide
main
theoretical
results
paper
characterize
upper
bounds
average
weighted
sum
power
consumption
mobile
devices
mec
server
well
average
sum
queue
length
task
buffers
mobile
server
sides
besides
tradeoff
average
weighted
sum
power
consumption
average
execution
delay
also
revealed
facilitate
analysis
ﬁrst
deﬁne
auxiliary
problem
objective
function
constraints
task
buffer
dynamics
mec
server
modiﬁed
max
following
lemma
demonstrate
relationship
terms
feasibility
optimal
values
objective
functions
lemma
feasible
feasible
optimal
values
denoted
opt
opt
respectively
equal
i.e.
opt
opt
t3⋆
cid:2
q3⋆
proof
ﬁrst
show
feasible
also
feasible.6
denote
system
operation
optimal
solution
x3⋆
queue
lengths
induced
solution
θ3⋆
cid:3
applying
x3⋆
cid:3
easily
show
queue
lengths
induced
x3⋆
θ3⋆
i.e.
also
feasible
satisﬁes
q3⋆
besides
average
weighted
sum
power
consumption
x3⋆
equals
opt
i.e.
opt
opt
next
suppose
feasible
optimal
solution
given
x2⋆
cid:2
q3⋆
q3⋆
t3⋆
utilized
construct
solution
modifying
d2⋆
d2⋆
˜dr
min
d2⋆
max
˜qp3
d2⋆
˜θp3
˜qp3
˜tp3
denotes
queue
lengths
task
buffers
induced
mathematical
induction
show
˜qp3
q2⋆
cid:3
denotes
queue
lengths
x2⋆
θ2⋆
t2⋆
cid:2
q2⋆
thus
also
feasible
transmit
powers
mobile
devices
realizing
˜dr
decreased
since
˜dr
d2⋆
value
objective
function
result
opt
opt
˜tp3
opt
i.e.
opt
t2⋆
6as
instantaneous
constraints
i.e.
problems
sufﬁcient
verify
mean
rate
stability
task
buffers
order
show
feasibility
following
lemma
show
exists
stationary
randomized
policy
system
operations
i.i.d
among
different
time
slots
behaves
arbitrarily
close
optimal
solution
lemma
feasible
exists
stationary
randomized
policy
satisﬁes
instantaneous
constraints

cid:2
cid:2

cid:2
cid:3
opt
cid:3
cid:2
cid:3
cid:3
proof
proof
obtained
theorem
4.5
omitted
brevity
based
lemma
lemma
worst-case
average
weighted
sum
power
consumption
average
sum
queue
length
algorithm
algorithm
derived
following
theorem
theorem
assume
feasible
algorithm
also
algorithm
average
weighted
sum
power
consumption
satisﬁes
average
weighted
sum
power
consumption
proposed
algorithm
opt
arbitrary
mean
rate
stable
suppose
exist
opt
+1pm∈m
κser
following
slater
conditions
pi∈n
cid:0
κmob
max
stationary
randomized
algorithm
satisﬁes
max
max
cid:1
ehp
ehd
ehd
ehd


cid:0
opt
cid:1
proof
please
refer
appendix
xi∈n
average
sum
queue
length
task
buffers
mobile
devices
satisﬁes
remark
theorem
shows
proposed
online
joint
radio
computational
resource
management
algorithm
worst-case
average
weighted
sum
power
consumption
mec
system
decreases
inversely
proportional
demonstrates
asymptotic
optimality
proposed
algorithm
also
shown
upper
bound
average
sum
queue
length
i.e.
execution
delay
according
little
law
increases
linearly
i.e.
exists
1/v
tradeoff
two
objectives
thus
balance
system
weighted
sum
power
consumption
execution
delay
adjusting
delay-
sensitive
applications
use
small
value
energy-sensitive
networks
delay-tolerant
applications
large
value
adopted
simulation
results
simulations
assume
mobile
devices
located
equal
distance
150
mec
server
small-scale
fading
channel
power
gains
exponentially
distributed
unit
mean
i.e.
exp
besides
mhz
−174
dbm/hz
−40
κmob
10−27
max
ghz
max
500
uniformly
distributed
within
max
737.5
cycles/bit
addition
set
fcm
max
2.5
ghz
κser
10−27
simulation
results
averaged
10000
time
slots
104
wn+1
2.5
1.5
0.5
wn+1
optimized
allocation
equal
allocation
bits2
w−1
wn+1
0.02
109
optimized
allocation
equal
allocation
bits2
w−1
109
bits2
w−1
wn+1
0.02
109
105
bits2
w−1
109
fig
average
weighted
sum
power
consumption/average
sum
queue
length
task
buffers
per
mobile
device
vs.
max
kbits
solid
curves
dash
curves
correspond
algorithm
algorithm
respectively
curves
marked
circles
obtained
setting
1/n
proposed
algorithms
ﬁrst
validate
theoretical
results
derived
theorem
proposed
algorithms
fig
two
scenarios
0.02
respectively
considered
average
weighted
sum
power
consumption
scenario
0.02
shown
fig
fig
average
sum
queue
length
task
buffers
per
mobile
device
i.e.
pi∈n
0.02
shown
fig
fig
observed
fig
fig
average
weighted
sum
power
consumption
decreases
inversely
proportional
control
parameter
converges
opt
sufﬁciently
large
meanwhile
shown
fig
fig
average
sum
queue
length
task
buffers
increases
linearly
algorithm
delay-improved
version
algorithm
veriﬁes
1/v
tradeoff
average
weighted
sum
power
consumption
average
execution
delay
demonstrated
theorem
remark
furthermore
see
increasing
results
higher
average
sum
queue
length
comes
slowdown
server
cpu
frequencies
proposed
algorithm
delay-improved
version
equal
bandwidth
allocation
i.e.
1/n
also
evaluated
fig
see
performance
average
weighted
sum
power
consumption
average
sum
queue
length
task
buffers
deteriorated
compared
achieved
optimized
bandwidth
allocation
demonstrates
importance
joint
consideration
radio
computational
resource
management
multi-user
mec
systems
besides
shown
average
weighted
sum
power
consumptions
algorithm
algorithm
average
sum
queue
length
task
buffers
delay-improved
mechanism
reduced
agrees
proposition
queue
length
i.e.
execution
delay
reduction
obvious
get
closer
zero
circumstances
frequencies
server
cpu
cores
much
higher
needed
serving
mobile
device
highest
value
l−1
words
computational
resource
provided
mec
server
wasted
algorithm
re-allocated
mobile
devices
focus
algorithm
following
always
achieves
improved
performance
compared
algorithm
fig
reveal
impacts
computation
capability
mec
server
setting
varying
number
cpu
cores
scenarios
power
consumption
mec
server
addressed
optimization
thus
server
cpu
cores
operate
maximum
frequencies
seen
fig
system
performance
improves
value
increases
i.e.
power
consumption
mobile
devices
decreases
given
average
execution
delay.7
also
increasing
106
109
bit2
w−1
power
consumption
decreases
signiﬁcantly
curves
nonetheless
behaviors
curves
7the
average
execution
delay
calculated
pi∈n
pi∈n
time
slots
according
little
law.
100
106
bits2
w−1
109
bits2
w−1
101
102
average
execution
delay
103
101
106
bits2
w−1
kbits
0.02
kbits
0.02
kbits
kbits
kbits
kbits
max
max
max
max
max
max
n+1
n+1
n+1
n+1
n+1
n+1
100
10−1
100
109
bits2
w−1
101
102
average
execution
delay
103
fig
power
consumption
mobile
devices
vs.
average
execution
delay
max
kbits
fig
weighted
sum
power
consumption
mec
system
vs.
average
execution
delay
different
values
substantially
different
relatively
large
value
i.e.
average
execution
delay
decreases
sharply
2.6
decreases
power
delay
performance
follows
1/v
tradeoff
however
relatively
small
value
average
execution
delay
minor
changes
adjusted
i.e.
around
2000
1000
respectively
speed
power
reduction
increases
average
execution
delay
increases
insufﬁcient
computational
resource
mec
server
task
buffers
stabilized
even
106
bit2
w−1
within
10000
time
slots
similar
phenomenon
exists
curves
medium
value
large
value
used
addition
performance
gain
achieved
increasing
negligible
indicates
computation
capability
mec
server
chosen
carefully
balance
system
cost
achievable
performance
particular
system
constrained
radio
resource
need
deploy
much
computational
resource
varying
max
show
relationship
average
weighted
sum
power
consumption
average
execution
delay
fig
similar
fig
fig
average
execution
delay
increases
weighted
sum
power
consumption
decreases
indicates
proper
chosen
balance
two
desirable
objectives
instance
max
kbits
average
execution
delay
requirement
109
bits2
w−1
chosen
sum
power
consumption
mobile
devices
0.3
besides
given
execution
delay
average
weighted
sum
power
consumption
increases
computation
task
arrival
rate
ﬁts
intuition
n+1
n+1
n+1
0.02
0.1
106
n+1
n+1
n+1
0.02
0.1
3.5
2.5
1.5
0.5
mobile
side
0.1
n+1
server
side
0.1
n+1
mobile
side
0.02
n+1
mobile
side
n+1
server
side
0.02
n+1
server
side
n+1
bits2
w−1
109
bits2
w−1
109
1000
2000
3000
4000
5000
time
slots
6000
7000
8000
9000
10000
140
120
100
fig
power
consumption
mec
server/mobile
devices
vs.
max
kbits
fig
average
queue
length
per
mobile
device
vs.
time
max
kbits
109
bits2
w−1
i.e.
workload
mec
system
becomes
intensive
power
needed
keeping
task
buffers
stable
addition
given
total
task
arrival
rate
mec
system
increasing
number
mobile
devices
decreasing
task
arrival
rate
individual
device
results
lower
weighted
sum
power
consumption
tuned
sufﬁciently
large
i.e.
proposed
algorithm
approaching
optimal
performance
due
increased
multi-user
diversity
gain
availability
extra
local
processing
units
show
impacts
power
consumption
mec
server
mobile
devices
fig
observed
increasing
power
consumption
mec
server
decreases
mobile
devices
increases
given
value
conﬁrms
power
consumption
mobile
devices
mec
server
balanced
adjusting
weighting
factors
speciﬁc
power
consumption
mec
server
constant
due
optimal
frequencies
server
cpu
cores
derived
increasing
0.02
power
consumption
mec
server
greatly
reduced
mobile
devices
minor
increase
leads
higher
queue
lengths
task
buffers
increasing
0.02
0.1
power
consumption
mec
server
decreases
mobile
devices
increases
noticeably
case
local
cpus
needs
increase
cpu-cycle
frequencies
compensate
processing
speed
reduction
mec
server
order
keep
task
buffers
stable
better
demonstration
show
evolution
average
queue
lengths
mobile
devices
i.e.
pi∈n
mec
server
i.e.
pi∈n
time
fig
see
amount
waiting
tasks
server
side
buffers
near
zero
mec
server
able
execute
tasks
ofﬂoaded
mobile
devices
queue
length
local
task
buffers
also
maintained
small
level
tasks
ofﬂoaded
executed
mec
server
0.02
amount
tasks
buffers
increases
due
decrease
cpu
frequencies
mec
server
0.1
queue
lengths
task
buffers
mobile
devices
mec
server
much
higher
achieved
0.02
keep
increasing
time
elapses
implies
system
converge
stabilized
performance
within
time
window
used
simulations
turn
lifts
local
cpu-cycle
frequencies
power
consumption
mobile
devices
106
2.5
1.5
0.5
kbits
max
kbits
max
kbits
max
1000
2000
3000
4000
5000
time
slots
6000
7000
8000
9000
10000
fig
sum
queue
length
task
buffers
vs.
time
slots
pi∈n
kbits
109
bit2
w−1
finally
demonstrate
impact
network
size
convergence
time
proposed
algorithm
tracing
sum
queue
length
task
buffers
systems
different
numbers
mobile
devices
keeping
total
computation
task
arrival
rate
mec
system
unchanged
pi∈n
kbits
observed
fig
three
cases
sum
queue
length
task
buffers
increases
beginning
stabilizes
around
106
bits
1.4
106
bits
106
bits
respectively
besides
see
although
larger
value
leads
longer
convergence
time
differences
minor
task
buffers
able
stabilized
within
approximately
1000
time
slots
cases
indicates
proposed
algorithms
scalable
mec
systems
reasonable
amount
mobile
devices
vii
conclusions
paper
investigated
stochastic
joint
radio
computational
resource
management
multi-user
mobile-edge
computing
mec
systems
low-complexity
online
algorithm
based
lyapunov
optimization
proposed
achieves
asymptotic
optimality
furthermore
delay-improved
mechanism
designed
reduce
execution
delay
performance
analysis
well
simulations
explicitly
characterize
tradeoff
average
weighted
sum
power
consumption
average
execution
delay
multi-user
mec
system
moreover
impacts
various
parameters
revealed
conﬁrm
importance
joint
radio
computational
resource
management
provide
valuable
guidelines
practical
deployment
mec
systems
future
investigation
would
interesting
extend
ﬁndings
work
scenarios
fairness
considerations
among
multiple
devices
seek
distributed
implementation
methodologies
research
problems
mobility-
aware
resource
management
dynamic
access
control
user-server
association
also
investigated
proof
lemma
appendix
squaring
sides
local
task
buffer
dynamics
max
2ai
max
2ai
2qi
left-hand
side
dividing
sides
summing
moving
inequalities
2xi∈n
cid:2
cid:3
−xi∈n
+xi∈n
similar
manipulations
made
mec
server
task
buffer
dynamics
follows
max
max
2ti
2dr
2dr
max
left-hand
side
dividing
sides
summing
+xi∈n
summing
moving
inequalities
2xi∈n
cid:2
cid:3
−xi∈n
−xi∈n
2xi∈n
cid:0
cid:3
cid:0
maxl−1
since
log2
cid:2
cid:1
cid:2
log2
cid:1
cid:3
ωηi
cid:1
2g0γipi
maxdθ
finally
adding
sides
taking
2n0dθ
expectation
sides
conditioned
obtain
desired
result
cid:19
max
xm∈m
a2
cid:1
cid:0
maxτ
l−1
+ηi
cid:0
maxl−1
cid:18
maxl−1
fcm
maxτ
l−1
2xi∈n
maxl−2
proof
lemma
since
exists
optimal
solution
pn∈n
pm∈m
pm∈m
optimal
scheduling
decision
pm∈m
suppose
optimal
scheduling
decision
|ds
denote
n|ds
|s|
|ds
construct
new
feasible
scheduling
decision
ˆds
ˆds
imax
ˆds
imax
mobile
device
highest
value
l−1
constructed
solution
value
objective
function
decrease
pj∈s
j6=imax
imax
l−1
imax
imax
l−1
imax
limax
cid:16
ˆds
cid:17
xj∈s
j6=imax
cid:1
imax
device
cpu
cycles
originally
allocated
imax
limax
timax
−xi∈n
i.e.
ˆds
ˆds
performs
worse
addition
imax
serve
imax
value
objective
function
decrease
ˆds
imax
timax
imax
device
words
exists
optimal
solution
sp3
given
cid:0
timax
l−1
imax
limax
imax
proof
theorem
denote
optimal
solution
per-time
slot
problem
time
slot
since
system
operation
time
slot
optimal
solution
per-time
slot
problem
xi∈n
cid:0
cid:1
cid:1
cid:0
cid:0
opt
cid:1
xi∈n
+xi∈n
holds
since
stationary
randomized
policy
sub-optimal
ppts
also
due
properties
shown
lemma
taking
opt
opt
taking
expectation
sides
summing
inequalities
xt=0
cid:0
opt
cid:1
weighted
sum
power
consumption
time
slot
since
dividing
sides
letting
inﬁnite
opt
proceed
show
mean
rate
stability
task
buffers
denote
cid:0
opt
based
thus
|qi
p2ξ
|ti
≤p2ξ
since
limt
→+∞
cid:1
·pt
i.e.
√2ξ
t=0
lim
→+∞
|qi
lim
→+∞
|ti
i.e.
mean
rate
stable
algorithm
order
show
upper
bound
average
sum
queue
length
plug
stationary
randomized
policy
right-hand
side
i.e.
·xi∈n
taking
expectation
sides
inequality
summing
inequalities
dividing
sides
letting
inﬁnite
cid:0
opt
cid:1
cid:18
lim
cid:19
→+∞
t=0
aid
proposition
show
theorem
also
holds
algorithm
xi∈n
references
mao
zhang
s.h
song
letaief
power-delay
tradeoff
multi-user
mobile-edge
computing
systems
proc
ieee
global
commun
conf
globecom
washington
dec.
2016
1-6
gubbi
buyya
marusic
palaniswmi
internet
things
iot
vision
architectural
elements
future
directions
elsevier
future
gener
comp
syst.
vol
1645-1660
sep.
2013
european
telecommunications
standards
institute
etsi
mobile-edge
computing-introductory
technical
white
paper
sep.
2014
barbarossa
sardellitti
lorenzo
communicating
computing
distributed
mobile
cloud
computing
heterogeneous
networks
ieee
signal
process
mag.
vol
45-55
nov.
2014
mao
zhang
huang
letaief
mobile
edge
computing
survey
research
outlook
submitted
ieee
commun
surveys
tuts.
jan.
2017
online
available
https
//arxiv.org/pdf/1701.01090v1.pdf
satyanarayanan
bahl
caceres
davies
case
vm-based
cloudlets
mobile
computing
ieee
pervasive
comput.
vol
14-23
oct.
2009
kumar
y.-h.
cloud
computing
mobile
users
ofﬂoading
computation
save
energy
ieee
comput.
vol
51-56
apr
2010
kumar
liu
y.-h.
bhargava
survey
computation
ofﬂoading
mobile
systems
mobile
netw
appl.
vol
129-140
feb.
2013
shi
cao
zhang
edge
computing
vision
chanllenges
ieee
internet
things
vol
637-646
oct.
2016
cuervo
balasubramanian
cho
wolman
saroiu
chandra
bahl
maui
making
smartphones
last
longer
code
ofﬂoad
proc
acm
int
conf
mobile
syst.
appl.
serv
mobisys
san
francisco
jun
2010
49-62
kosta
aucinas
hui
mortier
zhang
thinkair
dynamic
resource
allocation
parallel
execution
cloud
mobile
code
ofﬂoading
proc
ieee
int
conf
comput
commun
infocom
orlando
mar
2012
945-953
zhang
wen
guan
kilper
luo
energy-optimal
mobile
cloud
computing
stochastic
wireless
channel
ieee
trans
wireless
commun.
vol
4569-4581
sep.
2013
munoz
iserte
vidal
optimization
radio
computational
resources
energy
efﬁciency
latency-
constrained
application
ofﬂoading
ieee
trans
veh
technol.
vol
4738-4755
oct.
2015
wang
yang
magurawalage
joint
energy
minimization
resource
allocation
c-ran
mobile
cloud
ieee
trans
cloud
comput.
vol
1-11
jan.
2016
zhang
letaief
joint
subcarrier
cpu
time
allocation
mobile
edge
computing
proc
ieee
global
commun
conf
globecom
washington
dec.
2016
1-6
huang
chae
kim
energy-efﬁcient
resource
allocation
mobile-edge
computation
ofﬂoading
ieee
trans
wireless
commun..
vol
1-12
dec.
2016
chen
decentralized
computation
ofﬂoading
game
mobile
cloud
computing
ieee
trans
parallel
distrib
syst.
vol
974-983
apr
2015
chen
jiao
efﬁcient
multi-user
computation
ofﬂoading
mobile-edge
cloud
computing
ieee/acm
trans
netw.
vol
2795-2808
oct.
2016
mao
zhang
letaief
dynamic
computation
ofﬂoading
mobile-edge
computing
energy
harvesting
devices
ieee
sel
areas
commun.
vol
3590-3605
dec.
2016
huang
chae
energy
efﬁcient
mobile
cloud
computing
powered
wireless
energy
transfer
ieee
sel
areas
commun.
vol
1757-1771
may
2016
chen
d2d
fogging
energy-efﬁcient
incentive-aware
task
ofﬂoading
framework
via
network-assisted
d2d
collaboration
ieee
sel
areas
commun.
vol
3887-3901
dec.
2016
huang
wang
niyato
dynamic
ofﬂoading
algorithm
mobile
computing
ieee
trans
wireless
commun.
vol
1991-1995
jun
2012
liu
mao
zhang
letaief
delay-optimal
computation
task
scheduling
mobile-edge
computing
systems
proc
ieee
int
symp
inf
theory
isit
barcelona
spain
jul
2016
1451-1455
jiang
mao
energy
delay
trade-off
cloud
ofﬂoading
multi-core
mobile
devices
proc
ieee
global
commun
conf
globecom
san
diego
dec.
2015
1-6
kwak
kim
lee
chong
dream
dynamic
resource
task
allocation
energy
minimization
mobile
cloud
systems
ieee
sel
areas
commun.
vol
2510-2523
dec.
2015
kim
kwak
chong
dual-side
dynamic
controls
cost
minimization
mobile
cloud
computing
systems
proc
int
symp
modeling
optimization
mobile
hoc
wireless
networks
wiopt
mumbai
india
may
2015
443-450
bonomi
milito
zhu
addepalli
fog
computing
role
internet
things
proc
first
edition
mcc
workshop
mobile
cloud
computing
helsinki
finland
aug.
2012
13-16
zhu
leung
yang
shu
collaborative
location-based
sleep
scheduling
wireless
sensor
networks
integrated
mobile
cloud
computing
ieee
trans
compt.
vol
1844-1858
jul
2015
chen
villa
gao
exploiting
ﬁne-grained
task-based
execution
multi-gpu
systems
proc
ieee
int
conf
cluster
comput.
austin
sep.
2011
386-394
miettinen
nurminen
energy
efﬁciency
mobile
clients
cloud
computing
proc
usenix
conf
hot
topics
cloud
comput
hotcloud
boston
jun
2010
1-7
vogeleer
memmi
jouvelot
coelho
energy/frequency
convexity
rule
modeling
experimental
validation
mobile
devices
proc
springer
int
conf
parallel
process
appl
mathematics
ppam
warsaw
poland
sep.
2013
793-803
burd
brodersen
processor
design
portable
systems
kluwer
vlsi
signal
process
syst.
vol
2/3
203-221
aug.
1996
cover
thomas
elements
information
theory
new
york
usa
wiley
1991
wang
aggarwal
wang
joint
energy-bandwidth
allocation
multiple
broadcast
channels
energy
harvesting
ieee
trans
commun.
vol
3842-3885
oct.
2015
zhang
qiu
y.-h.
game
theoretic
resource
allocation
overall
energy
minimization
mobile
cloud
computing
system
proc
acm/ieee
int
symp
low
power
electron
design
islped
redondo
beach
aug.
2012
279-284
ross
introduction
probability
models
cambridge
usa
academic
press
2014
neely
stochastic
network
optimization
application
communication
queueing
systems
san
rafael
usa
morgan
calypool
2010
boyd
vandenberghe
convex
optimization
cambridge
cambridge
university
press
2004
grippo
sciandron
convergence
block
nonlinear
gauss-seidel
method
convex
constraints
elsevier
oper
res
lett.
vol
127-136
apr
2000
beck
convergence
alternating
minimization
convex
programming
applications
iteratively
reweighted
least
squares
decomposition
schemes
siam
optim.
vol
185-209
jan.
2015
