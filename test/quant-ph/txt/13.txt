deﬁning
detecting
quantum
speedup
troels
rønnow,1
zhihui
wang,2
joshua
job,3
sergio
boixo,4
sergei
isakov,5
david
wecker,6
john
martinis,7
daniel
lidar,8
matthias
troyer∗1
1theoretische
physik
eth
zurich
8093
zurich
switzerland
2department
chemistry
center
quantum
information
science
technology
university
southern
california
los
angeles
california
90089
usa
3department
physics
center
quantum
information
science
technology
university
southern
california
los
angeles
california
90089
usa
4google
150
main
venice
beach
90291
5google
brandschenkestrasse
110
8002
zurich
switzerland
6quantum
architectures
computation
group
microsoft
research
redmond
98052
usa
7department
physics
university
california
santa
barbara
93106-9530
usa
8departments
electrical
engineering
chemistry
physics
center
quantum
information
science
technology
university
southern
california
los
angeles
california
90089
usa
development
small-scale
digital
analog
quantum
devices
raises
question
fairly
assess
compare
computational
power
classical
quantum
devices
detect
quantum
speedup
show
deﬁne
measure
quantum
speedup
various
scenarios
avoid
pitfalls
might
mask
fake
quantum
speedup
illustrate
discussion
data
randomized
benchmark
test
d-wave
two
device
503
qubits
comparing
performance
device
random
spin
glass
instances
limited
precision
simulated
classical
quantum
annealers
ﬁnd
evidence
quantum
speedup
entire
data
set
considered
obtain
inconclusive
results
comparing
subsets
instances
instance-by-instance
basis
results
one
particular
benchmark
rule
possibility
speedup
classes
problems
illustrate
quantum
speedup
elusive
depend
question
posed
introduction
interest
quantum
computing
originates
potential
quantum
computer
solve
certain
com-
putational
problems
much
faster
possible
classi-
cally
examples
factoring
integers
simulation
quantum
systems
shor
algorithm
ﬁnd
prime
factors
integer
time
scales
polynomially
number
digits
integer
factored
known
classical
algorithms
scale
ex-
ponentially
simulation
time
evolution
quantum
system
classical
computer
also
takes
ex-
ponential
resources
hilbert
space
particle
system
exponentially
large
quan-
tum
hardware
simulate
time
evolution
polynomial
complexity
examples
quantum
algorithm
exponen-
tially
faster
best
available
classical
algorithm
type
exponential
quantum
speedup
substantially
simpliﬁes
discussion
since
renders
details
classical
quantum
hardware
unimportant
according
extended
church-turing
thesis
classical
com-
puters
equivalent
polynomial
factors
sim-
ilarly
proposed
models
quantum
computation
polynomially
equivalent
ﬁnding
exponential
quantum
speedup
model-independent
cases
particular
small
devices
quan-
tum
speedup
polynomial
deﬁning
detecting
quan-
tum
speedup
becomes
subtle
one
subtlety
properly
deﬁne
hardness
problem
given
prior
knowledge
answer
discuss
deﬁne
quantum
speedup
show
term
may
refer
diﬀerent
quanti-
ties
depending
goal
study
particular
deﬁne
call
limited
quantum
speedup
essentially
speedup
relative
given
corresponding
classical
algorithm—and
explain
speedup
reliably
detected
illustrate
issues
com-
pare
performance
503-qubit
d-wave
two
dw2
device
classical
algorithms
running
standard
cpu
analyze
evidence
quantum
speedup
ran-
dom
spin
glass
problems
example
particularly
relevant
since
open
question
whether
quantum
annealing
quantum
adiabatic
algorithm
exhibit
quantum
speedup
problems
random
spin
glass
problems
interesting
benchmark
prob-
lem
though
necessarily
relevant
practi-
cal
applications
machine
learning
also
dis-
cuss
issues
might
mask
fake
quantum
speedup
considered
carefully
comparing
subop-
timal
algorithms
improperly
accounting
scaling
hardware
resources
defining
quantum
speedup
classical
quantum
scaling
ratio
time
solution
depends
problem
size
also
speciﬁc
problem
instance
purpose
comparison
becomes
another
fac-
tor
deciding
measure
performance
speciﬁcally
device
used
tool
solving
problems
question
interest
determine
device
better
hardest
problem
almost
possible
problem
instances
hand
inter-
ested
aspects
underlying
physics
device
might
suﬃce
ﬁnd
instances
subclass
instances
quantum
device
exhibits
speedup
two
questions
lead
diﬀerent
quantities
interest
cases
denote
time
used
clas-
sical
device
solve
problem
size
time
used
quantum
device
deﬁning
quantum
speedup
ratio
note
quantum
classical
case
deﬁnition
includes
speciﬁc
choice
algorithm
de-
vice
ﬁrst
question
arises
classical
algo-
rithm
compare
i.e.
leads
diﬀerent
deﬁnitions
quantum
speedup
five
diﬀerent
types
quantum
speedup
optimal
scenario
one
provable
quantum
speedup
exists
proof
classical
algo-
rithm
outperform
given
quantum
algorithm
per-
haps
best
known
example
grover
search
algo-
rithm
exhibits
provable
quadratic
speedup
best
possible
classical
algorithm
assuming
oracle
strong
quantum
speedup
deﬁned
using
performance
best
classical
algorithm
whether
algorithm
known
unfortu-
nately
performance
best
classical
algorithm
unknown
many
interesting
problems
case
factoring
example
known
classical
algorithms
super-polynomial
cost
number
digits
number
factored
cost
shor
algorithm
polynomial
however
proof
classical
exponential
lower-bound
factorization
known
less
ambitious
goal
therefore
desirable
thus
one
usually
deﬁnes
quantum
speedup
without
additional
adjectives
comparing
best
available
classical
algorithm
instead
best
possible
classical
algorithm
however
notion
quantum
speedup
depends
consensus
best
available
consensus
may
time-
community-dependent
absence
consensus
best
clas-
sical
algorithm
deﬁne
potential
quantum
speedup
speedup
compared
speciﬁc
classical
algorithm
set
classical
algorithms
example
simula-
tion
time
evolution
quantum
system
propagation
wave
function
quantum
computer
would
exponentially
faster
direct
integration
schr¨odinger
equation
classical
computer
poten-
tial
quantum
speedup
course
trivially
attained
deliberately
choosing
poor
classical
algorithm
example
factoring
using
classical
instead
quantum
pe-
riod
ﬁnding
ignoring
known
better
classical
factor-
ing
algorithms
one
must
make
genuine
attempt
compare
best
classical
algorithms
known
potential
quantum
speedup
might
short-lived
better
classical
algorithm
found
underlying
notions
quantum
speedup
availability
fully
coherent
universal
quantum
computer
weaker
scenario
one
device
merely
putative
candidate
quantum
information
processor
quantum
algorithm
designed
make
use
quantum
eﬀects
known
whether
quantum
eﬀects
provide
advantage
classical
algorithms
capture
scenario
central
interest
work
deﬁne
limited
quantum
speedup
speedup
obtained
comparing
speciﬁ-
cally
classical
algorithms
correspond
quantum
algorithm
sense
implement
algorithmic
approach
classical
hardware
context
analog
quantum
device
thought
result
decohering
device
since
unique
way
decohere
quantum
de-
vice
one
may
arrive
diﬀerent
corresponding
classical
algorithms
natural
example
quantum
annealing
im-
plemented
candidate
physical
quantum
information
processor
either
classical
simulated
annealing
classi-
cal
spin
dynamics
simulated
quantum
annealing
deﬁned
methods
comparison
limited
quan-
tum
speedup
would
demonstration
quantum
eﬀects
improve
annealing
algorithm
iii
classical
quantum
annealing
spin
glass
primary
example
use
problem
ﬁnding
ground
state
ising
spin
glass
model
de-
scribed
problem
hamiltonian
hising
cid:88
cid:88
hiσz
i∈v
jijσz
local
ﬁelds
binary
variables
coupling
jij
ﬁxed
deﬁne
problem
instance
ising
model
spins
occupy
vertices
graph
edge
set
solving
problem
problem
np-hard
already
planar
graphs
means
polynomial
time
algorithm
ﬁnd
ground
states
known
computational
eﬀort
existing
classical
algorithms
scales
exponentially
problem
size
np-hardness
refers
hardest
problems
typical
problem
benchmarks
graph
forms
two-dimensional
lattice
still
hard
since
zero
local
ﬁelds
ex-
ists
spin
glass
phase
zero
temperature
critical
temperature
spin
glasses
makes
problem
easier
spin
glasses
nonzero
solving
typical
problem
instance
nevertheless
non-trivial
known
algorithms
super-polynomial
scaling
observed
quantum
mechanics
expected
reduce
scaling
poly-
nomial
quantum
algorithm
might
still
scale
better
problem
size
classical
algorithm
use
simulated
annealing
simulated
quan-
tum
annealing
sqa
dw2
device
ﬁnd
ground
states
ising
model
see
methods
details
d-wave
devices
21–24
designed
physical
realizations
quantum
annealing
using
superconducting
ﬂux
qubits
programmable
couplers
tests
108-qubit
d-wave
one
dw1
device
shown
despite
decoherence
coupling
ther-
mal
bath
device
correlates
well
sqa
consistent
actually
performing
quantum
anneal-
ing
also
correlates
well
predictions
quantum
master
equation
consistent
governed
open
system
quantum
dynamics
well
understood
d-wave
devices
like
quantum
information
processing
device
must
error-corrected
order
overcome
eﬀects
deco-
herence
control
errors
error
correction
already
demonstrated
study
focuses
native
performance
device
annealing
methods
mentioned
heuristic
guaranteed
ﬁnd
global
optimum
single
annealing
run
ﬁnd
certain
instance-dependent
success
probability
deter-
mine
true
ground
state
energy
using
exact
belief
propagation
algorithm
perform
least
1000
repetitions
annealing
instance
count
often
ground
state
found
comparing
exact
result
use
estimate
success
probability
problem
instance
total
annealing
time
deﬁned
time
per-
form
annealing
runs
number
repeti-
tions
needed
ﬁnd
ground
state
least
probability
cid:24
log
log
cid:25
order
reduce
eﬀect
calibration
errors
dw2
advantageous
repeat
annealing
runs
several
diﬀerent
encodings
gauges
problem
instance
see
methods
details
fig
scaling
typical
time
ﬁnd
solution
constant
annealing
time
shown
typical
me-
dian
time
ﬁnd
ground
state
probability
spin
glasses
couplings
local
ﬁeld
sqa
envelope
curves
constant
shown
red
corresponds
minimal
time
given
problem
size
relevant
discussion
asymptotic
scal-
ing
annealing
times
given
units
monte
carlo
steps
mcs
one
mcs
corresponds
one
update
per
spin
note
particular
slope
small
much
ﬂatter
large
annealing
time
e.g.
mcs
4000
true
scaling
considerations
computing
quantum
speedup
let
ﬁrst
consider
subtleties
estimating
asymptotic
scaling
small
problem
sizes
inef-
ﬁciencies
small
problem
sizes
fake
mask
speedup
context
annealing
methods
opti-
mal
choice
annealing
time
turns
crucial
estimating
asymptotic
scaling
p8p32p72p128p200p288p392p51210-210-1100101102103104105106total
time
medianannealing
time
mcs
5105010020050010002000true
scalingp8p32p72p128p200p288p392p512linear
problem
size
pn100101102103104105106107108total
time
sqa
medianannealing
time
mcs
5105010020050010002000true
scaling
timal
performance
small
problem
sizes
therefore
interpreted
speedup
illustrate
show
figure
solid
line
true
speedup
ratio
scaling
sqa
actually
slowdown
misleading
fake
speedup
dashed
line
due
using
constant
excessively
long
annealing
time
sqa
since
initial
slow
increase
total
sqa
eﬀort
constant
annealing
time
lower
bound
scaling
true
eﬀort
speedup
slope
obtained
data—which
depends
inversely
sqa
eﬀort—is
upper
bound
conﬁrmed
figure
resource
usage
speedup
parallelism
related
issue
scaling
hardware
resources
problem
size
parallelism
classical
quan-
tum
devices
avoid
mistaking
parallel
speedup
quantum
speedup
need
scale
hardware
resources
computational
gates
memory
way
devices
compare
employ
resources
op-
timally
considerations
universal
need
carefully
applied
comparison
quantum
algorithm
device
classical
one
problem
size
dw2
uses
512
qubits
couplers
classical
logical
con-
trol
gates
solve
spin
glass
instance
spin
vari-
ables
denote
time
needs
solve
problem
tdw
classical
simulated
annealer
simulated
quantum
annealer
running
single
classical
cpu
hand
uses
ﬁxed
resources
independent
problem
size
denote
time
requires
solve
problem
tsa
consider
pure
annealing
times
relevant
asymptotic
scaling
rather
readout
setup
times
scale
subdominantly
large
problems
order
avoid
confusing
quantum
speedup
par-
allel
speedup
thus
consider
classical
counterpart
dw2
hypothetical
special
purpose
parallel
clas-
sical
simulated
annealing
device
hardware
scaling
dw2
simulated
annealing
simulated
quantum
annealing
perfectly
parallelizable
bi-
partite
chimera
graphs
realized
dw2
rea-
son
one
monte
carlo
step
consisting
one
at-
tempted
update
per
spin
performed
constant
time
since
spins
two
sublattices
updated
simultaneously
time
solve
problem
equivalent
classical
device
denoted
thus
related
time
tsa
taken
simulated
annealer
using
ﬁxed-size
classical
cpu
tsa
since
latter
needs
time
one
monte
carlo
step
former
performs
constant
time
quantum
part
speedup
estimated
comparing
times
required
two
devices
fig
pitfalls
detecting
speedup
shown
speedup
sqa
deﬁned
ratio
median
time
ﬁnd
solution
probability
sqa
two
cases
presented
sqa
run
optimally
i.e.
ratio
true
scaling
curves
shown
figure
asymptotic
speedup
solid
line
sqa
run
suboptimally
small
sizes
choosing
ﬁxed
large
annealing
time
10000
mcs
dashed
line
apparent
speedup
however
due
suboptimal
performance
small
sizes
indicative
true
asymptotic
behavior
given
solid
line
displays
slowdown
sqa
compared
asymptotic
scaling
sqa
illustrate
issues
consider
time
so-
lution
using
sqa
run
diﬀerent
ﬁxed
anneal-
ing
times
independent
problem
size
problem
instances
choose
random
couplings
jij
edges
perfect
chimera
graph
unit
cells
containing
8l2
spins
see
meth-
ods
set
local
ﬁelds
figure
shows
scaling
median
total
annealing
time
1000
dif-
ferent
random
instances
sqa
ﬁnd
solution
probability
0.99.
observe
constant
long
long
enough
ﬁnd
ground
state
almost
every
time
scaling
total
eﬀort
ﬁrst
relatively
ﬂat
total
eﬀort
rises
rapidly
one
reaches
problem
sizes
chosen
annealing
time
short
success
probabilities
thus
low
requiring
many
repetitions
figure
demonstrates
conclusion
drawn
annealing
simulated
device
asymptotic
scaling
ﬁxed
annealing
times
mis-
leading
conclude
asymptotic
scaling
initial
slow
increase
constant
instead
optimal
annealing
time
topt
needs
found
problem
size
lower
envelope
scaling
curves
indicated
red
figure
corresponds
total
eﬀort
optimal
size-dependent
annealing
time
topt
used
infer
asymptotic
scaling
fact
initial
relatively
ﬂat
slope
due
subop-
p8p32p72p128p200p288p392p512linear
problem
size
pn0123456tsa/tsqa·103suboptimaloptimal
hardware
scaling
giving
tdw
tsa
tdw
factor
1/n
speedup
calculation
thus
discounts
intrinsic
parallel
speedup
analog
device
whose
hardware
resources
scale
see
methods
alternative
derivation
leads
results
subleading
corrections
using
ﬁxed
size
device
eﬃciently
performance
d-wave
two
versus
sqa
couplings
jij
discrete
values
n/r
call
range
thus
range
pick
values
jij
choice
least
susceptible
calibra-
tion
errors
device
large
degeneracy
ground
states
cases
makes
ﬁnding
ground
state
somewhat
easier
opposite
end
consider
upper
limit
given
four
bits
accuracy
couplings
dw2
problem
instancess
harder
since
fewer
degenerate
minima
also
suﬀer
calibration
errors
device
supplementary
material
present
additional
results
comparing
devices
performance
optimizer
comparing
scaling
hard
problem
instances
goal
compare
performance
devices
optimizers
one
interested
solving
almost
problem
instances
case
run
devices
way
small
fraction
problems
solved
lead
speedup
deﬁned
ratio
quantiles
time
solution
emphasis
high
quantiles
discuss
sec
complementary
question
ask
whether
device
exhibits
better
performance
another
problems
answer
question
compare
time
solution
individually
problem
instance
consider
quantiles
ratio
time
solution
discuss
approach
sec
complementary
distinction
wall-clock
time
denoting
full
time
solution
pure
an-
nealing
time
wall-clock
time
total
time
ﬁnd
solution
relevant
quantity
one
inter-
ested
performance
device
applications
used
ref
includes
setup
cooling
annealing
readout
times
dw2
setup
annealing
measurement
time
classical
anneal-
ing
codes
pure
annealing
time
simply
rta
number
repetitions
time
used
single
annealing
run
relevant
quantity
one
interested
intrinsic
physics
annealing
processes
scaling
larger
problem
sizes
future
devices
discuss
wall-clock
pure
annealing
times
pure
annealing
time
start
analysis
focusing
pure
annealing
times
show
figure
scaling
time
ﬁnd
ground
state
least
probability
0.99
various
quantiles
easiest
instances
hardest
two
diﬀerent
ranges
since
priori
know
hardness
given
problem
instance
assume
worst
case
perform
suﬃcient
number
repetitions
able
solve
even
hardest
problem
instances
hence
scaling
selected
high
quantile
apply
problem
instances
run
optimizer
three
cases
sqa
dw2
observe
suﬃ-
ciently
large
total
time
solution
scales
exp
reported
previously
sqa
origin
exponent
well
understood
exact
solvers
reﬂecting
treewidth
chimera
graph
see
methods
ref
similar
scaling
observed
heuristic
algorithms
sqa
codes
run
optimized
annealing
time
problem
size
dw2
minimal
annealing
time
20µs
longer
optimal
time
problem
sizes
see
methods
there-
fore
observed
slope
dw2
data
taken
lower
bound
asymptotic
scaling
even
observe
similar
scaling
classical
codes
dw2
problem
instances
ratio
quantiles
family
problem
instances
use
bench-
marking
tests
employ
couplings
jij
edges
8ll
cid:48
-vertex
subgraphs
chimera
graph
dw2
comprising
cid:48
unit
cells
cid:48
set
ﬁelds
since
nonzero
values
ﬁelds
destroy
spin
glass
phase
exists
zero
ﬁeld
thus
making
instances
easier
choose
values
algorithms
quantum
annealing
time
solution
depends
problem
in-
stance
often
possible
usually
irrelevant
experimentally
ﬁnd
hardest
problem
instance
preferable
decide
instead
fraction
prob-
lem
instances
one
wishes
ﬁnd
ground
state
deﬁnes
relevant
quantile
target
instances
consider
qth
percentile
fig
scaling
time
solution
ranges
panels
panels
shown
scaling
time
ﬁnd
ground
state
least
probability
0.99
various
quantiles
hardness
simulated
annealing
simulated
quantum
annealing
sqa
dw2
sqa
data
obtained
running
simulations
optimized
annealing
time
problem
size
dw2
annealing
time
20µs
shortest
possible
note
diﬀerent
vertical
axis
scales
dw2
sqa
trouble
solving
hardest
instances
large
problem
sizes
indicated
terminating
lines
highest
quantiles
maximum
number
repetitions
10000
sqa
least
32000
dw2
annealing
performed
would
needed
ﬁnd
ground
state
cases
scaling
plots
shown
figure
appropriate
speedup
quantity
ratio
quantiles
de-
noting
quantile
random
variable
deﬁne
srofq
tdw
tsa
tdw
plotting
quantity
dw2
figure
ﬁnd
evidence
limited
quantum
speedup
interesting
regime
large
quantiles
ranges
exception
50th
quantile
initial
slope
positive
becomes
large
enough
observe
turnaround
eventually
negative
slope
showing
outper-
forms
dw2
taking
account
discussed
sec
due
ﬁxed
suboptimal
annealing
times
speedup
deﬁned
upper
bound
conclude
p8p32p72p128p200p288p392p51210-310-210-1100101102103104105106107108total
time
range
1p8p32p72p128p200p288p392p51210-1100101102103104105106107108total
time
range
7p8p32p72p128p200p288p392p51210210310410510610710810910101011total
time
sqa
range
1p8p32p72p128p200p288p392p51210210310410510610710810910101011total
time
sqa
range
7p8p32p72p128p200p288p392p512linear
problem
size
pn10-1100101102103104105106107108total
time
range
1p8p32p72p128p200p288p392p512linear
problem
size
pn100101102103104105106107108109total
time
range
799
fig
speedup
ratio
quantiles
dw2
compared
instances
range
instances
range
shown
curves
median
50th
quantile
99th
quantile
gauges
used
plots
multiplied
512
speedup
value
512
directly
compares
one
dw2
processor
one
classical
cpu
dw2
exhibit
speedup
particular
benchmark
wall-clock
time
interesting
complexity
theory
point
view
instructive
also
compare
wall-clock
times
benchmarks
figure
observe
dw2
performs
similarly
run
single
classical
cpu
suﬃciently
large
problem
sizes
high
range
values
note
large
constant
programming
overhead
dw2
masks
exponen-
tial
increase
time
solution
obvious
plots
pure
annealing
time
fig
comparing
wall-clock
times
comparison
wall-clock
time
ﬁnd
solution
probability
0.99
running
single
cpu
dashed
lines
compared
dw2
solid
lines
using
gauges
range
range
shown
curves
median
50th
quantile
99th
quantile
large
constant
program-
ming
overhead
dw2
masks
exponential
increase
time
solution
obvious
plots
pure
annealing
time
results
single
gauge
shown
supplemen-
tary
material
instance-by-instance
comparison
total
time
solution
focus
question
whether
dw2
exhibits
limited
quantum
speedup
fraction
instances
benchmark
set
end
per-
form
individual
comparisons
instance
show
figure
6a-b
ratios
time
solution
dw2
considering
pure
annealing
time
ﬁnd
wide
scatter
surprising
since
previously
found
dw1
performs
like
sim-
ulated
quantum
annealer
correlates
less
well
simulated
classical
annealer
ﬁnd
dw2
sometimes
10×
faster
pure
annealing
time
many
cases
100×
slower
considering
wall-clock
times
advantage
dw2
seen
figure
6a-b
instances
tends
p8p32p72p128p200p288p392p5120.00.20.40.60.81.0
tsa
tdw
q·512/na
range
1p8p32p72p128p200p288p392p512linear
problem
size
pn012345
tsa
tdw
q·512/nb
range
750
p8p32p72p128p200p288p392p512101102103104105106107108total
time
range
1p8p32p72p128p200p288p392p512linear
problem
size
pn102103104105106107108total
time
range
799
fig
instance-by-instance
comparison
annealing
times
wall-clock
times
shown
scatter
plot
pure
annealing
time
dw2
compared
simulated
classical
annealer
using
average
gauges
dw2
dw2
compared
dw2
compared
color
scale
indicates
number
instances
square
instances
diagonal
red
line
faster
dw2
faster
classically
instances
dw2
ﬁnd
solution
10000
repetitions
per
gauge
shown
top
frame
instances
found
panels
show
wall-clock
times
using
single
gauge
dw2
panels
show
wall-clock
time
dw2
using
gauges
503
cases
disappear
since
penalized
need
program-
ming
device
multiple
diﬀerent
gauge
choices
see
methods
figure
6c-d
shows
one
gauge
choice
instances
dw2
faster
many
instances
never
ﬁnds
solution
using
gauges
dw2
ﬁnds
solution
cases
always
slower
classical
annealer
clas-
sical
cpu
seen
figure
6e-f.
dw2
sometimes
faster
single
classical
cpu
overall
performance
dw2
better
comparable
pure
annealing
time
considered
diﬀerence
results
ref
due
use
optimized
classical
codes
using
full
cpu
comparison
opposed
use
generic
optimization
codes
using
single
cpu
core
ref
quantiles
ratio
comparisons
absolute
time
solution
lim-
ited
importance
compared
real
question
scaling
give
insight
behavior
future
devices
solve
larger
problems
section
ﬁnd
evidence
limited
quantum
speedup
con-
sidering
instances
consider
instead
whether
speedup
subset
problem
instances
end
study
scaling
ratios
time
solution
individual
instances
display
fig-
ure
scaling
various
quantiles
ratio
cid:20
cid:21
tdw
cid:20
tsa
tdw
cid:21
sqofr
quantiles
bend
suﬃciently
large
evidence
limited
quan-
tum
speedup
yet
seems
indication
speedup
compared
high
quan-
tiles
however
reasons
discussed
sec
one
must
careful
overinterpret
solid
evidence
speedup
since
instances
con-
tributing
run
optimal
annealing
time
moreover
discussed
supplementary
material
ﬁnd
evidence
limited
quantum
speedup
thus
perhaps
encouraging
per-
10-110010110210310410510-1100101102103104105total
time
tdw
range
1pure
annealing
timeaveraging
gauges10-110010110210310410510-1100101102103104105c
range
1wall-clock
timesingle
gauge10-110010110210310410510-1100101102103104105e
range
1wall-clock
time16
gauges10-1100101102103104105total
time
tsa
10-1100101102103104105total
time
tdw
range
710-1100101102103104105total
time
tsa
10-1100101102103104105d
range
710-1100101102103104105total
time
tsa
10-1100101102103104105f
range
7sa
fasterdw2
faster02468101214161820instances
ported
sqa
data
shown
figure
plausible
long
growing
annealing
time
become
counterproductive
due
coupling
thermal
tdw
bath
deﬁnition
tdw
topt
added
explicit
dependence
an-
nealing
time
ﬁxed
annealing
time
thus
tdw
tdw
topt
sopt
assumption
topt
small
suﬃciently
large
optimal
annealing
time
grows
thus
must
problem
size
topt
hence
special
prob-
topt
lem
size
also
sopt
however
mentioned
section
minimal
annealing
time
20µs
longer
optimal
time
problem
sizes
see
supplementary
material
i.e.
503
case
therefore
decreasing
function
suﬃciently
large
indeed
observe
results
recall
figure
since
sopt
sopt
follows
sopt
must
decreasing
function
range
values
least
shows
slowdown
conclusion
holds
also
case
optimal
annealing
times
instance-by-instance
comparison
conclusion
drawn
subset
in-
stances
corresponding
high
quantiles
sqofr
increasing
function
lim-
ited
quantum
speedup
may
may
persist
larger
problem
sizes
optimal
annealing
times
used
discussion
work
discussed
challenges
prop-
erly
deﬁning
assessing
quantum
speedup
used
comparisons
dw2
simulated
classical
quantum
annealing
illustrate
challenges
strong
provable
quantum
speedup
implying
speedup
quantum
algorithm
device
classical
algo-
rithm
elusive
goal
cases
one
thus
usu-
ally
deﬁnes
quantum
speedup
speedup
compared
best
available
classical
algorithm
intro-
duced
notion
limited
quantum
speedup
referring
restricted
comparison
corresponding
clas-
sical
algorithms
solving
task
quantum
annealer
compared
classical
annealing
algorithm
quantum
speedup
easily
deﬁned
detected
case
exponential
speedup
de-
tails
quantum
classical
hardware
matter
since
contribute
subdominant
polynomial
fac-
tors
case
unknown
polynomial
quantum
speedup
one
must
careful
fairly
compare
clas-
sical
quantum
devices
particular
scale
hardware
resources
manner
otherwise
par-
fig
speedup
quantiles
ratio
dw2
compared
asymptotic
speedup
visible
quantiles
evidence
limited
quantum
speedup
relative
seen
quantiles
higher
median
figure
multiplied
512
speedup
value
512
directly
compares
one
dw2
processor
one
classical
cpu
spective
search
limited
quantum
speedup
work
needed
establish
result
persists
instances
one
sure
annealing
time
optimal
arguments
speedup
dw2
let
consider
detail
speedup
re-
sults
discussed
argued
apparent
limited
quantum
speedup
seen
results
fig-
ure
must
treated
care
due
suboptimal
annealing
time
might
tempting
argue
strictly
speaking
comparison
suboptimal-time
instances
used
claiming
slowdown
either
i.e.
simply
infer
dw2
be-
optimal-time
instances
basing
analysis
suboptimal
times
however
let
make
assumption
along
total
time
optimal
annealing
time
topt
also
grows
problem
size
assumption
sup-
p8p32p72p128p200p288p392p51210-610-510-410-310-210-1100101102103
tsa/tdw
q·512/na
range
1p8p32p72p128p200p288p392p512linear
problem
size
pn10-410-310-210-1100101102
tsa/tdw
q·512/nb
range
799
allel
speedup
might
mistaken
hide
quantum
speedup
experimental
determination
quantum
speedup
suﬀers
problem
measurements
lim-
ited
ﬁnite
problem
sizes
inter-
ested
asymptotic
behavior
large
arrive
reliable
extrapolation
advantageous
focus
scaling
analysis
part
execution
time
be-
comes
dominant
large
problem
sizes
example
pure
annealing
time
total
wall-clock
time
problem
size
furthermore
need
ensure
neither
quantum
device
classical
algorithm
run
suboptimally
since
might
hide
fake
quantum
speedup
time
solution
depends
prob-
lem
size
also
speciﬁc
problem
instance
one
needs
carefully
choose
relevant
quantity
benchmark
argued
order
judge
performance
many
possible
inputs
randomized
benchmark
test
one
needs
study
high
quantiles
deﬁne
speedup
considering
ratio
quan-
tiles
time
solution
hand
one
interested
ﬁnding
whether
speedup
subset
problem
instances
one
instead
perform
instance-by-instance
comparison
focusing
quantiles
ratio
time
solution
note
yet
known
whether
quantum
annealer
even
perfectly
coherent
adiabatic
quantum
optimizer
exhibit
limited
quantum
speedup
although
promising
indications
sim-
ulation
experiments
spin
glass
materials
experimental
tests
thus
important
chose
focus
benchmark
problem
random
zero-
ﬁeld
ising
problems
parametrized
range
cou-
plings
ﬁnd
evidence
limited
quantum
speedup
dw2
relative
simulated
annealing
particular
benchmark
set
considered
ra-
tio
quantiles
time
solution
relevant
quantity
performance
device
optimizer
note
random
spin
glass
problems
in-
teresting
important
physics
problem
may
relevant
benchmark
practical
applications
benchmarks
may
studied
focus
subsets
problem
instances
instance-by-instance
comparison
observe
possibil-
ity
limited
quantum
speedup
fraction
instances
however
since
dw2
runs
subop-
timal
annealing
time
corresponding
prob-
lem
instances
observed
speedup
may
artifact
attempting
solve
smaller
problem
sizes
using
excessively
long
annealing
time
diﬃculty
overcome
ﬁxing
issue
suboptimal
an-
nealing
times
e.g.
ﬁnding
problem
classes
annealing
time
demonstrably
already
optimal
several
candidate
explanations
ab-
sence
clear
quantum
speedup
tests
perhaps
quantum
annealing
simply
provide
advan-
tages
simulated
quantum
annealing
clas-
sical
algorithms
problem
class
studied
perhaps
noisy
implementation
dw2
realize
quantum
speedup
thus
better
classical
devices
alternatively
speedup
might
masked
calibration
errors
improvements
might
arise
error
correction
problem
classes
might
exhibit
speedup
future
studies
probe
alternatives
aim
determine
whether
one
ﬁnd
class
problem
instances
unambiguous
speedup
classical
hardware
observed
methods
simulated
annealing
simulated
annealing
per-
forms
monte
carlo
simulation
model
starting
random
initial
state
high
temperature
course
simulation
temperature
lowered
towards
zero
end
annealing
schedule
low
temperature
spin
conﬁguration
system
ends
local
minimum
repeating
simulation
many
times
one
may
hope
ﬁnd
global
minimum
speciﬁcally
performed
sequentially
iterating
spins
proposing
ﬂip
based
metropolis
algorithm
using
boltzmann
weight
conﬁguration
ﬁnite
temperature
annealing
schedule
linearly
increase
inverse
temperature
time
initial
value
0.1
ﬁnal
value
case
couplings
use
highly
optimized
multispin-coded
algorithm
based
refs
algorithm
performs
updates
copies
parallel
updating
simulations
use
code
optimized
bipartite
lattices
imple-
mentations
simulated
annealing
codes
available
ref
used
code
code
code
cid:88
quantum
annealing
perform
quantum
annealing
one
maps
ising
variables
pauli
z-matrices
adds
transverse
magnetic
ﬁeld
x-direction
induce
quan-
tum
ﬂuctuations
thus
obtaining
time-dependent
quantum
hamiltonian
hising
annealing
schedule
starts
time
transverse
ﬁeld
term
i.e.
cid:29
kbt
temperature
kept
constant
system
simple
quantum
state
excellent
approx-
imation
spins
aligned
direction
corresponding
uniform
superposition
computational
basis
states
products
eigenstates
annealing
process
problem
hamiltonian
magnitude
increased
transverse
ﬁeld
decreased
ending
couplings
much
larger
temperature
max
maxij
|jij|
maxi
|hi|
cid:29
kbt
point
system
trapped
local
minimum
repeating
process
one
may
hope
ﬁnd
global
minimum
quantum
annealing
viewed
ﬁnite-temperature
variant
adiabatic
quantum
algorithm
simulated
quantum
annealing
simulated
quantum
annealing
sqa
annealing
algorithm
based
discrete-time
path-integral
quantum
monte
carlo
simula-
tions
transverse
ﬁeld
ising
model
following
annealing
schedule
constant
low
temperature
using
monte
carlo
dynamics
instead
open
system
evolution
quantum
system
amounts
sampling
world
line
conﬁgurations
quantum
hamiltonian
slowly
changing
couplings
algorithm
used
similar
ref
uses
cluster
updates
along
imaginary
time
direction
typically
time
slices
annealing
schedule
linear
shown
figure
ising
couplings
ramped
linearly
transverse
ﬁeld
ramped
linearly
time
layout
d-wave
two
vesuvius
chip
chimera
graph
dw2
used
tests
shown
figure
unit
cell
balanced
k4,4
bipartite
graph
ideal
chimera
graph
512
qubits
degree
vertex
scaling
analysis
considered
cid:48
rectangular
sub-lattices
chimera
graph
restricted
simulations
tests
dw2
subset
functional
qubits
within
subgraphs
generally
2cl2-vertex
chimera
graph
comprises
grid
unit
cells
so-called
triad
construction
ref
used
embed
complete
l-vertex
graph
treewidth
2cl2-vertex
chimera
graph
comprising
grid
unit
cells
treewidth
512-vertex
chimera
graph
shown
figure
33.
dynamic
programming
always
ﬁnd
true
ground
state
corresponding
ising
model
time
exponential
treewidth
i.e.
scales
exp
dependent
hamiltonian
cid:80
annealing
schedule
d-wave
two
device
nomi-
nally
dw2
performs
annealing
implementing
time-
hising
however
reality
transverse
ﬁeld
varies
somewhat
actual
hamiltonian
realized
de-
scribed
accurately
hising
annealing
schedules
used
device
shown
ﬁgure
used
minimal
annealing
time
20µs
provided
device
since
always
gave
shortest
total
time
solution
see
source
minimal
annealing
time
engineering
restrictions
dw2
four
annealing
lines
synchro-
nization
becomes
harder
faster
annealers
ﬁltering
input
control
lines
introduces
additional
distortion
annealing
control
dw2
programmed
providing
sets
couplings
jij
local
longitudinal
ﬁelds
together
deﬁne
problem
instance
specifying
hising
number
repetitions
annealing
performed
annealing
time
number
parameters
included
wall-clock
results
described
cid:88
fig
qubits
couplers
d-wave
two
de-
vice
dw2
vesuvius
chip
consists
two-
dimensional
square
lattice
eight-qubit
unit
cells
open
boundary
conditions
qubits
denoted
circles
connected
programmable
inductive
couplers
shown
lines
qubits
512
qubits
de-
vice
located
university
southern
california
used
work
503
qubits
marked
green
couplers
connecting
functional
programmed
values
variation
calibration
er-
rors
sometimes
lead
ground
states
model
realized
device
diﬀerent
perfect
model
overcome
problems
advantageous
perform
annealing
device
multiple
encodings
prob-
lem
instance
couplers
device
realize
diﬀerent
encodings
use
gauge
freedom
realiz-
ing
ising
spin
glass
qubit
freely
deﬁne
two
qubits
states
corresponds
formally
corresponds
gauge
trans-
formation
changes
spins
couplings
jij
aiajjij
aihi
simu-
lations
invariant
gauge
transformation
due
calibration
errors
break
gauge
symmetry
results
returned
dw2
aiσz
gauge
averaging
d-wave
device
calibration
inaccuracies
cause
couplings
jij
realized
dw2
slightly
diﬀerent
intended
success
probability
one
annealing
run
denoted
probability
failing
ﬁnd
ground
state
independent
repetitions
annealing
runs

14.7
0.3
51.0
0.2
14.8
0.3
53.0
0.2
14.8
0.3
57.9
0.2
14.9
0.4
60.6
0.2
15.0
0.4
64.5
0.2
15.2
0.3
68.3
0.2
126
15.6
0.2
73.1
0.2
158
15.5
0.2
78.0
0.2
198
15.5
0.2
80.8
0.2
238
15.7
0.2
83.5
0.2
284
15.8
0.2
83.6
0.1
332
16.0
0.3
87.1
0.2
385
16.6
1.0
87.1
0.6
439
16.6
0.1
90.4
0.1
503
16.6
0.2
90.5
0.1
table
wallclock
times
dw2
listed
mea-
sured
programming
times
annealing
plus
readout
times
pure
annealing
time
20µs
dw2
various
problem
sizes
238
284
332
385
439
503
10000
1000
2000
5000
table
repetitions
annealing
runs
used
dw2
table
summarizes
total
number
repetitions
used
estimate
success
probabilities
dw2
various
system
sizes
thus
use
geometric
mean
scaling
analysis
wall-clock
annealing
times
show
results
mainly
pure
annealing
times
also
wall
clock
times
pure
annealing
time
repetitions
straightforwardly
de-
ﬁned
tanneal
rta
wall
clock
times
include
time
programming
cooling
annealing
readout
communication
performed
tests
dw2
varying
numbers
repetitions
performed
linear
regression
analysis
total
wall
clock
time
problem
size
form
rtr
total
preprocessing
time
total
run
time
per
repetition
-spin
problem
values
summarized
table
numbers
obtain
total
wall
clock
time
annealing
runs
split
gauges
r/g
annealing
runs
ttotal
gtp
rtr
calculate
pure
annealing
times
simulated
an-
nealer
determine
total
eﬀort
units
monte
carlo
updates
attempted
spin
ﬂips
convert
time
dividing
number
updates
codes
perform
per
second
classical
reference
cpu
8-core
intel
xeon
e5-2670
cpu
introduced
around
time
dw2
obtain
wall-clock
times
measure
actual
time
needed
perform
simulation
intel
xeon
fig
annealing
schedules
amplitude
median
transverse
ﬁeld
decreasing
blue
longi-
tudinal
couplings
increasing
red
function
time
device
temperature
18mk
indicated
black
horizontal
dashed
line
linear
annealing
sched-
ule
used
simulated
quantum
annealing
success
probability
total
success
proba-
bility
ﬁnding
ground
state
least
repetitions
thus
number
repetitions
needed
ﬁnd
ground
state
least
probability
found
solving
i.e.
following
splitting
repetitions
r/g
repetitions
gauge
choices
success
probabil-
ities
total
success
probability
becomes
r/g
denote
geometric
mean
success
probabil-
ities
individual
gauges
1/g
g=1
written
form
cid:89
g=1
cid:89
0.00.20.40.60.81.00123456789energy
ghz
schedulea
t0.00.20.40.60.81.0time
t/tf0.00.20.40.60.81.01.21.41.6energy
a.u
sqa
schedulea
/rt
fig
10.
optimal
annealing
times
simulated
annealer
d-wave
device
shown
total
eﬀort
function
annealing
time
various
quantiles
problems
see
supplementary
information
minimum
total
eﬀort
determines
optimal
annealing
time
topt
dw2
ﬁnd
monotonically
increasing
total
eﬀort
meaning
optimal
time
topt
always
shorter
minimal
annealing
time
20µs
e5-2670
cpu
since
multi-spin
codes
perform
repetitions
parallel
always
make
least
1024
rep-
etitions
running
threads
cores
causes
initially
ﬂatter
scaling
wall-clock
times
compared
pure
annealing
times
measured
initialization
time
includes
preparations
needed
algorithm
run
spin
ﬂip
rate
computed
quantile
503
qubits
smaller
system
sizes
lower
quan-
tiles
spin
ﬂip
rate
lower
since
problems
hard
enough
beneﬁt
parallelization
several
cores
optimal
annealing
times
discussed
main
text
need
determine
optimal
annealing
time
topt
every
problem
size
order
make
meaningful
extrapolations
time
ﬁnd
solution
determine
topt
perform
annealing
runs
diﬀerent
annealing
times
determine
success
probabilities
1000
instances
required
number
repetitions
ﬁnd
ground
state
probability
total
eﬀort
di-
verges
minimum
optimal
annealing
time
topt
reason
short
success
probability
goes
zero
leads
diverg-
ing
total
eﬀort
large
time
also
grows
since
one
always
needs
perform
least
one
annealing
run
total
eﬀort
thus
bounded
figure
left
plot
various
quantiles
total
eﬀort
simulated
annealer
function
determine
optimal
annealing
time
topt
dw2
ﬁnd
shown
figure
right
minimal
annealing
time
20µs
always
longer
optimal
time
thus
always
use
device
suboptimal
mode
consequence
scaling
time
solution
underestimated
explained
detail
main
text
alternative
consideration
parallel
versus
quantum
speedup
consideration
disentangle
paral-
lel
quantum
speedup
may
seem
natural
as-
sume
ﬁxed
computational
resources
given
device
show
leads
scaling
might
tempted
deﬁne
speedup
case
tsa
/tdw
however
manner
fraction
n/512
qubits
used
classical
code
uses
available
cpu
fully
independently
problem
size
suboptimal
use
dw2
may
incorrectly
interpreted
speedup
issue
would
appear
comparing
classical
analog
annealer
classical
sim-
ulated
annealer
discussion
optimal
annealing
times
need
ensure
optimal
implementation
correctly
assess
speedup
dw2
similarly
constructed
classical
analog
annealer
means
one
always
attempt
make
use
entire
device
perform
many
annealing
runs
parallel
possible
let
denote
ma-
chine
size
e.g.
512
dw2
case
102103104105104105106107108109total
annealing
time
mcs
range
1101102101102103104105106total
annealing
time
range
1102103104105annealing
time
mcs
1051061071081091010total
annealing
time
mcs
range
7101102annealing
time
102103104105106total
annealing
time
range
799
deﬁne
new
optimized
annealing
time
opt
tdw
cid:98
m/n
cid:99
correct
speedup
case
tsa
opt
tsa
tdw
cid:23
cid:22
omitting
ﬂoor
function
cid:98
cid:99
gives
subdom-
inant
corrections
limit
recover
conclusion
speedup
function
includes
fac-
tor
proportional
1/n
validated
yet
another
per-
spective
focuses
annealing
time
instead
em-
bedding
cid:98
m/n
cid:99
diﬀerent
instances
parallel
embed
replicas
given
instance
replica
results
guess
ground
state
energy
ith
run
take
minr
proposed
solution
run
replicas
indepen-
dent
equal
probability
ﬁnding
ground
state
using
replicas
probability
least
one
ﬁnd
ground
state
cid:48
also
probability
ground
state
energy
ith
run
repeating
argument
leading
number
repetitions
required
ﬁnd
ground
state
least
probability
cid:24
log
log
cid:48
cid:25
cid:24
log
log
cid:25
cid:48
focusing
pure
annealing
time
opt
tdw
tar
yields
tar
cid:48
acknowledgements
thank
allen
amin
farhi
mohseni
neven
mcgeoch
useful
discussions
com-
ments
grateful
zintchenko
providing
simulated
annealing
code
publication
code
ref
project
supported
swiss
national
science
foundation
national
competence
center
research
nccr
qsit
aro
muri
grant
w911nf-11-1-0268
aro
grant
number
w911nf-12-1-0523
lockheed
martin
corporation
microsoft
research
acknowledge
hospitality
aspen
center
physics
supported
nsf
grant
phy-1066293
shor
algorithms
quantum
computation
dis-
crete
logarithms
factoring
foundations
computer
science
1994
proceedings.
35th
annual
symposium
124–134
20-22
nov
1994
url
http
//dx.doi.org/
10.1109/sfcs.1994.365700
feynman
simulating
physics
computers
in-
ternational
journal
theoretical
physics
467–488
1982
url
http
//dx.doi.org/10.1007/bf02650179
lloyd
universal
quantum
simulators
science
273
1073–1078
1996
url
http
//www.sciencemag.org/
content/273/5278/1073.abstract
berry
childs
cleve
kothari
somma
exponential
improvement
precision
simulating
sparse
hamiltonians
arxiv:1312.1414
2013
url
http
//arxiv.org/abs/1312.1414
parberry
parallel
speedup
sequential
machines
defense
parallel
computation
thesis
sigact
news
54–67
1986
smolin
smith
vargo
oversimplifying
quantum
factoring
nature
499
163–165
2013
url
http
//dx.doi.org/10.1038/nature12290
kadowaki
nishimori
quantum
annealing
transverse
ising
model
phys
rev
5355–
5363
1998
url
http
//link.aps.org/doi/10.1103/
physreve.58.5355
farhi
quantum
adiabatic
evolution
algorithm
applied
random
instances
np-complete
problem
science
292
472–475
2001
url
http
//dx.doi.org/
10.1126/science.1057726
grover
quantum
mechanics
helps
searching
needle
haystack
physical
review
letters
325–
328
1997
url
http
//link.aps.org/doi/10.1103/
physrevlett.79.325
bennett
bernstein
brassard
vazirani
strengths
weaknesses
quantum
computing
siam
journal
computing
1510–1523
1997
url
http
//dx.doi.org/10.1137/s0097539796300933
papageorgiou
traub
measures
quantum
computing
speedup
phys
rev
022316
2013
url
http
//link.aps.org/doi/10
1103/physreva.88.022316
pomerance
tale
two
sieves
notices
amer
math
soc
1473–1485
1996
url
http
//www.ams
org/notices/199612/pomerance.pdf
proof
seems
unlikely
found
time
soon
since
would
imply
factoring
com-
plexity
class
polynomial
thus
non-
deterministic
polynomial
distinct
solving
long-
standing
versus
question
example
may
case
though
seems
unlikely
classiﬁed
polynomial-time
factoring
algorithm
available
parts
intelligence
community
compare
quantum
annealing
classical
simu-
lated
annealing
simulated
quantum
annealing
study
another
example
limited
quantum
speedup
would
shor
factoring
algorithm
running
fully
co-
herent
quantum
computer
classical
computer
period
ﬁnding
using
quantum
circuit
re-
placed
classical
period
ﬁnding
algorithm
barahona
computational
complexity
ising
spin
glass
models
journal
physics
mathematical
general
3241
1982
url
http
//stacks.iop
org/0305-4470/15/i=10/a=028
helmut
katzgraber
firas
hamze
glassy
chimeras
blind
quantum
speedup
designing
bet-
ter
benchmarks
quantum
annealing
machines
2014
url
http
//arxiv.org/abs/1401.1546
1401.1546
kirkpatrick
gelatt
vecchi
opti-
mization
simulated
annealing
science
220
671–680
1983
url
http
//dx.doi.org/10.1126/science
220.4598.671
martoˇn´ak
santoro
tosatti
quan-
tum
annealing
path-integral
monte
carlo
method
two-dimensional
random
ising
model
phys
rev
094203
2002
url
http
//link.aps.org/doi/10
1103/physrevb.66.094203
santoro
martoˇn´ak
tosatti
car
the-
ory
quantum
annealing
ising
spin
glass
science
295
2427–2430
2002
url
http
//dx.doi.org/10
1126/science.1068774
harris
experimental
investigation
eight-
qubit
unit
cell
superconducting
optimization
pro-
cessor
phys
rev
024511
2010
url
http
//link.aps.org/doi/10.1103/physrevb.82.024511
johnson
scalable
control
system
superconducting
adiabatic
quantum
optimization
proces-
sor
superconductor
science
technology
065004
2010
url
http
//stacks.iop.org/0953-2048/23/i=
6/a=065004
berkley
scalable
readout
system
superconducting
adiabatic
quantum
optimization
sys-
tem
superconductor
science
technology
105014
2010
url
http
//stacks.iop.org/0953-2048/23/i=
10/a=105014
johnson
quantum
annealing
man-
ufactured
spins
nature
473
194–198
2011
url
http
//dx.doi.org/10.1038/nature10012
boixo
quantum
annealing
one
hundred
qubits
2013
url
http
//arxiv.org/abs/
1304.4595
1304.4595
smolin
smith
classical
signature
quantum
annealing
2013
url
http
//arxiv.org/abs/1305
4904.
arxiv:1305.4904
wang
comment
classical
signature
quantum
annealing
2013
url
http
//arxiv.org/
abs/1305.5837
arxiv:1305.5837
boixo
albash
spedalieri
chancellor
lidar
experimental
signature
programmable
quantum
annealing
2012
url
http
//arxiv.org/
abs/1212.1739
1212.1739
pudenz
albash
lidar
error
corrected
quantum
annealing
hundreds
qubits
arxiv:1307.8190
2013
url
http
//arxiv.org/abs/
1307.8190
dechter
bucket
elimination
unifying
framework
reasoning
artiﬁcial
intelligence
113
41–85
1999
one
principle
look
optimal
annealing
time
individual
problem
instance
instead
determine
averaged
optimal
annealing
time
topt
problem
size
annealing
many
instances
various
annealing
times
use
future
problems
size
mcgeoch
wang
experimental
evaluation
adiabatic
quantum
system
combinatorial
opti-
mization
proceedings
2013
acm
conference
computing
frontiers
2013
young
katzgraber
absence
three-dimensional
spin
almeida-thouless
line
glasses
phys
rev
lett
207203
2004
url
http
//link.aps.org/doi/10.1103/physrevlett.93
207203
choi
minor-embedding
adiabatic
quantum
com-
putation
minor-universal
graph
design
quantum
information
processing
343–353
2011
url
http
//dx.doi.org/10.1007/s11128-010-0200-3
sarandy
lidar
adiabatic
quantum
com-
putation
open
systems
physical
review
letters
250503–
2005
url
http
//link.aps.org/doi/10
1103/physrevlett.95.250503
important
exception
ref
example
yet
admit
implementation
physical
de-
vice
brooke
bitko
rosenbaum
aeppli
quantum
annealing
disordered
magnet
url
http
//www
science
284
779–781
1999
sciencemag.org/content/284/5415/779.abstract
http
//www.sciencemag.org/content/284/5415/779.full.pdf
fact
problems
solved
faster
classical
hardware
dw2
raises
possibility
hybrid
approach
beneﬁts
solving
problem
instance
using
selecting
best
solution
found
example
possible
randomized
benchmark
tunable
hardness
knob
clause
den-
sity
max-2sat
problem
allow
ﬁne-tuned
exploration
performance
potential
quantum
annealer
purely
randomized
benchmark
used
also
proposed
em-
bedding
spin-glass
problems
chimera
graph
ﬁnite
critical
temperature
might
yield
problem
classes
better
suited
benchmarks
quan-
tum
annealing
bhanot
duke
salvador
fast
algorithm
cyber
205
simulate
ising
model
stat
phys
985–1002
1986
url
link.springer.com/
content/pdf/10.1007/bf01011918.pdf
heuer
h.-o
fast
vectorized
fortran
program
monte
carlo
simulation
three-dimensional
ising
system
comput
phys
commun
387
398
1990
url
http
//www.sciencedirect.com/science/
article/pii/0010465590901865
isakov
zintchenko
rønnow
troyer
op-
timized
simulated
annealing
ising
spin
glasses
2014
url
http
//arxiv.org/abs/1401.1084
1401.1084
martoˇn´ak
santoro
tosatti
quan-
tum
annealing
path-integral
monte
carlo
method
two-dimensional
random
ising
model
phys
rev
094203
2002
url
http
//link.aps.org/doi/10
1103/physrevb.66.094203
somma
nagaj
kieferov´a
quantum
speedup
quantum
annealing
physical
review
letters
109
050501–
2012
url
http
//link.aps.org/doi/
10.1103/physrevlett.109.050501
santra
quiroz
steeg
lidar
max
2-sat
108
qubits
arxiv:1307.3931
2013
url
http
//arxiv.org/abs/1307.3931
