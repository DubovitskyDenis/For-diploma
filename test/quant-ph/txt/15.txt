interactive
proofs
quantum
finite
automata
harumichi
nishimura†
tomoyuki
yamakami‡
abstract
following
early
work
dwork
stockmeyer
interactive
proof
systems
whose
veriﬁers
two-way
probabilistic
ﬁnite
automata
authors
initiated
2004
study
computational
power
quantum
interactive
proof
systems
whose
veriﬁers
particularly
limited
quantum
ﬁnite
automata
follow-up
authors
early
journal
publication
comput
system
sci.
vol.75
pp.255–269
2009
investigate
quantum
nature
interactions
provers
veriﬁers
studying
various
restrictions
quantum
interactive
proof
systems
aﬀect
language
recognition
power
proof
systems
particular
examine
three
intriguing
restrictions
provers
always
behave
classical
fashion
veriﬁers
always
reveal
provers
information
next
moves
iii
number
interactions
provers
veriﬁers
bounded
keywords
ﬁnite
automaton
interactive
proof
system
quantum
computing
classical
prover
quan-
tum
prover
interaction
overview
quantum
mechanics
provided
unconventional
means
fast
computing
secure
communication
since
early
1980s
potential
power
quantum
interactions
two
parties—a
prover
veriﬁer—
motivated
authors
2004
investigate
quantum
analogy
early
work
dwork
stock-
meyer
classical
interactive
proof
systems
whose
veriﬁers
restricted
two-way
probabilistic
ﬁnite
automata
2pfa
short
weak
veriﬁers
represent
computations
utilize
ﬁnite
amount
memory
space
systems
special
case
much
wider
scope
space-bounded
systems
condon
shown
systems
behave
quite
diﬀerently
time-
bounded
systems
although
veriﬁer
power
limited
2pfa
dwork
stockmeyer
dexterously
demonstrated
2pfa-veriﬁer
systems
turn
signiﬁcantly
powerful
number
inter-
actions
mighty
prover
enhance
2pfa-veriﬁer
ability
recognize
much
complicated
languages
2pfa
alone
recognize
describe
succinctly
restricted
systems
dwork
stockmeyer
introduced
special
notation
hrestrictioni
class
languages
recognized
bounded-error
systems
weak
veriﬁers
restrictions
speciﬁed
hrestrictioni
instance
notation
2pf
poly-time
expresses
language
class
characterized
systems
2pfa
veriﬁers
operated
expected
polynomial
time
seminal
work
dwork
stockmeyer
studied
numerous
subjects
private
coins
versus
public
coins
etc
basis
model
2pfa-veriﬁer
systems
express
babai
arthur-merlin
proof
systems
particular
introduced
another
notation
hrestrictioni
restrictions
given
hrestrictionsi
immediate
advantage
studying
weak
veriﬁer
models
prove
certain
types
separations
collapses
among
associated
complexity
classes
without
unproven
assumption
instance
dwork
stockmeyer
successfully
separated
2pf
poly-time
2pf
2pf
poly-time
2pf
another
signiﬁcant
advantage
restricted
models
make
easier
analyze
behaviors
two
parties—a
prover
veriﬁer—during
usually
complicated
communication
process
unlike
watrous
model
circuit-based
quantum
interactive
proof
qip
systems
basic
qip
model
authors
uses
measure-many
two-way
quantum
ﬁnite
automaton
2qfa
kondacs
watrous
weak
veriﬁer
communicate
mighty
quantum
prover
quantum
communication
bulletin
board
implemented
communication
cell
holds
moment
one
symbol
∗this
paper
expands
second
half
part
extended
abstract
appeared
proceedings
9th
international
conference
implementation
application
automata
ciaa
2004
lecture
notes
computer
science
vol.3317
pp.225–236
springer-verlag
kingston
canada
july
22–24
2004.
extension
ﬁrst
half
part
already
appeared
journal
computer
system
sciences
vol.75
pp.255–269
2009.
work
part
supported
natural
sciences
engineering
research
council
canada
†present
aﬃliation
department
computer
science
mathematical
informatics
graduate
school
information
science
nagoya
university
chikusa-ku
nagoya
aichi
464-8601
japan
‡present
aﬃliation
department
information
science
university
fukui
3-9-1
bunkyo
fukui
910-8507
japan
communication
alphabet
also
considered
two
additional
variants
veriﬁers
measure-
one-way
quantum
ﬁnite
automaton
mo-1qfa
moore
crutchﬁeld
measure-many
one-way
quantum
ﬁnite
automaton
1qfa
kondacs
watrous
initial
study
qip
sys-
tems
weak
veriﬁers
reveals
noticeable
strength
let
recall
general
notation
qip
hrestrictionsi
bounded-error
qip
systems
restrictions
indicated
hrestrictionsi
analogous
aforementioned
notation
hrestrictioni
dwork
stockmeyer
instance
qip
2qf
ob-
tained
restricting
veriﬁers
2qfa
likewise
use
mo-1qfa
veriﬁers
1qfa
veriﬁers
introduces
language
classes
qip
mo-1qf
qip
1qf
respectively
power
quantum
interaction
exempliﬁed
mo-1qfa
veriﬁers
holds
mo-1qfa
qip
mo-1qf
reg
reg
class
regular
languages
mo-1qfa
class
languages
recognized
bounded-error
mo-1qfa
1qfa
veriﬁers
obtain
1qfa
qip
1qf
reg
1qfa
class
languages
recognized
bounded-error
1qfa
iii
2qfa
veriﬁers
holds
qip
1qf
qip
2qf
poly-time
2pf
addition
showed
2qfaa
qip˜c
2qf
poly-time
respectively
indicate
transition
amplitudes
qfa
veriﬁers
algebraic
complex
numbers
polynomial-time
approximable
complex
numbers
last
result
clearly
contrasts
following
classical
containments
2pf
2pf
poly-time
pspace
intend
continue
study
qfa-veriﬁer
qip
systems
various
aspects
computational
com-
plexity
particular
paper
aims
presenting
three
intriguing
subjects
brieﬂy
discussed
excluded
authors
early
journal
publication
current
publication
shall
examine
strengths
weaknesses
qfa-veriﬁer
qip
systems
observing
various
restrictions
qip
systems
aﬀect
power
language
recognition
investigation
focused
following
three
selected
subjects
model
qip
systems
provers
classical
provers
versus
quantum
provers
basically
quantum
machines
apply
predetermined
unitary
operators
contrast
provers
systems
dwork
stockmeyer
essentially
probabilistic
machines
ﬂip
privately
owned
coins
decide
messages
send
back
2pfa
veriﬁers
probabilistic
machines
however
known
reduced
deterministic
machines
naturally
associated
unitary
operators
whose
entries
provers
use
unlimited
amount
private
memory
storage
convenience
brieﬂy
call
provers
classical
provers
contrast
call
standard
provers
quantum
provers
naturally
raise
simple
question
whether
quantum
provers
truly
diﬀerent
recognition
power
aforementioned
classical
provers
appears
classical
prover
helps
2qfa
veriﬁer
much
quantum
prover
instance
language
center
x1y
|x|
|y|
yet
known
belong
qip
2qf
however
interactions
classical
prover
allow
2qfa
veriﬁer
recognize
particular
language
strength
using
classical
provers
stems
simple
fact
analysis
classical-prover
qip
protocols
much
easier
quantum-prover
ones
paper
shows
following
containments
separations
concerning
classical
provers
use
restriction
hc-proveri
indicate
use
iii
classical
provers
qip
1qf
qip
1qf
c-prover
2pf
poly-time
qip
2qf
poly-time
c-prover
2pf
core
argument
used
results
technical
construction
appropriate
qip
protocols
recognize
target
languages
results
presented
section
2pf
qip
2qf
c-prover
public
information
versus
private
information
noted
earlier
dwork
stockmeyer
examined
two
diﬀerent
types
systems—ip
hrestrictioni
hrestrictioni
—when
veriﬁers
limited
2pfa
latter
system
hrestrictioni
refers
babai
model
arthur-merlin
proof
systems
also
known
public-coin
systems
veriﬁers
ﬂip
fair
coins
decide
next
moves
reveal
outcomes
essentially
showing
state
next
internal
conﬁgurations
mighty
provers
keep
track
veriﬁer
past
conﬁgurations
comparison
standard
systems
often
referred
private-coin
systems
question
concerning
public
coins
versus
private
coins
key
subject
essentially
whether
prover
obtains
complete
information
partial
information
conﬁgurations
veriﬁer
shown
2pfa
2pf
2pf
highlighting
clear
diﬀerence
public
information
private
information
likewise
shall
introduce
similar
publicness
notion
qfa-veriﬁer
qip
systems
demanding
veriﬁers
reveal
next
moves
provers
every
step
express
public-coin
analogue
qip
systems
use
notation
hpublici
restriction
systems.§
notation
instance
qip
1qf
public
denotes
language
class
obtained
qip
1qf
restricting
veriﬁers
publicly
§these
new
qip
systems
might
possibly
expressed
qam
hrestrictioni
analogous
hrestrictioni
turns
public
qip
systems
remain
signiﬁcantly
powerful
announcing
next
moves
1rfa
qip
1qf
public
precise
shall
prove
following
three
class
relations
1qfa
qip
2qf
public
poly-time
2pf
poly-time
iii
qip
2qf
public
c-prover
2pf
poly-time
1rfa
language
family
induced
one-way
deterministic
reversible
ﬁnite
automata
1rfa
short
section
shall
discuss
results
details
number
interactions
prover
veriﬁer
suggested
section
number
interactions
prover
veriﬁer
weak-veriﬁer
qip
system
may
serve
complexity
measure
classifying
various
languages
unlike
dwork-stockmeyer
systems
orig-
inal
qip
systems
authors
introduced
force
two
parties—a
prover
veriﬁer—to
communicate
every
step
sections
3–4
shall
take
deﬁnition
qip
systems
study
precise
eﬀect
interactions
nevertheless
need
modify
original
model
slightly
veriﬁer
interact
prover
needs
help
prover
express
new
qip
systems
corresponding
language
classes
invent
two
new
notations
qip
hrestrictionsi
qip
hrestrictionsi
indicates
maximal
number
iterations
made
computation
section
shall
prove
qip
1qf
qip
1qf
ﬁrst
separation
qip
1qf
comes
fact
language
odd
0m1z
odd
number
belongs
qip
1qf
since
qip
1qf
exempliﬁed
language
zero
however
proof
zero
qip
1qf
much
involved
proof
zero
1qfa
appears
1qf
coincides
1qfa
contrast
second
separation
qip
1qf
qip
1qf
qip
1qf
qip
1qf
qip
qfa-veriﬁer
qip
systems
throughout
paper
denotes
set
complex
numbers
√−1
let
set
natural
numbers
i.e.
nonnegative
integers
set
given
two
integers
integer
interval
set
particular
denotes
set
logarithms
base
polynomials
integer
coeﬃcients
alphabet
ﬁnite
nonempty
set
symbols
input
alphabet
necessarily
limited
throughout
paper
following
standard
convention
denotes
set
ﬁnite
sequences
symbols
write
|x|
|x|
denotes
length
opposed
notation
stands
set
inﬁnite
sequences
consists
symbols
symbol
denotes
element
inﬁnite
sequence
made
assume
reader
familiarity
classical
automata
theory
basic
concepts
quantum
computation
refer
e.g.
foundation
underlying
computation
device
extensively
use
measure-many
one-way
quantum
ﬁnite
automata
1qfa
short
measure-many
two-way
quantum
ﬁnite
automata
2qfa
assume
reader
familiarity
deﬁnitions
quantum
automata
reader
may
refer
formal
deﬁnitions
classes
hrestrictioni
hrestrictioni
described
section
2.1
basic
model
qip
systems
let
review
fundamental
deﬁnition
qip
system
authors
veriﬁers
particularly
limited
quantum
ﬁnite
automata
sections
4–5
shall
restrict
behaviors
veriﬁers
well
provers
order
obtain
three
major
variations
basic
qip
systems
reader
may
refer
section
3.2
brief
discussion
main
diﬀerence
qip
systems
based
uniform
quantum
circuits
based
quantum
ﬁnite
automata
use
notation
denote
qip
protocol
executed
prover
veriﬁer
whose
schematic
diagram
illustrated
figure
unless
confusion
also
use
notation
mean
qip
system
prover
veriﬁer
2qfa
veriﬁer
qacc
qrej
2qfa
speciﬁed
ﬁnite
set
veriﬁer
inner
states
input
alphabet
veriﬁer
transition
function
equipped
shared
communication
cell
using
communication
alphabet
set
union
three
mutually
disjoint
subsets
qnon
qacc
qrej
states
qnon
qacc
qrej
respectively
called
non-halting
inner
state
accepting
inner
state
rejecting
inner
state
contrast
qnon
inner
states
qacc
qrej
simply
called
halting
inner
states
particular
qnon
contains
so-called
initial
inner
state
input
tape
indexed
natural
numbers
ﬁrst
cell
indexed
two
designated
symbols
appearing
called
respectively
left
qfa
verifier
input
tape
…..x
tape
head
tape
alphabet
cid:54
communication
cell
finite
control
unit
communication
alphabet
cid:42
prover
input
tape
…..x
alphabet
cid:39
infinite
private
tape
figure
schematic
view
qip
system
qfa
veriﬁer
endmarker
right
endmarker
mark
left
end
right
end
input
input
tape
convenience
set
assume
also
contains
blank
symbol
system
begins
communication
cell
veriﬁer
transition
function
map
interpreted
follows
complex
number
speciﬁes
transition
amplitude
veriﬁer
state
scanning
symbol
input
tape
symbol
communication
cell
changes
replaces
moves
tape
head
input
tape
direction
tape
head
located
cell
indexed
must
move
cell
indexed
beginning
computation
input
string
length
written
orderly
ﬁrst
cell
nth
cell
input
tape
tape
head
initially
scans
0th
cell
communication
cell
holds
symbol
initially
written
cell
original
deﬁnition
2qfa
input
tape
circular
whenever
veriﬁer
tape
head
scanning
resp
input
tape
moves
left
right
resp
tape
head
reaches
right
end
resp
left
end
input
tape
next
shall
explain
two
concepts
global
conﬁguration
visible
conﬁguration
global
conﬁg-
uration
qip
protocol
snapshot
computation
protocol
comprising
following
visible
conﬁgurations
two
players
player
see
portion
global
conﬁguration
vis-
ible
conﬁguration
veriﬁer
input
length
represented
triplet
zn+2×
indicates
veriﬁer
state
content
communication
cell
veriﬁer
tape
head
position
input
tape
let
respectively
hilbert
spaces
spanned
computational
bases
zn+2
|γi
hilbert
space
called
veriﬁer
visible
conﬁguration
space
inputs
length
direction
every
tape
head
move
completely
determined
pair
state
content
communication
cell
applying
associated
transition
call
veriﬁer
unidirectional
use
following
notation
simplify
description
veriﬁer
strategy
transition
function
assuming
veriﬁer
unidirectional
-transition
input
symbol
unitary
operator
acting
span
|qi|γi
form
vσ|q
pq′
′|q′
γ′i
means
scans
state
changes
tape
head
moves
direction
since
determined
uniquely
often
express
head
direction
independent
contrast
succinctly
write
veriﬁer
strategy
expressed
hq′
γ′|vσ|q
otherwise
notice
2qfa
constructed
past
literature
instance
actually
satisfy
unidirectional
condition
input
length
automatically
induces
linear
operator
acting
hilbert
space
deﬁned
pq′
|q′
γ′i
n+1
ith
symbol
mod
veriﬁer
called
well-formed
unitary
every
string
since
interested
well-formed
veriﬁers
henceforth
assume
veriﬁers
well-formed
let
input
length
2qfa
veriﬁer
starts
initial
quantum
state
|q0
|φi
becomes
new
superposition
|φ′i
second
deﬁne
single
step
veriﬁer
consists
following
process
first
applies
operation
existing
superposition
|φi
wacc
span
qacc
zn+2
wrej
span
qrej
zn+2
wnon
span
qnon
zn+2
moreover
let
kacc
krej
knon
respectively
positive
numbers
representing
accepting
rejecting
non
halting.
new
superposition
|φ′i
measured
observable
kacceacc
+krejerej
+knonenon
eacc
erej
enon
respectively
projection
operators
onto
wacc
wrej
wnon
provided
|φ′i
expressed
|ψ1i
+|ψ2i
+|ψ3i
certain
three
vectors
|ψ1i
wacc
|ψ2i
wrej
|ψ3i
wnon
say
step
accepts
probability
k|ψ1ik2
rejects
probability
k|ψ2ik2
non-halting
superposition
|ψ3i
continues
next
step
said
continue
next
step
probability
k|ψ3ik2
probability
accepted
rejected
resp
within
ﬁrst
steps
thus
sum
probabilities
accepts
rejects
resp
ith
step
veriﬁer
1qfa
veriﬁer
transition
function
must
satisfy
following
additional
condition
must
hold
i.e.
tape
head
move
right
unlike
2qfa
veriﬁers
1qfa
veriﬁer
must
stop
running
applying
scanning
performing
projective
measurement
words
1qfa
veriﬁer
completely
stops
time
veriﬁer
tape
head
moves
thus
tape
head
actually
stops
since
input
tape
circular
therefore
input
1qfa
veriﬁer
halts
|x|
steps
contrast
veriﬁer
prover
semi-inﬁnite
private
tape
accesses
input
communication
cell
prover
private
tape
let
tape
alphabet
includes
special
blank
symbol
prover
assumed
alter
ﬁnite
initial
segment
private
tape
every
step
let
hilbert
space
spanned
|yi
∆∞f
∆∞f
set
inﬁnite
sequences
tape
symbols
containing
ﬁnite
number
non-blank
symbols
prover
visible
conﬁguration
space
hilbert
space
formally
prover
speciﬁed
series
x∈σ∗
i∈n+
unitary
operators
acts
prover
visible
conﬁguration
space
form
dim
ﬁnite
identity
operator
series
operators
often
called
prover
strategy
input
refer
strategy
often
use
notation
namely
i∈n+
notation
prover
expressed
x∈σ∗
prover
string
∆∞f
private
tape
scans
symbol
communication
cell
applies
quantum
state
|γi|yi
ith
′|γ′i|y′i
prover
changes
replaces
step
prover
turn
amplitude
global
conﬁguration
consists
four
items
inner
state
tape
head
position
content
communication
cell
content
private
tape
express
superposition
conﬁg-
urations
input
vector
hilbert
space
v|x|
called
global
conﬁguration
space
input
words
global
conﬁguration
pure
quantum
state
form
ki|γi|yi
indicating
inner
state
tape
head
cell
commu-
nication
cell
private
tape
contains
global
conﬁguration
called
halting
conﬁguration
non-halting
conﬁguration
resp
contains
halting
non-halting
resp
inner
state
i|γi|yi
=pγ
computation
qip
protocol
input
constitutes
series
superpositions
con-
ﬁgurations
resulting
alternate
applications
unitary
operations
prover
veriﬁer
including
projective
measurements
following
manner
computation
starts
global
initial
conﬁguration
|q0
0i|
veriﬁer
initial
conﬁguration
prover
private
tape
consists
blank
symbol
two
players
apply
unitary
operators
well
measurements
turn
starting
veriﬁer
move
projective
measurement
made
every
move
veriﬁer
determine
whether
halting
inner
state
communication
cell
two
players
exchange
communication
symbols
naturally
cause
two
players
entangled
prover
veriﬁer
resp
writes
symbol
communica-
tion
cell
customarily
say
prover
veriﬁer
resp
sends
veriﬁer
prover.
resp
viewed
message.
precisely
ki|γi|yi
current
global
conﬁguration
changes
ki|γi
|yi
identity
operator
acting
applies
projective
measurement
enon
global
conﬁguration
becomes
enon
ki|γi|yi
finally
changes
ki|γi|yi
i|γi|yi
identity
op-
erator
acting
v|x|
superposition
|φii
global
conﬁgurations
ith
step
deﬁned
recursively
|φ0i
|q0
0i|
|φ2i+1i
enon
i+1
|φ2i+1i
every
example
superposition
global
conﬁgurations
1st
step
becomes
|φ2ii
|φ2i+2i
ki|γi|yi
ki|γi|yi
enon
···
p,1
enon
|q0
0i|
series
|φ0i
|φ1i
therefore
becomes
computation
given
global
conﬁguration
local
computation
path
ending
leading
computa-
tion
|φ0i
|φ1i
|φni
qip
protocol
given
input
series
global
conﬁgurations
satisfying
following
four
conditions
|ξ0i
|q0
0i|
enon
|ξ2ii
con-
tains
|ξ2i+1i
non-zero
amplitude
/2⌋
i+1
|ξ2i+1i
contains
|ξ2i+2i
non-zero
amplitude
/2⌋
equals
moreover
global
computation
path
ending
local
computation
path
ending
|ξii
appears
|φii
non-zero
amplitude
every
global
computation
path
ends
enters
certain
halting
inner
state
along
computation
path
furthermore
deﬁne
overall
probability
accepts
rejects
resp
input
limit
probability
accepts
rejects
resp
within
ﬁrst
steps
use
notation
pacc
prej
resp
denote
overall
acceptance
rejection
resp
probability
say
always
halts
probability
every
input
every
prover
qip
protocol
reaches
halting
inner
states
probability
general
may
always
halt
probability
notice
discuss
entire
running
time
qip
system
count
number
steps
taken
veriﬁer
including
measurements
well
prover
let
two
real
numbers
unit
real
interval
let
language
say
-qip
system
-qip
system
recognizes
qip
system
following
two
conditions
hold
corresponding
qip
protocol
completeness
qip
protocol
accepts
probability
least
soundness¶
prover
qip
protocol
rejects
probability
least
note
-qip
system
error
probability
paper
discusses
qip
systems
whose
error
probabilities
bounded
certain
constants
lying
real
interval
1/2
reason
simply
say
qip
system
exists
constant
error
bound
1/2
-qip
system
given
pair
notation
qipa
hri
hri
set
restrictions
denotes
class
languages
recognized
certain
-qip
systems
restrictions
speciﬁed
hri
addition
deﬁne
qip
hri
union
qip1/2+ǫ,1/2+ǫ
hri
paper
shall
focus
attention
following
three
basic
restrictions
hri
h1qf
i.e.
1qfa
veriﬁers
h2qf
i.e.
2qfa
veriﬁers
hpoly-timei
i.e.
expected
polynomial
running
time
example
qip
2qf
poly-time
denotes
lan-
guage
class
deﬁned
qip
systems
expected
polynomial-time
2qfa
veriﬁers
types
restrictions
discussed
later
sections
provers
behave
classically
promote
better
understanding
roles
provers
qip
systems
described
section
2.1
shall
examine
variant
systems
recall
dwork-stockmeyer
systems
mighty
provers
essence
probabilistic
machines
probabilistically
select
messages
send
veriﬁers
noted
possible
reduce
provers
deterministic
machines
without
compromising
language
recognition
power
corresponding
systems
naturally
ask
whether
standard
quantum
provers
qip
systems
replaced
signiﬁcantly
weaker
machines
among
many
candidates
weak
machines
consider
machines
operate
unitary
operators
whose
entries
limited
signiﬁcance
operators
using
semi-inﬁnite
private
tape
restricted
operators
essentially
make
corresponding
provers
reduce
merely
deterministic
machines
certainly
real-life
implementation
restricted
operators
could
much
simpler
easier
implementing
arbitrary
unitary
operators
reasons
call
prover
classicalk
prover
move
dictated
unitary
operators
whose
entries
comparison
refer
original
provers
described
section
2.1
quantum
provers
remember
classical
provers
still
quantum
provers
hereafter
restriction
hc-proveri
indicates
provers
behave
classically
deﬁned
qip
systems
classical
provers
may
play
essentially
diﬀerent
role
quantum
provers
let
examine
power
classical-prover
qip
systems
veriﬁers
limited
1qfa
diﬃcult
prove
1qfa
qip
1qf
c-prover
forcing
provers
unalter
communication
cell
step
however
clear
whether
qip
1qf
c-prover
coincides
qip
1qf
follows
shall
demonstrate
qip
1qf
c-prover
actually
contains
qip
1qf
¶as
lipton
demonstrated
form
soundness
condition
general
replaced
following
weaker
form
accepts
probability
see
discussion
kin
strict
sense
exact
analogy
deterministic
prover
may
demand
even
communication
cell
behaves
classically
proposition
3.1
qip
1qf
qip
1qf
c-prover
similar
way
proof
prove
reg
qip
1qf
c-prover
since
qip
1qf
reg
theorem
4.1
obtain
desired
containment
qip
1qf
qip
1qf
c-prover
shown
proposition
4.2
reg
qip1,1
1qf
next
shall
examine
case
2qfa
veriﬁers
unlike
1qfa-veriﬁer
case
contain-
ment
qip
2qf
qip
2qf
c-prover
currently
unknown
nonetheless
verify
qip
2qf
poly-time
c-prover
contains
2qfa
poly-time
therefore
proper
inclusion
reg
qip
2qf
poly-time
c-prover
follows
direct
consequence
result
reg
2qfa
poly-time
following
theorem
strengthens
separation
arthur-merlin
proof
systems
theorem
3.2
2pf
qip
2qf
c-prover
2pf
poly-time
qip
2qf
poly-time
c-prover
2pf
proof
quantum-prover
model
shown
lemma
5.2
language
reverse
order
marked
even-length
palindromes
be-
longs
qip
2qf
poly-time
careful
examination
proof
ﬁnd
proof
works
classical
provers
fact
immediately
places
qip
2qf
poly-time
c-prover
hence
non-containment
qip
2qf
poly-time
c-prover
inside
2pf
naturally
follows
be-
cause
located
outside
2pf
separation
leads
diﬀerence
2pf
qip
2qf
c-prover
similarly
show
diﬀerence
2pf
poly-time
qip
2qf
poly-time
c-prover
since
equal
obtain
qip
2qf
poly-time
c-prover
2pf
poly-time
2pf
contradicting
earlier
non-containment
complete
proof
shall
prove
2pf
qip
2qf
c-prover
since
proof
begins
works
time-bounded
model
also
obtain
remaining
claim
2pf
poly-time
qip
2qf
poly-time
c-prover
let
language
2pf
alphabet
want
show
also
qip
2qf
c-prover
important
starting
point
fact
recognized
follows
spe-
cial
ﬁnite
automata
called
2npfa
make
probabilistic
moves
nondeterministic
moves
turn
exists
series
nondeterministic
choices
halts
accepting
states
probability
least
otherwise
every
series
nondeterministic
choices
halts
rejecting
states
probability
least
appropriate
constant
1/2
take
2npfa
qacc
qrej
nondeterministic
states
probabilistic
states
recognizes
error
probability
1/2
made
four
disjoint
sets
set
probabilistic
states
set
nondeterministic
states
qacc
set
accepting
states
qrej
set
rejecting
states
simplify
proof
force
satisfy
following
two
extra
conditions
tape
head
stay
still
step
whenever
tosses
fair
coin
tape
head
moves
right
diﬃcult
modify
2npfa
meet
two
conditions
let
recall
transitions
2npfa
given
transition
takes
value
1/2
following
manner
exist
two
distinct
states
1/2
holds
otherwise
indicates
changes
inner
state
equal
probability
1/2
moves
tape
head
rightward
condition
case
pairs
holds
otherwise
means
chooses
index
nondeterministically
changes
inner
state
moves
tape
head
left
right
notice
deterministic
moves
always
treated
special
case
nondeterministic
moves
based
machine
shall
construct
desired
qip
system
classical
prover
let
input
string
length
let
set
inner
states
let
communication
alphabet
new
inner
state
associated
fresh
non-blank
symbol
veriﬁer
carries
procedure
follows
simulates
step
step
let
consider
step
tosses
fair
coin
probabilistic
state
applying
transition
1/2
two
distinct
states
veriﬁer
checks
whether
communication
cell
unless
case
rejects
immediately
otherwise
makes
corresponding
-transition
vσ|pi|
1√2
|p0i|
i+|p1i|
veriﬁer
expects
prover
erase
symbol
communication
cell
overwriting
erasure
symbols
guarantees
move
unitary
next
let
consider
step
makes
nondeterministic
choice
state
namely
step
needs
two
steps
simulate
veriﬁer
enters
rejecting
inner
state
immediately
unless
communication
cell
contains
assume
communication
cell
without
moving
tape
head
ﬁrst
sends
designated
symbol
prover
requesting
pair
return
done
special
-transition
vσ|pi|
|ˆpi|κi
veriﬁer
forces
prover
return
valid
form
nondeterministic
choice
namely
entering
rejecting
inner
state
whenever
prover
writes
symbol
receives
valid
pair
makes
-transition
vσ|ˆpi|
|pii|
expects
prover
erase
communication
symbol
honest
prover
must
blank
communication
cell
end
every
simulation
step
request
symbol
returns
correct
nondeterministic
choice
assuming
series
nondeterministic
choices
along
accepts
probability
least
since
honest
prover
sends
series
step
step
guide
make
correct
nondeterministic
choices
moreover
allows
simulate
correctly
probabilistic
moves
erasing
communication
symbols
hence
successfully
reaches
outcomes
error
probability
thus
protocol
accepts
probability
least
next
consider
case
notice
matter
nondeterministic
choices
made
rejects
probability
least
take
dishonest
classical
prover
maximizes
acceptance
probability
particular
prover
must
clear
communication
cell
whenever
asks
since
otherwise
immediately
rejects
thus
lowers
acceptance
probability
contradiction
choice
since
classical
computation
paths
nonnegative
amplitudes
cause
non-destructive
interference
indicates
annihilate
existing
computation
path
request
nondeterministic
choice
must
return
one
valid
nondeterministic
choices
since
otherwise
rejects
immediately
series
nondeterministic
choices
rejects
probability
less
simulation
implies
also
rejects
probability
less
contradiction
assumption
hence
must
reject
probability
least
therefore
classical-prover
-qip
system
proof
replace
classical
provers
quantum
provers
mainly
certain
quantum
prover
may
fool
constructed
veriﬁer
returning
superposition
nondeterministic
choices
instead
choosing
one
two
nondeterministic
choices
using
negative
amplitudes
make
veriﬁer
quantum
simulation
destructive
end
section
shall
present
qip
protocol
using
classical
provers
non-regular
language
center
x1y
|x|
|y|
known
2pf
2pf
poly-time
qip
protocol
described
next
proof
honest
prover
signals
location
center
bit
given
input
veriﬁer
tests
correctness
location
employ-
ing
quantum
fourier
transform
qft
short
fashion
similar
interaction
qip
protocol
constitutes
veriﬁer
transition
projective
measurement
prover
move
let
error
bound
real
interval
set
⌈1/ǫ⌉
lemma
3.3
constant
center
qip1,1−ǫ
2qf
poly-time
c-prover
proof
follows
shall
deﬁne
desired
qip
protocol
witnesses
membership
center
qip1,1−ǫ
2qf
poly-time
c-prover
let
input
alphabet
let
communication
alphabet
qip
protocol
comprises
four
phases
formal
description
behavior
given
table
using
-transitions
let
arbitrary
input
ﬁrst
phase
veriﬁer
checks
whether
|x|
odd
moving
tape
head
toward
together
switching
two
inner
states
make
deterministic
moves
phase
forces
prover
return
blank
symbol
step
entering
rejecting
state
whenever
prover
deceptively
sends
back
non-blank
symbols
|x|
odd
enters
inner
state
moving
tape
head
back
hereafter
consider
case
input
odd
length
second
phase
moves
tape
head
rightward
sending
prover
receives
prover
receiving
prover
willingly
rejects
unless
tape
head
currently
scanning
input
tape
otherwise
third
phase
starts
third
fourth
phases
whenever
prover
changes
communication
symbol
immediately
rejects
input
assume
tape
head
scanning
input
tape
third
phase
computation
splits
parallel
branches
applying
v1|q3i|1i
step
called
ﬁrst
split
generates
v|c|q0i|
|q0i|
v|c|q2i|1i
|qrej,0i|
v|c|q2i|
|q3i|
v|c|sj,0i|1i
1√n
l=1
exp
2πıjl/n
|tli|
vb|q0i|
|q1i|
vb|q0i|1i
|qrej,0i|
vb|q2i|
|q2i|
vb|q3i|
|q3i|
v1|q3i|1i
1√n
vb|rj,0i|1i
|r′j
n−j
i|1i
vb|rj
ki|1i
|r′j
ki|1i
vb|r′j
ki|1i
|rj
k−1i|1i
vb|r′j,1i|1i
|rj,0i|1i
vb|sj
ki|1i
|sj
k−1i|1i
vb|sj,1i|1i
|sj,0i|1i
j=1
|rj,0i|
|q0i|
|qrej,0i|
|q0i|1i
|qrej,1i|
|q1i|
|q2i|
|q1i|1i
|qrej,1i|1i
|rj,0i|1i
|s′j,0i|1i
|s′j,0i|1i
|sj,0i|1i
vb|q1i|
|q0i|
vb|q1i|1i
|qrej,0i|1i
vb|q2i|1i
|qrej,1i|1i
v0|q3i|1i
|qrej
−1i|
vb|rj,0i|
|qrej
i|1i
vb|rn,0i|1i
|rn,0i|1i
vb|sj,0i|1i
|sj
i|1i
vb|sj,0i|
|qrej
r′j
s′j,0
rj,0
sj,0
table
-transitions
center
unique
accepting
inner
state
qrej
rejecting
inner
states
table
excludes
obvious
transitions
rejecting
inner
states
prover
changes
communication
symbol
third
fourth
phases
distinct
inner
states
r1,0
r2,0
rn,0
equal
amplitudes
1/√n
tape
head
moves
deterministically
toward
following
manner
along
jth
computation
path
associated
inner
state
rj,0
tape
head
idles
steps
tape
cell
moving
next
one
changing
inner
states
rj,0
1−→
r′j
n−j
0−→
n−j−1
0−→
r′j
n−j−1
0−→
n−j−2
0−→
···
0−→
r′j,1
0−→
rj,0
number
arrows
indicates
direction
tape
head
tape
head
reaches
steps
back
one
cell
applying
|rj,0i|1i
|s′j,0i|1i
starts
fourth
phase
idling
cell
steps
changing
inner
states
fourth
phase
tape
head
along
jth
computation
path
keeps
moving
leftward
sj,0
0−→
0−→
j−1
0−→
j−2
0−→
···
0−→
sj,1
−1−−→
sj,0
tape
head
reaches
computation
splits
parallel
branches
called
second
split
applying
qft
v|c|sj,0i|1i
yielding
either
accepting
inner
state
one
rejecting
inner
states
unitary
every
honest
prover
return
exactly
time
scans
center
bit
input
string
time
sends
third
fourth
phases
step
apply
identity
operator
table
diﬃcult
check
indeed
well-formed
namely
shall
check
completeness
soundness
obtained
qip
system
center
first
consider
positive
instance
form
y1z
certain
strings
length
say
since
honest
prover
signals
reads
center
bit
ﬁrst
split
given
v1|q3i|1i
1√n
j=1
|rj,0i|
occurs
middle
third
phase
precisely
exactly
steps
start
second
phase
reading
|cy1
along
jth
computation
path
associated
inner
state
rj,0
chosen
ﬁrst
split
idles
steps
reading
also
idles
2nj
steps
reading
whole
input
overall
idling
time
elapses
duration
n−j
+2nj
2nn
independent
hence
computation
paths
created
aforementioned
ﬁrst
split
must
length
thus
superposition
global
conﬁgurations
j=1
|sj,0
0i|
i|ψi
appropriate
quantum
state
|ψi
prior
second
split
becomes
hilbert
space
associated
prover
private
tape
qft
given
transition
v|c|sj,0i|1i
1√n
1√n
l=1
cid:16
1√n
1√n
l=1
exp
2πıjl/n
|tli|
makes
global
conﬁgurations
converge
veriﬁer
visible
accepting
j=1
exp
2πıjl/n
cid:17
|tl
0i|
i|ψi
equals
|tn
0i|
i|ψi
conﬁguration
|tni|
therefore
accepts
probability
contrary
suppose
negative
instance
form
y0z
|y|
|z|
consider
second
third
fourth
phases
minimize
rejection
probability
dishonest
prover
must
send
symbol
scans
input
tape
second
phase
must
maintain
otherwise
immediately
rejects
note
way
classical
provers
pass
form
superposition
deceive
veriﬁer
let
assume
eth
symbol
sends
eth
interaction
obviously
follows
center
bit
consider
ﬁrst
split
caused
applying
v1|q3i|1i
1√n
j=1
|rj,0i|
index
let
computation
path
following
jth
branch
starts
inner
state
rj,0
generated
ﬁrst
split
along
computation
path
idling
time
totals
|x|
2nj
2nn
since
two
computation
paths
distinct
values
must
diﬀerent
lengths
second
split
along
jth
1√n
|sj,0
0i|
i|ψji
+|∆ji
|∆ji
contain
|sj,0i
computation
path
obtain
quantum
state
second
split
qft
generates
parallel
branches
j=1
exp
2πıjl/n
|tl
0i|
i|ψji+|∆′ji
equals
|tn
0i|
i|ψji+|∆′′j
|∆′ji
obtained
|∆ji
qft
|∆′′i
appropriate
quantum
state
containing
|tni
thus
one
computation
paths
reach
|tn
0i|
hence
probability
reaching
acceptance
conﬁguration
1/n
since
computation
paths
1≤j≤n
generated
ﬁrst
split
overall
acceptance
probability
1/n
1/n
since
computation
paths
always
end
certain
halting
states
follows
rejects
probability
1/n
veriﬁer
reveals
private
information
dwork-stockmeyer
systems
prover
view
veriﬁer
computation
limited
small
window
i.e.
communication
cell
strength
prover
strategy
hinges
amount
information
veriﬁer
willing
reveal
prover
window
let
consider
situation
system
veriﬁer
always
unalters
communication
cell
since
behavior
2pfa
veriﬁer
depends
messages
prover
also
internal
random
choices
coin
ﬂips
prover
gain
information
number
veriﬁer
moves
therefore
prover
knows
little
veriﬁer
actual
conﬁgurations
babai
arthur-merlin
proof
systems
also
known
public-coin
systems
contrary
veriﬁer
must
always
pass
information
next
move
resulting
internal
random
choices
information
suﬃces
mighty
prover
keep
track
veriﬁer
conﬁgurations
dwork
stockmeyer
deﬁned
hrestrictioni
variant
original
systems
requiring
veriﬁers
publicly
reveal
next
inner
states
tape
head
directions
determined
internal
coin
ﬂips
shall
consider
straightforward
quantum
analogy
public-coin
systems
investigate
language
recognition
power
qip
system
demand
veriﬁer
reveal
communication
cell
choice
non-halting
inner
state
well
tape
head
direction
every
step
formally
deﬁne
public
qip
system
follows
whereas
sometimes
call
original
qip
systems
deﬁned
section
2.1
private
qip
systems
comparison
x∈σ∗
induced
satisfy
following
publicness
condition
deﬁnition
4.1
2qfa-veriﬁer
qip
system
called
public∗∗
veriﬁer
linear
operators
tuple
non-
halting
state
|x|+1
must
formpq′
|q′
mod
|x|
particular
veriﬁer
1qfa
omit
information
tape
head
direction
communication
symbol
deﬁnition
4.1
since
always
moves
tape
head
right
i.e.
information
obviously
redundant
emphasize
publicness
new
system
use
speciﬁc
notation
hpublici
instance
qip
2qf
public
indicates
collection
languages
recognized
public
qip
systems
2qfa
veriﬁers
direct
analogy
2pf
however
might
possibly
write
qam
2qf
qip
2qf
public
deﬁnition
4.1
since
restriction
∗∗as
another
variant
public
qip
system
may
require
satisfy
equality
non-halting
states
instead
see
details
provers
public
qip
systems
1qfa
veriﬁers
naturally
private
qip
systems
veriﬁers
therefore
holds
example
qip
1qf
public
qip
1qf
qip
2qf
public
qip
2qf
shall
demonstrate
power
public
qip
systems
shall
concentrate
language
class
qip
1qf
public
unlike
1qfa
qip
1qf
containment
1qfa
qip
1qf
public
seems
hold
naturally
quick
glance
still
unknown
diﬃculty
proving
containment
caused
publicness
condition
public
qip
systems
veriﬁer
must
announce
next
move
prover
unintentionally
helps
prover
make
local
system
entangled
prover
local
system
however
know
get
rid
type
entanglement
despite
publicness
condition
still
show
power
qip
1qf
public
well
beyond
1qfa
let
consider
language
zero
qip
1qf
public
known
reside
outside
1qfa
next
lemma
shall
prove
zero
public
qip
system
1qfa
veriﬁers
lemma
4.2
zero
qip1,1
1qf
public
following
proof
exploits
prover
ability
inform
location
rightmost
bit
instance
zero
simplify
description
1qfa
veriﬁers
qacc
qrej
intend
abbreviate
communication
symbol
tape
head
direction
always
proof
lemma
4.2.
let
show
zero
public
-qip
system
1qfa
veriﬁer
describe
desired
protocol
let
input
alphabet
let
qnon
qacc
qacc,0
qacc,1
qacc
qrej
qrej
q′rej
respectively
sets
non-halting
inner
states
accepting
inner
states
rejecting
inner
states
using
above-mentioned
abbreviation
communication
alphabet
deﬁned
protocol
described
following
see
table
formal
description
transitions
let
input
string
veriﬁer
stays
initial
state
publicly
announcing
i.e.
sending
communication
symbol
prover
prover
returns
whenever
receives
immediately
rejects
entering
qrej
applying
either
|q0i|
v1|q0i|
current
scanning
symbol
diﬀerent
contrary
scanning
waits
next
tape
symbol
entering
next
symbol
accepts
applying
|q1i|q1i
otherwise
rejects
entering
q′rej
applying
either
v0|q1i|qii
v1|q1i|qii
honest
prover
alter
communication
cell
reaches
right
end
|cy
must
return
reads
symbol
apply
vb|q1i|
v|c|q0i|
|q0i|q0i
v|c|q0i|qji
|qrej
ji|qrej
v|c|q1i|qii
|q′rej
ii|q′rej
|q0i|qii
|qrej
ii|qrej
|q1i|qii
|qacc
ii|qacc
v0|q0i|
|q1i|q1i
v0|q0i|q0i
|q0i|q0i
v0|q0i|q1i
|qrej,1i|qrej,1i
v0|q1i|qii
|q′rej
ii|q′rej
v1|q0i|
|qrej
−1i|qrej
−1i
v1|q0i|q0i
|q0i|q0i
v1|q0i|q1i
|qrej,1i|qrej,1i
v1|q1i|qii
|q′rej
ii|q′rej
table
-transitions
zero
symbol
q−1
denotes
still
remains
prove
recognizes
zero
certainty
consider
case
input
form
certain
string
since
zero
honest
prover
returns
reads
rightmost
symbol
|cy
information
helps
locate
end
moving
tape
head
rightward
conﬁrms
next
scanning
symbols
enters
accepting
inner
state
either
qacc,0
qacc,1
qacc
probability
contrary
assume
clearly
best
adversary
needs
return
either
superposition
keeps
returning
eventually
rejects
increases
rejection
probability
since
computation
essentially
deterministic
strategy
decreases
chance
cheating
make
best
adversary
strategy
must
return
communication
symbol
scans
nonetheless
returns
applies
v0|q0i|
applies
v0|q1i|qii
v1|q1i|qii
q−1
obviously
leads
rejecting
inner
state
certainty
therefore
qip
system
recognizes
zero
certainty
follows
lemma
4.2
qip
1qf
public
powerful
enough
contain
certain
languages
recognized
1qfa
alone
also
possible
show
qip
1qf
public
contains
languages
recognized
1qfa
whose
transition
amplitudes
limited
1qfa
known
1-way
deterministic
reversible
ﬁnite
automaton
1rfa
short
convenience
let
1rfa
denote
collection
languages
recognized
1rfa
ambainis
freivalds
showed
1rfa
char-
acterized
exactly
collection
languages
recognized
1qfa
success
probability
7/9
certain
constants
theorem
4.3
1rfa
qip1,1
1qf
public
1qfa
proof
firstly
shall
show
qip1,1
1qf
public
contains
1rfa
take
arbitrary
set
recognized
1rfa
qacc
qrej
reversible
transition
function
satisﬁes
pair
exists
unique
inner
state
one
satisfying
henceforth
shall
construct
public
-qip
system
mimics
computation
desired
1qfa
veriﬁer
q′acc
q′rej
behaves
follows
let
q′acc
qacc
q′rej
qrej
qrej
qnon
q′rej
provided
qrej
fresh
symbols
assume
inner
state
scanning
symbol
input
tape
whenever
changes
inner
state
scanning
revealing
next
inner
state
prover
soon
ﬁnds
communication
symbol
altered
intentionally
prover
immediately
rejects
input
process
forces
prover
unalter
content
communication
cell
table
gives
list
-transitions
induces
strategy
clear
list
well-formed
reversibility
publicness
condition
met
finally
honest
prover
prover
alter
communication
symbol
applies
identity
operator
every
step
v|c|q0i|
|qi|qi
vb|pi|pi
|qi|qi
vb|pi|qi
|qrej
qi|qrej
qnon
table
-transitions
inner
states
qrej
rejecting
states
input
qip
system
accepts
certainty
since
exactly
simulates
help
honest
prover
let
consider
opposite
case
easy
see
best
strategy
dishonest
prover
keep
communication
symbol
unchanged
alteration
communication
symbols
causes
reject
immediately
lowers
acceptance
probability
prover
obviously
enables
reject
certainty
case
ﬁnal
decision
inﬂuenced
communication
symbols
therefore
recognizes
certainty
since
arbitrary
obtain
desired
containment
1rfa
qip1,1
1qf
public
secondly
separation
1qfa
qip1,1
1qf
public
immediately
follows
lemma
4.2
to-
gether
fact
zero
1qfa
moreover
since
1rfa
1qfa
qip1,1
1qf
public
1qfa
conclude
1rfa
qip
1qf
public
completes
proof
next
shall
examine
public
qip
systems
whose
veriﬁers
2qfa
similar
theorem
3.2
claim
following
two
separations
theorem
4.4
qip
2qf
public
poly-time
2pf
poly-time
qip
2qf
public
poly-time
c-prover
2pf
poly-time
language
separates
public
qip
systems
2qfa
veriﬁers
2pf
poly-time
pal
0n1n
since
pal
resides
outside
2pf
poly-time
pal
belongs
2qfa
poly-time
separation
2qfa
poly-time
2qf
poly-time
follows
immediately
separation
however
directly
imply
theorem
4.4
technical
reason
similar
case
1qfa
veriﬁers
known
whether
2qfa
poly-time
included
qip
2qf
public
poly-time
even
qip
2qf
public
poly-time
c-prover
therefore
still
need
prove
next
lemma
pal
indeed
belongs
qip
2qf
public
poly-time
qip
2qf
public
poly-time
c-prover
constant
lemma
4.5
belongs
qip1,1−ǫ
2qf
public
poly-time
qip1,1−ǫ
2qf
public
poly-time
c-prover
follows
shall
prove
pal
belongs
qip1,1−ǫ
2qf
public
poly-time
proof
proof
pal
qip1,1−ǫ
2qf
public
poly-time
c-prover
similar
let
⌈1/ǫ⌉
let
deﬁne
public
intersection
pal
qip
system
honest
prover
always
applies
identity
operation
every
step
veriﬁer
acts
follows
ﬁrst
phase
determines
whether
input
form
0m1n
rest
veriﬁer
algorithm
similar
essence
one
given
proof
lemma
3.3.
second
phase
generates
parallel
branches
equal
amplitude
1/√n
entering
diﬀerent
inner
states
say
third
phase
along
jth
branch
starting
tape
head
idles
steps
tape
cell
containing
idles
steps
cell
containing
tape
head
ﬁnishes
reading
fourth
phase
applies
qft
collapse
computation
paths
single
accepting
inner
state
otherwise
computation
paths
interfere
since
tape
head
reaches
diﬀerent
times
along
diﬀerent
computation
paths
ﬁrst
second
phases
publicly
reveals
information
next
move
checks
whether
prover
rewrites
diﬀerent
symbol
constrain
prover
strategy
immediately
enters
rejecting
inner
state
prover
alters
content
communication
cell
analysis
qip
protocol
completeness
soundness
conditions
essentially
proof
lemma
3.3.
conclusion
pal
qip1,1−ǫ
2qf
public
poly-time
requested
many
interactions
necessary
suﬃcient
previous
two
sections
despite
heavy
restrictions
qip
systems
witnessed
quantum
interactions
prover
qfa
veriﬁer
remarkably
enhance
qfa
ability
recognize
certain
types
languages
since
basic
qip
model
forces
veriﬁer
communicate
prover
every
move
natural
ask
whether
interactions
truly
necessary
answer
question
shall
remodel
qip
systems
veriﬁers
allowed
communicate
provers
time
veriﬁers
need
help
provers
throughout
section
shall
shed
new
light
number
interactions
prover
veriﬁer
new
qip
systems
shall
carefully
examine
many
interactions
necessary
suﬃcient
conduct
given
task
language
recognition
5.1
interaction-bounded
qip
systems
study
number
interactions
prover
veriﬁer
want
modify
basic
qip
systems
prover
permitted
alter
communication
symbol
communication
cell
exactly
veriﬁer
asks
prover
make
modiﬁcation
ﬁrst
look
systems
dwork
stockmeyer
system
veriﬁer
allowed
computation
silently
chosen
time
communication
prover
words
veriﬁer
interacts
prover
help
prover
needed
prover
patiently
awaits
next
interactions
without
conducting
computation
interpret
veriﬁer
silent
mode
follows
veriﬁer
wish
communicate
prover
writes
special
communication
symbol
communication
cell
signal
prover
needs
help
prover
simply
use
blank
symbol
condition
prover
prohibited
tailor
content
communication
cell
formally
introduce
new
qip
system
malicious
prover
permitted
cheat
veriﬁer
willfully
tampering
symbol
communication
cell
since
veriﬁer
governed
quantum
mechanics
malicious
prover
willfully
modiﬁes
veriﬁer
computation
may
signiﬁcantly
hampered
veriﬁer
may
means
prevent
action
prover
unitarity
requirement
veriﬁer
strategy
describe
valid
legitimate
prover
independent
choice
veriﬁers
require
prover
strategy
i∈n+
acting
prover
visible
conﬁguration
space
input
nothing
namely
apply
identity
operator
allow
prover
maintain
unitarity
strategy
also
permit
prover
modify
private
information
including
content
communication
cell
never
appears
actual
computation
non-zero
amplitudes
formulate
condition
independent
veriﬁer
need
introduce
series
i∈n
elements
∆∞f
series
i∈n
deﬁned
recursively
collection
elements
∆∞f
certain
element
si−1
certain
communication
symbols
superposition
i|σi|zi
contains
visible
conﬁguration
|τi|yi
non-zero
amplitude
namely
|hy|hτ|u
i|σi|zi|
requested
condition
expressed
follows
every
every
si−1
i|yi
i|yi
prover
satisﬁes
condition
succinctly
referred
committed.††
trivial
example
committed
prover
prover
always
applies
identity
operator
committed
prover
lets
veriﬁer
safely
make
number
moves
without
direct
interaction
observe
new
qip
model
committed
provers
essence
closer
circuit-based
qip
model
watrous
original
qip
model
convenience
name
new
model
interaction-bounded
qip
system
use
new
notation
qip
1qf
class
languages
recognized
bounded
error
probability
interaction-bounded
qip
systems
1qfa
veriﬁers
note
standard
qip
systems
naturally
transformed
interaction-bounded
qip
systems
possibly
modifying
blank
symbol
appropriately
fresh
non-blank
symbol
simple
fact
implies
qip
1qf
contains
qip
1qf
equals
reg
lemma
5.1
reg
qip
1qf
ready
clarify
meaning
number
interactions
interaction-bounded
qip
system
let
consider
non-halting
global
conﬁguration
input
communicates
prover
writes
non-blank
symbol
communication
cell
convenience
call
global
conﬁguration
query
conﬁguration
query
conﬁguration
said
query
symbol
prover
recall
section
2.1
deﬁnition
global
computation
paths
number
interactions
given
computation
means
maximum
number
global
computation
paths
computation
query
conﬁgurations
non-zero
amplitudes
along
let
language
assume
recognizes
say
qip
protocol
makes
interactions
input
equals
number
interactions
computation
furthermore
call
qip
system
k-interaction
bounded‡‡
every
protocol
makes
interactions
input
every
every
committed
prover
protocol
makes
interactions
input
last
let
qip
1qf
denote
class
languages
recognized
bounded
error
probability
k-interaction
bounded
qip
systems
1qfa
veriﬁers
since
veriﬁers
control
number
queries
diﬃcult
show
1qfa
qip
k+1
1qf
qip
1qf
constant
particular
qip
1qf
1qfa
holds
main
theorem
section
want
show
theorem
5.2
1-interaction
helps
veriﬁer
1-interaction
achieve
full
power
qip
1qf
1qf
qip
theorem
5.2
qip
1qf
qip
1qf
qip
1qf
theorem
5.2
direct
consequence
lemma
5.3
proposition
5.4
proof
proceeds
follows
ﬁrst
inequality
theorem
shall
take
language
odd
deﬁned
set
binary
strings
form
0m1z
contains
odd
number
since
odd
1qfa
shall
show
lemma
5.3
odd
belongs
qip
1qf
second
inequality
theorem
recall
regular
language
zero
section
shall
demonstrate
proposition
5.4
qip
1qf
include
zero
since
reg
qip
1qf
lemma
5.1
zero
must
belong
qip
1qf
thus
shall
obtain
desired
separation
qip
1qf
qip
1qf
therefore
suﬃces
prove
lemma
5.3
proposition
5.4.
ﬁrst
step
prove
lemma
5.3
asserts
odd
qip
1qf
lemma
5.3
odd
qip
1qf
shall
design
1-interaction
bounded
qip
system
recognizes
odd
let
proof
respectively
input
alphabet
communication
alphabet
moreover
let
qacc
qrej,0
qrej,1
set
inner
states
qacc
qacc
qrej
qrej,0
qrej,1
protocol
veriﬁer
described
follows
table
gives
formal
description
-transitions
making
query
committed
prover
continues
read
input
symbols
tape
head
scans
input
tape
reads
queries
symbol
committed
prover
executing
transition
v1|q0i|
|q0i|ai
prover
returns
immediately
rejects
input
otherwise
checks
whether
substring
input
includes
odd
number
check
††there
number
possible
variants
one
requires
every
every
∆∞f
i|yi
i|ψx
holds
certain
quantum
state
|ψx
‡‡when
malicious
prover
condition
impose
restriction
number
interactions
instead
conditions
could
take
much
stronger
condition
example
every
every
committed
prover
makes
interactions
stronger
condition
actually
makes
simpler
proof
say
proposition
5.4
done
alone
applying
vb|q1i|
vb|q2i|
role
honest
prover
work
eraser
erases
non-blank
symbol
written
communication
cell
help
veriﬁer
safely
make
transition
inner
state
note
without
eraser
alone
make
transition
unitary
requirement
strategy
namely
two
orthonormal
vectors
transformed
two
orthonormal
ones
prohibits
transforming
|q1i|ai
|q1i|
|q1i|
precise
whenever
receiving
symbol
returns
symbol
copies
ﬁrst
blank
cell
private
tape
technically
speaking
make
unitary
need
map
visible
conﬁgurations
i|yi
certain
appeared
private
tape
superpositions
form
|ai|φx
appropriate
vector
|φx
right
implementation
possible
make
committed
prover
v|c|q0i|
|q0i|
|q0i|
|qrej,0i|
|q1i|
|qrej,1i|
|q2i|
|qacci|
v0|q0i|
|q0i|
v0|q1i|
|q2i|
v0|q2i|
|q1i|
v0|q1i|ai
|qrej,0i|
v1|q0i|
|q1i|ai
v1|q1i|
|q1i|
v1|q2i|
|q2i|
v1|q1i|ai
|qrej,0i|
table
-transitions
odd
next
shall
show
recognizes
odd
probability
let
binary
input
first
consider
case
odd
assume
form
0m1y
contains
odd
number
honest
prover
erases
sent
reads
process
helps
shift
next
mode
checking
number
since
check
whether
includes
odd
number
without
communication
prover
eventually
accepts
certainty
contrary
assume
odd
special
case
reject
certainty
query
committed
prover
focus
attention
remaining
case
contains
let
assume
form
0m1y
contains
even
number
veriﬁer
sends
committed
prover
reads
note
protocol
essentially
deterministic
maximize
acceptance
probability
malicious
prover
needs
return
since
otherwise
immediately
rejects
deterministic
fashion
since
check
whether
includes
odd
number
without
making
query
prover
committed
prover
qip
protocol
rejects
certainty
since
number
interactions
made
protocol
obviously
odd
therefore
belongs
qip
1qf
requested
second
step
need
prove
proposition
5.4
regarding
language
zero
1qf
since
1qf
1qfa
proposition
5.4
expands
impossibility
result
shows
zero
even
1qf
regular
language
zero
known
outside
1qfa
words
zero
qip
qip
qip
proposition
5.4
zero
qip
1qf
since
proof
proposition
5.4
quite
involved
given
subsequent
subsection
5.2
proof
proposition
5.4
proof
proposition
5.4
proceeds
way
contradiction
towards
contradiction
start
assuming
zero
qip
1qf
take
1-interaction
bounded
qip
system
1qfa
veriﬁer
recognizes
zero
error
probability
1/2
certain
constant
goal
pick
suitable
string
˜y0
appropriate
prover
prove
associated
protocol
accepts
˜y01m
probability
least
1/2
contradicts
assumption
zero
qip
1qf
purpose
shall
employ
technical
tool
called
query
weight
sum
squared
magnitudes
query
conﬁgurations
appearing
computation
protocol
speciﬁed
input
however
diﬀerent
choice
provers
may
result
diﬀerent
query
weights
seen
second
third
computation
trees
shown
figure
cope
unfavorable
situation
shall
introduce
another
computation
model
dependent
choice
provers
shall
prove
model
gives
upper-bound
query
weight
induced
committed
prover
using
model
query
weight
shall
ﬁnally
select
desired
string
˜y0
desired
prover
let
set
inner
states
let
communication
alphabet
write
input
alphabet
technicality
assume
without
loss
generality
never
queries
time
cid:543
figure
examples
modiﬁed
computation
leftmost
graph
depicts
modiﬁed
computation
input
two
remaining
graphs
original
computations
generated
using
diﬀerent
provers
black
circles
indicate
query
conﬁgurations
whereas
white
circles
indicate
non-query
conﬁgurations
let
query
conﬁguration
marked
black
zero
amplitude
crossed
grey
circle
located
upper-left
side
place
prover
forces
generate
new
computation
path
destructively
interferes
existing
path
modiﬁed
computation
enters
certain
halting
inner
state
time
tape
head
scans
first
introduce
two
useful
notions
1-interaction
condition
query
weight.
fix
input
let
committed
prover
readability
use
notation
compv
denote
computation
qip
protocol
input
takes
strategy
committed
prover
said
meet
1-interaction
condition
corresponding
protocol
makes
interaction
input
note
satisﬁes
1-interaction
condition
query
conﬁguration
non-zero
amplitude
along
computation
path
compv
exists
query
conﬁguration
compv
initial
conﬁguration
given
conﬁguration
along
computation
path
let
collection
committed
provers
satisfy
1-interaction
condition
important
note
whenever
prover
answers
non-blank
communication
symbols
non-zero
amplitude
must
change
symbols
back
blank
symbol
immediately
since
otherwise
considered
make
second
query
next
round
according
deﬁnition
interaction-bounded
qip
model
let
choose
prover
consider
computation
compv
introducing
extra
projection
operator
modify
compv
follows
whenever
performs
projective
measurement
onto
wnon
wacc
wrej
apply
communication
cell
additional
projection
maps
onto
hilbert
space
spanned
projection
makes
non-blank
symbols
collapse
protocol
continues
next
step
condition
section
5.1
observe
computation
obtained
inserting
extra
projection
operator
every
step
independent
choice
committed
provers
express
modiﬁed
computation
use
another
notation
compv
figure
illustrates
diﬀerence
modiﬁed
computation
two
original
computations
generated
two
diﬀerent
provers
two
strings
query
weight
conditional
sum
squared
magnitudes
amplitudes
query
conﬁgurations
appearing
compv
reading
brevity
let
wtv
ranges
satisﬁes
wtv
empty
string
note
query
weight
wtv
strings
recall
assumption
1-interaction
bounded
qip
system
recognizing
zero
success
probability
least
1/2
following
lemma
shows
two
properties
query
weights
lemma
5.5
let
committed
prover
let
strings
every
query
conﬁguration
non-zero
amplitude
compv
computation
path
compv
ending
appears
compv
ending
amplitude
amplitudes
query
conﬁgurations
compv
tape
head
reading
greater
equal
sum
squared
magnitudes
take
committed
prover
let
query
conﬁguration
compv
proof
non-zero
amplitude
say
since
zero
compv
must
exist
least
one
computation
path
compv
ending
non-zero
amplitude
let
consider
computation
path
say
since
satisﬁes
1-interaction
condition
contain
query
conﬁguration
non-zero
amplitude
except
last
conﬁguration
deﬁnition
compv
projective
measurement
communication
cell
performed
along
hence
conﬁgurations
inside
must
present
also
compv
thus
appears
compv
since
arbitrary
computation
paths
compv
ending
contribute
amplitude
must
appear
compv
therefore
amplitude
compv
equals
requested
assume
let
recall
query
weight
sum
squared
magnitudes
amplitudes
query
conﬁgurations
compv
reading
every
query
conﬁguration
non-zero
amplitude
compv
squared
magnitude
amplitude
compv
equal
compv
note
converse
general
may
true
may
query
conﬁguration
non-zero
amplitude
compv
never
appears
compv
figure
illustrates
case
summing
squared
magnitudes
query
conﬁgurations
compv
immediately
obtain
continue
proof
proposition
5.4.
let
consider
value
supremum
strings
zero
query
weight
namely
supw∈zero
wtv
observe
since
query
weight
unit
real
interval
readability
omit
letter
whenever
clear
context
let
denote
committed
prover
applying
identity
operator
every
step
claim
let
assume
assumption
follows
zero
proof
obtain
contradiction
aim
constructing
appropriate
bounded-error
1qfa
recognizes
zero
recall
honest
committed
prover
makes
1-interaction
bounded
qip
system
recognize
zero
firstly
assert
even
simple
protocol
recognize
zero
success
probability
least
1/2
input
zero
since
lemma
5.5
implies
query
conﬁgurations
compv
must
zero
amplitudes
situation
implies
superposition
global
conﬁgurations
step
computation
veriﬁer
next
moves
aﬀected
messages
sent
hence
replace
without
changing
outcome
next
shall
construct
desired
1qfa
inner
state
form
implicitly
reﬂects
inner
state
symbol
communication
cell
1qfa
behaves
follows
input
simulates
using
imaginary
prover
maintaining
content
communication
cell
integrated
part
inner
states
finally
claim
recognizes
zero
bounded
error
probability
let
input
string
zero
since
query
conﬁguration
prover
zero
amplitude
correctly
accepts
probability
1/2
likewise
zero
protocol
rejects
probability
1/2
thus
also
rejects
probability
therefore
recognizes
zero
error
probability
1/2−
requested
since
zero
1qfa
obtain
contradiction
therefore
follows
next
shall
construct
committed
prover
string
zero
force
protocol
accept
probability
least
1/2
let
recall
section
2.1
notation
refers
strategy
i∈n+
input
since
claim
every
real
number
exists
string
zero
given
set
min
η2/16
|y|
choose
lexicographically
minimal
string
zero
satisfying
readability
abbreviate
string
wyy
moreover
deﬁne
new
committed
prover
behaves
input
˜y01m
wyy01m
following
fashion
follows
strategy
p˜y0
tape
head
reading
|cwy
behaves
reading
remaining
portion
y01m
since
satisﬁes
1-iteration
condition
obtain
p˜y0
˜y0
notation
pacc
introduced
section
2.1
simply
drop
write
pacc
instead
claim
following
lower
bound
pacc
˜y0
claim
string
pacc
˜y0
1/2
η/2
˜y0
deﬁnition
also
belongs
let
arbitrary
input
string
fact
˜y0
zero
must
hold
pacc
˜y0
p˜y0
proof
1/2
recognizes
zero
note
input
˜y0
protocol
works
way
p˜y0
reading
|cwy
consider
query
weight
˜y0
since
˜y0
obtain
˜y0
follows
using
inequality
lemma
5.5
implies
committed
prover
˜y0
upper-
bounds
sum
squared
magnitudes
amplitudes
query
conﬁgurations
compv
˜y0
tape
head
reading
notice
p˜y0
belong
˜y0
taking
p˜y0
simple
calculation
shows
cid:12
cid:12
pacc
˜y0
pacc
˜y0
p˜y0
cid:12
cid:12
cid:16
cid:17
1/2
|y0|
2√γy
|y|
lemma
since
pacc
˜y0
p˜y0
1/2
follows
|y|
|y|
η/2
ﬁrst
inequality
shown
e.g.
pacc
˜y0
pacc
˜y0
p˜y0
η/2
1/2
η/2
1/2
η/2
henceforth
shall
turn
attention
protocol
working
input
˜y01m
number
shall
estimate
acceptance
probability
pacc
˜y01m
initial
superposition
global
conﬁgurations
|q0i|
omit
qubits
representing
tape
head
position
tape
head
moves
one
direction
without
stopping
let
span
|qi
let
span
|σi
let
hilbert
space
representing
prover
private
tape
number
denote
|ψy
superposition
global
conﬁguration
space
obtained
input
˜y01m
tape
head
moves
right
end
|c˜y0
applies
identity
operator
reading
remaining
since
basically
nothing
read
|cwy
|ψy
depend
choice
therefore
write
|ψyi
instead
|ψy
simplicity
moreover
set
inf
y∈σ∗
k|ψyik
claim
proof
let
prove
claim
contradiction
first
assume
since
assumption
means
inf
y∈σ∗
k|ψyik2
constant
positive
deﬁnition
exists
string
satisfying
k|ψyik2
let
consider
special
input
string
˜y01
since
˜y01
zero
must
follow
pacc
˜y01
1/2
soundness
condition
1-interaction
bounded
qip
system
notice
|ψyi
composed
non-halting
conﬁgurations
non-zero
amplitudes
convenience
let
denote
total
acceptance
probability
obtained
reading
˜y0
including
holds
pacc
˜y0
+k|ψyik2
reading
˜y0
˜y01
takes
exactly
strategy
input
˜y0
thus
conclude
pacc
˜y01
least
combining
inequalities
obtain
pacc
˜y0
pacc
˜y01
k|ψyik2
since
pacc
˜y0
1/2
η/2
claim
follows
k|ψyik2
pacc
˜y0
pacc
˜y01
1/2
η/2
1/2
contradiction
therefore
must
hold
let
suﬃciently
small
positive
real
number
choose
lexicographically
ﬁrst
string
k|ψyik
let
denote
identity
operators
acting
respectively
write
enon
-transition
symbol
integer
holds
j|ψyik
deﬁnition
note
since
ﬁxed
prover
uses
ﬁnite
number
tape
cells
private
tape
let
denote
maximal
number
cells
use
without
loss
generality
assume
hilbert
space
dimension
thus
vectors
series
j|ψyi
hilbert
space
dimension
d|σ||γ|
since
claim
two
numbers
j1|ψyi
j2|ψyik
analysis
similar
see
also
lemma
4.1.10
exist
constant
independent
value
satisfying
j1|ψyi
j2|ψyik
k|ψyi
m|ψyik
ǫ1/4
inequality
follows
cid:12
cid:12
pacc
˜y0
pacc
˜y01m
cid:12
cid:12
|ψyi
m|ψyik
k|ψyi
m|ψyik
cǫ1/4
ﬁrst
inequality
folklore
see
lemma
proof
since
arbitrary
set
η/2c
pacc
˜y0
1/2
η/2
claim
follows
pacc
˜y01m
1/2
η/2
cǫ1/4
1/2
contradicts
assumption
committed
prover
accepts
˜y01m
probability
1/2
η/2
1/2
therefore
zero
belong
qip
1qf
requested
ﬁnally
completed
proof
proposition
5.4
challenging
open
questions
throughout
sections
3–5
placed
various
restrictions
behaviors
veriﬁers
provers
qfa-veriﬁer
qip
systems
studied
restrictions
aﬀect
language
recognition
power
systems
restricted
models
considered
sections
3–5
include
classical-prover
qips
public
qips
interaction-bounded
qips
initial
study
paper
nonetheless
still
remain
numerous
unsolved
questions
concerning
qip
systems
hereafter
shall
give
short
list
important
open
questions
helping
guide
future
research
relationships
quantum
provers
classical
provers
still
entirely
clear
context
qfa-veriﬁer
qip
systems
mostly
soundness
condition
imposed
systems
example
expect
see
fundamental
separation
qip
1qf
qip
1qf
c-prover
well
qip
2qf
poly-time
qip
2qf
poly-time
c-prover
general
need
discover
precise
relationships
public-coin
systems
namely
sys-
tems
public
qip
systems
beyond
theorem
4.4.
moreover
associated
2qfa
veriﬁers
ask
whether
2qfa
poly-time
properly
included
qip
2qf
public
whether
qip
2qf
public
poly-time
dif-
ferent
qip
2qf
poly-time
separation
qip
2qf
qip
2qf
public
also
unknown
must
settled
new
interaction-bounded
qip
system
special
interest
analyzing
roles
interactions
provers
veriﬁers
model
hope
see
equality
qip
1qf
qip
1qf
indeed
holds
unsolved
far
general
question
whether
interactions
powerful
interactions
since
1qfa
veriﬁer
unable
count
number
interactions
queries
may
directly
generalize
proof
theorem
5.2
assert
qip
k+1
1qf
constant
nevertheless
still
conjecture
assertion
true
1qf
qip
great
interest
seek
algebraic
characterization
qfa-veriﬁer
qip
systems
characterization
may
shed
new
light
nature
quantum
interactions
two
parties
references
ambainis
freivalds
1-way
quantum
ﬁnite
automata
strengths
weaknesses
generaliza-
tions
proc
39th
ieee
symposium
foundations
computer
science
pp.332–341
1998
ambainis
ikusts
valdats
class
languages
recognizable
one-way
quantum
ﬁnite
automata
proc
18th
international
symposium
theoretical
aspect
computer
science
lecture
notes
comput
sci.
vol.2010
pp.75–86
2001
babai
trading
group
theory
randomness
proc
17th
acm
symposium
theory
computing
pp.421–429
1985
condon
complexity
space
bounded
interactive
proof
systems
complexity
theory
current
research
eds
ambos-spies
cambridge
university
press
pp.147–189
1993
condon
hellerstein
pottle
wigderson
power
ﬁnite
automata
nondeterministic
probabilistic
states
siam
comput
1998
739–762
dwork
stockmeyer
finite
state
veriﬁers
power
interaction
acm
1992
800–828
goldwasser
sipser
private
coins
versus
public
coins
interactive
proof
systems
proc
18th
annual
symposium
theory
computing
pp.59–68
1986
gruska
quantum
computing
mcgraw
hill
1999
hopcroft
motwani
ullman
introduction
automata
theory
languages
computa-
tion
second
edition
addison-wesley
2001
kobayashi
matsumoto
quantum
multi-prover
interactive
proof
systems
limited
prior
entanglement
comput
system
sci
2003
429–450
kondacs
watrous
power
quantum
ﬁnite
state
automata
proc
38th
ieee
symposium
foundations
computer
science
pp.66–75
1997
lipton
recursively
enumerable
languages
ﬁnite
state
interactive
proofs
technical
report
cs-tr-213-89
computer
science
department
princeton
university
1989
moore
crutchﬁeld
quantum
automata
quantum
grammars
theor
comput
sci
237
2000
275–306
nielsen
chuang
quantum
computation
quantum
information
cambridge
university
press
2000
nishimura
yamakami
application
quantum
ﬁnite
automata
quantum
interactive
proof
systems
extended
abstract
proc
9th
international
conference
implementation
ap-
plication
automata
lecture
notes
comput
sci.
vol.3317
pp.225–236
2004
nishimura
yamakami
application
quantum
ﬁnite
automata
quantum
interactive
proof
systems
comput
system
sci
2009
255–269
extends
ﬁrst
half
portion
watrous
pspace
constant-round
quantum
interactive
proof
systems
theor
comput
sci
292
2003
575–588
yamakami
analysis
quantum
functions
int
found
comput
sci
2003
815-852.
preliminary
version
appeared
proc
19th
conference
foundations
software
technology
theoretical
computer
science
lecture
notes
comput
sci.
vol.1738
pp.407–419
1999
