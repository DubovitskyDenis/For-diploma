row
bounds
needed
justiﬁably
express
ﬂagged
schur
functions
gessel-viennot
determinants
robert
proctor
matthew
willis
university
north
carolina
chapel
hill
27599
u.s.a.
university
delaware
georgetown
georgetown
19947
u.s.a.
rap
email.unc.edu
mjwillis
udel.edu
july
2019
abstract
let
partition
parts
let
weakly
increasing
n-tuple
entries
...
ﬂagged
schur
function
variables
...
indexed
deﬁned
sum
content
weight
monomials
semistandard
young
tableaux
shape
whose
values
row-wise
bounded
entries
gessel
viennot
gave
determinant
expression
ﬂagged
schur
function
indexed
could
done
since
pair
satisﬁed
nonpermutable
condition
sequence
terminals
n-tuple
lattice
paths
used
model
tableaux
generalize
ﬂagged
schur
functions
dropping
requirement
weakly
increasing
give
condition
entries
pair
nonpermutable
necessary
suﬃcient
parts
distinct
multiple
row
bound
n-tuples
produce
set
tableaux
accordingly
group
bounding
equivalence
classes
identify
eﬃcient
class
determinant
computation
recently
showed
many
sets
objects
indexed
enumerated
number
eﬃcient
n-tuples
called
counts
parabolic
catalan
numbers
noted
demazure
characters
key
polynomials
indexed
312-avoiding
permutations
also
expressed
determinants
keywords
ﬂagged
schur
function
gessel-viennot
method
jacobi-trudi
identity
nonintersecting
lattice
paths
parabolic
catalan
number
msc
codes
05e05
05a19
introduction
fix
integers
...
throughout
schur
function
variables
...
deﬁned
sum
content
weight
monomial
semistandard
tableaux
shape
values
...
jacobi-trudi
identity
expresses
determinant
whose
entries
homogeneous
symmetric
functions
generalize
schur
functions
ﬂag
integers
...
deﬁne
set
tableaux
whose
values
ith
rows
english
shapes
exceed
row
bound
ﬂagged
schur
function
deﬁned
multivariate
generating
function
row
bounded
tableaux
using
weight
set
nonempty
row
bound
n-tuple
henceforth
assume
row
bound
n-tuples
satisfy
upper
condition
gessel
viennot
considered
n-tuples
nonintersecting
lattice
paths
could
express
generating
function
n-tuples
determinant
via
cancellation
argument
provided
n-tuples
terminals
lattice
paths
satisﬁed
nonpermutable
condition
books
st1
st2
stanley
presented
gessel-viennot
proof
jacobi-
trudi
identity
...
proof
converts
n-tuples
nonintersecting
lattice
paths
semistandard
tableaux
generally
produce
determinant
expression
skew
ﬂagged
schur
function
sλ/µ
since
noted
ﬂag
condition
row
bounds
suﬃcient
satisfaction
nonpermutable
condition
given
gessel-
viennot
method
still
often
used
brt
mpp
express
generating
functions
cardinalities
tableau
sets
nature
limiting
attention
nonskew
tableaux
de-emphasize
ﬂag
condition
generally
consider
upper
row
bounds
forming
sets
continue
denote
corresponding
generating
functions
general
context
gessel-viennot
method
still
employed
express
determinant
main
result
theorem
4.1
presents
λ-dependent
conditions
general
upper
n-tuples
necessary
well
suﬃcient
corresponding
λ-dependent
n-tuples
lattice
path
terminals
nonpermutable
make
remarks
row
bound
sums
general
computation
sums
gessel-viennot
determinants
paper
third
series
papers
key
polynomials
demazure
polynomials
demazure
characters
type
ﬂagged
schur
functions
themes
running
papers
interest
one
results
shape
boxes
ith
row
parts
form
strictly
decreasing
sequence
every
one
possible
column
lengths
...
less
present
shape
seems
phenomena
arise
strict
may
received
relatively
little
attention
studies
demazure
polynomials
ﬂagged
schur
functions
example
strict
demazure
polynomials
precisely
indexed
multi-
permutations
quotient
symmetric
group
permutations
many
phenomena
considered
papers
trivial
vacuous
strict
example
exist
upper
n-tuples
exactly
strict
let
set
column
lengths
less
appear
shape
central
objects
series
papers
n-tuples
entries
equipped
dividers
placed
locations
entries
indexed
elements
papers
introduce
several
properties
may
possessed
rλ-tuples
pw2
deﬁned
rλ-parabolic
catalan
number
number
λ-312-avoiding
rλ-permutations
interesting
special
kinds
rλ-tuples
also
enumerated
rλ-
parabolic
catalan
numbers
include
important
rλ-tuples
arise
considerations
paper
gapless
rλ-tuples
striking
gapless
rλ-tuples
already
arisen
pw2
pw3
diﬀerent
considerations
two
papers
gapless
rλ-tuples
appear
fundamental
new
combinatorial
quantities
area
reliably
equality
two
generating
functions
predict
equality
underlying
sets
tableaux
reiner
shimozono
postnikov
stanley
obtained
results
concerning
possible
equalities
demazure
polynomials
ﬂagged
schur
functions
pw3
built
upon
work
showing
equality
underlying
tableau
sets
also
holds
words
ruled
accidental
equalities
form
care
must
taken
avoid
mischaracterizing
main
result
theorem
4.1.
states
sharp
necessary
conditions
needed
able
justiﬁably
apply
gessel-viennot
method
express
row
bound
sum
gessel-viennot
determinant
polynomial
denoted
gvλ
conceivable
equality
could
nonetheless
accidentally
hold
conditions
satisﬁed
deﬁne
two
upper
rλ-tuples
equivalent
conceivable
accidental
equalities
form
could
exist
consider
various
kinds
upper
rλ-tuples
study
applicability
eﬃciency
gessel-viennot
method
expressing
general
row
bound
sum
polynomials
determinants
following
overview
conclusions
organized
outlined
hierarchy
kinds
upper
rλ-tuples
readers
may
wish
defer
reading
technical
summary
second
reading
introduction
readers
may
prefer
read
items
order
gapless
core
rλ-tuple
exists
ﬂag
equivalent
polynomial
arises
already-known
ﬂagged
schur
function
thus
equal
gessel-viennot
determinant
gvλ
additionally
bounded
platform
rλ-tuple
nonpermutable
condition
satisﬁed
suﬃcient
direction
main
result
theorem
4.1.
gessel-
viennot
method
immediately
applied
express
determinant
gvλ
stated
corollary
4.2
also
ﬂag
sum
ﬂagged
schur
function
outset
ﬂag
probably
eﬃcient
purposes
determinant
evaluation
equivalent
gapless
core
bounded
platform
rλ-tuple
would
fact
eﬃcient
evaluation
gessel-viennot
determinant
best
possible
rλ-
tuples
gapless
rλ-tuples
see
proposition
9.4
two
gapless
ﬂag
criteria
independent
bounded
platform
gapless
core
rλ-tuples
either
neither
may
possessed
bounded
platform
rλ-tuple
nonpermutable
condition
satisﬁed
necessary
direction
theorem
4.1.
gapless
core
nonetheless
pre-processed
produce
equivalent
gessel-viennot
method
applied
see
corollary
4.3.
gapless
core
rλ-tuple
corollary
9.3
describes
gapless
core
bounded
platform
rλ-tuples
gvλ
gapless
core
rλ-tuple
arise
ﬂagged
schur
function
section
necessary
direction
theorem
4.1
used
remark
rλ-tuples
equivalent
nonpermutable
condition
satisﬁed
pw3
paper
found
nice
properties
possessed
ﬂagged
schur
functions
hold
obtained
row
bound
sums
arise
non-gapless
core
rλ-tuples
see
last
paragraph
section
problem
8.2
asks
row
bound
sum
upper
rλ-tuple
gapless
core
rλ-tuple
accidentally
equal
gessel-viennot
determinant
conclude
indicating
material
situated
led
consid-
erations
crystallized
main
result
demazure
characters
arose
1974
demazure
introduced
certain
b-modules
studying
singularities
schubert
varieties
g/b
ﬂag
manifolds
demazure
polynomial
expressed
sum
weight
monomial
certain
set
semistandard
tableaux
shape
flagged
schur
functions
arose
1982
lascoux
sch¨utzenberger
studying
schubert
polynomials
ﬂag
manifold
seeking
deeper
understanding
results
related
polynomials
led
studies
described
three
paper
series
set
...
main
result
pw2
corollary
7.2
stated
set
demazure
tableaux
convex
rλ-permutation
λ-312-avoiding
directions
result
used
pw3
sharpened
extended
deepened
results
proof
corollary
10.4
pw3
used
main
result
pw2
gapless
core
property
corollary
ruled
accidental
equalities
corollary
10.4
restated
fact
8.1
use
proof
corollary
9.3.
combined
corollary
9.2
pw2
theorem
13.1
pw3
list
nearly
dozen
kinds
rλ-tuples
phenomena
counted
rλ-parabolic
catalan
numbers
ruling
accidental
equalities
mentioned
together
connection
ﬂagged
schur
functions
demazure
polynomials
led
enumeration
distinct
ﬂagged
schur
polynomials
listed
part
theorem
13.1.
last
item
lists
part
theorem
13.1
pw3
refers
enumeration
corollary
9.5
aware
interesting
phenomena
arise
row
bound
sums
strict
familiar
gapless
rλ-tuples
rλ-ceiling
map
pw2
pw3
enabled
recognize
necessity
conditions
theorem
4.1
see
conditions
extended
realm
suﬃciency
ﬂags
alone
routine
deﬁnitions
appear
section
advanced
deﬁnitions
appear
section
main
results
stated
section
set-up
gessel-viennot
mechanics
presented
section
sections
contain
proofs
main
results
sections
consider
equivalences
row
bounds
two
kinds
accidental
equalities
eﬃciency
gessel-
viennot
determinants
section
presents
improvement
determinant
expression
demazure
polynomials
appeared
routine
deﬁnitions
n-tuples
shapes
tableaux
polynomials
fix
throughout
paper
let
nonnegative
integers
deﬁne
...
...
lower
case
greek
letters
indicate
tuples
non-negative
integers
entries
denoted
letter
tuples
n-tuples
nn-tuple
entries
indexed
indices
let
denote
poset
nn-tuples
ordered
entrywise
comparison
nn-tuple
ﬂag
upper
tuple
nn-tuple
fix
denote
elements
set
qr+1
use
specify
locations
dividers
within
nn-tuples
let
nn-tuple
graph
ﬁrst
quadrant
draw
vertical
lines
small
lines
indicate
right
ends
carrels
qh−1
r-tuple
nn-tuple
equipped
dividers
fix
r-tuple
portray
...
νq1
νq1+1
...
νq2
...
νqr+1
...
dots
figure
5.1
display
let
denote
subposet
consisting
upper
r-tuples
r-ﬂag
upper
ﬂag
regarded
r-tuple
let
denote
set
upper
r-ﬂags
fix
hth
carrel
contains
qh−qh−1
indices
r-increasing
tuple
r-tuple
αqh−1+1
...
αqh
example
given
table
6.1.
let
denote
set
r-increasing
upper
tuples
kinds
r-tuples
introduced
sections
table
4.1
directory
lists
six
essential
kinds
partition
n-tuple
fix
partition
throughout
shape
also
denoted
consists
left
justiﬁed
rows
boxes
denote
column
lengths
ζλ1
since
columns
important
rows
pw2
pw3
boxes
transpose-indexed
pairs
deﬁne
set
distinct
column
lengths
less
taking
note
one
λi′
hth
carrel
qh−1
speciﬁed
number
rows
shape
length
λqh
coordinates
boxes
hth
cliﬀ
shape
form
set
qh−1
reduce
clutter
replace
subscripts
preﬁxes
using
notions
semistandard
tableau
shape
ﬁlling
values
strictly
increase
north
south
within
column
weakly
increase
west
east
within
row
see
figure
6.1.
let
denote
set
tableaux
shape
fix
denote
one
column
subtableau
boxes
jth
column
tableau
value
ith
row
denoted
deﬁne
content
take
number
values
equal
let
indeterminants
monomial
xθ1
xθn
let
λ-tuple
deﬁne
row
bound
set
tableaux
section
pw3
seen
nonempty
fix
pw3
introduced
row
bound
sum
sum
λ-ﬂags
speciﬁcally
refer
ﬂagged
schur
functions
ﬂag
schur
polynomials
gapless
core
schur
polynomials
deﬁned
section
lattice
paths
gessel-viennot
determinant
establish
conventions
notations
constructions
analogous
presented
section
2.7
st1
section
7.16
st2
first
introduce
n-tuples
weighted
lattice
paths
model
tableaux
row
bound
tableau
set
obtain
close
visual
correspondence
tableaux
ﬁrst
ﬂip
x-y
plane
containing
lattice
paths
vertically
ﬁrst
quadrant
lower
right
southeast
origin
page
transposed
matrix
coordinates
boxes
shapes
re-used
coordinatize
points
ﬁrst
quadrant
let
lattice
point
units
east
units
south
directed
line
segment
easterly
step
depth
let
lattice
path
source
sink
connected
set
incident
union
easterly
steps
southerly
steps
notation
...
...
indicates
eastbound
path
arrives
turns
right
proceeds
south
turns
left
proceeds
east
turns
right
proceeds
south
n-path
n-tuple
...
paths
component
path
source
let
points
λ1+n−1
+n−2
...
terminals
terminal
pair
strictiﬁcation
ensures
longitudes
terminals
distinct
initially
n-paths
...
use
terminals
...
order
sinks
respective
components
given
n-path
proof
theorem
7.16.1
st2
attempt
create
corresponding
tableau
example
correspondence
compare
dotted
paths
figure
6.2
rows
figure
6.1.
record
weakly
increasing
depths
successive
easterly
steps
path
left
right
boxes
mth
row
shape
easterly
step
recorded
value
box
last
value
mth
row
exceed
implicit
st2
values
strictly
increase
column
intersections
among
see
let
λi+1
set
suppose
easterly
steps
i+1
n−i+j−1
n−i+j
n−i−1+j−1
t+1
n−i−1+j
t+1
near
miss
tableau
values
translates
near
miss
path
edges
let
ldλ
denote
set
n-paths
disjoint
least
one
disjoint
n-path
upper
claimed
st2
recording
process
seen
bijective
set
since
seen
carrels
cliﬀs
play
crucial
role
determine
regard
λ-tuple
summarizing
fact
3.1.
ldλ
recording
process
bijection
set
disjoint
n-paths
ldλ
row
bound
tableau
set
visualize
sequence
...
terminals
plane
figure
6.2
one
begins
rotating
graph
figure
5.1
180◦
fix
obtain
determinant
expression
need
consider
general
n-paths
introduce
weights
let
n-path
sinks
assigning
weight
monomial
following
fashion
emulates
assignment
weight
tableau
ldλ
also
extends
weight
rule
n-paths
assign
weight
easterly
step
depth
path
multiply
weights
easterly
steps
also
multiply
weights
component
paths
produce
monomial
denoted
sinks
terminals
usual
order
multivariate
generating
function
pλ∈ldλ
clearly
row
bound
sum
let
set
complete
homogeneous
symmetric
function
variables
xi+1
...
deﬁned
xt1
xtu
sum
...
sum
weights
assigned
one
path
varies
paths
next
consider
n-paths
use
terminals
permuted
order
list
sinks
let
permutation
let
denote
list
terminals
λπ1
βπ1
λπ2
+n−π2
βπ2
...
λπn
+n−πn
βπn
let
ldλ
denote
set
disjoint
n-paths
...
respective
sinks
terminal
pair
nonpermutable
ldλ
empty
...
non-skew
version
theorem
2.7.1
st1
theorem
7.16.1
st2
replaced
disjoint
n-paths
corresponding
tableaux
proposition
3.2.
let
terminal
pair
nonpermutable
row
bound
sum
given
determinant
|hλj
−j+i
produce
expression
theorem
2.7.1
st1
use
remark
expressed
ldλ
generating
function
note
theorem
2.7.1
proved
signed
involution
pairing
cancellation
argument
refer
argument
g-v
method
determinant
g-v
determinant
main
results
noted
table
4.1
technical
deﬁnitions
notions
gapless
core
bounded
platform
appear
results
given
next
section
main
result
combines
propositions
6.3
7.2
theorem
4.1.
let
partition
let
upper
λ-tuple
terminal
pair
nonpermutable
gapless
core
λ-tuple
bounded
platform
since
note
gapless
core
λ-tuples
bounded
platforms
λ-ﬂags
strict
case
theorem
says
λ-ﬂags
upper
λ-tuples
produce
nonpermutable
terminal
pairs
strict
case
theorem
provides
converse
stanley
parenthetical
remark
theorem
2.7.1
st1
circumstances
theorem
employ
g-v
method
proposition
3.2
corollary
4.2.
let
partition
let
upper
λ-tuple
gapless
core
λ-tuple
bounded
platform
|hλj
−j+i
converse
result
open
see
problem
8.2
gapless
core
λ-tuple
bounded
platform
polynomial
nonetheless
computed
determinant
map
used
convert
following
result
also
deﬁned
next
section
corollary
4.3.
let
partition
let
upper
λ-tuple
set
gapless
core
λ-tuple
|hλj
−j+i
proof
corollary
contained
proof
general
corollary
9.3.
λ-tuples
sets
section
deﬁned
terminology
asdf
gcλ
bpλ
upper
λ-tuple
upper
λ-ﬂag
λ-increasing
upper
tuple
gapless
λ-tuple
gapless
core
λ-tuple
λ-tuple
bounded
platform
table
4.1.
kinds
upper
rλ-tuples
advanced
deﬁnitions
r-tuples
tableaux
polynomials
pw2
pw3
ﬁrst
distill
crucial
information
upper
r-tuple
skeletal
critical
substructure
still
motivated
tableau
considerations
presented
last
paragraph
section
distill
information
deﬁne
two
functions
preview
scanning
r-tuple
within
carrels
right
entry
critical
entry
either
rightmost
entry
carrel
smaller
closest
critical
entry
right
amount
exceeds
distance
critical
entry
launching
running
example
take
carrels
see
figure
5.1.
entries
denoted
dots
deﬁne
r-core
r-platform
maps
constructing
images
entries
example
denoted
dashes
left
right
parts
figure
5.1.
let
rightmost
critical
index
hth
carrel
set
scan
rest
hth
carrel
qh−1
right
exists
next
critical
index
left
qh−1
maximal
βx′
otherwise
next
critical
index
left
qh−1
qh−1
occurs
set
iterate
right-to-left
scanning
procedure
qh−1
intervals
critical
intervals
subintervals
hth
carrel
second
carrel
example
next
critical
index
left
initial
critical
index
deﬁne
continuing
work
within
second
carrel
example
nonzero
critical
index
call
critical
entry
overall
example
write
list
nonzero
critical
indices
list
corresponding
critical
entries
deﬁned
r-core
r-platform
example
see
table
6.1
larger
example
r-ceiling
map
pw3
restriction
r-platform
map
subset
r-tuple
bounded
platform
upper
r-tuple
let
bpr
denote
set
upper
r-tuples
bounded
platforms
example
bounded
platform
since
summarize
several
aspects
immediate
consequences
deﬁnitions
fact
5.1.
let
set
let
critical
interval
one
δi+1
hence
iii
one
hence
bpr
hence
view
r-tuples
concatenations
respectively
staircases
plateaus
critical
intervals
notable
rightmost
critical
entry
carrel
automatically
last
entry
carrel
exceed
leftmost
critical
entry
next
carrel
gapless
r-tuple
r-increasing
upper
tuple
γqh
smallest
critical
index
larger
let
denote
set
gapless
r-tuples
example
gapless
r-tuple
generally
gapless
core
r-tuple
upper
r-tuple
ηqh
smallest
critical
index
larger
let
gcr
denote
set
gapless
core
r-tuples
example
gapless
core
r-tuple
following
two
facts
explain
terminologies
routine
veriﬁcations
appeared
parts
iii
proposition
4.2
pw3
figure
5.1.
applications
maps
example
fact
5.2
let
case
gapless
r-tuple
whenever
exists
γqh
γqh+1
γqh
γqh+1
ph+1
ﬁrst
entries
carrel
qh+1
γqh
γqh
...
γqh
let
gcr
part
re-expressed
whenever
γqh
γqh+1
leftmost
staircase
within
carrel
must
contain
entry
equal
γqh
hence
gaps
following
containments
quickly
follow
deﬁnitions
two
facts
gcr
bpr
bpr
gcr
bpr
one
bpr
gcr
hence
gcr
bpr
relate
concepts
tableaux
considering
given
ﬁxed
partition
ﬁnd
set
distinct
column
lengths
rewrite
subscript
fix
explained
section
pw3
row
bound
set
tableaux
unique
maximal
element
visualizing
determined
motivated
deﬁnition
critical
entries
bottom
value
cliﬀ
shape
carrel-ending
critical
entry
corresponding
carrel
moving
within
cliﬀ
semistandard
condition
decrement
ending
values
rows
higher
row
precipitous
drop
given
bounds
juncture
next
critical
entry
left
present
row
ending
value
manner
seen
rλ-tuple
row
ending
values
necessary
condition
nonpermutability
two
lemmas
obtained
give
necessary
conditions
upper
r-tuple
yield
terminal
pair
nonpermutable
determinant
example
pertinent
following
lemma
take
note
gcλ
bpλ
lemma
imply
nonpermutable
g-v
determinant
proposition
3.2
evaluates
lemma
6.1.
let
bpλ
fails
nonpermutable
table
6.1.
example
fix
prepare
proofs
constructing
particular
n-paths
given
see
ldλ
ﬁrst
describe
corresponding
clearly
semistandard
tableau
launching
running
example
take
15.
let
displayed
table
6.1.
set
see
table
6.1
example
consult
figure
6.1
tableau
constructed
example
case
figure
6.1.
example
tableau
shape
λqh+1
λqh+1
table
6.2.
original
paths
proofs
lemmas
6.1
6.2
construct
one
n-path
varies
diﬀer
location
transition
elementary
paths
early
values
carefully
crafted
paths
middle
values
example
take
set
values
small
possible
ﬁrst
component
paths
corresponding
top
rows
described
top
entry
table
6.2.
figure
6.2
uses
dotted
lines
display
...
λ16
example
...
early
elementary
paths
ending
longitudes
paths
big
green
dots
ﬁgure
denote
depths
taken
λ-core
nuanced
paths
middle
region
indexed
let
qh−1
λqh+1
values
next
shorter
rows
set
values
still
small
possible
λqh+1
λqh
set
overhanging
values
large
possible
given
nuanced
paths
corresponding
middle
rows
described
middle
entry
table
6.2.
continuing
example
lowest
seven
non-null
dotted
line
paths
...
λ15
nuanced
type
values
ﬁll
n-path
last
carrel
late
values
set
values
large
possible
given
paths
corresponding
bottom
rows
described
bottom
entry
table
6.2.
example
last
null
path
third
type
proof
lemma
6.1.
let
bpλ
rewiring
paths
within
one
n-paths
constructed
construct
disjoint
n-path
whose
respective
sinks
form
nontrivial
permutation
original
ordered
terminals
set
since
failure
boundedness
occur
last
carrel
λ-tuple
see
table
6.1
running
example
let
...
exists
qh−1
let
qh−1
maximal
critical
index
fact
5.1
since
let
smallest
critical
index
qh−1
example
implies
since
implies
refer
n-path
constructed
take
advantage
excessively
deep
sink
begin
construct
modifying
last
part
produce
c+1
...
rewired
path
new
path
sink
sink
old
path
swooping
beneath
terminals
currently
sinks
λc+1
λc+2
...
terminals
used
respectively
sinks
rewired
d−1
look
southernmost
solid
red
path
figure
6.2.
rather
ﬁnishing
...
λqh+1
λd+n−d
rewired
ﬁnishes
...
λqh+1+n−d
λd+n−d−1
λd+n−d−1
+n−c
+n−c
stops
one
unit
short
sink
goes
one
unit
south
turns
left
onto
latitude
goes
units
east
turns
right
straight
south
sinks
sink
new
southerly
edge
use
λd+1
later
path
longitude
used
component
since
λd+1
implies
longitude
strictly
east
longitude
λd+1
λd+1
sinks
note
δd+1
critical
index
southernmost
point
reached
new
brieﬂy
used
longitude
strictly
north
northernmost
point
longitude
used
λd+1
descends
depth
δd+1
longitude
λqh+1
west
therefore
intersect
λd+1
figure
6.2.
rewiring
four
component
paths
produces
nonpermutability
violation
either
case
...
next
successively
modify
ﬁnishes
λd−1
λd−2
...
respectively
produce
ﬁnishes
rewired
d−1
d−2
...
look
three
solid
red
paths
figure
6.2.
let
rather
travelling
elementary
path
rewired
travels
δm+1
βm+1
ﬁnishing
turning
right
one
step
early
using
one
new
southerly
step
reach
λm+1
δm+1
adopting
ﬁnal
possibly
empty
stilt
λm+1
using
ﬁnish
note
reaches
since
λd−1
new
d−1
sinks
depth
since
new
steps
intersect
intersections
among
rewired
paths
occur
since
right
turns
executed
one
easterly
step
early
d−1
longitude
southerly
steps
used
coordinated
along
staircase
wherein
λqh
given
choices
hence
set
intersect
ﬁnish
ruling
intersections
rewired
paths
unmodiﬁed
paths
rewiring
paths
also
implies
entire
rewired
deformed
path
toward
southwest
thus
produce
intersect
argument
none
rewired
intersect
intersect
λc−1
lie
convex
hull
steps
convex
region
lies
weakly
west
longitude
path
forms
northeastern
boundary
therefore
λc−1
intersect
rewired
paths
path
strictly
northeast
λc−1
ending
longitude
λc−1
ending
longitude
hence
none
λd+1
intersect
path
attain
intersection
showed
forms
southwestern
boundary
convex
region
none
rewired
paths
intersect
λd+1
unmodiﬁed
sink
longitudes
west
sink
longitude
λd+1
none
rewired
paths
intersect
paths
permuted
original
sinks
rerouting
ends
sink
shifting
paths
rewired
sinks
sink
λm+1
permutation
sinks
shown
ldλ
determinant
example
pertinent
following
lemma
take
since
strict
note
bpλ
gcλ
lemma
imply
nonpermutable
x2y
xy2
xyz
g-v
determinant
proposition
3.2
evaluates
x2y
xy2
xyz
lemma
6.2.
let
gcλ
fails
nonpermutable
proof
let
gcλ
produce
violating
n-path
modifying
one
bpλ
apply
lemma
6.1
otherwise
n-paths
deﬁned
beginning
section
bpλ
set
λ-tuple
fact
5.2
critical
entry
last
carrel
failure
λ-gapless
based
upon
δqr
let
qh−1
fails
λ-gapless
based
upon
δqh−1
leftmost
critical
index
hth
carrel
qh−1
set
qh−1
since
critical
index
excessively
deep
preceding
proof
proof
two
cases
rewire
component
paths
one
n-paths
constructed
beginning
section
since
case
implies
two
cases
two
cases
refer
n-path
constructed
beginning
section
rewired
value
hand
facts
obtained
allow
rewire
path
case
produce
path
essentially
fashion
previous
proof
diﬀerence
make
λqh−1
λqh
additional
easterly
steps
reaches
case
sink
longitude
λqh−1
qh−1
mind
construct
preceding
proof
first
suppose
reuse
reasoning
used
case
see
southerly
edge
longitude
depth
depth
use
λd+1
otherwise
reasoning
used
case
see
early
jog
right
intersect
λd+1
either
case
acceptable
re-used
index
smallest
critical
index
greater
d−1
respectively
produce
paths
produce
path
rewired
either
case
...
next
successively
rewire
λd−1
λd−2
...
λc+1
c+1
preceding
proof
rewire
path
nearly
fashion
diﬀerence
makes
λqh−1
λqh
fewer
easterly
steps
reaching
ﬁnishing
longitude
λc+1
observation
preceding
proof
concerning
coordination
right
turns
among
shifted
rewired
paths
need
small
modiﬁcation
account
d−2
...
set
two
cases
fact
smallest
critical
index
larger
implies
since
bpλ
hence
rest
proof
intersect
combine
contrapositives
two
lemmas
proposition
6.3.
let
nonpermutable
gcλ
bpλ
suﬃcient
condition
nonpermutability
prove
converse
proposition
6.3
need
following
lemma
rename
re-index
components
according
ﬁxed
terminals
use
sinks
lemma
7.1.
let
bpλ
let
permutation
let
ldλ
set
component
sinks
ith
terminal
must
reach
must
end
stilt
proof
let
positive
critical
index
let
largest
critical
index
less
since
critical
intervals
contained
carrels
hence
sinks
lie
consecutive
longitudes
also
δi+1
hence
points
form
staircase
since
also
lie
consecutive
latitudes
reaching
claim
true
since
let
successively
decrement
assume
claim
true
source
weakly
northwest
sink
set
facts
5.1
iii
recall
fact
5.1
recall
bpλ
blockade
formed
in-use
staircase
points
δi′
force
path
reach
must
ﬁnish
stanley
remarked
theorem
2.7.1
st1
nonpermutable
ﬂag
since
gcλ
bpλ
following
proposition
extends
remark
proposition
7.2.
let
gcλ
bpλ
nonpermutable
proof
let
gcλ
bpλ
let
permutation
identity
must
exist
least
one
descent
π−1
exist
set
set
let
n-path
standard
sources
terminals
respectively
listed
sake
contradicting
nonpermutable
suppose
ldλ
lemma
without
loss
generality
may
simplify
replacing
sequence
depths
terminals
sequence
weakly
shallower
depths
shortens
original
paths
deleting
ﬁnal
stilts
intersect
index
runs
longitudes
ﬁxed
terminals
serve
sinks
permuted
paths
move
strictly
east
west
visualize
paths
successively
launched
time
sources
scanned
northeast
southwest
consider
components
earlier
launches
sinks
λm+1
δm+1
later
launches
southwest
sinks
comparing
starting
ﬁnishing
longitudes
λm+1
every
longitude
visited
earlier
later
visited
longer
earlier
ﬁnishes
depth
δm+1
longitude
λm+1
let
say
later
path
ﬁrst
reaches
longitude
latitude
following
two
cases
prove
contradicting
intersection
exists
first
suppose
δm+1
later
reaches
longitude
weakly
south
earlier
reaches
longitude
λm+1
weakly
north
must
intersect
continuous
figure
7.1.
earlier
later
respectively
sink
terminals
λm+1+n−m−1
δm+1
λm+n−m
otherwise
δm+1
since
exceed
ﬁnishing
depth
hence
δm+1
see
figure
7.1.
fact
5.2
know
λ-gapless
particular
λ-increasing
forces
set
δm+1
since
λ-gapless
fact
5.2
ph+1
δm+1
δm+2
...
δm+s
λqh+p
λqh+1
starting
sink
δm+1
moving
southwest
stairsteps
note
points
δm+1
δm+1
...
forming
staircase
terminals
serving
sinks
paths
terminals
shown
big
dots
figure
7.1.
source
later
strictly
southwest
source
earlier
staircase
steps
since
intersect
must
remain
strictly
southwest
approaches
earlier
sinks
δm+1
northeasternmost
point
staircase
terminals
source
later
must
weakly
northwest
staircase
terminals
path
must
remain
weakly
north
latitude
approaches
since
conﬁned
integral-convex
region
three
boundaries
sink
must
reach
point
staircase
terminals
hence
must
intersect
component
path
accidental
equalities
gapless
core
schur
polynomials
nice
unless
otherwise
restricted
refer
arbitrary
upper
rλ-tuples
deﬁne
gvλ
g-v
determinant
|hλj
−j+i
introduced
proposition
3.2.
motivate
supplemental
remarks
results
begin
sequence
review
preview
statements
necessary
direction
theorem
4.1
said
must
gcλ
bpλ
qualify
application
g-v
method
deducing
gvλ
corollary
4.2.
conceivable
one
could
accidentally
gvλ
gcλ
even
though
would
produce
n-path
terminal
pairs
nonpermutable
next
corollary
4.3
noted
gcλ
bpλ
one
could
nonetheless
use
g-v
method
compute
ﬁrst
pre-processing
produce
equivalent
gcλ
bpλ
one
would
gvλ
lastly
n−1
produce
given
polynomial
row
bound
sum
freedom
choice
goes
back
tableaux
set
level
since
non-strict
given
exist
many
trivially
implies
conceivable
one
could
accidentally
section
investigate
possible
possible
via
choice
alternate
corollary
10.4
pw3
related
equalities
forms
fact
8.1.
gcλ
implies
gcλ
proof
relied
upon
connection
gapless
core
schur
polynomials
deﬁned
demazure
characters
studied
paper
hence
gcλ
exist
gcλ
accidentally
gcλ
one
could
point
time
conceivably
noted
problem
10.5
pw3
next
relate
equalities
form
gvλ
obviously
gvλ
imply
gvλ
reasoning
used
next
section
conﬁrm
corollary
4.3
gcλ
generally
obtain
gvλ
conclusion
interesting
gcλ
bpλ
since
gcλ
bpλ
contains
upper
λ-tuples
g-v
method
valid
impossible
gvλ
corollary
9.3
generalizes
corollary
4.3.
gcλ
bpλ
gcλ
gvλ
possible
restricted
context
gcλ
bpλ
complete
answer
question
statements
gcλ
gvλ
impossible
gcλ
corollary
9.3
describes
gvλ
gcλ
bpλ
stronger
result
gvλ
corollary
4.2.
willing
accept
accidental
irrespective
nonpermutability
equalities
following
questions
necessity
equal
g-v
determinant
open
problem
8.2.
let
suppose
gcλ
bpλ
possible
gvλ
suppose
gcλ
possible
gvλ
add
one
themes
pw3
showed
row
bound
sums
gcλ
behaved
nicely
row
bound
sums
gcλ
hence
awarded
name
gapless
core
schur
polynomials
former
polynomials
following
said
gcλ
polynomial
arises
previously-studied
ﬂag
schur
polynomial
demazure
polynomial
shown
proposition
8.1
theorem
9.1
pw3
fact
tableau
set
coincides
relevant
set
demazure
tableaux
gcλ
well
equal
unless
polynomial
computed
g-v
determinant
though
may
require
pre-
processing
distinct
polynomials
arising
gapless
core
schur
polynomials
counted
contrast
parabolic
catalan
numbers
shown
theorem
13.1
pw3
row
bound
sums
gcλ
seem
dubious
value
arise
ﬂag
schur
polynomials
demazure
polynomials
shown
corollary
10.4
theorem
10.3
pw3
known
one
gcλ
known
somehow
computed
determinant
equivalence
eﬃciency
partition
strict
one
upper
λ-tuple
specify
tableau
set
row
bound
sum
speciﬁcally
gapless
core
λ-tuple
one
bounded
gapless
core
λ-tuple
used
express
gvλ
introduce
equivalence
relations
describe
much
freedom
one
choosing
alternate
upper
λ-tuples
computation
within
class
describe
upper
λ-tuples
valid
application
g-v
method
identify
upper
λ-tuple
eﬃcient
evaluating
g-v
determinant
section
pw3
introduced
equivalence
relation
deﬁning
proposition
8.2
stated
equivalence
relation
equivalence
relation
deﬁned
section
lemma
5.1
pw3
said
earlier
relation
could
deﬁned
entirely
terms
upper
λ-tuples
using
map
∆rλ
following
background
facts
conﬁrmed
using
proposition
5.2
iii
proposition
4.3
lemma
5.1
pw3
given
non-essential
deﬁnitions
λ-canopy
tuple
λ-ﬂoor
ﬂag
parts
deﬁnition
3.1
fact
9.1.
equivalence
classes
restrictions
gcλ
gcλ
subsets
intervals
form
gapless
λ-tuple
unique
λ-canopy
tuple
subsets
intervals
form
λ-ﬂoor
ﬂag
equivalence
classes
favored
set
gcλ
bpλ
upper
λ-tuples
described
pairing
minimum
elements
part
maximum
elements
ceiling
kind
part
proposition
9.2.
equivalence
classes
restrictions
gcλ
bpλ
intervals
form
gapless
λ-tuple
λ-ﬂag
proof
restricted
classes
intersections
classes
gcλ
bpλ
fact
9.1
restricted
classes
form
bpλ
consider
one
let
unique
λ-canopy
tuple
set
fact
5.1
iii
lemma
5.1
pw3
says
two
upper
λ-tuples
equivalent
simultaneous
deﬁnitions
maps
imply
two
upper
λ-tuples
class
hence
deﬁnition
bpλ
says
bpλ
since
fact
5.1
deduce
thus
therefore
bpλ
clearly
gcλ
bpλ
equivalence
classes
proposition
9.2
induced
gcλ
bpλ
one
following
equalities
gvλ
gvλ
gvλ
since
noted
section
gcλ
bpλ
one
interested
ﬂags
need
consider
classes
restrict
gcλ
bpλ
corollary
9.3.
let
gcλ
gcλ
bpλ
gvλ
gapless
λ-tuple
λ-ﬂag
nonempty
interval
contained
gcλ
bpλ
proof
let
gcλ
set
since
gcλ
fact
5.2
fact
5.1
class
form
proposition
hence
contained
gcλ
bpλ
well
nonempty
since
fact
5.1
lemma
5.1
pw3
deduce
let
class
gcλ
bpλ
corollary
4.2
says
gvλ
special
case
gvλ
stated
corollary
4.3.
conversely
let
gcλ
bpλ
gvλ
gvλ
implies
fact
8.1
implies
hence
since
gcλ
bpλ
see
must
class
gcλ
bpλ
applying
λ-platform
map
gapless
core
λ-tuple
produces
upper
λ-ﬂag
equivalent
row
bound
set
gapless
core
λ-tuple
also
arises
row
bound
set
upper
λ-ﬂag
conﬁrms
remark
made
end
section
every
gapless
core
schur
polynomial
already
arisen
ﬂag
schur
polynomial
someone
insist
input
g-v
determinant
must
upper
λ-ﬂag
least
maximum
element
interval
corollary
9.3
would
available
however
viewpoint
eﬃcient
determinant
evaluation
proof
next
result
indicate
upper
λ-ﬂag
would
worst
choice
interval
choices
let
gcλ
say
gcλ
bpλ
attains
maximum
eﬃciency
gvλ
fewer
total
monomials
among
entries
g-v
determinant
|hλj
−j+i
gvλ
η′′
η′′
gcλ
bpλ
produces
proposition
9.4.
let
gcλ
gapless
λ-tuple
attains
maximum
eﬃciency
among
choices
interval
allowed
corollary
9.3.
proof
set
let
-entry
g-v
determinant
gvλ
cid:0
−j+η′
−j+i
cid:1
monomials
since
exists
−m+η′
description
lattice
paths
given
proof
lemma
7.1
used
visualize
choices
one
equivalence
classes
proposition
9.2
choices
vary
lengths
path-ending
stilts
able
convert
g-v
determinant
gvλ
g-v
determinant
gvλ
naive
row
column
operations
one
factor
x1x2
gvλ
work
−λn
−λn
...
going
nonempty
rows
shape
determinant
gvλ′
equal
upper
left
minor
unusual
applications
g-v
determinant
sets
nonskew
tableaux
use
sources
paths
initial
stilts
force
mth
path
pass
vertically
shifted
source
examples
tableaux
row
bounded
ﬂags
determinants
quoted
proposition
3.5
recent
arxiv
posting
mpp
theorem
2.7
appear
arisen
using
unshifted
sources
consequently
agree
classic
jacobi-trudi
determinant
...
using
example
table
6.1
-entry
cid:0
cid:1
388
proposition
3.5
determinant
counts
number
monomials
-entry
generating
function
version
theorem
2.7
statement
using
shifted
sources
eﬃcient
row
bounds
referred
proposition
9.4
eliminate
initial
terminal
stilts
steps
respectively
reduce
analogous
entry
-entry
cid:0
cid:1
ﬁrst
paper
pw2
series
deﬁned
parabolic
catalan
number
number
λ-312-avoiding
permutations
theorem
9.1
iii
noted
also
number
gapless
λ-tuples
given
following
result
consequence
propositions
9.2
9.4.
previewed
part
theorem
13.1
pw3
corollary
9.5.
number
valid
upper
λ-tuple
inputs
g-v
determinant
expression
ﬂag
schur
polynomials
shape
attain
maximum
eﬃciency
sequence
examples
let
set
suppose
partition
whose
shape
set
column
lengths
...
number
maximum
eﬃciency
inputs
given
member
sequence
a220097
oeis
slo
indexed
determinant
expression
demazure
characters
end
section
pw3
promised
give
determinant
expression
certain
demazure
characters
key
polynomials
noted
section
pw3
general
demazure
characters
deﬁned
divided
diﬀerences
sum
certain
set
semistandard
tableaux
see
example
pw1
given
gcλ
bpλ
next
statement
follows
theorem
10.2
pw3
corollary
4.2
result
theorem
gives
consult
section
pw3
deﬁnitions
λ-permutations
map
corollary
10.1.
let
partition
let
λ-permutation
λ-312-avoiding
gapless
λ-tuple
|hλj
−j+i
less
eﬃcient
sense
section
version
expression
appeared
proof
corollary
14.6
postnikov
stanley
applied
skew
ﬂagged
schur
function
determinant
identity
equation
13.1
chλ
acknowledgments
thank
referee
encouraging
improve
exposition
title
paper
second
author
thanks
math
departments
connecticut
college
wesleyan
university
support
portions
paper
developed
references
brt
billey
rhoades
tewari
boolean
product
polynomials
schur
positivity
chern
plethysm
arxiv:1902.11165v1
gessel
viennot
determinants
paths
plane
partitions
preprint
1989
avail-
able
online
http
//citeseerx.ist.psu.edu/viewdoc/summary
doi=10.1.1.37.331
2017
mpp
morales
pak
panova
hook
formulas
skew
shapes
q-analogues
bijections
arxiv:1512.08348v5
merzon
smirnov
determinantal
identities
ﬂagged
schur
schubert
polynomi-
als
euro
math
227-245
2016
postnikov
stanley
chains
bruhat
order
algebr
comb
133-174
2009
pw1
proctor
willis
semistandard
tableaux
demazure
characters
key
polynomials
atoms
euro
combin
172-184
2015
pw2
proctor
willis
convexity
tableau
sets
type
demazure
characters
key
polynomials
parabolic
catalan
numbers
discrete
mathematics
theoretical
computer
science
2-3
pw3
proctor
willis
parabolic
catalan
numbers
count
ﬂagged
schur
functions
appearances
type
demazure
characters
key
polynomials
discrete
mathematics
theoretical
computer
science
3-15
reiner
shimozono
key
polynomials
ﬂagged
littlewood-richardson
rule
combin
theory
ser
107-143
1995
slo
sloane
n.j.a.
al.
on-line
encyclopedia
integer
sequences
published
electroni-
cally
http
//oeis.org
2017
st1
stanley
enumerative
combinatorics
volume
cambridge
university
press
1997
st2
stanley
enumerative
combinatorics
volume
cambridge
university
press
1999
