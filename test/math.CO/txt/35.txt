decycling
number
linear
graphs
trees
jian
wanga
xirong
xub
adepartment
mathematics
taiyuan
university
technology
taiyuan
030024
p.r.china
bschool
computer
science
technology
dalian
university
technology
dalian
116024
p.r.china
abstract
decycling
number
graph
minimum
number
vertices
whose
removal
results
acyclic
subgraph
known
determining
decycling
number
graph
equivalent
ﬁnding
maximum
induced
forests
line
graphs
trees
claw-free
block
graphs
graphs
used
erd˝os
saks
s´os
construct
graphs
given
number
edges
vertices
whose
maximum
induced
tree
small
paper
give
bounds
decycling
number
line
graphs
trees
construct
extremal
trees
show
bounds
best
possible
also
give
bounds
decycling
number
line
graph
k-ary
trees
determine
exact
decycling
number
line
graphs
perfect
k-ary
trees
keywords
maximum
induced
forests
maximum
linear
forests
line
graphs
trees
decy-
cling
number
introduction
let
simple
graph
vertex
set
edge
set
subset
called
decycling
set
subgraph
acyclic
minimum
cardinality
decyling
set
called
decycling
number
feedback
number
proposed
ﬁrst
beineke
vandell
use
notation
denote
decycling
number
fact
problem
determining
decycling
number
graph
-complete
karp
also
see
best
known
approximation
algorithm
problem
approximation
ratio
determining
decycling
number
diﬃcult
even
el-
ementary
graphs
refer
reader
original
research
paper
results
bounds
decycling
numbers
established
well-known
graphs
hypercubes
star
graphs
generalized
petersen
graphs
distance
graphs
circulant
graphs
graph
let
maximum
number
vertices
induced
subgraph
forest
induced
forest
maximum
number
vertices
called
maximum
corresponding
author
xirongxu
dlut.edu.cn
induced
forest
determining
decycling
number
graph
equivalent
ﬁnding
maximum
induced
forest
since
sum
two
numbers
equals
order
one
also
study
induced
trees
rather
forests
graphs
let
size
maximum
induced
trees
problem
bounding
connected
graph
ﬁrst
studied
erd˝os
saks
s´os
thirty
years
ago
paper
erd˝os
saks
s´os
studied
relationship
several
natural
parameters
graph
able
obtain
asymptotically
tight
bounds
either
number
edges
independent
number
known
result
showed
small
graphs
vertices
edges
given
graph
line
graph
graph
vertex
represents
edge
two
vertices
adjacent
corresponding
edges
share
common
endpoint
erd˝os
saks
s´os
use
line
graphs
trees
construct
graphs
surprisingly
small
besides
erd˝os
saks
s´os
also
considered
problem
estimating
size
maximum
induced
tree
kr-free
graphs
use
line
graphs
regular
trees
construct
kr-free
graphs
small
recently
jacob
fox
po-shen
loh
benny
sudakov
improved
results
lower
bounds
maximum
induced
trees
kr-free
graphs
linear
forest
graph
vertex
disjoint
union
simple
paths
maximum
linear
forest
linear
forest
maximum
number
edges
number
edges
maximum
linear
forests
graph
denoted
deﬁne
hamiltonian
completion
number
graph
denoted
minimum
number
edges
need
added
make
hamiltonian
hamiltonian
completion
problem
introduced
1970s
goodman
hedetniemi
goodman
hedetniemi
prove
following
relation
graph
vertices
paper
study
decycling
number
line
graphs
trees
show
ﬁnding
maximum
induced
forests
line
graphs
equivalent
ﬁnding
maximum
linear
forests
original
graphs
let
tree
vertices
diameter
give
lower
upper
bounds
follows
even
odd
cid:24
cid:24
cid:25
cid:25
extremal
line
graphs
achieve
bounds
also
constructed
k-ary
tree
rooted
tree
within
level
every
node
either
children
perfect
k-ary
tree
k-ary
tree
leaf
nodes
depth
paper
give
bounds
decycling
number
line
graphs
k-ary
trees
follows
let
k-ary
tree
vertices
moreover
prove
perfect
k-ary
tree
vertices
height
rest
paper
organized
follows
section
show
ﬁnding
maximum
induced
forests
line
graphs
equivalent
ﬁnding
maximum
linear
forests
original
graphs
section
give
lower
upper
bounds
decycling
numbers
line
graphs
trees
given
diameter
section
give
lower
upper
bounds
decycling
number
line
graphs
k-ary
trees
maximum
induced
forests
line
graphs
section
prove
maximum
induced
forests
line
graphs
correspond
maximum
linear
forests
original
graphs
denoted
length
longest
paths
lemma
2.1.
vertex-disjoint
path
longest
maximum
induced
tree
line
graph
linear
forest
maximum
maximum
induced
forest
line
graph
thus
proof
known
line
graphs
claw-free
contain
induced
k1,3
induced
trees
induced
forests
follows
every
induced
tree
line
graph
induced
path
every
induced
forest
line
graph
induced
linear
forest
moreover
shall
show
line
graph
vertex-disjoint
path
induced
path
induced
path
also
line
graph
vertex-disjoint
path
v1e1v2e2
vlelvl+1
vertex-disjoint
path
vertices
edges
shall
show
induced
path
otherwise
assume
forms
edge
share
common
ending
point
vj+1
vk+1
contradicts
path
vertex-disjoint
conversely
induced
path
line
graph
let
consecutive
vertices
clearly
path
thus
vertex-disjoint
path
longest
maximum
induced
tree
linear
forest
maximum
maximum
induced
forest
clearly
linear
forests
edges
implies
therefore
following
corollary
corollary
2.1.
graph
vertices
edges
decycling
number
line
graphs
trees
let
tree
vertices
inner
vertex
vertex
degree
least
two
similarly
outer
vertex
leaf
vertex
degree
one
vertices
partitioned
set
leaves
vout
set
inner
vertices
vin
cardinality
vout
denoted
inner
vertex
let
zero
two
neighbors
degree
less
three
let
neighbors
degree
less
three
following
lemma
lemma
3.1.
tree
vertices
cid:24
+pv∈vin
cid:25
proof
since
tree
adding
edges
get
hamiltonian
graph
since
hamiltonian
cycle
leaf
incident
new
edge
inner
vertex
greater
zero
two
edges
incident
means
least
neighbors
degree
less
equal
two
adjacent
neighbors
incidence
new
edge
thus
least
+pv∈vin
vertices
incidence
new
edges
therefore
cid:24
+pv∈vin
cid:25
ci−1
ti−1
figure
example
tree
ti−1
hand
get
hamiltonian
cycle
adding
edges
according
following
procedure
firstly
choose
two
leaves
add
edge
let
graph
contains
unique
cycle
formed
new
edge
unique
path
let
graph
obtained
contracting
cycle
denoted
contracted
vertex
easy
see
tree
choose
leaf
outside
let
pc0v1
unique
path
let
vertex
cycle
smallest
distance
let
neighbor
adding
edges
v1w1
get
larger
cycle
u1w1
pu1v1
v1w1
let
graph
obtained
contracting
tree
leaves
choose
leaf
outside
let
pc1v2
unique
path
let
vertex
cycle
smallest
distance
let
neighbor
adding
edge
v2w2
get
larger
cycle
u2w2
pu2v2
v2w2
procedure
repeatedly
step
get
tree
tree
ti−1
leaves
less
see
fig.1
procedure
stopped
contracted
tree
one
vertex
get
hamiltonian
cycle
adding
edges
thus
since
tree
vertices
edges
lemma
2.1
know
moreover
true
therefore
following
corollary
corollary
3.1.
tree
vertices
cid:24
+pv∈vin
cid:25
introduce
operation
leaves
trees
decrease
two
leaves
suppose
neighbors
deﬁne
leaf-exchange
operation
removing
edge
wiui
adding
edge
obtained
tree
denoted
lemma
3.2.
two
leaves
proof
suppose
maximum
linear
forest
wiui
ujui
linear
forest
thus
let
tree
vertices
center
tree
set
vertices
greatest
distance
equals
radius
let
one
center
tree
viewed
rooted
tree
root
moreover
partition
sets
w|d
radius
case
confusion
often
abbreviated
vertex
called
vertex
depth
let
v≥2
let
diameter
radius
let
number
degree-two
vertices
deﬁne
three
family
rooted
trees
vertices
diameter
follows
cid:8
deg
v≥2
deg
cid:9


following
three
lemmas
shall
show
ﬁnding
upper
bounds
trees
equivalence
ﬁnding
lemma
3.3.
tree
vertices
diameter
exists
tree
proof
tree
viewed
rooted
tree
center
root
suppose
contrary
exist
trees
ﬁnd
trees
larger
maximum
linear
forest
let
counterexample
|v1|
maximum
clearly
vertex
deg
vertex
v≥2
deg
split
proof
two
cases
follows
case
vertex
deg
assume
deg
one
neighbor
neighbors
let
neighbors
subtrees
root
vt.
let
maximum
linear
forest
two
edges
v∗v
vv1
vv2
vvt
since
exists
one
vv1
vv2
vvt
without
loss
generality
assume
vvt
removing
edge
vvt
adding
edge
v∗vt
get
new
tree
clearly
since
also
linear
forest
moreover
vertices
since
counterexample
|v1|
maximum
know
longer
counterexample
therefore
exists
tree
contradicts
counterexample
case
vertex
deg
deg
get
contradiction
argument
case
thus
need
consider
case
deg
one
neighbor
vk−1
two
neighbors
vk+1
subtrees
root
let
maximum
linear
forest
two
edges
vv1
vv2
removing
edge
adding
edge
v∗v
get
new
tree
since
also
linear
forest
since
increased
one
longer
counterexample
therefore
exists
tree
get
contradiction
one
vv1
vv2
without
loss
generality
assume
vv2
removing
edge
vv2
adding
edge
v∗v2
get
new
tree
also
leads
contradiction
therefore
claim
holds
lemma
3.4.
tree
exists
tree
proof
suppose
contrary
exist
counterexamples
let
one
minimum
least
four
degree-two
neighbors
assume
vs.
deﬁnition
easy
see
subtrees
roots
paths
let
paths
clearly
one
endpoint
let
maximum
linear
forest
least
two
edges
v∗v1
v∗v2
v∗vs
without
loss
generality
suppose
v∗v1
v∗v2
edges
one
paths
length
least
two
without
loss
generality
suppose
length
least
clearly
one
endpoint
let
endpoint
parent
rooted
tree
removing
edge
w1u1
adding
edge
v1u1
get
new
tree
since
w1u1
v1u1
linear
forest
since
exists
tree
leads
contradiction
length
one
assume
edge
v1u1
edge
v2u2
removing
edge
v1u1
adding
edge
v2u1
get
new
tree
also
leads
contradiction
thus
claim
holds
lemma
3.5.
tree
exists
tree
proof
suppose
counterexample
maximum
clearly
let
maximum
linear
forest
firstly
claim
leaves
otherwise
assume
leaf
degree-3
vertex
say
let
leaf
subtree
root
leaf-exchange
operation
get
new
tree
since
counterexample
maximum
exists
tree
follows
contradiction
degree-3
vertex
vertices
degree
two
since
least
two
leaves
say
leaf-
exchange
operation
get
new
tree
since
leaf-exchange
operation
decrease
diameter
exists
tree
follows
contradiction
thus
leaves
know
one
degree-2
vertex
leaf
since
number
degree-3
vertices
greater
one
let
degree-3
vertices
least
one
edges
v∗v1
v∗v2
v∗vs
without
loss
generality
assume
v∗v1
let
two
neighbors
least
one
edges
v1u1
v1u2
suppose
v1u1
removing
edge
v1u1
adding
edge
v∗u1
get
new
tree
clearly
exists
tree
follows
contradiction
none
v∗v1
v∗v2
v∗vs
one
edge
incident
edges
subtree
root
suppose
two
neighbors
removing
edge
v1u1
adding
edge
v∗u1
get
new
tree
v1u1
v∗u1
linear
forest
follows
exists
tree
follows
contradiction
combining
cases
complete
proof
theorem
3.1.
tree
vertices
diameter
d−1
d−2
n+2
d−3
n+4
d−2
even
odd
proof
lower
bounds
clearly
moreover
extremal
trees
achieve
lower
bounds
shown
fig.2
n−2r−1
n−2r−2
...
...
...
...
figure
extremal
trees
achieve
lower
bounds
let
center
tree
viewed
rooted
tree
root
radius
clearly
lemma
3.3
3.4
3.5
know
exists
tree
therefore
need
consider
upper
bounds
split
proof
two
cases
parity
case
let
tree
easy
see
radius
since
least
two
vertices
degree
two
say
subtree
root
subtree
root
two
paths
call
two
leaves
two
subtrees
critical
leaves
call
leaves
non-critical
leaves
let
tree
satisfying
following
two
properties
shown
figure
two
critical
leaves
depth
one
leaves
depth
leaf
depth
less
lie
subtree
whose
root
degree-2
vertices
leaf
depth
less
lie
subtree
whose
root
degree-3
vertices
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
figure
extremal
graphs
achieve
upper
bounds
claim
tree
let
degree-2
vertices
degree-3
vertices
let
vk+1
third
degree-2
vertex
arrange
subtrees
roots
vk+1
left
right
plane
leaf-exchange
operation
rightmost
leaf
leftmost
leaf
depth
less
convectively
finally
shall
arrive
tree
since
leaf-
exchange
operation
leaf
leaf
never
decrease
value
follows
let
remainder
dividing
splits
proof
two
parts
value
case
1.1.
shown
fig.3
easy
see
three
vertices
follows
moreover
number
leaves
computed
follows
cid:23
cid:22
cid:23
cid:22
lemma
3.1
cid:25
cid:24
+pv∈vin
cid:23
cid:22
cid:24
cid:25
cid:22
cid:23
however
removing
dashed
edges
shown
fig.3
get
linear
forest
n−2r−1
2r−1
2r−2
n+2
2r−1
edges
thus
2r−2
n+2
2r−1
case
1.2.
shown
fig.3
second
case
n−2r−1
lemma
3.1
2r−1
n−2
2r−1m
cid:25
cid:24
+pv∈vin
cid:22
edges
thus
2r−2
n+2
cid:23
2r−1
however
removing
dashed
edge
shown
fig.3
get
linear
forest
n−2r−1
2r−1
2r−2
n+2
2r−1
combining
two
subcases
prove
tree
vertices
diameter
cid:22
cid:23
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
figure
extremal
trees
achieve
upper
bounds
case
let
tree
since
leaves
vr+1
leaves
subtree
thus
|vr+1|
|vr+1|
case
2.1
|vr+1|
let
leaf
vr+1
neighbor
remove
vertex
get
tree
diameter
suppose
maximum
linear
forest
linear
forest
conversely
maximum
linear
forest
linear
forest
follows
therefore
adding
one
leaf
obtain
new
tree
vertices
diameter
shown
fig.4
easy
see
thus
cid:22
cid:23
case
2.2
|vr+1|
let
two
vertices
neighbors
respectively
clearly
remove
two
vertices
get
tree
diameter
clearly
thus
adding
two
leaves
obtain
tree
vertices
diameter
shown
fig.5
tree
|vr+1|
thus
cid:22
cid:23
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
figure
extremal
trees
achieve
upper
bounds
since
extremal
tree
achieves
upper
bound
extremal
graph
achieves
upper
bound
2r−2
n+4
2r−1
2r−2
n+3
2r−1
let
tree
vertices
edges
since
following
corollary
corollary
3.2.
let
tree
vertices
diameter
d−1
n−d−1
n−d−2
d−2
even
odd
theorem
3.2.
connected
graph
vertices
edges
length
longest
path
p−1
p−2
n+2
p−3
n+4
p−2
even
odd
proof
according
lemma
2.1
clear
since
linear
forest
extended
spanning
tree
exists
spanning
tree
moreover
maximum
linear
forest
spanning
tree
also
linear
forest
implies
spanning
tree
consequently
let
set
spanning
trees
maxt
easy
see
diameter
spanning
tree
less
equal
moreover
upper
bounds
theorem
3.1
increasing
functions
diameters
thus
s−1
p−2
n+2
p−3
n+4
s−2
even
odd
thus
theorem
follows
decycling
number
line
graphs
k-ary
trees
k-ary
tree
rooted
tree
within
level
every
node
either
children
maximum
degree
k-ary
tree
follows
line
graphs
k-ary
trees
kk+2-free
graphs
since
often
interesting
consider
decycling
number
kk+2-free
graphs
thus
consider
decycling
number
line
graphs
k-ary
trees
section
give
dynamic
programming
algorithm
ﬁnd
maximum
linear
forest
rooted
tree
let
rooted
tree
root
let
...
subtrees
root
respectively
let
edge
set
maximum
linear
forest
let
edge
set
largest
linear
forest
degree
one
rij
figure
structures
linear
forests
rij
deﬁne
three
kinds
linear
forests
rij
follows
i=1f
∪k6=if
rij
∪k6=i

shown
fig.6
linear
forest
degree
zero
linear
forest
degree
one
edge
linear
forest
rij
linear
forest
degree
two
edges
linear
forest
let
largest
linear
forest
among
rij
let
largest
linear
forest
among
lemma
4.1.
tree
maximum
linear
forest
largest
linear
forest
root
degree
one
proof
tree
maximum
linear
forest
let
maximum
linear
forest
let
divide
proof
three
cases
according
degree
case
degree
zero
clearly
linear
forest
subtree
therefore
case
degree
one
suppose
v∗vi
let
clearly
linear
forest
subtree
linear
forest
subtree
degree
one
thus
therefore
|qi
case
degree
two
suppose
v∗vi
v∗vj
let
clearly
linear
forest
subtree
linear
forest
subtree
degree
one
linear
forest
subtree
degree
one
thus
therefore
|rij
combining
cases
get
conclusion
implies
maximum
linear
forest
similarly
prove
largest
linear
forest
root
degree
one
theorem
4.1.
k-ary
tree
vertices
proof
lower
bound
suppose
internal
vertices
leaves
follows
n−1
lemma
3.1
k−1
n+1
thus
n+k−1
k−1
n+1
upper
bound
divide
edges
n−1
groups
edges
parent
group
since
degree
vertices
linear
forest
two
thus
two
edges
group
linear
forest
therefore
get
2n−2
...
...
...
...
k≥3
k=2
figure
special
k-ary
trees
maximum
linear
forests
let
k-ary
tree
vertices
layer
one
node
children
shown
fig
let
internal
vertex
depth
root
depth
clear
2n−2
shown
fig
theorem
4.1
easy
check
linear
forest
shown
fig
maximum
thus
n−1
n−1
even
3n−1
n−1
odd
corollary
4.1.
let
k-ary
tree
vertices
perfect
k-ary
tree
k-ary
tree
leaves
depth
last
obtain
maximum
linear
forests
perfect
k-ary
trees
follows
theorem
4.2.
perfect
k-ary
tree
vertices
logk
height
leaves
height
fh-2
fh-2
fh-2
fh-2
fh-3
fh-3
fh-3
fh-3
fh-1
fh-1
k-1
k-1
k-1
k-1
k-1
k-1
k-2
figure
linear
forest
perfect
k-ary
trees
proof
let
logk
height
construct
linear
forest
follows
firstly
choose
two
vertex-disjoint
paths
length
root
two
leaves
tree
decomposed
subtrees
height
subtrees
height
subtrees
height
subtrees
height
subtrees
height
shown
fig
subtree
choose
two
vertex-disjoint
paths
root
two
leaves
recursively
linear
forest
created
let
edge
set
obtained
linear
forest
height
let
cardinality
easy
see
according
recursive
construction
obtained
linear
forest
fh−1
h−2
xi=1
fh−1
fh−2
h−3
xi=1
combining
two
equations
get
recursive
relation
follows
fh−1
kfh−2
technique
generating
functions
derive
formula
follows
thus
2n−1+
k+1
prove
maximum
linear
forest
let
root
subtrees
root
vt.
since
perfect
k-ary
tree
subtree
identical
perfect
k-ary
tree
height
suppose
v∗v1
v∗v2
let
h−1
h−1
subset
subtree
let
h−1
cardinality
h−1
linear
forest
deg
claim
perfect
k-ary
tree
height
maximum
linear
forest
largest
linear
forest
degree
root
one
prove
claim
induction
easy
check
maximum
linear
forests
empty
sets
suppose
claim
true
perfect
k-ary
tree
height
let
perfect
k-ary
tree
height
deﬁne
largest
linear
forests
degree
root
one
i=1f
∪k6=if
rij
∪k6=i

induction
hypothesis
identical
fh−1
identical
h−1
kfh−1
|qi
fh−1
|rij
fh−1
h−1
h−1

easy
see
n−1
two
fh−1
similarity
|qi
h−1
two
extra
edges
|rij
vertices
since
also
consist
fh−1
h−1
follows
h−1
fh−1
fh−1
fh−1
kfh−1
n−1
h−1
h−1
follows
|qi
|rij
theorem
4.1
see
rij
maximum
linear
forest
largest
linear
forest
degree
root
one
exactly
therefore
prove
claim
maximum
linear
forest
thus
conclude
2n−1+
k+1
corollary
4.2.
perfect
k-ary
tree
vertices
decycling
number
logk
height
acknowledgements
work
supported
national
natural
science
foundation
china
no.11671299
no.61502330
no.61472465
no.61562066
references
bafna
berman
fujito
2-approximation
algorithm
undirected
feedback
vertex
set
problem
siam
discrete
math
1999
289–297
beineke
vandell
decycling
graphs
graph
theory
1997
59–77
erd˝os
saks
s´os
maximum
induced
trees
graphs
combin
theory
ser
1986
61–79
focardi
luccio
peleg
feedback
vertex
set
hypercubes
inform
process
lett
2000
1–5
fox
loh
sudakov
large
induced
trees
kr-free
graphs
combin
theory
ser
2009
494–501
garey
johnson
computers
intractability
guide
theory
np-completeness
series
books
mathematical
sciences
freeman
co.
1979.
x+338
isbn
0-7167-1045-5
gao
wang
decycling
number
generalized
petersen
graphs
discrete
applied
mathematics
181
2015
297–300
goodman
hedetniemi
hamiltonian
completion
problem
graphs
combinatorics
springer
berlin
heidelberg
1974
262–272
goodman
hedetniemi
slater
advances
hamiltonian
com-
pletion
problem
journal
acm
jacm
1975
352–360
karp
reducibility
among
combinatorial
problems
complexity
computer
com-
putations
proc
sympos.
ibm
thomas
watson
res
center
1972
85–103
plenum
1972
kheddouci
togni
bounds
minimum
feedback
vertex
sets
distance
graphs
circulant
graphs
discrete
math
theor
comput
sci
2008
57–70
f.-h.
wang
y.-l.
wang
j.-m.
chang
feedback
vertex
sets
star
graphs
inform
process
lett
2004
203–208
wang
wang
feedback
number
-star
graphs
utilitas
mathe-
matica
2014
51–63
wang
zhu
bounds
feedback
numbers
-star
graphs
information
processing
letters
112
2012
473–478
wang
gao
decycling
bubble
sort
graphs
discrete
applied
mathe-
matics
194
2015
178–182
wang
feedback
numbers
kautz
undirected
graphs
australasian
journal
combinatorics
2012
3–9
zhang
liu
feedback
number
locally
twisted
cube
journal
dalian
university
technology
2014
262–266
zhang
yin
feedback
numbers
augmented
cubes
utilitas
mathe-
matica
2015
183–192
combinatorial
theory
networks
beijing
science
press
2013
bau
beineke
decycling
number
graphs
australasian
journal
combina-
torics
2002
285–298
