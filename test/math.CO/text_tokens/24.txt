confluenc
law
type
theorem
operad
burgund
abstract
loday
shed
light
exist
theorem
operad
use
vocabulari
categori
theori
livernet
mesablishvili
wisbauer
extend
theorem
monad
case
reason
start
mix
distribut
law
prove
induc
isomorph
ﬁnalli
get
rigid
theorem
reason
go
backward
prove
isomorph
one
get
call
conﬂuenc
law
generalis
mix
distribut
law
enough
obtain
rigid
theorem
enabl
show
operad
underli
exist
conﬂuenc
law
conilpot
satisfi
free
cofre
primit
element
reason
permit
gener
mani
new
exampl
introduct
distribut
law
ﬁrst
appear
beck
articl
take
name
distribut
addit
multipl
studi
primari
school
distribut
law
give
conﬂuent
way
rewrit
express
mix
diﬀer
product
exampl
distribut
law
one
mix
commut
product
lie
bracket
poisson
algebra
notion
distribut
law
initi
studi
burroni
algebra
markl
generalis
deﬁnit
operad
link
topolog
notion
koszul
fox
markl
adapt
notion
distribut
law
express
mix
oper
cooper
call
obtain
rewrit
rule
mix
distribut
law
let
call
vector
space
endow
algebra
structur
encod
operad
coalgebra
structur
encod
operad
equival
dual
cooperad
link
date
januari
key
word
phrase
operad
generalis
bialgebra
theorem
rigid
theorem
freeness
algebra
author
thank
mill
fruit
convers
livernet
use
comment
work
realli
help
improv
present
work
ﬁrst
author
support
anr
cathr
work
second
author
support
labex
cimi
burgund
mix
distribut
law
bialgebra
satisﬁ
tion
type
theorem
conilpot
free
cofre
primit
element
theorem
call
iti
theorem
particular
case
rigid
theorem
proven
instanc
commut
cocommut
hopf
bialgebra
associ
coassoci
bialgebra
zinbiel
coassoci
gebra
dendriform
codendriform
algebra
preli
conap
bialgebra
gener
framework
theorem
introduc
loday
rigid
theorem
i
instanc
applic
found
exampl
comput
explicit
base
algebra
studi
gener
framework
rewrit
particular
symmetr
operad
becam
clear
author
three
hypothesi
theorem
clariﬁ
clariﬁc
need
proof
articl
prove
one
hypothesi
formul
loday
need
get
rigid
theorem
viewpoint
enabl
provid
answer
conjectur
loday
given
operad
encod
structur
algebra
coalgebra
bialgebra
exist
generalis
mix
distribut
law
call
conﬂuenc
law
structur
rigid
theorem
hold
fact
deﬁnit
operad
associ
famili
underli
vector
space
graduat
endow
action
symmetr
group
prove
precis
gener
result
two
operad
share
famili
exist
conﬂuenc
law
bialgebra
enabl
develop
list
brand
new
exampl
rigid
theorem
present
second
part
articl
also
develop
case
explicit
isomorph
framework
also
abl
make
explicit
induct
algorithm
comput
project
subspac
primit
element
conﬂuenc
law
associ
bialgebra
articl
organis
follow
ﬁrst
part
focu
gener
theori
restrict
studi
framework
base
erad
known
second
part
develop
explicit
comput
rigid
theorem
precis
ﬁrst
section
recal
loday
theorem
three
hypothesi
bialgebra
satisfi
mix
distribut
law
one
comput
morphism
functori
morphism
biject
rigid
theorem
hold
point
core
properti
morphism
induc
famili
isomorph
properti
induc
exist
conﬂuenc
law
properti
need
obtain
rigid
theorem
second
part
explicit
case
explor
cise
basi
vector
space
dualiz
explain
construct
give
simpl
condit
satisfi
type
theorem
operad
hypothesi
rigid
theorem
compat
structur
list
exampl
literatur
obtain
way
illustr
strength
case
bunch
brand
new
ampl
preli
copreli
perm
coperm
nap
conap
pan
copan
pan
coperm
leibniz
coassoci
poisson
coassoci
leibniz
cozinbiel
even
dipt
codipt
bialgebra
notat
denot
symmetr
group
permut
element
denot
operad
denot
dual
cooperad
operad
algebra
structur
encod
operad
denot
algebra
coalgebra
structur
encod
operad
equival
dual
cooperad
denot
gener
case
prove
section
one
hypothesi
loday
rigid
theorem
generalis
bialgebra
need
get
theorem
inde
hypothesi
impli
hypothesi
weaken
version
enough
get
rigid
theorem
new
improv
need
hypothesi
enabl
prove
conjectur
loday
reach
mani
new
case
ﬁrst
recal
loday
formul
rigid
theorem
studi
intertwin
hypothesi
theorem
studi
case
base
orthogon
comput
explicitli
conﬂuenc
law
idempot
one
problem
rais
ﬁnalli
give
new
formul
rigid
theorem
loday
rigid
theorem
let
ﬁeld
characterist
fore
introduc
loday
rigid
theorem
recal
need
deﬁnit
deﬁnit
symmetr
algebra
operad
endow
morphism
modul
call
composit
map
call
unit
map
satisfi
associ
unit
let
two
algebra
operad
articl
consid
connect
operad
ﬁnite
dimension
let
ﬁrst
recal
deﬁnit
algebra
cooperad
coalgebra
operad
burgund
deﬁnit
algebra
operad
vector
space
equip
morphism
denot
free
algebra
operad
whose
vector
space
gener
deﬁnit
cooperad
data
famili
everi
integ
two
morphism
counit
satisfi
coassoci
counit
axiom
operad
hom
cooperad
call
dual
cooperad
deﬁnit
coalgebra
operad
vector
space
equip
morphism
deﬁnit
equival
deﬁnit
coalgebra
cooperad
vector
space
data
map
primit
element
coalgebra
prim
denot
free
conilpot
coalgebra
operad
equival
associ
dual
cooperad
whose
vector
space
primit
notat
put
emphasi
notat
map
use
later
algebra
operad
vector
space
endow
map
coalgebra
cooperad
vector
space
endow
map
follow
deﬁn
notion
mix
distribut
law
deﬁnit
compat
relat
deﬁn
sequenc
map
summat
taken
compat
relat
mix
distribut
law
ceσ
compat
action
symmetr
group
ciσ
ciσ
act
accord
action
deﬁn
byp
aim
cjn
operad
symmetr
operad
denot
compat
operad
structur
type
theorem
operad
algebra
endow
structur
coalgebra
endow
structur
exampl
classic
law
commut
gebra
call
hopf
relat
given
mix
distribut
law
denot
usual
basi
comm
ambigu
oper
mix
distribut
law
repres
clearer
diagram
usual
basi
usual
basi
mix
distribut
law
compat
operad
structur
enough
give
gener
operad
law
deduc
instanc
map
sum
term
call
bialgebra
coalgebra
product
coproduct
satisfi
mix
tribut
law
need
moreov
follow
notion
deﬁnit
coﬁltrat
fnh
deﬁn
fnh
vector
space
vector
space
primit
element
moreov
denot
canon
inclus
said
conilpot
remark
ambigu
write
rigid
theorem
state
loday
burgund
theorem
let
bialgebra
type
satisﬁ
compat
relat
distribut
free
natur
map
isomorph
conilpot
free
cofre
primit
element
prim
prim
remark
thu
space
irreduc
element
element
written
linear
combin
product
ement
space
primit
element
conﬂuenc
law
reason
loday
theorem
ﬁrst
sider
mix
distribut
law
thank
one
comput
map
send
use
theorem
one
prove
induc
morphism
isomorph
adopt
anoth
reason
start
data
isomorph
prove
get
back
hypothesi
theorem
precis
prove
exist
associ
conﬂuenc
law
reason
split
next
ﬁve
subsect
subsect
introduc
notion
conﬂuenc
law
explain
hypothesi
reduc
subsect
isomorph
get
homogen
conﬂuenc
law
subsect
reach
conﬂuenc
law
subsect
state
equival
condit
rigid
theorem
ﬁnalli
state
main
result
subsect
introduc
subsect
generalis
mix
distribut
law
call
conﬂuenc
law
deﬁnit
conﬂuenc
law
operad
famili
map
short
cut
compat
structur
operad
action
symmetr
group
act
clear
mix
distribut
law
deﬁn
deﬁnit
conﬂuenc
law
keep
term
involv
trivial
oper
oper
hand
conﬂuenc
law
obtain
consid
mix
distribut
law
coeﬃcient
could
depend
coﬁltrat
allow
usual
mix
distribut
law
exampl
exampl
new
conﬂuenc
law
present
tion
type
theorem
operad
remark
conﬂuenc
law
equival
data
morphism
present
equival
come
equal
homsn
come
deﬁnit
dualiti
thank
livernet
help
clear
link
clarifi
deﬁnit
let
deﬁn
deﬁnit
refer
notat
notat
bialgebra
space
endow
structur
structur
follow
diagram
commut
deﬁn
objet
work
let
look
close
inject
condit
exist
rigid
theorem
morphism
isomorph
everi
vector
space
ﬁrst
give
exampl
necess
inject
studi
link
ﬁltration
coﬁltrat
associ
bialgebra
link
crucial
see
later
proof
main
theorem
reli
project
primit
element
parallel
decompos
element
follow
exampl
show
lack
inject
induc
rigid
theorem
exampl
consid
coassoci
associ
bialgebra
mix
distribut
law
hopf
mix
distribut
law
comput
mix
distribut
law
given
note
construct
monomorph
therefor
isomorph
epimorph
fail
verifi
hypothesi
exist
rigid
theorem
let
consid
algebra
see
exampl
underli
vector
space
space
surject
str
surject
also
known
set
composit
one
endow
space
shuﬄe
product
block
coproduct
deﬁn
follow
str
write
burgund
max
let
str
product
deﬁn
st
vertic
sum
stuﬄe
biject
map
satisfi
given
map
exist
uniqu
surject
map
std
std
std
map
std
call
standardis
see
instanc
let
deﬁn
std
deﬁn
block
coproduct
extend
linear
exampl
exampl
product
coproduct
given
empti
word
uniqu
surject
set
cardin
mix
distribut
law
product
coproduct
hopf
mix
distribut
law
check
direct
inspect
block
block
conilpot
element
str
block
direct
comput
one
prove
element
construct
linear
combin
product
primit
element
therefor
gener
primit
though
verifi
conilpot
exist
mix
distribut
law
hypothesi
block
homogen
conﬂuenc
law
ﬁrst
decrib
link
ﬁltration
coﬁltrat
free
bialgebra
use
link
deﬁn
homogen
conﬂuenc
law
step
isomorph
associ
conﬂuenc
law
proposit
data
famili
isomorph
functori
send
natur
graduat
product
natur
cogradu
coproduct
equival
data
famili
phism
type
theorem
operad
proof
ﬁeld
characterist
identifi
coinvari
invari
notion
free
conilpot
coalgebra
operad
data
famili
isomorph
deﬁn
natur
transform
schur
functor
associ
given
schur
functor
deﬁn
operad
schur
functor
associ
cooperad
describ
natur
transform
directli
equival
famili
isomorph
functori
send
graduat
cogradu
let
suppos
exist
famili
isomorph
functori
send
graduat
product
uation
coproduct
integ
henc
deﬁn
famili
isomorph
denot
morphism
induc
famili
remark
trivial
represent
isomorph
comm
commc
homotheti
alway
case
depend
chosen
decomposit
irreduc
represent
uniqu
isomorph
call
homogen
conﬂuenc
law
set
rewrit
sition
cooper
ariti
oper
ariti
appli
primit
element
term
primit
element
denot
set
µpσ
word
homogen
conﬂuenc
law
conﬂuenc
law
ﬁltere
distribut
law
distribut
law
see
homogen
conﬂuenc
law
strictli
equival
endow
free
vector
space
structur
send
graduat
algebra
cogradu
coalgebra
inde
follow
result
follow
lemma
data
equival
data
homogen
conﬂuenc
law
proof
given
homogen
conﬂuenc
law
consid
map
sourc
view
algebra
target
seen
coalgebra
produc
famili
morphism
send
ﬁltration
product
coﬁltrat
coproduct
result
morphism
deﬁn
bid
burgund
denot
dualiti
pair
dual
space
action
element
symmetr
group
element
deﬁn
homogen
conﬂuenc
law
morphism
hδσ
notic
hδσ
two
construct
invers
equival
condit
use
homogen
conﬂuenc
law
previou
subsect
prove
equival
hypothesi
rigid
theorem
state
loday
proposit
let
two
algebra
operad
exist
conﬂuenc
law
impli
exist
famili
morphism
posit
integ
moreov
biject
enabl
deﬁn
associ
conﬂuenc
law
remark
biject
exist
derli
proof
homogen
conﬂuenc
law
directli
comput
conﬂuenc
law
forget
inform
deﬁn
associ
conﬂuenc
law
use
follow
notat
conﬂuenc
law
deﬁn
follow
composit
use
notat
deﬁnit
mli
hli
oper
functori
get
famili
map
moreov
morphism
henc
map
compat
action
symmetr
group
type
theorem
operad
ﬁnalli
show
compat
operad
structur
come
follow
commut
diagram
hold
vector
space
ppl
ppk
diagram
obtain
use
deﬁnit
composit
given
use
deﬁnit
commut
diagram
reli
two
fact
oper
occur
part
tensori
product
deﬁnit
coproduct
give
commut
one
part
diagram
thank
follow
diagram
hold
previou
γkl
ppl
hqj
ppk
hri
remark
conﬂuenc
law
given
isomorph
write
equival
associ
bialgebra
bialgebra
diﬀer
conﬂuenc
law
associ
ple
operad
see
instanc
mix
distribut
law
dendriform
codendriform
bialgebra
comput
foissi
one
refer
bdo
project
last
step
reach
rigid
theorem
prove
exist
good
project
coalgebra
primit
element
name
idempot
let
consid
necessarili
free
cofre
conilpot
bialgebra
denot
coﬁltrat
morphism
associ
conﬂuenc
law
ﬁrst
show
follow
lemma
lemma
bialgebra
gener
algebra
primit
element
burgund
proof
proov
lemma
reductio
absurdum
let
consid
minim
integ
exist
element
fnh
subalgebra
gener
primit
element
construct
subalgebra
gener
primit
element
belong
subalgebra
gener
primit
element
linear
basi
exist
basi
denot
action
element
symmetr
group
element
consid
bialgebra
satisﬁ
conﬂuenc
law
also
homogen
conﬂuenc
law
henc
primit
element
accord
equat
real
number
denot
jpσ
belong
fnh
coproduct
element
written
without
loss
gener
consid
case
given
tupl
primit
element
decompos
sum
element
let
consid
element
let
determin
appropri
use
equat
jpτ
use
equat
equival
moreov
jδi
give
jdi
thank
equat
choos
give
subalgebra
gener
primit
element
type
theorem
operad
henc
also
subalgebra
gener
primit
element
minim
lemma
vector
space
admit
supplementari
space
proof
first
deﬁnit
let
show
let
consid
element
inject
element
thu
thu
come
equat
let
prove
algebra
lemma
let
consid
element
write
necessarili
uniqu
equat
biject
see
second
point
proof
get
decomposit
element
deﬁn
project
parallel
map
linear
satisﬁ
prim
call
map
idempot
associ
see
corollari
rigid
theorem
give
new
formul
rigid
rem
take
account
previou
subsect
conﬂuenc
law
theorem
let
ﬁeld
characterist
let
consid
two
connect
algebra
operad
nite
dimension
vector
space
famili
isomorph
associ
conﬂuenc
law
conilpot
free
cofre
vector
space
primit
element
prim
prim
moreov
free
cofre
also
conﬂuenc
law
mix
distribut
law
conilpot
burgund
free
cofre
primit
element
word
result
depend
choic
conﬂuenc
law
idempot
exactli
project
parallel
see
henc
follow
result
corollari
idempot
uniqu
idempot
describ
one
introduc
generalis
eulerian
idempot
use
whose
origin
lay
obtain
case
comm
follow
sketch
proof
loday
patra
use
conﬂuenc
law
idempot
introduc
previous
proof
want
prove
isomorph
prim
latter
free
cofre
bialgebra
prim
call
respect
canon
inject
prim
prim
surject
prim
prim
let
deﬁn
prim
uniqu
lift
univers
properti
ness
consid
prim
natur
inject
prim
lift
univers
properti
freeness
repres
morphism
prim
prim
prim
first
bialgebra
morphism
algebra
morphism
versal
properti
show
use
ﬁltration
provid
conilpot
also
coalgebra
morphism
inde
struction
prim
prim
sent
biject
prim
let
consid
fna
prim
freeness
exist
prim
henc
cooper
conﬂuenc
law
denot
distribut
pσi
pσi
pσi
pσi
type
theorem
operad
primit
element
ariti
sshuﬄe
set
permut
note
reason
depend
choic
conﬂuenc
law
pσi
pσi
pσi
pσi
pσi
pσi
algebra
morphism
conﬂuenc
law
algebra
morphism
prof
bialgebra
isomorph
impli
coalgebra
morphism
ident
primit
element
henc
cofre
equal
impli
inject
surject
final
also
inject
otherwis
would
minim
integ
exist
fmh
deﬁnit
fmh
exist
cooper
use
fact
coalgebra
morphism
obtain
contradict
minim
final
map
prim
vector
space
isomorph
preserv
graduat
result
follow
use
isomorphim
prim
prim
immedi
result
theorem
follow
corollari
corollari
given
two
algebra
operad
conﬂuenc
law
induc
isomorph
free
possibl
deﬁn
satisfi
conﬂuenc
law
proof
consequ
exist
conﬂuenc
law
free
exist
vector
space
natur
equip
structur
thank
mix
distribut
law
consequ
rigid
theorem
burgund
provid
eﬃcient
tool
solv
problem
freeness
algebra
encod
operad
see
give
gener
divis
free
algebra
moreov
anoth
applic
theorem
follow
answer
conjectur
loday
theorem
connect
algebra
operad
share
underli
ﬁnite
dimension
exist
famili
isomorph
thu
exist
conﬂuenc
law
associ
conilpot
bialgebra
free
cofre
primit
proof
charact
represent
symmetr
group
valu
henc
represent
symmetr
group
possibl
construct
isomorph
dual
let
choos
obtain
famili
isomorph
satisfi
hypothesi
theorem
appli
theorem
give
result
follow
corollari
immedi
corollari
two
operad
share
underli
free
free
remark
note
case
non
free
algebra
orthogon
base
subsect
provid
explicit
tive
descript
conﬂuenc
law
idempot
favour
case
everi
consid
exist
two
gener
set
ban
bcn
spectiv
let
remark
obtain
gener
set
take
one
element
everi
orbit
gener
set
found
instanc
relat
form
consid
basi
equat
give
jpσ
aut
let
remark
aut
aut
deﬁnit
equal
inject
suppos
follow
type
theorem
operad
conﬂuenc
law
given
cooper
erat
induct
coﬁltrat
fλn
aln
aut
ali
cln
tensori
product
oper
obtain
aln
tensori
product
oper
obtain
evalu
primit
element
see
map
give
mix
distribut
law
element
primit
element
ing
fλn
wherepi
aln
idempot
given
induct
limit
map
deﬁn
coﬁltrat
note
decomposit
lemma
henc
ident
prove
follow
map
obtain
idempot
lemma
construct
map
satisﬁ
conilpot
bialgebra
proof
lemma
prove
induct
primit
element
primit
element
let
suppos
properti
true
induct
hypothesi
howev
henc
burgund
provid
explicit
induct
descript
idempot
conﬂuenc
law
next
section
appli
construct
dual
case
canon
vector
space
isomorph
vector
space
dual
moreov
morphism
must
also
morphism
isomorph
give
rise
rigid
theorem
provid
section
criterion
given
basi
get
famili
isomorph
appli
sever
case
gener
result
consid
two
connect
algebra
operad
satisfi
rigid
theorem
operad
must
underli
let
consid
basi
vector
space
consid
morphism
given
dualiti
respect
denot
let
consid
free
basi
induc
basi
given
element
oper
coproduct
given
dualiti
deﬁn
kroneck
symbol
note
thank
equat
deﬁnit
coincid
operad
term
deﬁnit
rewritten
oper
cooper
element
denot
coeﬃcient
morphism
basi
satisfi
condit
deﬁnit
basi
said
compat
basi
product
dual
coproduct
express
basi
commut
action
symmetr
group
word
cooper
oper
thank
shape
homogen
conﬂuenc
law
equat
obtain
directli
type
theorem
operad
proposit
consid
basi
compat
basi
famili
famili
isomorph
rigid
theorem
appli
conilpot
free
cofre
vector
space
primit
remark
exampl
base
operad
compat
given
lyndon
basi
comb
basi
operad
lie
see
comput
comb
basi
consid
non
symmetr
operad
basi
compat
obtain
follow
result
give
explicit
famili
isomorph
corollari
non
symmetr
operad
basi
exist
conﬂuenc
law
whose
associ
isomorph
given
send
dual
basi
rigid
theorem
appli
exampl
use
dualiti
usual
base
known
operad
ﬁnd
back
follow
case
repres
product
coproduct
ambigu
omit
precis
product
coproduct
hopf
mix
distribut
law
mix
distribut
law
mix
distribut
law
denot
gener
oper
zinbiel
magmat
mix
distribut
law
inﬁnit
magmat
mix
distribut
law
burgund
livernet
mix
distribut
law
nil
mix
distribut
law
dup
follow
mix
distribut
law
note
satisfi
rigid
theorem
given
conﬂuenc
law
conﬂuenc
law
obtain
dual
graphic
horizont
mirror
imag
remark
case
obtain
dualiti
product
instanc
dendriform
case
isomorph
given
foissi
mix
distribut
law
ariti
two
dend
dend
given
matrix
diagonalis
admit
eigenvalu
inde
foissi
us
two
diﬀer
dendriform
product
deﬁn
dendriform
algebra
comput
mix
distribut
law
one
dual
case
comput
loday
ronco
isomorph
given
hopf
mix
distribut
law
ariti
two
abl
admit
eigenvalu
would
interest
know
exist
two
diﬀer
product
look
mix
distribut
law
one
dual
one
recov
loday
ronco
mix
distribut
law
preli
case
consid
preli
operad
root
tree
basi
introduc
chapoton
livernet
free
preli
type
theorem
operad
algebra
vector
space
span
root
non
planar
tree
vertex
index
exampl
motiv
introduct
conﬂuenc
law
recal
relat
satisﬁ
preli
product
given
combinatori
product
sum
possibl
way
add
edg
vertex
root
root
obtain
tree
root
dual
coproduct
given
sum
possibl
way
delet
edg
tree
connect
compon
contain
root
connect
compon
remark
coproduct
obtain
take
connect
ponent
coproduct
appli
rigid
theorem
algebra
comput
associ
conﬂuenc
law
proposit
preli
product
dual
coproduct
satisfi
follow
conﬂuenc
law
preli
preli
primit
element
given
preliec
previou
deﬁnit
conﬂuenc
law
easier
appli
also
state
anoth
deﬁnit
closer
formal
deﬁnit
conﬂuenc
law
strictli
equival
previou
one
preli
preli
burgund
sum
taken
product
satisfi
operad
composit
preli
one
ement
taken
orbit
action
symmetr
group
instanc
one
repres
chosen
proof
ﬁrst
express
decomposit
done
follow
delet
edg
root
root
somewher
els
second
express
follow
quit
easili
deﬁnit
dual
coproduct
point
author
sketch
conﬂuenc
law
also
found
exampl
let
give
explicit
second
formul
conﬂuenc
law
exampl
get
note
two
term
per
way
choos
one
edg
left
subtre
one
edg
right
subtre
node
due
symmetri
proposit
appli
algorithm
idempot
given
linext
aut
see
root
tree
hass
diagram
poset
uniqu
minim
element
root
linext
set
linear
sion
poset
proof
show
idempot
vanish
non
trivial
root
tree
principl
htn
coeﬃcient
front
tree
htn
edg
diﬀer
type
theorem
operad
figur
box
tree
one
obtain
coproduct
delet
edg
other
henc
result
appli
rigid
theorem
preli
algebra
three
exampl
literatur
exampl
box
tree
use
obtain
criterion
give
new
proof
freeness
algebra
partit
tree
introduc
partit
tree
equival
box
tree
introduc
let
consid
quadrupl
ﬁnite
set
call
set
label
partit
call
set
vertex
element
call
root
map
call
set
edg
denot
map
associ
orient
graph
vertex
label
subset
vertex
vertex
contain
label
pair
graph
tree
root
edg
orient
deﬁnit
quadrupl
box
tree
toward
root
label
call
parent
vertex
figur
exampl
box
tree
present
root
doubl
rectangl
product
given
natur
preli
product
tree
algebra
deﬁn
follow
coproduct
coproduct
satisﬁ
previou
conﬂuenc
law
henc
associ
algebra
preli
free
primit
given
tree
edg
burgund
figur
exampl
hypergraph
figur
exampl
hypertre
exampl
hypertre
biject
decor
hypertre
pair
given
type
box
tree
decor
set
motiv
introduct
follow
product
hypertre
introduc
berg
studi
second
author
deﬁnit
hypergraph
set
order
pair
ﬁnite
set
collect
element
cardin
least
two
belong
power
set
element
call
vertex
call
edg
exampl
hypergraph
present
ﬁgure
deﬁnit
let
hypergraph
walk
vertex
edg
vertex
edg
altern
sequenc
vertex
edg
begin
end
length
walk
number
edg
vertex
walk
exampl
previou
exampl
sever
walk
walk
deﬁnit
hypertre
hypergraph
given
distinct
vertex
exist
walk
distinct
edg
connect
walk
uniqu
cycl
pair
call
hypertre
set
call
hypertre
vertex
exampl
hypertre
present
ﬁgure
let
consid
root
hypertre
hypertre
distinguish
vertex
given
edg
one
vertex
nearest
root
let
call
petiol
type
theorem
operad
deﬁn
preli
product
root
hypertre
sum
way
graft
root
vertex
graft
given
ad
edg
exampl
repres
product
two
root
hypertre
algebra
deﬁn
follow
coproduct
coproduct
satisﬁ
previou
conﬂuenc
law
henc
associ
algebra
preli
free
primit
given
hypertre
binari
edg
edg
cardin
two
exampl
fat
tree
second
author
also
studi
notion
root
fat
tree
introduc
deﬁnit
fat
tree
set
partit
whose
part
call
vertex
togeth
edg
link
element
diﬀer
vertex
walk
fat
tree
altern
sequenc
everi
element
diﬀer
vertex
edg
everi
element
vertex
everi
pair
element
diﬀer
vertex
exist
one
one
walk
root
fat
tree
fat
tree
distinguish
element
call
root
figur
exampl
root
fat
tree
present
root
circl
vector
space
root
fat
tree
easili
endow
preli
product
given
tree
structur
burgund
figur
root
fat
tree
algebra
deﬁn
follow
coproduct
coproduct
satisﬁ
previou
conﬂuenc
law
henc
associ
algebra
preli
free
primit
given
fat
tree
edg
remark
exampl
show
formula
contain
sum
permut
primit
element
take
account
action
symmetr
group
automorph
group
oper
appear
instanc
preli
denot
gener
product
coproduct
respect
tripl
primit
element
second
term
sum
alway
appear
ﬁrst
one
appear
equal
perm
case
appli
rigid
theorem
dual
case
erad
perm
introduc
chapoton
endow
usual
vector
space
basi
given
point
set
recal
relat
satisﬁ
perm
product
given
combinatori
product
point
set
obtain
union
point
point
element
dual
coproduct
given
sum
possibl
way
split
set
two
point
set
union
point
element
point
element
point
set
denot
point
element
type
theorem
operad
case
idempot
given
explicitli
follow
formula
deﬁn
recurs
remark
use
notat
diagram
diamond
proof
show
induct
iter
coproduct
satisﬁ
follow
relat
inde
term
coproduct
whose
left
part
least
element
remain
coproduct
choos
decomposit
choic
appli
rigid
theorem
algebra
comput
associ
conﬂuenc
law
primit
element
follow
conﬂuenc
law
proposit
perm
product
dual
coproduct
satisfi
element
kroneck
symbol
proof
coproduct
product
obtain
merg
get
point
element
split
point
set
two
point
set
left
one
contain
point
element
equal
obtain
consid
diﬀer
case
split
separ
left
side
point
element
split
split
right
part
coproduct
point
element
element
split
split
point
element
left
part
coproduct
ﬁxed
right
part
contain
point
element
point
element
burgund
figur
nap
product
figur
nap
coproduct
split
split
point
element
right
left
part
point
element
right
part
chosen
nap
case
consid
nap
operad
see
livernet
proven
exist
mix
distribut
law
conilpot
preli
conap
bialgebra
satisfi
associ
mix
distribut
law
free
cofre
primit
element
studi
nap
conap
bialgebra
nap
product
vector
space
satisﬁ
follow
relat
basi
free
nap
algebra
vector
space
given
set
root
tree
vertex
label
element
denot
rtn
product
two
tree
algebra
tree
obtain
graft
root
root
see
figur
coproduct
tree
algebra
given
dual
product
sum
possibl
tree
obtain
delet
edg
attach
root
part
contain
root
left
part
coproduct
see
figur
appli
rigid
theorem
algebra
comput
associ
conﬂuenc
law
mix
distribut
law
proposit
nap
product
associ
dual
coproduct
satisfi
follow
mix
distribut
law
sweedler
notat
type
theorem
operad
proof
sum
possibl
delet
edg
contain
root
tree
obtain
ad
edg
root
one
result
come
follow
decomposit
either
edg
delet
edg
previou
reason
give
follow
express
idempot
check
proof
deﬁn
recurs
proof
oper
rewritten
term
root
tree
root
tree
least
two
vertex
whose
root
child
vanish
partial
sum
free
preli
algebra
endow
natur
structur
free
nap
algebra
note
case
non
free
preli
algebra
instanc
preli
structur
mag
operad
endow
nap
product
see
bdom
exampl
develop
subsect
seen
algebra
consid
graft
root
exampl
box
tree
consid
exampl
endow
natur
nap
structur
associ
preli
product
deﬁn
follow
conap
coproduct
set
edg
adjac
root
coproduct
satisﬁ
previou
mix
distribut
law
henc
associ
algebra
nap
free
primit
given
tree
edg
exampl
hypertre
consid
exampl
deﬁn
nap
product
root
hypertre
hypertre
obtain
graft
root
root
graft
given
ad
edg
burgund
algebra
deﬁn
follow
coproduct
set
edg
adjac
root
coproduct
satisﬁ
previou
mix
distribut
law
henc
associ
algebra
nap
free
primit
given
hypertre
binari
edg
edg
cardin
two
exampl
fat
tree
consid
exampl
endow
natur
nap
structur
associ
preli
product
deﬁn
follow
conap
coproduct
set
edg
adjac
root
coproduct
satisﬁ
previou
mix
distribut
law
henc
associ
algebra
nap
free
primit
given
tree
edg
pan
case
consid
koszul
dual
nap
operad
denot
pan
pan
product
vector
space
satisﬁ
follow
relat
proposit
operad
pan
koszul
dual
operad
nap
proof
use
method
dotsenko
hoﬀbeck
see
determin
koszul
dual
nap
operad
let
recal
relat
nap
orthogon
relat
precis
relat
pan
basi
free
pan
algebra
vector
space
given
set
point
set
element
label
element
denot
bold
point
element
set
product
two
point
set
algebra
point
set
otherwis
coproduct
point
set
point
algebra
given
dual
product
given
set
point
appli
rigid
theorem
algebra
comput
associ
conﬂuenc
law
type
theorem
operad
proposit
pan
product
associ
dual
uct
satisfi
follow
conﬂuenc
law
primit
element
conilpot
sweedler
notat
kroneck
symbol
proof
otherwis
coproduct
obtain
either
separ
split
previou
reason
give
follow
express
idempot
check
proof
deﬁn
recurs
proof
show
induct
iter
coproduct
satisﬁ
follow
relat
inde
equal
come
newton
binomi
theorem
bialgebra
perm
algebra
endow
structur
copan
bialgebra
consid
coproduct
dual
natur
structur
follow
conﬂuenc
law
follow
directli
deﬁnit
proposit
perm
product
associ
dual
coproduct
satisfi
follow
conﬂuenc
law
primit
element
conilpot
sweedler
notat
burgund
associ
leibniz
poisson
zinbiel
case
sider
rigid
theorem
obtain
operad
underli
free
bra
tensor
algebra
diﬀer
product
associ
leibniz
poisson
zinbiel
operad
introduc
respect
relat
satisﬁ
operad
respect
associ
product
sometim
omit
leibniz
product
poisson
product
associ
commut
lie
bracket
zinbiel
product
use
relat
poisson
interpret
comm
lie
commut
product
lie
bracket
element
basi
poisson
operad
given
usual
lyndon
basi
lie
algebra
commut
term
sort
non
increas
order
obtain
term
natur
bracket
lie
bracket
determin
minimum
natur
bracket
lyndon
word
instanc
stand
denot
represent
bold
distinguish
represent
identifi
associ
element
one
use
inject
lie
algebra
associ
algebra
deﬁn
inject
commut
algebra
associ
algebra
deﬁn
use
inject
implicit
element
right
part
equal
obtain
basi
poisson
operad
element
small
ariti
given
ariti
ariti
combinatori
product
correspond
tensor
algebra
concaten
associ
product
leibniz
product
type
theorem
operad
shuﬄe
product
poisson
product
commut
concaten
poisson
bracket
shp
halfshuﬄ
zinbiel
product
shα
associ
dual
coproduct
given
tensor
algebra
deconcaten
associ
product
leibniz
coproduct
coshuﬄ
coproduct
poisson
product
tator
deconcaten
poisson
bracket
cohalfshuﬄ
zinbiel
coproduct
mix
distribut
law
diﬀer
relat
given
case
mix
distribut
law
proven
written
exampl
burgund
case
mix
distribut
law
proven
written
exampl
note
product
use
exactli
shuﬄe
product
case
express
conﬂuenc
law
need
oper
express
term
coassoci
coproduct
leibniz
product
kroneck
symbol
xjj
sequenc
extract
thank
deconcaten
concaten
deﬁn
conﬂuenc
law
given
combinatori
accord
deconcaten
occur
case
mix
distribut
law
given
binatori
hopf
case
remark
ﬁrst
concaten
obtain
recurs
deﬁn
previous
oper
conﬂuenc
law
thu
given
combinatori
term
obtain
split
term
vlk
vrp
obtain
thank
diﬀer
element
accord
element
mix
coeﬃcient
term
exactlypk
type
theorem
operad
dendriform
tridendriform
case
case
treat
articl
bdo
relat
obtain
bidendriform
bialgebra
diﬀer
one
obtain
foissi
dipt
case
comput
mix
distribut
law
operad
dipt
introduc
loday
ronco
recal
relat
satisﬁ
product
given
combinatori
free
algebra
vector
space
span
word
planar
tree
leaf
decor
element
product
concaten
tree
word
graft
new
root
follow
dual
case
associ
operad
product
dual
coproduct
link
mix
distribut
law
given
low
array
recal
relat
satisﬁ
dipter
product
given
combinatori
see
free
dipter
algebra
vector
space
span
word
planar
tree
leaf
decor
element
product
concaten
tree
word
given
recurs
tree
graft
tree
new
root
coproduct
given
consid
uniqu
leftmost
path
root
tree
ﬁrst
node
ariti
diﬀer
two
path
trivial
ariti
root
two
mani
term
coproduct
edg
path
term
obtain
edg
delet
edg
start
vertex
path
root
reorder
term
accord
previou
recurs
equat
burgund
exampl
exampl
dipter
product
coproduct
sent
cba
cba
cba
cba
cba
product
dual
coproduct
link
follow
mix
distribut
law
accord
edg
come
oper
sweedler
tion
coproduct
refer
emili
burgund
curien
maria
ronco
free
algebra
bdo
ture
permutohedra
algebra
emili
burgund
rigid
theorem
dendriform
tridendriform
algebra
prepar
bdom
emili
burgund
dominiqu
manchon
erad
never
free
preli
algebra
prepar
jon
beck
distribut
law
sem
tripl
categor
homolog
ori
eth
page
springer
berlin
claud
berg
hypergraph
volum
mathemat
librari
publish
amsterdam
combinator
ﬁnite
set
armand
borel
sur
cohomologi
de
espac
principaux
de
espac
homog
ene
group
lie
compact
ann
math
emili
burgund
ronco
tridendriform
structur
combinatori
hopf
algebra
algebra
type
theorem
operad
burroni
loi
distribut
mixt
acad
sci
pari
emili
burgund
inﬁnit
magmat
bialgebra
adv
appl
emili
burgund
symmetr
version
kontsevich
graph
complex
niz
homolog
lie
theori
chapoton
endofoncteur
de
dialgebra
relat
operad
volum
lectur
note
page
springer
berlin
chen
integr
path
geometr
invari
gener
formula
ann
math
chapoton
muriel
livernet
algebra
root
tree
operad
internat
math
re
notic
vladimir
dotsenko
jame
griﬃn
cactu
ﬁltere
distribut
law
gebr
geom
askar
cla
tree
free
algebra
free
novikov
algebra
ident
homolog
homotopi
part
roo
festschrift
volum
incid
hopf
algebra
hypertre
poset
lothar
art
hyperarbr
partit
aspect
binatoir
homologiqu
phd
thesi
lyon
vladimir
dotsenko
operad
approach
deform
quantiz
patibl
poisson
bracket
lie
theori
thoma
fox
martin
markl
distribut
law
bialgebra
homolog
operad
proceed
renaiss
confer
hartford
volum
contemp
page
amer
math
provid
foissi
bidendriform
bialgebra
tree
free
function
pure
appl
algebra
foissi
hopf
algebra
fli
oper
dual
algebra
comm
algebra
benoit
fress
de
koszul
homologi
de
alg
ebr
poisson
ann
math
blais
pascal
florent
hivert
novelli
thibon
commut
combinatori
hopf
algebra
algebra
eric
hoﬀbeck
manuscripta
eric
hoﬀbeck
christin
vespa
leibniz
homolog
lie
algebra
functor
homolog
pure
appl
algebra
criterion
koszul
operad
muriel
livernet
rigid
theorem
algebra
pure
appl
algebra
muriel
livernet
bachuki
mesablishvili
robert
wisbauer
generalis
bialgebra
entwin
monad
comonad
pure
appl
algebra
loday
une
version
non
commut
de
alg
ebr
lie
alg
ebr
leibniz
enseign
math
loday
leibniz
cohomolog
dual
leibniz
bra
math
loday
gener
bialgebra
tripl
operad
loday
ronco
alg
ebr
hopf
colibr
math
acad
sci
pari
le
burgund
loday
ronco
structur
cofre
hopf
algebra
rein
angew
loday
bruno
vallett
algebra
operad
volum
grundlehren
der
mathematischen
wissenschaften
fundament
principl
mathemat
scienc
springer
heidelberg
martin
markl
distribut
law
koszul
ann
inst
fourier
grenobl
luca
natur
structur
diﬀerenti
geometri
novelli
thibon
construct
trig
ebr
driform
math
acad
sci
pari
oger
action
symmetr
group
homolog
hypertre
poset
algebra
oger
decor
hypertre
combin
theori
ser
patra
poid
de
alg
ebr
hopf
ann
inst
fourier
grenobl
thoma
zaslavski
perpendicular
dissect
space
discret
comput
paul
sabati
institut
toulous
rout
narbonn
toulous
cedex
franc
address
burgund
bdo
pari
deni
diderot
institut
recherch
tiqu
fondamental
case
pari
cedex
franc
address
bdelcroix
