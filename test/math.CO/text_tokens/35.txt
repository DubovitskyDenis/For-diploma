decycl
number
linear
graph
tree
jian
wanga
xirong
xub
adepart
mathemat
taiyuan
univers
technolog
taiyuan
bschool
comput
scienc
technolog
dalian
univers
technolog
dalian
abstract
decycl
number
graph
minimum
number
vertex
whose
remov
result
acycl
subgraph
known
determin
decycl
number
graph
equival
ﬁnding
maximum
induc
forest
line
graph
tree
block
graph
graph
use
sak
construct
graph
given
number
edg
vertex
whose
maximum
induc
tree
small
paper
give
bound
decycl
number
line
graph
tree
construct
extrem
tree
show
bound
best
possibl
also
give
bound
decycl
number
line
graph
tree
determin
exact
decycl
number
line
graph
perfect
tree
keyword
maximum
induc
forest
maximum
linear
forest
line
graph
tree
cling
number
introduct
let
simpl
graph
vertex
set
edg
set
subset
call
decycl
set
subgraph
acycl
minimum
cardin
decyl
set
call
decycl
number
feedback
number
propos
ﬁrst
beinek
vandel
use
notat
denot
decycl
number
fact
problem
determin
decycl
number
graph
karp
also
see
best
known
approxim
algorithm
problem
approxim
ratio
determin
decycl
number
diﬃcult
even
ementari
graph
refer
reader
origin
research
paper
result
bound
decycl
number
establish
graph
hypercub
star
graph
gener
petersen
graph
distanc
graph
circul
graph
graph
let
maximum
number
vertex
induc
subgraph
forest
induc
forest
maximum
number
vertex
call
maximum
correspond
author
xirongxu
induc
forest
determin
decycl
number
graph
equival
ﬁnding
maximum
induc
forest
sinc
sum
two
number
equal
order
one
also
studi
induc
tree
rather
forest
graph
let
size
maximum
induc
tree
problem
bound
connect
graph
ﬁrst
studi
sak
thirti
year
ago
paper
sak
studi
relationship
sever
natur
paramet
graph
abl
obtain
asymptot
tight
bound
either
number
edg
independ
number
known
result
show
small
graph
vertex
edg
given
graph
line
graph
graph
vertex
repres
edg
two
vertex
adjac
correspond
edg
share
common
endpoint
sak
use
line
graph
tree
construct
graph
surprisingli
small
besid
sak
also
consid
problem
estim
size
maximum
induc
tree
graph
use
line
graph
regular
tree
construct
graph
small
recent
jacob
fox
loh
benni
sudakov
improv
result
lower
bound
maximum
induc
tree
graph
linear
forest
graph
vertex
disjoint
union
simpl
path
maximum
linear
forest
linear
forest
maximum
number
edg
number
edg
maximum
linear
forest
graph
denot
deﬁn
hamiltonian
complet
number
graph
denot
minimum
number
edg
need
ad
make
hamiltonian
hamiltonian
complet
problem
introduc
goodman
hedetniemi
goodman
hedetniemi
prove
follow
relat
graph
vertex
paper
studi
decycl
number
line
graph
tree
show
ﬁnding
maximum
induc
forest
line
graph
equival
ﬁnding
maximum
linear
forest
origin
graph
let
tree
vertex
diamet
give
lower
upper
bound
follow
even
odd
extrem
line
graph
achiev
bound
also
construct
tree
root
tree
within
level
everi
node
either
child
perfect
tree
tree
leaf
node
depth
paper
give
bound
decycl
number
line
graph
tree
follow
let
tree
vertex
moreov
prove
perfect
tree
vertex
height
rest
paper
organ
follow
section
show
ﬁnding
maximum
induc
forest
line
graph
equival
ﬁnding
maximum
linear
forest
origin
graph
section
give
lower
upper
bound
decycl
number
line
graph
tree
given
diamet
section
give
lower
upper
bound
decycl
number
line
graph
tree
maximum
induc
forest
line
graph
section
prove
maximum
induc
forest
line
graph
correspond
maximum
linear
forest
origin
graph
denot
length
longest
path
lemma
path
longest
maximum
induc
tree
line
graph
linear
forest
maximum
maximum
induc
forest
line
graph
thu
proof
known
line
graph
contain
induc
induc
tree
induc
forest
follow
everi
induc
tree
line
graph
induc
path
everi
induc
forest
line
graph
induc
linear
forest
moreov
shall
show
line
graph
path
induc
path
induc
path
also
line
graph
path
path
vertex
edg
shall
show
induc
path
otherwis
assum
form
edg
share
common
end
point
contradict
path
convers
induc
path
line
graph
let
consecut
vertex
clearli
path
thu
path
longest
maximum
induc
tree
linear
forest
maximum
maximum
induc
forest
clearli
linear
forest
edg
impli
therefor
follow
corollari
corollari
graph
vertex
edg
decycl
number
line
graph
tree
let
tree
vertex
inner
vertex
vertex
degre
least
two
similarli
outer
vertex
leaf
vertex
degre
one
vertex
partit
set
leaf
vout
set
inner
vertex
vin
cardin
vout
denot
inner
vertex
let
zero
two
neighbor
degre
le
three
let
neighbor
degre
le
three
follow
lemma
lemma
tree
vertex
proof
sinc
tree
ad
edg
get
hamiltonian
graph
sinc
hamiltonian
cycl
leaf
incid
new
edg
inner
vertex
greater
zero
two
edg
incid
mean
least
neighbor
degre
le
equal
two
adjac
neighbor
incid
new
edg
thu
least
vertex
incid
new
edg
therefor
figur
exampl
tree
hand
get
hamiltonian
cycl
ad
edg
accord
follow
procedur
firstli
choos
two
leaf
add
edg
let
graph
contain
uniqu
cycl
form
new
edg
uniqu
path
let
graph
obtain
contract
cycl
denot
contract
vertex
easi
see
tree
choos
leaf
outsid
let
uniqu
path
let
vertex
cycl
smallest
distanc
let
neighbor
ad
edg
get
larger
cycl
let
graph
obtain
contract
tree
leaf
choos
leaf
outsid
let
uniqu
path
let
vertex
cycl
smallest
distanc
let
neighbor
ad
edg
get
larger
cycl
procedur
repeatedli
step
get
tree
tree
leaf
le
see
procedur
stop
contract
tree
one
vertex
get
hamiltonian
cycl
ad
edg
thu
sinc
tree
vertex
edg
lemma
know
moreov
true
therefor
follow
corollari
corollari
tree
vertex
introduc
oper
leaf
tree
decreas
two
leaf
suppos
neighbor
deﬁn
oper
remov
edg
wiui
ad
edg
obtain
tree
denot
lemma
two
leaf
proof
suppos
maximum
linear
forest
wiui
ujui
linear
forest
thu
let
tree
vertex
center
tree
set
vertex
greatest
distanc
equal
radiu
let
one
center
tree
view
root
tree
root
moreov
partit
set
radiu
case
confus
often
abbrevi
vertex
call
vertex
depth
let
let
diamet
radiu
let
number
vertex
deﬁn
three
famili
root
tree
vertex
diamet
follow
deg
deg
follow
three
lemma
shall
show
ﬁnding
upper
bound
tree
equival
ﬁnding
lemma
tree
vertex
diamet
exist
tree
proof
tree
view
root
tree
center
root
suppos
contrari
exist
tree
ﬁnd
tree
larger
maximum
linear
forest
let
counterexampl
maximum
clearli
vertex
deg
vertex
deg
split
proof
two
case
follow
case
vertex
deg
assum
deg
one
neighbor
neighbor
let
neighbor
subtre
root
let
maximum
linear
forest
two
edg
vvt
sinc
exist
one
vvt
without
loss
gener
assum
vvt
remov
edg
vvt
ad
edg
get
new
tree
clearli
sinc
also
linear
forest
moreov
vertex
sinc
counterexampl
maximum
know
longer
counterexampl
therefor
exist
tree
contradict
counterexampl
case
vertex
deg
deg
get
contradict
argument
case
thu
need
consid
case
deg
one
neighbor
two
neighbor
subtre
root
let
maximum
linear
forest
two
edg
remov
edg
ad
edg
get
new
tree
sinc
also
linear
forest
sinc
increas
one
longer
counterexampl
therefor
exist
tree
get
contradict
one
without
loss
gener
assum
remov
edg
ad
edg
get
new
tree
also
lead
contradict
therefor
claim
hold
lemma
tree
exist
tree
proof
suppos
contrari
exist
counterexampl
let
one
minimum
least
four
neighbor
assum
deﬁnit
easi
see
subtre
root
path
let
path
clearli
one
endpoint
let
maximum
linear
forest
least
two
edg
without
loss
gener
suppos
edg
one
path
length
least
two
without
loss
gener
suppos
length
least
clearli
one
endpoint
let
endpoint
parent
root
tree
remov
edg
ad
edg
get
new
tree
sinc
linear
forest
sinc
exist
tree
lead
contradict
length
one
assum
edg
edg
remov
edg
ad
edg
get
new
tree
also
lead
contradict
thu
claim
hold
lemma
tree
exist
tree
proof
suppos
counterexampl
maximum
clearli
let
maximum
linear
forest
firstli
claim
leaf
otherwis
assum
leaf
vertex
say
let
leaf
subtre
root
oper
get
new
tree
sinc
counterexampl
maximum
exist
tree
follow
contradict
vertex
vertex
degre
two
sinc
least
two
leaf
say
exchang
oper
get
new
tree
sinc
oper
decreas
diamet
exist
tree
follow
contradict
thu
leaf
know
one
vertex
leaf
sinc
number
vertex
greater
one
let
vertex
least
one
edg
without
loss
gener
assum
let
two
neighbor
least
one
edg
suppos
remov
edg
ad
edg
get
new
tree
clearli
exist
tree
follow
contradict
none
one
edg
incid
edg
subtre
root
suppos
two
neighbor
remov
edg
ad
edg
get
new
tree
linear
forest
follow
exist
tree
follow
contradict
combin
case
complet
proof
theorem
tree
vertex
diamet
even
odd
proof
lower
bound
clearli
moreov
extrem
tree
achiev
lower
bound
shown
figur
extrem
tree
achiev
lower
bound
let
center
tree
view
root
tree
root
radiu
clearli
lemma
know
exist
tree
therefor
need
consid
upper
bound
split
proof
two
case
pariti
case
let
tree
easi
see
radiu
sinc
least
two
vertex
degre
two
say
subtre
root
subtre
root
two
path
call
two
leaf
two
subtre
critic
leaf
call
leaf
leaf
let
tree
satisfi
follow
two
properti
shown
figur
two
critic
leaf
depth
one
leaf
depth
leaf
depth
le
lie
subtre
whose
root
vertex
leaf
depth
le
lie
subtre
whose
root
vertex
figur
extrem
graph
achiev
upper
bound
claim
tree
let
vertex
vertex
let
third
vertex
arrang
subtre
root
left
right
plane
oper
rightmost
leaf
leftmost
leaf
depth
le
convect
final
shall
arriv
tree
sinc
exchang
oper
leaf
leaf
never
decreas
valu
follow
let
remaind
divid
split
proof
two
part
valu
case
shown
easi
see
three
vertex
follow
moreov
number
leaf
comput
follow
lemma
howev
remov
dash
edg
shown
get
linear
forest
edg
thu
case
shown
second
case
lemma
edg
thu
howev
remov
dash
edg
shown
get
linear
forest
combin
two
subcas
prove
tree
vertex
diamet
figur
extrem
tree
achiev
upper
bound
case
let
tree
sinc
leaf
leaf
subtre
thu
case
let
leaf
neighbor
remov
vertex
get
tree
diamet
suppos
maximum
linear
forest
linear
forest
convers
maximum
linear
forest
linear
forest
follow
therefor
ad
one
leaf
obtain
new
tree
vertex
diamet
shown
easi
see
thu
case
let
two
vertex
neighbor
respect
clearli
remov
two
vertex
get
tree
diamet
clearli
thu
ad
two
leaf
obtain
tree
vertex
diamet
shown
tree
thu
figur
extrem
tree
achiev
upper
bound
sinc
extrem
tree
achiev
upper
bound
extrem
graph
achiev
upper
bound
let
tree
vertex
edg
sinc
follow
corollari
corollari
let
tree
vertex
diamet
even
odd
theorem
connect
graph
vertex
edg
length
longest
path
even
odd
proof
accord
lemma
clear
sinc
linear
forest
extend
span
tree
exist
span
tree
moreov
maximum
linear
forest
span
tree
also
linear
forest
impli
span
tree
consequ
let
set
span
tree
maxt
easi
see
diamet
span
tree
le
equal
moreov
upper
bound
theorem
increas
function
diamet
thu
even
odd
thu
theorem
follow
decycl
number
line
graph
tree
tree
root
tree
within
level
everi
node
either
child
maximum
degre
tree
follow
line
graph
tree
graph
sinc
often
interest
consid
decycl
number
graph
thu
consid
decycl
number
line
graph
tree
section
give
dynam
program
algorithm
ﬁnd
maximum
linear
forest
root
tree
let
root
tree
root
let
subtre
root
respect
let
edg
set
maximum
linear
forest
let
edg
set
largest
linear
forest
degre
one
rij
figur
structur
linear
forest
rij
deﬁn
three
kind
linear
forest
rij
follow
rij
shown
linear
forest
degre
zero
linear
forest
degre
one
edg
linear
forest
rij
linear
forest
degre
two
edg
linear
forest
let
largest
linear
forest
among
rij
let
largest
linear
forest
among
lemma
tree
maximum
linear
forest
largest
linear
forest
root
degre
one
proof
tree
maximum
linear
forest
let
maximum
linear
forest
let
divid
proof
three
case
accord
degre
case
degre
zero
clearli
linear
forest
subtre
therefor
case
degre
one
suppos
let
clearli
linear
forest
subtre
linear
forest
subtre
degre
one
thu
therefor
case
degre
two
suppos
let
clearli
linear
forest
subtre
linear
forest
subtre
degre
one
linear
forest
subtre
degre
one
thu
therefor
combin
case
get
conclus
impli
maximum
linear
forest
similarli
prove
largest
linear
forest
root
degre
one
theorem
tree
vertex
proof
lower
bound
suppos
intern
vertex
leaf
follow
lemma
thu
upper
bound
divid
edg
group
edg
parent
group
sinc
degre
vertex
linear
forest
two
thu
two
edg
group
linear
forest
therefor
get
figur
special
tree
maximum
linear
forest
let
tree
vertex
layer
one
node
child
shown
fig
let
intern
vertex
depth
root
depth
clear
shown
fig
theorem
easi
check
linear
forest
shown
fig
maximum
thu
even
odd
corollari
let
tree
vertex
perfect
tree
tree
leaf
depth
last
obtain
maximum
linear
forest
perfect
tree
follow
theorem
perfect
tree
vertex
logk
height
leaf
height
figur
linear
forest
perfect
tree
proof
let
logk
height
construct
linear
forest
follow
firstli
choos
two
path
length
root
two
leaf
tree
decompos
subtre
height
subtre
height
subtre
height
subtre
height
subtre
height
shown
fig
subtre
choos
two
path
root
two
leaf
recurs
linear
forest
creat
let
edg
set
obtain
linear
forest
height
let
cardin
easi
see
accord
recurs
construct
obtain
linear
forest
combin
two
equat
get
recurs
relat
follow
techniqu
gener
function
deriv
formula
follow
thu
prove
maximum
linear
forest
let
root
subtre
root
sinc
perfect
tree
subtre
ident
perfect
tree
height
suppos
let
subset
subtre
let
cardin
linear
forest
deg
claim
perfect
tree
height
maximum
linear
forest
largest
linear
forest
degre
root
one
prove
claim
induct
easi
check
maximum
linear
forest
empti
set
suppos
claim
true
perfect
tree
height
let
perfect
tree
height
deﬁn
largest
linear
forest
degre
root
one
rij
induct
hypothesi
ident
ident
easi
see
two
similar
two
extra
edg
vertex
sinc
also
consist
follow
follow
theorem
see
rij
maximum
linear
forest
largest
linear
forest
degre
root
one
exactli
therefor
prove
claim
maximum
linear
forest
thu
conclud
corollari
perfect
tree
vertex
decycl
number
logk
height
acknowledg
work
support
nation
natur
scienc
foundat
china
refer
bafna
berman
fujito
algorithm
undirect
feedback
vertex
set
problem
siam
discret
math
beinek
vandel
decycl
graph
graph
theori
sak
maximum
induc
tree
graph
combin
theori
ser
focardi
luccio
peleg
feedback
vertex
set
hypercub
inform
process
lett
fox
loh
sudakov
larg
induc
tree
graph
combin
theori
ser
garey
johnson
comput
intract
guid
theori
seri
book
mathemat
scienc
freeman
isbn
gao
wang
decycl
number
gener
petersen
graph
discret
appli
mathemat
goodman
hedetniemi
hamiltonian
complet
problem
graph
combinator
springer
berlin
heidelberg
goodman
hedetniemi
slater
advanc
hamiltonian
pletion
problem
journal
acm
jacm
karp
reduc
among
combinatori
problem
complex
comput
putat
proc
ibm
thoma
watson
re
center
plenum
kheddouci
togni
bound
minimum
feedback
vertex
set
distanc
graph
circul
graph
discret
math
theor
comput
sci
wang
wang
chang
feedback
vertex
set
star
graph
inform
process
lett
wang
wang
feedback
number
graph
utilita
matica
wang
zhu
bound
feedback
number
graph
inform
process
letter
wang
gao
decycl
bubbl
sort
graph
discret
appli
matic
wang
feedback
number
kautz
undirect
graph
australasian
journal
combinator
zhang
liu
feedback
number
local
twist
cube
journal
dalian
univers
technolog
zhang
yin
feedback
number
augment
cube
utilita
matica
combinatori
theori
network
beij
scienc
press
bau
beinek
decycl
number
graph
australasian
journal
toric
