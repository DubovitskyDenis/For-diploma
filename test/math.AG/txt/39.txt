counting
number
trigonal
curves
genus
ﬁve
ﬁnite
ﬁelds
tom
wennink
abstract
trigonal
curves
form
subvariety
moduli
space
smooth
curves
genus
ﬁve
cohomological
data
spaces
found
counting
numbers
points
ﬁnite
ﬁelds
trigonal
curves
genus
ﬁve
represented
projective
plane
quintics
one
singularity
delta-invariant
one
use
partial
sieve
method
plane
curves
count
number
trigonal
curves
ﬁnite
ﬁeld
result
agrees
ﬁnd-
ings
computer
program
written
counts
number
trigonal
curves
ﬁnite
ﬁelds
two
three
elements
introduction
inside
moduli
space
smooth
curves
genus
ﬁve
subvariety
trigonal
curves
article
count
ﬁnite
ﬁelds
theorem
7.2.
number
smooth
trigonal
curves
genus
ﬁve
ﬁnite
ﬁeld
given
q11
q10
ﬁnd
cohomological
data
space
knowing
numbers
points
ﬁnite
ﬁelds
let
deligne-mumford
stack
di-
mension
bogaart
edixhoven
shown
theorem
2.1
certain
conditions
piti
polynomial
degree
pd−i
furthermore
cohomology
determined
theorem
p.15
fact
unirational
follows
satisﬁes
required
conditions
purity
knowing
coho-
mology
equivalent
knowing
hodge
euler
characteristic
computed
hodge
euler
characteristic
sn-equivariant
hodge
euler
characteristics
occurring
description
boundary
known
yet
help
theorem
p.15
ﬁnd
polynomial
say
function
polynomial
element
follows
polynomial
counted
trigonal
curves
article
hyperelliptic
curves
know
curves
neither
hyperelliptic
trigonal
canonical
embedding
complete
intersection
three
quadrics
number
curves
ﬁnite
ﬁelds
given
polynomial
piqi
dimension
able
compute
know
using
poincar´e
duality
bijection
smooth
trigonal
curves
genus
ﬁve
plane
quintics
one
singularity
delta-invariant
one
singularities
point
aim
count
quintics
singularity
delta-invariant
one
singularities
see
section
first
take
quintics
singularity
delta-invariant
one
apply
sieve
method
see
section
done
adding
subtracting
various
loci
quintics
singular
points
besides
computation
loci
found
section
step
sieve
method
curves
singular
points
besides
removed
exactly
process
terminate
stop
point
correct
count
curves
singularities
besides
removed
exactly
necessary
computations
found
section
section
combines
results
contains
weblink
computer
program
written
counts
results
program
conﬁrm
theorem
7.2.
counting
come
across
lot
cases
computed
cases
need
listed
results
methods
use
illustrated
number
examples
describe
compute
single
case
acknowledgements
would
like
thank
carel
faber
help
support
advisor
master
thesis
afterwards
helped
transform
article
preliminaries
tools
notation
partitions
tuples
points
style
deﬁnition
2.1.
write
1λ1
vλv
partition
ap-
i=1
consider
empty
partition
weight
sake
notation
leave
zero
powers
e.g
pears
times
partition
weight
|λ|
=pv
notation
2.2.
denote
ﬁnite
ﬁeld
elements
deﬁne
ﬁnite
ﬁeld
extension
elements
notation
2.3.
talk
frobenius
map
mean
geometric
frobenius
let
projective
plane
geometric
frobenius
endomorphism
deﬁned
deﬁnition
2.4.
let
scheme
deﬁned
n-tuple
distinct
subschemes
x¯k
called
conjugate
n-tuple
xi+1
frobenius
map
|λ|-tuple
x|λ|
distinct
subschemes
x¯k
called
λ-tuple
consists
conjugate
1-tuples
followed
conjugate
2-tuples
etc
scheme
deﬁned
write
set
λ-tuples
points
let
k-scheme
let
pd|n
denote
convolution
m¨obius
function
lemma
2.5.
scheme
deﬁned
number
λ-tuples
points
equal
yi=1
cid:18
µ∗n
cid:19
deﬁnition
2.6.
scheme
deﬁned
z≥0
deﬁne
x|λ|=w
lemma
2.7.
inverse
hasse-weil
zeta
function
generates
scheme
ﬁnite
type
xw=0
proof
xw=0
cid:19
ti·λi
yi=1
cid:18
µ∗n
cid:19
−ti
µ∗n
xw=0
x|λ|=w
xk=0
cid:18
µ∗n
yi=1
yi=1
exp
cid:18
yi=1
exp
xi=1
exp
xk=1
xi=1
exp
xi=1xd|i
exp
xi=1
−tik
log
cid:19
xk=1
tik
using
fact
1−qt
···
1−qnt
get
following
corollaries
1−t
1−qt
···
1−qnt
corollary
2.8.
corollary
2.9
plane
curves
xw=0
let
smooth
trigonal
curve
genus
ﬁve
given
dual
system
gives
following
proposition
3.1.
bijection
smooth
trigonal
curves
genus
ﬁve
projective
plane
quintics
precisely
one
singularity
delta-invariant
one
want
count
=xc/k
|autk
sum
representatives
k-isomorphism
classes
smooth
trigonal
curves
genus
ﬁve
proposition
equivalent
sum
representatives
k-isomorphism
classes
plane
quintics
precisely
one
singularity
delta-invariant
one
let
smooth
trigonal
curve
genus
ﬁve
unique
automorphism
group
abstract
curve
isomorphic
automorphism
group
plane
curve
plane
curve
automorphisms
elements
pgl3
automorphism
group
stabilizer
action
pgl3
get
|autk
xc/k
=xc/k
|stabk
=xc/k
|orbk
|pgl3
|pgl3
xc∈t
set
plane
quintics
exactly
one
singularity
delta-invariant
one
enables
simply
count
plane
curves
rather
plane
curves
k-isomorphism
deﬁnition
3.2.
let
plane
quintic
polynomial
equation
i=0
z5−i
let
lines
say
tangents
singularity
multiplicity
say
tangents
point
ex-
ists
linear
transformation
tangents
curves
separated
ordinary
cusp
ordinary
node
curves
ordinary
node
separated
tangents
de-
ﬁned
case
split
node
tangents
conjugate
2-tuple
non-split
node
count
three
types
curves
separately
let
curve
let
singular
point
since
singular
point
deﬁned
split
node
apply
k-linear
coordinate
change
gets
mapped
tangents
get
mapped
lines
count
number
curves
split
node
ﬁrst
counting
curves
singularity
tangents
dividing
suitable
subset
pgl3
develop
notation
notation
3.3.
write
ﬁxed
point
notation
3.4.
write
space
plane
k-quintics
p20
deﬁnition
3.5.
deﬁne
csplit
subset
consisting
curves
singularity
multiplicity
tangents
deﬁnition
3.6.
let
subset
let
partition
allow
inﬁnite
partition
1λ1
iλi
deﬁne
subset
consisting
curves
whose
singularities
form
precisely
λ-tuple
points
also
deﬁne
subset
consisting
curves
whose
singularities
besides
form
precisely
λ-tuple
points
remark
3.7.
note
deﬁned
diﬀerent
set
λ-tuples
points
p20
trust
diﬀerence
clear
context
notation
csplit
consists
curves
singular-
ities
besides
let
stabk
subgroup
pgl3
ﬁxes
ﬁxes
set
group
ﬁxes
csplit
get
split
node
|pgl3
|csplit
|stabk
corresponding
thing
non-split
nodes
cusps
deﬁnition
3.8.
let
ﬁxed
element
set
cnon-split
given
curves
singularity
multiplicity
tangents
deﬁnition
3.9.
set
ccusp
given
curves
sin-
gularity
multiplicity
double
tangent
nonzero
coeﬃcient
x3z2
|pgl3
|csplit
|stabk
|cnon-split
|stabk
|ccusp
|stabk
compute
sizes
three
stabilizer
groups
matrices
form


matrices
also
permute
adds
factor
two
|stabk
2q2
char
ﬁeld
quadratic
nonresidue
take
matrices
form


char

α·f
a+b
α+f
a+b
α+f

char
either
case
get
matrices
tangent
permutation
|stabk
matrices
form


since
permutation
tangents
get
|stabk
partial
sieve
method
want
compute
|csplit
|cnon-split
|ccusp
using
sieve
principle
section
focus
|csplit
two
cases
similar
take
|csplit|
sieve
adding
subtracting
various
loci
curves
singular
points
besides
deﬁnition
4.1.
let
subset
let
set
points
deﬁne
subset
consisting
curves
singularity
point
locus
singular
curves
csplit
union
csplit
conjugate
n-tuple
points
use
sieve
principle
compute
elements
union
sum
m+1|csplit
csplit
unordered
choices
distinct
every
conjugate
ni-tuple
points
since
csplit
∩csplit
csplit
s1∪s2
ﬁnd
subtract
sum
|csplit|
get
xs∈
p2−
|csplit
sum
terminate
curves
inﬁnitely
many
singularities
another
problem
computing
sum
|csplit
becomes
increasingly
hard
compute
number
points
grows
instead
apply
partial
sieve
principle
pick
number
sieve
|λ|
deﬁnition
4.2.
deﬁne
ssplit
x|λ|≤n
xs∈
p2−
|csplit
also
account
curves
singularities
besides
done
explicitly
counting
number
curves
precisely
λ-tuple
singlarities
besides
|λ|
curve
subtract
often
counted
computation
ssplit
deﬁnition
4.3.
deﬁne
xµ⊂λ
|µ|≤n
cid:19
yi=1
cid:18
means
|csplit
ssplit
x|λ|
|csplit
deﬁnition
4.4.
let
projective
plane
curve
deﬁne
number
isolated
singularities
delta-invariant
one
let
partition
since
stabk
group
ﬁxes
csplit
|csplit
|stabk
|pgl3
xc∈c
λ,11
means
get
ordinary
split
nodes
|pgl3
ssplit
|stabk
snon-split
|stabk
scusp
|stabk
|pgl3
x|λ|
xc∈c
λ,11
choice
made
considering
diﬃculty
computing
ssplit
versus
sum
|λ|
choose
ﬁve
sieving
part
section
compute
ssplit,5
snon-split,5
scusp,5
5.1
split
node
know
ssplit,5
compute
|csplit
|s|
space
csplit
a15
3·|s|
linear
conditions
diﬀerent
choices
need
prove
independence
subset
conditions
look
matrix
monomial
coeﬃcients
degree
ﬁve
columns
linear
conditions
rows
make
explicit
need
decide
three
conditions
point
condition
point
curve
pick
two
three
conditions
get
demanding
derivatives
respect
zero
point
constructed
matrix
take
subset
columns
get
square
matrix
determinant
nonzero
conditions
independent
also
want
conditions
independent
condition
must
split
node
tangents
means
choice
subset
columns
must
avoid
columns
corresponding
coeﬃcients
x2z3
xyz3
y2z3
xz4
yz4
λ-tuple
points
partition
frobenius
mor-
phism
maps
linear
conditions
expressed
using
coeﬃcients
k-dimension
csplit
vector
space
therefore
¯k-dimension
csplit
vector
space
dimension
csplit
change
apply
¯k-change
coordinates
ﬁxes
points
note
applying
transformation
conditions
x2z3
y2z3
xyz3
might
change
still
conditions
coeﬃcients
x2z3
xyz3
y2z3
example
5.1.
let
|s|
together
six
points
four
points
line
six
irreducible
conic
three
line
apply
¯k-linear
transformation
ﬁxes
maps
points
also
αβγ
αβδ
αγδ
βγδ
otherwise
would
six
points
conic
construct
matrix
described
take
derivatives
w.r.t
gives
matrix
leave
columns
corresponding
x2z3
xyz3
y2z3
xz4
yz4
get
square
matrix
determinant
αβγ
αβδ
αγδ
βγδ
conditions
independent
csplit
argument
also
ensures
independence
cases
|s|
together
four
points
line
three
line
example
5.2.
let
two
lines
let
|s|
intersection
point
lines
one
lines
three
points
line
last
point
b´ezout
quintic
singularities
points
two
lines
component
line
either
get
contradiction
tangent
conditions
csplit
without
loss
generality
take
line
denote
intersection
point
two
lines
csplit
isomorphic
space
cubics
pass
points
pass
tangent
use
¯k-linear
transformation
keeps
ﬁxed
maps
points
taking
columns
x2y
xy2
gives
determinant
conditions
independent
csplit
example
5.3.
let
least
four
points
line
passes
b´ezout
line
double
component
quintic
csplit
contradicts
fact
ordinary
node
csplit
list
possible
cases
every
case
describe
csplit
cases
csplit
left
whenever
three
points
including
line
leave
implicit
line
either
see
example
5.2
four
points
line
six
irreducible
conic
three
line
a15−3·|s|
two
points
line
points
outside
line
four
points
line
six
conic
a10−3n
two
points
line
three
points
another
line
none
points
intersection
two
lines
two
points
one
line
two
points
another
line
points
outside
lines
a5−3n
three
points
line
points
outside
line
three
another
line
a9−3n
three
points
one
line
two
points
another
line
four
points
line
points
outside
line
three
line
a5−3n
four
points
line
another
point
outside
line
three
line
five
points
line
outside
line
six
points
irreducible
conic
compute
number
possible
λ-tuples
points
belonging
case
example
5.4.
weight
ﬁve
look
many
choices
λ-tuples
points
points
line
point
outside
line
pick
line
pass
lines
take
λ-tuple
points
chosen
line
corollary
2.8
contribution
ssplit
given
x|λ|=5
xs∈p1
|csplit
|a4
x|λ|=5
|p1
|a4
list
cases
besides
ﬁrst
one
four
points
line
six
irreducible
conic
three
line
using
corollary
2.8
turns
cases
contribute
zero
means
need
know
every
partition
|λ|
number
λ-tuples
four
points
line
six
irreducible
conic
three
line
given
|p2
minus
number
choices
λ-tuples
points
corresponding
cases
however
numbers
become
zero
sum
factor
pretend
subtract
anything
xs∈
p2−
|a15−3·|s||
q15−3i
ssplit,5
|stabk
2q2
x|λ|≤5
xi=1
2q2
2q2
q11
q10
q15
q14
q13
q12
5.2
non-split
node
set
points
two
points
line
b´ezout
line
part
curve
cnon-split
one
tangent
lines
sets
points
consider
closed
frobenius
many
points
tangent
line
non-split
nodes
following
non-empty
cases
four
points
line
six
irreducible
conic
three
line
a15−3·|s|
two
points
one
line
two
points
another
line
points
outside
lines
a5−3n
four
points
line
points
outside
line
three
line
a5−3n
four
points
line
another
point
outside
line
three
line
five
points
line
outside
line
six
points
irreducible
conic
used
¯k-linear
transformations
computations
csplit
results
also
apply
cnon-split
cases
choosing
four
points
closed
frobenius
two
points
one
tangent
line
two
points
line
choosing
two
non-p
points
one
tangent
lines
taking
conjugates
work
use
fact
choosing
ﬁve
non-p
points
k2-conic
also
done
two
cases
become
zero
cases
exactly
split
nodes
means
get
result
snon-split,5
|stabk
q15
q14
q13
q12
q11
q10
5.3
cusp
ccusp
easily
reuse
previous
computations
since
added
condition
coeﬃcient
x3z2
nonzero
means
need
keep
line
ﬁxed
linear
transformation
set
points
two
points
line
b´ezout
line
part
curve
ccusp
curve
cusp
ordinary
ccusp
empty
similarly
ccusp
empty
set
points
ﬁve
points
conic
tangent
following
non-empty
cases
four
points
line
six
irreducible
conic
ﬁve
conic
tangent
three
line
a15−3·|s|
a14−3·|s|
four
points
line
points
outside
line
three
line
a5−3n
a4−3n
five
points
line
outside
line
example
5.5.
let
four
points
line
six
irreducible
conic
ﬁve
conic
tangent
three
line
|s|
use
¯k-linear
transformation
ﬁxes
maps
points
αβγ−αγδ−αβ+γδ+α−γ
taking
derivatives
w.r.t
taking
columns
y3z2
xy3z
x2y2z
x3yz
x4z
x2y3
x3y2
x4y
xy4
y4z
gives
determinant
αβγ
αγδ
|s|
want
use
arguments
example
5.1.
consider
coeﬃcient
x3z2
might
counting
non-ordinary
cusps
show
actually
non-ordinary
cusps
curves
double
tangent
singularities
points
non-ordinary
cusp
lies
irreducible
quartic
quintic
component
intersection
two
irreducible
components
lies
irreducible
quartic
six
singularities
total
implies
four
line
six
singularities
irreducible
quintic
need
delta-invariant
finally
lies
intersection
two
irreducible
components
one
components
line
conic
two
points
line
ﬁve
points
conic
tangent
nodes
cases
besides
ﬁrst
one
listed
become
zero
scusp,5
|stabk
q15−3i
q14−3i
xi=1
q15
2q14
2q12
q11
q10
explicit
part
section
compute
|pgl3
x|λ|
xc∈c
λ,11
deﬁnition
6.1.
deﬁne
type
projective
plane
quintic
given
following
information
degree
multiplicity
irreducible
components
ﬁelds
irreducible
components
deﬁned
number
points
every
pair
irreducible
components
intersects
number
singularities
irreducible
component
delta-invariants
singularities
irreducible
components
ﬁelds
singularities
irreducible
component
deﬁned
remark
6.2.
deﬁnition
naturally
rather
analogous
deﬁnition
7.2
knowing
type
curve
know
ﬁelds
singularities
deﬁned
delta-invariants
singularities
count
many
curves
type
gives
enough
information
compute
suﬃcient
compute
number
curves
types
singularities
form
-tuple
|λ|
least
one
isolated
singularity
delta-invariant
one
ﬁrst
separate
types
degree
multiplicity
irre-
ducible
components
section
6.1
considers
types
least
one
component
higher
multiplicity
sections
6.2
6.7
components
multiplicity
one
results
listed
tables
rows
correspond
various
types
column
marked
contains
number
isolated
singulari-
ties
delta-invariant
one
column
marked
contains
number
curves
type
divided
|pgl3
note
tables
contain
types
singularities
delta-invariant
one
remark
6.3.
necessary
purpose
general
might
interesting
separately
count
split
nodes
non-split
nodes
cusps
main
reason
types
curves
count
hard
determine
whether
singularity
irreducible
component
split
node
non-split
node
cusp
6.1
component
higher
multiplicity
let
inﬁnite
partition
curve
need
isolated
singularity
delta-invariant
one
double
component
one
double
triple
line
let
partition
singularities
double
line
form
η-tuple
points
let
inﬁnite
partition
number
conjugate
i-tuples
cid:19
yi=1
cid:18
|µ|≤5
xµ⊂λ
xν⊂η
xν⊂η
|ν|≤5
|ν|≤5
xµ⊂ρ
|µ|≤5−|ν|
cid:19
cid:18
cid:19
µi+νi
yi=1
cid:18
cid:19
x|µ|≤5−|ν|
yi=1
cid:18
µi|p1
since
|ν|
|η|
use
corollaries
2.8
2.9
get
µi|p1
x|µ|≤5−|ν|
5−|ν|
xi=0
xi=0
types
curves
multiple
component
contribute
zero
6.2
five
lines
ﬁve
lines
general
position
intersect
ten
points
three
lines
one
point
get
eight
points
type
curve
consisting
ﬁve
distinct
lines
fever
seven
intersection
points
6.2.1
general
position
example
6.4.
count
number
curves
type
lines
deﬁned
first
take
two
k-points
points
pair
k-lines
none
lines
passes
points
done
cid:0
q2+q+1
cid:1
ways
four
lines
six
cid:1
cid:0
intersection
points
take
ﬁfth
line
line
points
lines
end
ﬁve
lines
start
another
choice
two
intersection
points
none
ﬁve
lines
passes
points
choices
get
|pgl3
cid:18
cid:19
cid:19
cid:18
120
whenever
ﬁnite
partition
use
|µ|≤n
|µ|
xµ⊂λ
xµ⊂λ
xµ⊂λ
xµ⊂λ
|µ|
|λ|−n
yi=1
cid:18
cid:19
cid:19
yi=1
cid:18
cid:19
yi=1
cid:18
yi=1
cid:18
cid:19
λi−µi
|µ|
|λ|−n
get
cid:18
cid:19
cid:18
cid:19
cid:18
cid:19
56.
lines
points
110
120
6.2.2
three
lines
intersect
one
point
lines
points
k2-lines
6.3
one
conic
three
lines
one
two
lines
tangent
conic
two
lines
intersect
conic
three
lines
one
point
need
consider
separate
cases
combining
result
fever
seven
singularities
say
components
general
position
none
cases
applies
6.3.1
two
lines
tangent
conic
example
6.5.
count
number
curves
type
compo-
nents
singularities
deﬁned
plane
conics
form
every
reducible
k-conic
either
pair
diﬀerent
k-lines
conjugate
pair
lines
double
k-line
number
irreducible
plane
conics
given
cid:18
cid:19
pick
two
k-points
conic
take
tangent
lines
points
meet
point
choose
two
k-points
conic
take
line
need
subtract
case
three
lines
char
lines
lines
tangent
conic
k-points
conic
determine
line
line
gets
determined
twice
way
get
|pgl3
cid:18
cid:19
cid:18
cid:18
cid:19
cid:19
char
lines
tangent
conic
get
|pgl3
cid:18
cid:19
cid:18
cid:19
lines
pts
char
char
6.3.2
one
lines
tangent
conic
lines
pts
char
char
6.3.3
two
lines
intersect
conic
lines
pts
6.3.4
three
lines
one
point
example
6.6.
count
number
curves
type
compo-
nents
singularities
deﬁned
ﬁrst
consider
case
char
choose
irreducible
conic
two
k-points
conic
take
tangent
lines
conic
two
points
denote
inter-
section
q−1
lines
intersect
conic
two
k-points
also
choose
irreducible
conic
conjugate
pair
points
conic
let
intersection
corresponding
tangent
lines
q+1
lines
intersect
conic
two
k-points
putting
cases
together
get
|pgl3
q2+q+1
q−1
cid:18
cid:19
cid:18
q−1
cid:19
cid:18
q+1
cid:19
q−3
char
one
k-point
outside
conic
inter-
section
tangent
lines
conic
k-point
outside
conic
lines
intersect
conic
two
k-points
|pgl3
cid:18
cid:19
lines
pts
char
char
6.3.5
general
position
example
6.7.
count
number
curves
type
com-
ponents
singularities
deﬁned
char
choose
irreducible
k-conic
six
k-points
conic
ways
choose
three
lines
connecting
six
points
lines
intersect
one
point
subtract
results
example
6.6
get
|pgl3
q2+q+1
q−1
cid:18
cid:19
·15−
q−3
q2−7q+11
q−3
lines
pts
char
char
2q2
6.4
two
conics
one
line
conics
intersect
three
four
points
intersect
four
points
line
intersect
conics
three
four
points
type
result
fever
seven
singularities
say
components
general
position
conics
intersect
four
points
line
intersects
conics
four
points
tables
ﬁrst
column
denote
ﬁelds
inter-
section
points
conics
deﬁned
6.4.1
general
position
conics
deﬁned
example
6.8.
count
number
curves
type
singu-
larities
deﬁned
char
ways
pick
four
k-points
three
line
write
pencil
conics
six
lines
lines
intersect
seven
k-points
let
denote
three
intersection
points
cid:1
q4−2q3+q2
cid:0
q2+q+1
let
line
none
degree
two
map
sends
point
conic
hurwitz
theorem
two
branch
points
call
two
conics
tangent
conics
k-lines
two
let
line
tangent
conics
reducible
one
intersects
one
k-points
q−1
conics
intersect
two
k-points
one
conics
reducible
q−3
irreducible
conics
k-lines
precisely
one
let
line
one
tangent
lines
intersects
point
tangent
conic
also
deﬁned
q−5
irreducible
conics
intersect
two
k-points
well
deﬁned
problem
since
case
occurs
times
idea
applies
next
two
cases
irreducible
conics
k-points
besides
means
k-lines
two
irreducible
tangent
conics
every
line
q−7
irreducible
conics
intersect
two
k-points
k-lines
k-lines
conjugate
pair
irreducible
tangent
conics
every
line
q−5
irreducible
conics
intersect
two
k-points
putting
everything
together
gives
|pgl3
cid:18
cid:19
cid:19
2q3
cid:18
q−3
cid:19
q−1
q−3
cid:18
q−5
192
q−3
q−5
cid:18
q−7
cid:19
cid:18
q−5
cid:19
q2−9q+17
q−3
q−5
example
6.9.
count
number
curves
type
sin-
gularities
deﬁned
char
let
choose
deﬁne
example
6.8.
one
line
intersects
every
conic
one
point
line
precisely
one
conic
intersects
one
point
k-lines
one
irreducible
conics
line
q−4
intersect
two
k-points
q−2
q−4
k-lines
irreducible
conics
intersect
line
q−6
two
k-points
putting
two
cases
together
get
|pgl3
cid:18
cid:19
q4−2q3+q2
q−2
cid:18
q−4
cid:19
cid:19
q−2
q−4
cid:18
q−6
192
con
pts
pts
char
char
192
192
2q2
2q2
192
192
6.4.2
general
position
conics
form
conjugate
pair
con
pts
pts
char
char
4q2
6.4.3
line
tangent
one
conics
con
pts
pts
char
char
6.4.4
two
k-conics
intersect
three
points
con
pts
pts
char
char
6.4.5
conjugate
pair
conics
intersects
three
point
pts
char
char
6.5
cubic
two
lines
cubic
smooth
singular
cubic
singular
one
lines
tangent
cubic
type
fever
seven
singularities
6.5.1
singular
cubic
lines
tangent
lines
deﬁned
always
zero
need
consider
types
lines
deﬁned
example
6.10.
count
number
curves
type
sin-
gularities
deﬁned
take
two
k-lines
k-point
outside
lines
choose
three
k-points
line
two
six
points
line
none
points
intersection
two
lines
precisely
one
irreducible
cubic
six
points
singularity
delta-invariant
one
get
|pgl3
cid:18
cid:19
cid:18
cid:19
cid:18
cid:19
points
6.5.2
smooth
cubic
example
6.11.
count
number
curves
type
components
singularities
deﬁned
take
two
k-lines
three
k-points
line
intersection
point
cubics
six
points
subtract
reducible
cubics
six
points
get
reducible
cubic
taking
k-line
together
lines
take
line
though
two
points
irreducible
conic
four
points
finally
take
three
lines
connecting
six
points
none
lines
also
subtract
singular
irreducible
cubics
counted
example
6.10.
gives
|pgl3
cid:18
cid:19
cid:19
cid:18
cid:0
|p3|
|p2|
cid:1
3q3
3q2
17q
lines
points
3q3
3q2
17q
6.5.3
singular
cubic
one
line
tangent
points
6.6
cubic
conic
get
seven
singularities
cubic
must
singular
intersect
conic
six
points
example
6.12.
count
number
curves
type
singularities
deﬁned
char
choose
irreducible
conic
two
k-points
conic
take
tangents
conic
denote
intersection
want
pick
six
points
conic
two
line
three
ways
take
four
points
either
ﬁve
points
six
points
exactly
one
irreducible
cubic
six
points
singularity
also
choose
irreducible
conic
conjugate
pair
points
conic
take
intersection
point
corresponding
tangent
lines
choose
six
k-points
conic
two
line
combining
cases
gives
|pgl3
cid:18
cid:19
cid:18
cid:19
q+1
q−1
q−3
q−5
q−7
q−9
720
q2−9q+15
q−3
q−5
q−7
pts
char
char
720
6q2
10q
720
6.7
quartic
line
get
seven
singularities
quartic
must
three
singularities
intersect
line
four
points
quart
sing
points
144
results
add
results
together
characteristics
ﬁeld
get
sum
rows
tables
section
remark
7.1.
compute
sum
rows
one
tables
tables
get
result
characteristics
exceptions
tables
sections
6.3.1
6.3.2.
combining
results
sieving
part
explicit
part
get
|pgl3
q11
q10
q11
q10
q10
proves
theorem
theorem
7.2.
number
smooth
trigonal
curves
genus
ﬁve
ﬁnite
ﬁeld
given
q11
q10
written
computer
programs
loop
plane
quintics
ordinary
split
node/non-split
node/cusp
ﬁxed
tangents
curve
test
points
besides
whether
singular
way
count
|csplit
|cnon-split
|ccusp
partitions
results
easily
compute
extra
check
programs
use
information
count
subresults
x|λ|=w
|csplit
xs∈
p2−
x|λ|=w
|csplit
results
computer
counts
agree
results
article
programs
written
programming
language
source
code
available
online
together
lists
results
subresults
address
https
//github.com/wennink/countingtrigonalcurves
references
van
den
bogaart
edixhoven
algebraic
stacks
whose
number
points
ﬁnite
ﬁelds
polynomial
number
fields
func-
tion
fields
two
parallel
worlds
progress
mathematics
vol
239
birkh¨auser
boston
boston
2005
ga¨etan
chenevier
jean
lannes
formes
automorphes
voisins
kneser
des
r´eseaux
niemeier
http
//arxiv.org/abs/1409.7616
2014
bergstr¨om
cohomology
moduli
spaces
curves
genus
three
via
point
counts
reine
angew
math.
622:155187
2008
