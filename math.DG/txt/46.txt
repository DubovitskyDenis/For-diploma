lie
2-algebras
vector
fields
daniel
berwick-evans
eugene
lerman
abstract
show
category
vector
ﬁelds
geometric
stack
structure
lie
2-algebra
proves
conjecture
hepworth
construction
uses
lie
groupoid
presents
geometric
stack
show
category
vector
ﬁelds
lie
groupoid
equivalent
category
vector
ﬁelds
stack
category
vector
ﬁelds
lie
groupoid
lie
2-algebra
structure
built
known
ordinary
lie
brackets
multiplicative
vector
ﬁelds
mackenzie
global
sections
lie
algebroid
lie
groupoid
giving
precise
formulation
morita
invariance
construction
verify
lie
2-algebra
structure
deﬁned
way
well-deﬁned
underlying
stack
contents
introduction
background
notation
lie
2-algebra
vector
ﬁelds
lie
groupoid
morita
invariance
lie
2-algebra
vector
ﬁelds
categories
vector
ﬁelds
stacks
lie
2-algebras
lie
2-algebras
vector
ﬁelds
stacks
underlying
categories
generalized
vector
ﬁelds
lie
groupoid
versus
multiplicative
vector
ﬁelds
appendix
bicategories
functors
natural
transformations
references
introduction
vector
ﬁelds
lie
groupoid
form
category
denote
objects
multiplicative
vector
ﬁelds
mackenzie
functors
satisfying
idg
denotes
tangent
groupoid
projection
functor
mor-
phism
category
natural
transformation
idx
every
object
groupoid
ﬁrst
result
paper
theorem
3.4.
category
vector
ﬁelds
lie
groupoid
strict
lie
2-algebra
category
internal
category
lie
algebras
remark
1.1.
manifold
regarded
discrete
lie
groupoid
usual
lie
algebra
vector
ﬁelds
regarded
discrete
lie
2-algebra
every
lie
groupoid
corresponds
stack
principal
g-bundles
morita
equivalent
lie
groupoids
correspond
isomorphic
stacks
natural
wonder
lie
2-algebra
lives
stack
appropriate
sense
start
ask
whether
morita
equivalent
lie
groupoids
morita
equivalent
lie
2-algebras
precisely
could
ask
existence
functor
bicategory
lie
groupoids
bibundles
isomorphisms
bibundles
appropriate
bicategory
lie
2-algebras
sends
morita
equivalences
morita
equivalences
turns
functor
much
ask
functor
sub-bicategory
reasons
behind
fact
already
seen
case
manifolds
recall
naturally
deﬁned
functor
category
manifolds
category
lie
algebras
assigns
manifold
lie
algebra
vector
ﬁelds
however
restrict
category
maniso
whose
objects
manifolds
whose
morphisms
diﬀeomorphisms
perfectly
well
deﬁned
functor
desired
properties
getting
back
lie
groupoids
recall
localization
strict
2-category
lie
groupoids
internal
functors
internal
natural
transformations
essential
equivalences
lie
2-algebras
internal
functors
internal
natural
transformations
form
strict
2-category
lie2algstrict
localizing
essential
equivalences
produces
bicategory
lie2alg
see
subsections
2.b
2.c
let
biiso
sub-bicategory
whose
objects
lie
groupoids
1-morphisms
weakly
invertible
bibundles
i.e.
morita
equivalences
2-morphisms
isomorphisms
bibundles
theorem
4.1.
map
assigns
lie
groupoid
category
vector
ﬁelds
extends
functor
biiso
lie2alg
particular
morita
equivalence
lie
groupoids
weakly
invertible
1-morphism
lie
2-algebras
bicategory
lie2alg
remark
1.2.
lie
groupoid
literature
two
standard
constructions
associate
lie
algebra
lie
groupoid
global
sections
lie
algebroid
mackenzie
multiplicative
vector
ﬁelds
lie
2-algebra
structure
built
pair
lie
algebras
ﬁrst
pass
might
seem
surprising
neither
multiplicative
vector
ﬁelds
sections
lie
algebroids
well-behaved
morita
equivalence
lie
groupoids
theorem
4.1
shows
combining
pair
lie
algebras
lie
algebra
gives
object
preserved
morita
equivalence
existence
functor
theorem
4.1
imply
lie
2-algebra
lives
stack
answer
need
recall
relationship
bicategory
2-category
stack
stacks
site
smooth
manifolds
assignment
extends
fully
faithful
functor
stack
essential
image
functor
2-category
geomstack
geometric
stacks
restricting
func-
tor
bicategory
biiso
groupoids
morita
equivalences
gives
equivalence
bicategories
biiso
geomstackiso
geomstackiso
2-category
geometric
stacks
isomorphisms
stacks
weakly
invert-
ible
1-morphisms
stacks
2-morphisms
inverting
equivalence
composing
functor
get
functor
geomstackiso
b−1
−−−→
biiso
lie2alg
1.1
particular
get
functorial
assignment
lie
2-algebra
every
geometric
stack
isomorphic
stacks
assigned
isomorphic
lie
2-algebras
hepworth
introduced
category
vector
ﬁelds
vect
stack
introduce
category
vect′
equivalent
vect
convenient
purposes
particular
assignment
easily
extends
functor
vect′
vect′
geomstackiso
cat
cat
2-category
categories
show
functor
vect′
compatible
functors
biiso
geomstackiso
biiso
lie2alg
following
sense
theorem
6.1.
diagram
bicategories
functors
geomstackiso
biiso
vect′
c⑧⑧⑧
⑧⑧⑧
cat
lie2alg
2-commutes
lie2alg
cat
denotes
functor
assigns
lie
2-algebra
underlying
category
particular
geometric
stack
category
underlying
lie
2-algebra
b−1
equivalent
hepworth
category
vect
vector
ﬁelds
stack
related
work
recent
work
cristian
ortiz
james
waldron
lies
similar
circle
ideas
recall
la-groupoid
groupoid
object
lie
algebroids
given
la-groupoid
ortiz
waldron
introduce
category
multiplicative
sections
show
carries
natural
strict
lie
2-algebra
structure
language
crossed
modules
lie
algebras
aﬀords
equivalent
description
category
strict
lie
2-algebras
show
two
la-groupoids
morita
equivalent
corresponding
crossed
modules
lie
algebras
connected
zig-zag
equivalences
furthermore
every
stack
ortiz
waldron
assign
ordinary
lie
algebra
show
case
proper
geometric
stacks
set
underlying
lie
algebra
bijective
correspondence
isomorphism
classes
vector
ﬁelds
hepworth
deﬁnition
outline
paper
section
review
background
material
used
paper
partic-
ular
recall
strict
2-category
liegpd
lie
groupoids
smooth
functors
natural
transformations
brieﬂy
discuss
bicategory
lie
groupoids
bibundles
isomorphisms
bibundles
functor
liegpd
localizes
strict
2-category
liegpd
class
essential
equiva-
lences
discuss
localizations
bicategories
general
recall
criterion
due
pronk
functor
bicategories
localization
review
2-vector
spaces
strict
lie
2-algebras
crossed
modules
lie
2-algebras
localize
strict
2-category
lie2algstrict
lie
2-algebras
internal
functors
natural
transformations
essential
equivalences
obtain
bicategory
lie2alg
correspondence
lie
2-algebras
crossed
modules
lie2alg
corresponds
noohi
bicategory
crossed-modules
butterﬂies
ﬁnish
section
discussing
extension
tangent
functor
category
manifolds
tangent
functors
2-category
liegpd
bicategory
respectively
section
prove
theorem
3.4
category
multiplicative
vector
ﬁelds
lie
groupoid
under-
lies
strict
lie
2-algebra
section
prove
assignment
category
vector
ﬁelds
lie
groupoid
extends
functor
biiso
lie2alg
bicategory
biiso
lie
groupoids
invertible
bibundles
isomorphisms
bibundles
bicategory
lie2alg
lie
2-algebras
hence
particular
morita
equivalence
lie
groupoids
weakly
invertible
1-morphism
lie
2-algebras
bicategory
lie2alg
along
way
introduce
category
xgen
generalized
vector
ﬁelds
lie
groupoid
objects
xgen
pairs
bibundle
hπgi
hidgi
isomorphism
bibundles
hπgi
bibundle
corresponding
projection
functor
hidgi
identity
bibundle
lie
groupoid
section
discuss
hepworth
category
vector
ﬁelds
vect
stack
construct
equivalent
category
vect′
section
promote
assignment
vect′
category
vec-
tor
ﬁelds
geometric
stack
functor
vect′
geomstackiso
cat
2-category
geometric
stacks
isomorphisms
category
cat
small
categories
prove
theorem
6.1.
section
prove
theorem
4.11
lie
groupoid
inclusion
functor
xgen
hvi
αhvi
hπgi
hvi
hidgi
category
multiplicative
vector
ﬁelds
category
generalized
vector
ﬁelds
fully
faithful
essentially
surjective
generalizes
result
hepworth
proper
lie
groupoids
result
technical
important
purposes
paper
acknowledgments
thank
henrique
bursztyn
many
helpful
discussions
particular
paper
partially
originated
conversations
one
e.l.
henrique
poisson
2014.
thank
james
waldron
making
exercise
care
equivalences
lie
2-algebras
thank
anonymous
referees
helpful
comments
background
notation
assume
reader
familiar
ordinary
categories
strict
2-categories
bicategories
also
known
weak
2-categories
work
exclusively
2,1
-bicategories
bicategories
whose
2-morphisms
invertible
standard
references
bicategories
reader
con-
venience
deﬁnitions
bicategory
pseudo-
functors
natural
transformations
summarized
appendix
assume
familiarity
lie
groupoids
standard
references
also
assume
reader
comfortable
stacks
site
manifolds
said
sections
use
stacks
accessible
readers
comfortable
lie
groupoids
bibundles
textbook
covering
stacks
manifolds
number
references
exist
list
exhaustive
given
category
denote
collection
objects
collection
arrows/morphisms
c1.1
usually
denote
source
target
maps
respectively
write
suppress
structure
maps
category
denote
unit
map
thus
map
assigns
identity
arrow
object
category
composition/multiplication
category
deﬁned
collection
pairs
composible
arrows
convention
denote
composition
category
γ2γ1
particular
write
composition
right
left
γ2γ1
means
followed
category
groupoid
denote
inversion
map
γ−1
2.a
bicategories
lie
groupoids
two
natural
bicategories
whose
objects
lie
groupoids
strict
2-category
liegpd
lie
groupoids
smooth
functors
smooth
natural
transforma-
tions
bicategory
lie
groupoids
bibundles
isomorphisms
bibundles
write
1-arrow
category
recall
manifold
left
right
anchor
maps
|①①①①①①①①①①
❋❋❋❋❋❋❋❋❋❋
together
commuting
left
right
actions
×g0
×h0
respectively
require
right
h-action
principal
1we
use
words
arrow
morphism
interchangeably
composition
bibundles
bibundle
deﬁned
quotient
ﬁber
product
×h0
2.1
notation
2.1.
bicategories
liegpd
write
horizontal
composition
2-arrows
given
1-morphism
2-morphism
abuse
notation
writing
horizontal
composition
whiskering
identity
2-arrow
1-morphism
vertical
composition
morphisms
denoted
convenient
also
use
arrow
notation
denote
morphisms
groupoids
speciﬁed
source
target
e.g.
morphism
target
source
remark
2.2.
functor
example
see
liegpd
identity
objects
1-morphisms
sends
functor
bibundle
whose
left
right
anchor
maps
given
respectively
2.2
2.3
source
map
left
action
groupoid
manifold
given
right
action
groupoid
given
note
canonical
section
given
pair
functors
natural
isomorphism
get
isomorphism
bibundles
isomorphism
hαi
deﬁned
hαi
hki
hαi
←−−−−
hard
check
map
hαi
deﬁned
smooth
commutes
left
right
anchor
maps
equivariant
respect
actions
functor
takes
vertical
horizontal
composition
natural
transformations
composition
isomorphisms
bibundles
horizontal
composition
isomorphisms
respectively
remark
2.3.
construction
functor
total
space
bibundle
hidgi
corresponding
identity
functor
idg
lie
groupoid
ﬁber
product
×g0
ﬁber
product
diﬀeomorphic
therefore
deﬁne
manifold
together
actions
left
right
multiplication
identity
bibundle
lie
groupoid
functor
far
equivalence
2-categories
issue
almost
groupoids
functor
fails
essentially
surjective
failure
essential
surjectivity
follows
well-known
fact
homliegpd
hombi
2.4
lemma
2.4.
bibundle
isomorphic
bibundle
functor
left
anchor
section
proof
functor
left
anchor
map
×h0
canonical
global
section
conversely
suppose
global
section
deﬁne
corresponding
functor
objects
since
principal
h-bundle
arrow
depends
smoothly
unique
arrow
set
easy
check
indeed
morphism
lie
groupoids
cid:3
contrast
failure
surjective
1-morphisms
2-morphisms
following
result
holds
result
must
known
aware
reference
theorem
2.5
folklore
pair
functors
lie
groupoids
map
homliegpd
hombi
hki
hαi
bijection
sketch
proof
let
hki
isomorphism
bibundles
left
anchor
natural
section
deﬁned
←−−−
similarly
natural
section
hki
left
anchor
principal
bundle
unique
arrow
hki
hki
since
hki
hki
equivariance
map
natural
isomorphism
cid:3
2.b
localizations
bicategories
suppose
given
bicategory
class
1-morphisms
localization
class
exists
bicategory
equipped
functor
satisfying
following
universal
property
bicategory
precomposition
induces
equivalence
bicategories
hom
−◦u
−−−→
homw
homw
denotes
bicategory
functors
sending
elements
weakly
invertible
morphisms
particular
given
functor
mapping
elements
invertible
morphisms
exists
functor
natural
isomorphism
localization
deﬁned
equivalence
bicategories
convenient
refer
functor
bicategories
localization
class
universal
property
namely
ask
bicategory
precomposition
induces
equivalence
bicategories
pronk
gives
criterion
functor
localization
class
hom
−◦f
−−−→
homw
proposition
2.6
proposition
functor
bicategories
localization
class
sends
elements
weakly
invertible
1-morphisms
essentially
surjective
objects
every
1-morphism
1-morphisms
2-morphism
fully
faithful
2-morphisms
example
2.7.
functor
liegpd
localization
2-categories
lie
groupoids
functors
natural
transformations
class
essential
equivalences
indeed
functor
surjective
objects
sends
essential
equivalences
invertible
bibundles
finally
bibundle
choice
local
sections
left
anchor
leads
factorization
hgi
hwi−1
functor
essential
equivalence
localizations
bicategories
come
several
times
paper
next
subsection
discuss
localization
strict
category
lie2algstrict
lie
2-algebras
essential
equivalences
section
need
fact
bicategory
biiso
lie
groupoids
weakly
invertible
bibundles
isomorphisms
bibundles
localization
certain
2-category
embeddings
lie
groupoids
2.c
2-vector
spaces
lie
2-algebras
deﬁnition
2.8.
2-vector
space
sense
baez
crans
category
internal
category
vector
spaces
hence
vector
space
objects
vector
space
morphisms
structure
maps
source
target
unit
composition
linear
2-vector
spaces
paper
deﬁned
2-category
2vect
whose
objects
2-vector
spaces
1-morphisms
linear
functors
2-morphism
linear
natural
transformations
forgetful
functor
2vect
cat
2.5
2-category
2-vector
spaces
2-category
cat
categories
forgets
linear
structure
remark
2.9.
equivalence
categories
2-vector
spaces
2-term
chain
complexes
vector
spaces
see
example
similar
result
characterizing
picard
categories
obtained
much
earlier
deligne
remind
reader
equivalence
deﬁned
objects
given
2-term
complex
action
abelian
group
given
2.6
corresponding
action
groupoid
2-vector
space
converse
true
well
2-vector
space
isomorphic
action
groupoid
deﬁned
2-term
complex
t|ker
ker
source
target
map
category
see
proof
next
recall
deﬁnition
strict
lie
2-algebra
deﬁnition
2.10.
strict
lie
2-algebra
category
internal
category
lie
algebras
reals
space
objects
morphisms
lie
2-algebra
ordinary
lie
algebras
structure
maps
maps
lie
algebras
notation
2.11.
categories
internal
lie
algebras
internal
functors
internal
natural
transformations
form
strict
2-category
denote
lie2algstrict
deﬁnition
2.12
see
example
deﬁnition
crossed
module
lie
algebras
consists
lie
algebra
homomorphism
together
lie
algebra
homomorphism
der
lie
algebra
der
derivations
crossed
module
lie
algebras
determines
lie
2-algebra
see
example
proof
theorem
converse
true
well
lie
2-algebra
canonically
deﬁnes
crossed
module
lie
2-algebras
fact
true
crossed
modules
form
strict
2-category
2-categories
lie
2-algebras
crossed
modules
equivalent
see
theorem
cited
need
full
strength
theorem
present
paper
however
need
following
result
lemma
2.13.
let
2-vector
space
suppose
corresponding
2-term
complex
t|ker
ker
part
data
lie
algebra
crossed
module
suppose
ker
lie
algebras
lie
algebra
map
action
der
ker
ker
derivations
making
ker
der
ker
crossed
module
lie
algebras
lie
2-algebra
sketch
proof
since
idv0
ker
deﬁne
bracket
ker
2.7
ker
deﬁne
lie
algebra
semi-direct
product
ker
checking
source
target
unit
maps
lie
algebra
maps
easy
check
composition
×v0
category
lie
algebra
map
observe
given
2.8
ker
∂x2
fact
completely
obvious
lies
heart
correspondence
2-vector
spaces
2-term
chain
complexes
see
remark
2.9
computation
shows
map
lie
algebra
map
cid:3
problem
2-category
lie2algstrict
lie
2-algebras
namely
suppose
morphism
lie
2-algebras
fully
faithful
essentially
surjective
essential
equivalence
weak
inverse
functor
reason
inverse
morphism
lie
algebras
fact
easy
come
examples
morphism
lie
2-algebras
exist
one
dimensional
heisenberg
lie
algebra
central
extension
dimensional
abelian
lie
algebra
reals
consequently
map
2-term
complexes
lie
algebras
map
lie
algebra
sections
fact
map
crossed
modules
lie
algebras
morphism
crossed
modules
corresponds
essential
equivalence
lie
2-algebras
inverse
map
lie2algstrict
fortunately
problem
universal
solution
localize
2-category
lie2algstrict
class
essential
equivalences
obtain
bicategory
lie2alg
see
subsection
2.b
localization
simple
explicit
description
deﬁne
morphism
lie
2-algebras
bibundle
internal
category
lie
algebras.
deﬁnition
makes
sense
since
ﬁber
products
exist
category
lie
algebras
details
deﬁnition
2.14.
left-principal
bibundle
lie
2-algebra
lie
2-algebra
lie
algebra
left
right
anchor
maps
maps
lie
algebras
|①①①①①①①①①①①
❋❋❋❋❋❋❋❋❋❋❋
along
left
action
groupoid
right
action
groupoid
×ar
require
actions
maps
lie
algebras
commute
satisfy
associative
unital
conditions
finally
require
map
×ar
×al
isomorphism
lie
algebras
i.e.
action
principal
remark
2.15.
composition
bibundles
lie
2-algebras
deﬁned
way
case
bibundles
lie
groupoids
omit
proof
lie
2-algebras
bibundles
lie
algebras
isomorphisms
bibundles
form
bicategory
denote
bicategory
lie2alg
note
biprincipal
bibundles
weakly
invertible
bicategory
case
lie
groupoids
functor
lie2algstrict
lie2alg
sends
strict
map
lie
2-algebras
bibundle
whose
left
right
anchor
maps
given
respectively
left
action
right
action
order
check
functor
lie2algstrict
lie2alg
localization
2-category
lie2algstrict
class
essential
equivalences
need
lemma
2.16.
suppose
strict
map
lie
2-algebras
whose
underlying
functor
fully
faithful
essentially
surjective
bibundle
lie
2-algebras
weakly
invertible
proof
enough
show
g-principal
enough
show
surjective
map
×ar
×al
isomorphism
lie
algebras
since
surjectivity
equivalent
essential
surjectivity
functor
fullness
translates
onto
faithfulness
translates
1-1
cid:3
apply
proposition
2.6
conclude
lie2algstrict
lie2alg
localization
lie2algstrict
class
essential
equivalences
see
also
theorem
4.4
similar
argument
remark
2.17.
reader
familiar
noohi
butterﬂies
see
reference
therein
much
trouble
showing
bicategory
lie2alg
lie
2-algebras
deﬁned
equivalent
bicategory
crossed
modules
lie
algebras
butterﬂies
isomorphisms
butterﬂies
alternatively
equivalence
seen
equivalence
localizations
equivalent
2-categories
indeed
recalled
strict
2-category
lie
2-algebras
equivalent
2-category
crossed
modules
lie
algebras
noohi
butterﬂies
localize
crossed
modules
class
1-morphisms
correspond
precisely
class
essential
equivalences
lie
2-algebras
2.d
tangent
groupoid
lie
groupoid
map
assigns
manifold
tangent
bundle
smooth
map
manifolds
diﬀerential
functor
man
man
category
man
manifolds
fact
preserves
composition
maps
chain
rule
moreover
map
manifolds
diagram
commutes
hence
natural
transformation
idman
category
man
manifolds
embeds
bicategory
lie
groupoids
bibundles
isomor-
phisms
bibundles
objects
embedding
given
sending
manifold
groupoid
argue
functor
man
man
extends
functor
indeed
application
functor
lie
groupoid
gives
tangent
groupoid
functor
similarly
given
bibundle
application
functor
gives
bibundle
map
bibundles
diﬀerential
also
map
bibundles
functoriality
pair
composible
bibundles
tangent
bundle
q◦p
isomorphic
composition
q◦t
follows
diﬀeomorphism
×ar
true
transverse
ﬁber
product
fact
groupoid
h-principal
bundle
r/t
finally
hidgi
hidt
lie
groupoid
conclude
tangent
functor
man
man
extends
functor
bibundle
diagram
hπgi
hπh
2-commutes
hence
collection
functors
g∈bi
gives
rise
natural
transformation
idbi
note
closing
tangent
functor
man
man
natural
transformation
idman
also
extend
pair
liegpd
liegpd
liegpd
liegpd
idliegpd
consisting
functor
natural
transformation
2-category
liegpd
lie
groupoids
smooth
functors
natural
transforma-
tions
moreover
construction
tangent
functors
functor
liegpd
diagram
liegpd
liegpd
liegpd
2-commutes
lie
2-algebra
vector
fields
lie
groupoid
section
prove
theorem
3.4
category
multiplicative
vector
ﬁelds
lie
groupoid
underlies
strict
lie
2-algebra
start
recalling
deﬁnition
category
multiplicative
vector
ﬁelds
saw
subsection
2.d
lie
groupoid
tangent
groupoid
functor
deﬁnition
3.1
consider
lie
groupoid
tangent
groupoid
category
multiplicative
vector
ﬁelds
deﬁned
follows
set
objects
functor
idg
set
multiplicative
vector
ﬁelds
mackenzie
morphism
multiplicative
vector
ﬁeld
multiplicative
vector
ﬁeld
natural
transformation
1idg
every
point
require
3.1
composition
morphisms
vertical
composition
natural
transformations
note
every
morphism
automatically
invertible
since
groupoid
hence
groupoid
notation
3.2.
denote
source
target
maps
category
respectively
unit
map
denoted
inversion
composition/multiplication
morphisms
lemma
3.3.
category
multiplicative
vector
ﬁelds
lie
groupoid
2-vector
space
proof
mackenzie
proved
set
multiplicative
vector
ﬁelds
real
vector
space
next
argue
set
morphisms
category
vector
space
well
suppose
morphisms
multiplicative
vector
ﬁelds
equation
3.1
says
sections
vector
bundle
g1|g0
suppressed
unit
map
clearly
linear
combination
λ1α1
λ2α2
section
bundle
g1|g0
choice
scalars
need
check
actually
natural
transformation
λ1v1
λ2v2
λ1w1
λ2w2
need
check
arrow
groupoid
λ1α1
λ2α2
λ1v1
λ2v2
λ1w1
λ2w2
λ1α1
λ2α2
denotes
multiplication
lie
groupoid
since
derivative
multiplication
×g0
groupoid
ﬁberwise
linear
×g0
tγ2g1
tγ1g1
preﬁx
notation
scalars
inﬁx
notation
3.2
reads
λa1
µb1
λa2
µb2
3.2
3.3
hence
λ1α1
λ2α2
λ1v1
λ2v2
λ1w1
λ2w2
λ1α1
λ2α2
ﬁrst
third
equalities
hold
3.3
second
equality
used
fact
natural
transformations
therefore
space
morphisms
vector
space
moreover
computation
shows
source
λ1α1
λ2α2
λ1v1
λ2v2
source
map
category
linear.similarly
target
map
linear
also
easy
see
unit
map
linear
well
finally
need
check
multiplication/composition
category
vertical
composition
natural
transformations
linear
map
need
check
λα2
µβ2
λα1
µβ1
3.4
pointwise
composible
natural
transformations
point
recall
vertical
composition
computed
multiplication
since
ﬁberwise
linear
3.4
follows
concludes
proof
category
vector
ﬁelds
lie
groupoid
internal
category
vector
spaces
2-vector
space
cid:3
theorem
3.4.
category
vector
ﬁelds
lie
groupoid
strict
lie
2-algebra
proof
recall
notation
source
map
groupoid
diﬀerential
source
map
tangent
groupoid
use
denote
source
target
maps
groupoid
respectively
lemma
2.13
enough
give
vector
spaces
ker
structure
lie
algebras
check
t|ker
ker
lie
algebra
map
iii
deﬁne
action
der
ker
ker
derivations
check
compatibility
∂α1
3.5
3.6
ker
multiplicative
vector
ﬁelds
lie
groupoid
compare
deﬁni-
tion
2.12
fact
vector
space
multiplicative
vector
ﬁelds
carries
lie
bracket
due
macken-
zie
argue
next
ker
space
sections
lie
algebroid
deﬁnition
source
map
therefore
ker
multiplicative
vector
ﬁeld
diagram
ker
3.7
hence
ker
commutes
arrows
section
conversely
section
lie
algebroid
deﬁne
multiplicative
vector
ﬁeld
3.7
commutes
namely
objects
deﬁne
set
3.8
multiplication
inverse
map
derivative
inverse
map
groupoid
conclude
given
ker
t|ker
ker
note
3.9
written
3.9
3.10
right
left
multiplications
respectively.recall
bracket
space
sections
lie
algebroid
deﬁned
requiring
injective
map
map
lie
algebras
consequently
also
map
lie
algebras
conclude
t|ker
ker
lie
algebra
map
following
mackenzie
deﬁne
map
space
multiplicative
vector
ﬁelds
hom
g1|g0
g1|g0
setting
|g0
multiplicative
vector
ﬁelds
sections
mackenzie
prove
proposi-
|g0
section
lie
tion
3.7
algebroid
furthermore
show
proposition
3.8
derivation
der
map
lie
algebras
tangent
ﬁbers
right
invariant
hence
since
left-
right-invariant
vector
ﬁelds
commute
∂α1
3.6
follows
end
proof
showing
3.5
holds
right
hand
side
left
deﬁnition
remains
prove
since
functor
inversion
map
relates
right-
left-invariant
vector
ﬁelds
consequently
left-invariant
therefore
since
done
cid:3
morita
invariance
lie
2-algebra
vector
fields
goal
section
prove
theorem
4.1.
assignment
category
vector
ﬁelds
lie
groupoid
extends
functor
4.1
bicategory
biiso
lie
groupoids
invertible
bibundles
isomorphisms
bibundles
bicate-
gory
lie2alg
lie
2-algebras
hence
particular
morita
equivalence
lie
groupoids
weakly
invertible
1-morphism
lie
2-algebras
bicategory
lie2alg
biiso
lie2alg
strategy
constructing
functor
ﬁrst
construct
simpler
category
deﬁnition
4.2.
essentially
surjective
open
embedding
lie
groupoids
functor
maps
objects
morphisms
open
embeddings
functor
weak
equivalence
i.e.
corresponding
bibundle
weakly
invertible
clear
identity
functors
essentially
surjective
open
embeddings
moreover
composition
essentially
surjective
open
embeddings
essentially
surjective
open
embedding
consequently
lie
groupoids
essentially
surjective
open
embeddings
natural
transformations
form
2-category
notation
4.3.
denote
2-category
lie
groupoids
essentially
surjective
open
embeddings
nat-
ural
transformations
relevance
2-category
provides
diﬀerent
geometric
description
biiso
follows
theorem
4.4.
localization
bicategory
class
1-morphisms
bicategory
biiso
bicategory
lie
groupoids
invertible
bibundles
isomorphisms
bibundles
proof
apply
proposition
2.6.
consider
localization
functor
liegpd
introduced
re-
mark
2.2.
deﬁnition
2-category
restriction
functor
sends
every
morphism
invertible
bibundle
hwi
2-morphism
isomorphism
bibundles
gives
functor
biiso
hwi
4.2
functor
surjective
objects
theorem
2.5
functor
fully
faithful
2-morphisms
remains
check
given
invertible
bibundle
exist
essentially
surjective
open
embeddings
hwhi
isomorphic
hwgi
since
bibundle
weakly
invertible
gives
rise
linking
groupoid
proposition
4.3
denoted
recalled
presently
manifold
objects
disjoint
union
objects
groupoids
manifold
arrows
disjoint
union
p−1
think
manifold
space
arrows
points
points
think
elements
p−1
inverses
elements
multiplication
comes
multiplications
groupoids
actions
p−1
inclusion
given
open
embeddings
p−1
easy
see
essential
equivalence
i.e.
bibundle
hwgi
biprincipal
hence
weakly
invertible
similarly
essentially
surjective
open
embedding
computation
shows
bibundles
hwhi
hwgi
isomorphic
cid:3
proposition
4.5.
assignment
lie
2-algebra
vector
ﬁelds
lie
groupoid
extends
contravariant
functor
lie2algstrict
−−→
4.3
bicategory
lie
groupoids
essentially
surjective
open
embeddings
natural
isomorphism
strict
2-category
lie2algstrict
lie
2-algebras
proof
consider
essentially
surjective
open
embedding
open
lie
subgroupoid
isomorphism
lie
groupoids
assume
without
loss
generality
open
subgroupoid
tangent
bundle
open
subgroupoid
moreover
multiplicative
vector
ﬁeld
restricts
multiplicative
vector
ﬁeld
v|g
similarly
morphism
multiplicative
vector
ﬁelds
restricts
morphism
α|g
v|g
u|g
gives
functor
α|g
v|g
u|g
4.4
restriction
open
subgroupoid
map
2-vector
spaces
preserves
brackets
hence
4.4
map
lie
2-algebras
cid:3
next
observe
notion
category
vector
ﬁelds
makes
sense
many
bicategories
tangent
functor
simplicity
assume
2-arrows
invertible
2,1
bicategory
deﬁnition
4.6.
2,1
-bicategory
bicategory
tangent
functor
functor
natural
transformation
idb
refer
tangent
functor
projection
example
4.7.
care
three
bicategories
tangent
functors
strict
2-category
liegpd
lie
groupoids
smooth
functors
smooth
natural
transformations
bicategory
lie
groupoids
bibundles
isomorphisms
bibundle
strict
2-category
geomstack
geometric
stacks
tangent
functor
2-category
geomstack
discussed
section
deﬁned
bicategories
tangent
functors
order
extend
hepworth
deﬁnition
category
vector
ﬁelds
stack
deﬁnition
5.1
bicategories
interest
bicategory
deﬁnition
4.8.
let
2,1
-bicategory
tangent
functor
projection
idb
let
object
category
generalized
vector
ﬁelds
deﬁned
follows
objects
pairs
idv
morphism
2-morphism
denotes
whiskering
vertical
composition
2-morphisms
example
4.9
category
xgen
generalized
vector
ﬁelds
lie
groupoid
suppose
bi-
category
bicategory
lie
groupoids
bibundles
recall
tangent
functor
projection
idbi
see
subsection
2.d
object
lie
groupoid
denote
corresponding
category
vector
ﬁelds
xgen
distinguish
category
multiplicative
vector
ﬁelds
objects
xgen
pairs
hπgi
hidgi
bibundle
isomorphism
bibundles
morphism
xgen
map
bibundles
hπi
denotes
whiskering
composition
isomorphisms
bibundles
lemma
4.10.
let
bicategory
tangent
functor
projection
weakly
invertible
1-morphism
objects
induces
equivalence
categories
corresponding
categories
vector
ﬁelds
proof
since
1-morphism
weakly
invertible
2-morphism
idg
p−1
idh
given
object
deﬁne
p∗x
p−1
2-morphism
αp∗x
p∗x
idh
comes
2-commutative
diagram
p−1
⑧⑧⑧
⑧⑧⑧
❄❄❄❄❄❄❄❄❄❄❄❄❄
hidgi
⑧⑧⑧
⑧⑧⑧
hπgi
⑧⑧⑧
⑧⑧⑧
hπh
2-morphism
part
data
natural
transformation
idbi
see
appendix
set
hidh
given
morphism
category
deﬁne
αp∗x
p−1
p−1
p∗β
p−1
diagram
chase
ensures
p∗β
morphism
p∗x
αp∗x
p∗y
αp∗y
finally
one
checks
functor
p−1
weak
inverse
hence
cid:3
equivalence
categories
claimed
theorem
4.11.
lie
groupoid
evident
inclusion
functor
xgen
hvi
αhvi
hπgi
hvi
hπg
hidgi
equivalence
categories
remark
4.12.
case
groupoid
proper
theorem
4.11
deduced
theorem
see
remark
5.4
proof
theorem
4.11
technical
carry
section
lemma
4.13.
let
essentially
surjective
open
embedding
pull-back/restriction
functor
proposition
4.5
hwi
xgen
xgen
push-forward
along
bibundle
hwi
constructed
lemma
4.10.
diagram
ıg′
xgen
hwi
xgen
4.5
2-commutes
2-category
cat
categories
proof
may
assume
given
β|g
v|g
v′|g
prove
2-commutativity
4.5
need
check
multiplicative
vector
ﬁeld
generalized
vector
ﬁeld
hwi
hv|gi
αv|g
isomorphic
vector
ﬁeld
hvi
αvg
given
multiplicative
vector
ﬁeld
diagram
v|g
commutes
since
liegpd
functor
v|g
4.6
hvi
hwi
hv|gi
denotes
unspeciﬁed
isomorphism
bibundles
note
bibundle
isomorphic
bibundle
hwi
hence
hvi
hwi
hwi
hv|gi
multiply
sides
equation
hwi−1
move
brackets
around
get
hvi
hwi
hv|gi
hwi−1
fact
hwi
αv|g
equals
follows
fact
liegpd
functor
intertwines
tangent
functors
liegpd
see
end
section
cid:3
lemma
4.14.
functor
4.3
proposition
4.5
takes
every
essentially
surjective
open
embedding
weakly
invertible
1-morphism
lie
2-algebras
proof
diagram
4.5
2-commutes
lemma
4.13.
theorem
theorem
4.11
functors
ıg′
equivalences
categories
since
functor
hwi
weakly
invertible
functor
hwi
equivalence
categories
lemma
4.10.
hence
functor
equivalence
categories
well
hence
essential
equivalence
finally
localization
functor
lie2algstrict
lie2alg
takes
essential
equivalences
weakly
invertible
morphisms
cid:3
position
extend
assignment
covariant
functor
lie2alg
deﬁnition
4.15.
deﬁne
functor
lie2alg
objects
assignment
given
essentially
surjective
open
embedding
lemma
4.14.
set
bibundle
hw∗i
weakly
invertible
lie2alg
hw∗i
proof
theorem
4.1.
since
biiso
localization
bicategory
class
mb1
1-morphisms
since
functor
lie2alg
sends
every
1-morphism
invertible
morphism
exists
proposition
2.6
functor
biiso
lie2alg
unique
isomorphism
isomorphism
functors
loss
generality
assume
every
lie
groupoid
drop
obtain
desired
functor
biiso
lie2alg
cid:3
categories
vector
fields
stacks
lie
2-algebras
recall
hepworth
construction
category
vector
ﬁelds
vect
stack
ﬁrst
step
extend
tangent
functor
man
man
category
manifolds
functor
stack
stack
stack
2-category
stacks
manifolds
along
yoneda
embedding
man
stack
results
2-commuting
diagram
stack
stack
stack
man
c⑧⑧⑧
⑧⑧⑧
man
natural
transformation
stack
idstack
deﬁnition
5.1
hepworth
objects
category
vector
ﬁelds
vect
stack
pairs
stacka
1-morphism
stacks
ida
2-morphism
morphism
vect
2-morphism
vertical
composition
whiskering
next
recall
lie
groupoid
stack
principal
g-bundles
assignment
promoted
functor
diﬀerent
ways
depending
source
2-category
one
chooses
hep-
worth
takes
source
2-category
liegpd
lie
groupoids
smooth
functors
natural
isomor-
phisms
considers
functor
liegpd
stack
5.1
essential
image
functor
consists
2-category
geomstack
geometric
stacks
functor
faithful
full
particular
functor
maps
essential
equivalences
lie
groupoids
need
invertible
liegpd
even
weakly
isomorphisms
stacks.2
tangent
functor
man
man
easily
extended
functor
liegpd
liegpd
liegpd
natural
transformation
πliegpd
liegpd
idliegpd
hepworth
proves
theorem
3.11
natural
isomorphism
liegpd
stack
5.2
consequently
given
vector
ﬁeld
lie
groupoid
get
map
stacks
2recall
tradition
weakly
invertible
1-morphism
stacks
called
isomorphism
composing
isomorphism
stack
gives
functor
denoted
stack
determines
object
abv
category
vect
vector
ﬁelds
stack
hepworth
shows
assignment
abv
promoted
functor
vect
5.3
denotes
category
vector
ﬁelds
lie
groupoid
see
deﬁnition
3.1
proves
theorem
4.15
groupoid
proper
functor
5.3
equivalence
categories.3
another
important
consequence
existence
isomorphism
5.2
geometric
stack
tangent
stack
stacka
geometric
well
promote
assignment
functor
diﬀerent
bicategory
slight
risk
confusion
denote
namely
choose
source
bicategory
lie
groupoids
bibundles
isomorphisms
bibundles
advantage
functor
fully
faithful
lie
groupoids
functor
stack
hombi
homstack
equivalence
categories
consequently
functor
geomstack
equivalence
bicategories
hard
adapt
theorem
3.11
setting
diagram
❄❄❄
❄❄❄
geomstack
stack
geomstack
2-commutes
convenient
choose
weak
inverse
b−1
geomstack
consider
functor
geomstack
geomstack
geomstack
geomstack
b−1
construction
isomorphic
hepworth
functor
stack
restricted
geometric
stacks
case
stack
transformation
πgs
geomstack
idgeomstack
given
geometric
stack
deﬁne
category
vector
ﬁelds
vect′
follows
compare
deﬁnition
5.1
deﬁnition
5.2.
category
vector
ﬁelds
geometric
stack
denoted
vect′
objects
pairs
geomstacka
1-morphism
stacks
ida
2-morphism
morphism
vect′
2-morphism
3the
hypothesis
groupoid
proper
explicit
statement
theorem
4.15
however
proof
depends
several
lemmas
4.11
4.12
2.11
2.12.
particular
proof
uses
existence
partitions
unity
weinstein-zung
linearization
require
properness
words
apply
deﬁnition
4.8
strict
2-category
geomstack
tangent
functor
geomstack
geomstack
geomstack
rather
hepworth
tangent
functor
stack
stack
stack
easy
see
geometric
stack
categories
vect
vect′
equivalent
even
isomorphic
several
advantages
working
vect′
first
functor
vect′
explicit
stack
latter
involves
2-limits
stackiﬁcation
additionally
following
result
easy
prove
lemma
5.3.
lie
groupoid
classifying
stack
functor
geomstack
induces
equiva-
lence
categories
category
xgen
generalized
vector
ﬁelds
deﬁned
example
4.9.
xgen
vect′
proof
consider
generalized
vector
ﬁeld
lie
groupoid
deﬁnition
isomor-
phism
hπgi
hidgi
bibundles
apply
classifying
stack
functor
2-morphism
get
2-morphism
stacks
bαp
hπgi
bhidgi
since
functor
bicategories
canonical
2-arrows
bhidgi
idbg
bhπgi
hπgi
note
2-morphisms
2-isomorphisms
since
2-arrows
2-category
stacks
invertible
composing
three
2-arrows
get
2-arrow
bhπgi
idbg
denote
αbp
deﬁnition
pair
αbp
object
vect′
similarly
morphism
xgen
gives
rise
morphism
one
checks
consequently
morphism
vect′
αbp
αbq
therefore
get
functor
αbq
πbg
αbq
weak
inverse
b−1
geomstack
gives
rise
functor
xgen
vect′
b−1
vect′
xgen
direction
induced
functors
b−1
weak
inverses
cid:3
remark
5.4.
suppose
lie
groupoid
tracing
carefully
deﬁnitions
map
vect
map
deﬁned
hepworth
equivalence
vect′
vect
inclusion
xgen
map
xgen
vect′
one
show
diagram
vect
xgen
vect′
2-commutes
lemma
5.3
functor
xgen
vect′
equivalence
categories
lie
groupoid
proper
functor
vect
equivalence
categories
theorem
4.15
consequently
functor
xgen
equivalence
categories
case
general
theorem
4.11
tells
functor
xgen
equivalence
categories
lie
groupoid
consequently
functor
vect
always
equivalence
categories
regardless
whether
lie
groupoid
proper
thus
theorem
4.11
generalizes
theorem
4.15
address
issue
giving
category
vector
ﬁelds
vect′
geometric
stack
structure
lie
2-algebra
may
proceed
follows
choose
atlas
stack
atlas
induces
isomorphism
stacks
lie
groupoid
deﬁned
atlas
isomorphism
induces
equivalence
categories
lemma
5.3
classifying
stack
functor
induces
equivalence
categories
vect′
vect′
theorem
4.11
inclusion
xgen
vect′
xgen
equivalence
categories
consequently
composite
functor
vect′
equivalence
categories
lemma
3.4
category
multiplicative
vector
ﬁelds
natural
structure
strict
lie
2-algebra
may
view
functor
kind
lie
2-algebra
atlas
category
vect′
happens
choose
diﬀerent
atlas
stack
argument
get
equivalence
categories
vect′
may
view
diﬀerent
lie
2-algebra
atlas
category
vect′
would
like
two
atlases
compatible
particular
would
like
make
sure
functor
φ−1
underlies
morita
equivalence
lie
2-algebras
least
would
like
lie
2-algebras
morita
equivalent
general
would
like
exist
weakly
invertible
1-morphism
bicategory
lie2alg
lie
2-algebra
lie
2-algebra
address
issue
study
functoriality
assignment
lie
2-algebra
vector
ﬁelds
geometric
stack
choice
atlas
consider
2-category
geomstackiso
geometric
stacks
isomorphisms
stacks
2-morphisms
stacks
classifying
stack
functor
restricts
equivalence
bicategories
geomstack
biiso
geomstackiso
choice
weak
inverse
b−1
amounts
choosing
atlas
geometric
stack
inverse
b−1
chosen
composite
functor
geomstackiso
b−1
−−−→
biiso
lie2alg
construction
stack
lie
2-algebra
b−1a
lie
2-algebra
vector
ﬁelds
lie
groupoid
b−1a
discussion
category
underlying
lie
2-algebra
b−1a
equivalent
category
vector
ﬁelds
vect′
stack
diﬀerent
choice
weak
inverse
b−1
amounts
choosing
possibly
diﬀerent
atlas
geometric
stack
b−1
chosen
natural
isomorphism
b−1
b−1
geometric
stack
component
natural
transformation
invertible
bibundle
b−1a
b−1
applying
functor
biiso
lie2alg
get
invertible
bibundle
b−1a
b−1
bicategory
lie2alg
one
fairly
explicit
bibundle
actually
namely
let
atlas
giving
rise
lie
groupoid
b−1
atlas
giving
rise
b−1
total
space
bibundle
b−1
represents
ﬁber
product
linking
groupoid
∗αa
groupoid
corresponding
atlas
linking
groupoid
comes
two
canonical
essentially
surjective
open
embeddings
proof
proposition
4.5
pullback/restriction
functors
∗αa
∗αa
∗αa
∗αa
1-morphisms
lie
2-algebras
fully
faithful
essentially
surjective
hence
bibundle
hi∗
invertible
bicategory
lie2alg
hand
noted
proof
theorem
4.4
bibundles
hihi
higi
isomorphic
hence
construction
functor
biiso
lie2alg
hihi
higi
higi
hi∗
gi−1
hihi
hi∗
hi−1
hence
hi∗
hi∗
gi−1
lie
2-algebras
vector
fields
stacks
underlying
categories
previous
section
constructed
functor
b−1
geomstackiso
lie2alg
recall
forgetful
functor
lie2alg
cat
assigns
lie
2-algebra
underlying
category
therefor
every
geometric
stack
category
b−1
make
sure
category
equivalent
category
vector
ﬁelds
vect′
hence
hepworth
category
vect
vector
ﬁelds
stack
start
promoting
assignment
vect′
functor
vect′
geomstackiso
cat
whose
source
2-category
geometric
stacks
isomorphisms
whose
target
2-category
cat
small
categories
prove
following
theorem
theorem
6.1.
diagram
bicategories
functors
geomstackiso
biiso
vect′
c⑧⑧⑧
⑧⑧⑧
cat
lie2alg
2-commutes
lie2alg
cat
denotes
functor
objects
sends
lie
2-algebra
underlying
category
value
2-morphisms
see
proof
lemma
6.3
particular
every
geometric
stack
category
underlying
lie
2-algebra
b−1
equivalent
category
vect′
vector
ﬁelds
stack
construct
functor
vect′
geomstack
cat
see
appendix
deﬁnition
functor
recall
lemma
4.10
isomorphism
stacks
induces
equivalence
categories
vect′
vect′
note
ida
may
take
idvect′
given
isomorphisms
stacks
get
equivalences
categories
need
produce
natural
transformation
given
object
vect′
need
produce
2-cell
category
vect′
proof
lemma
4.10
geomstackg
geomstack
g−1
since
geomstack
pseudo-
functor
natural
isomorphism
geomstackg
geomstack
geomstack
consequently
isomorphism
geomstackg
geomstack
g−1
geomstack
isomorphism
desired
2-cell
ready
describe
functor
vect′
geometric
stack
assigns
category
vect′
arrow
assigns
equivalence
categories
vect′
additionally
pair
natural
isomorphism
constructed
proceeding
similarly
keeping
track
coherence
data
promote
assignment
functor
biiso
xgen
−−→
xgen
xgen
biiso
cat
lemma
5.3
generalizes
follows
lemma
6.2.
equivalences
categories
one
lie
groupoid
assemble
natural
isomorphism
xgen
vect′
diagram
xgen
vect′
geomstackiso
biiso
vect′
❄❄❄
❄❄❄
xgen
cat
cat
2-commutes
moreover
components
natural
transformation
equivalences
categories
next
prove
lemma
6.3.
diagram
biiso
xgen
3❤❤❤❤❤❤❤❤❤❤❤❤❤
c⑧⑧⑧
⑧⑧⑧
+❱❱❱❱❱❱❱❱❱❱❱
cat
lie2alg
2-commutes
proof
underlying
category
functor
ustrict
lie2algstrict
cat
sends
lie
2-algebras
underlying
categories
morphisms
lie
2-algebras
underlying
functors
functor
ustrict
sends
essential
equivalences
lie
2-algebras
weakly
invertible
functors
universal
property
localization
lie2algstrict
lie2alg
get
underlying
category
functor
lie2alg
cat
isomorphic
ustrict
every
essential
equivalence
lie
2-algebras
follows
essential
equivalence
lie2algstrict
functor
i−1
weak
inverse
ustrict
proved
essentially
surjective
open
embedding
lie
groupoids
pullback
functor
essential
equivalence
deﬁned
hw∗i−1
follows
weak
inverse
ustrict
lemma
4.13
diagram
4.5
2-commutes
cat
1-morphism
hence
diagram
ıg′
xgen
hwi∗=xgen
xgen
2-commutes
well
follows
functors
xgen
homw
cat
isomorphic
homw
cat
denotes
category
functors
send
collection
1-cells
weakly
invertible
functors
deﬁnition
functor
biiso
lie2alg
precomposition
localization
functor
biiso
isomorphic
lie2alg
follows
functors
xgen
isomorphic
homw
cat
universal
property
localization
biiso
functors
xgen
isomorphic
hom
biiso
cat
cid:3
proof
theorem
6.1.
follows
directly
lemmas
6.2
6.3
cid:3
generalized
vector
fields
lie
groupoid
versus
multiplicative
vector
fields
section
prove
theorem
4.11
lie
groupoid
inclusion
xgen
hvi
αhvi
hπgi
hvi
hidgi
category
multiplicative
vector
ﬁelds
category
generalized
vector
ﬁelds
fully
faithful
essentially
surjective
remark
7.1.
case
proper
lie
groupoids
theorem
4.11
follows
theorem
4.15
see
remark
5.4.
fact
fully
faithful
easy
consequence
theorem
2.5.
address
essential
surjectivity
ﬁrst
prove
lemma
7.2.
let
2-vector
space
ﬁnite
collection
objects
←−−
j=1
collection
morphisms
satisfying
cocycle
conditions
wii
1vi
wik
morphisms
ziz−1
λkvk
proof
remark
2.9
category
isomorphic
action
groupoid
ker
t|u
action
given
note
multiplication/composition
given
consequently
isomorphism
given
morphisms
isomorphism
followed
projection
onto
sends
morphisms
vectors
easy
see
cocycle
conditions
translate
uii
−ui
uik
moreover
consider
set
λkuik
λkvk
verify
desired
morphisms
deﬁnition
source
λkvk
target
λkuik
λkvk
λk∂
uik
λkvk
λkvk
λkvi
hence
arrow
λkvk
finally
yiy−1
λkuik
λkvk
λku
uik
λkui
ziz−1
desired
cid:3
proposition
7.3.
let
lie
groupoid
open
submanifold
restriction
consists
arrows
source
target
given
functor
together
natural
isomorphism
exists
functor
idu
natural
isomorphisms
proof
deﬁnition
diagram
commutes
hence
smooth
map
t∗t
since
target
map
submersion
diﬀerential
tγg1
surjective
linear
map
consequently
map
t∗t
tγv
surjective
map
vector
bundles
choose
smooth
section
t∗t
consider
composite
construction
deﬁne
functor
objects
set
arrow
set
−1x
easy
check
indeed
functor
natural
transformation
idu
cid:3
proposition
7.4.
let
lie
groupoid
z✉✉✉✉✉✉✉✉✉✉
■■■■■■■■■
bibundle
tangent
groupoid
composite
hπi
isomorphic
hidgi
way
bibundle
isomorphism
left
anchor
global
section
moreover
may
choose
corresponding
functor
multiplicative
vector
ﬁeld
i.e.
idg
consequently
functor
xgen
theorem
4.11
essentially
surjective
hπi
hidgi
surjective
submersion
local
sections
choose
collection
local
open
cover
loss
generality
assume
manifold
consists
arrows
source
target
proof
since
sections
cover
locally
ﬁnite
denote
restriction
groupoid
objects
section
get
functor
whose
value
objects
manifold
arrows
t−1
s−1
value
arrow
uniquely
deﬁned
equation
see
lemma
2.4
next
observe
isomorphism
hπgi
hidgi
gives
rise
natural
isomor-
phisms
inclusion
functor
seen
follows
recall
composite
bibundles
quotient
bibundle
hπgi
ﬁber
product
×πg
anchor
maps
action
denote
orbit
×ar
ﬁber
product
×ar
×ar
hπgi
hπgi
consequently
case
hπgi
×ar
hπg
×πg
convenient
identify
p×ar
isomorphism
hπg
×πg
p×πg◦ar
way
g-equivariant
equivariant
diﬀeomorphism
×πg◦ar
local
section
also
deﬁnes
local
section
¯σi
hπg
i◦p
×g0
given
×g0
¯σi
◦ar
◦σi
1πg
◦xi
arrow
¯σi
hidgi
arrow
target
deﬁne
desired
natural
isomorphism
setting
source
1πg
◦xi
proposition
7.3
smooth
maps
¯σi
moreover
functors
given
deﬁne
multiplicative
vector
ﬁelds
groupoid
images
land
particular
deﬁne
local
sections
deﬁnition
arrows
1πg
◦ar◦νi
1πg
◦yi
1πg
◦xi
¯σi
hence
1πg
◦yi
finally
construct
global
section
corresponding
global
multiplicative
vector
ﬁelds
using
partition
unity
argument
choose
partition
unity
subordinate
cover
since
cover
locally
ﬁnite
loss
generality
assume
cover
fact
ﬁnite
consider
point
moreover
similarly
1πg
◦ar◦νi
since
diﬀeomorphism
follows
orbit
space
×g0
therefore
arrow
consequently
t1xg1
moreover
since
principal
bundle
arrow
property
unique
depends
smoothly
note
source
target
uniqueness
implies
collection
satisﬁes
cocycle
conditions
←−−−
λkyk
quick
look
lemma
7.2.
therefore
exist
arrows
proof
lemma
7.2
convince
reader
depend
smoothly
set
note
therefore
follows
globally
deﬁned
section
remains
show
corresponding
functor
multiplicative
vector
ﬁeld
construction
index
natural
isomorphism
xτ|u
since
t1xg1
since
multiplicative
vector
ﬁeld
restriction
xτ|u
also
multiplicative
vector
ﬁeld
conclude
multiplicative
vector
ﬁeld
globally
cid:3
appendix
bicategories
functors
natural
transformations
section
reader
convenience
record
deﬁnitions
bicategories
2,1
-bicategories
pseudo-
functors
natural
transformations
presentation
closely
follows
deﬁnition
a.1
bicategory
consists
following
data
subject
following
axioms
data
collection
0-cells
objects
every
pair
0-cells
category
homb
morphisms
objects
homb
called
1-cells
1-morphisms
written
small
latin
letters
morphisms
homb
called
2-cells
2-morphisms
written
greek
letters
note
every
1-cell
2-cell
refer
composition
2-cells
homb
vertical
composition
write
blank
every
triple
0-cells
composition
functor
cabc
homb
homb
homb
cabc
cabc
1-cells
2-cells
refer
composition
2-cells
horizontal
composition
every
object
1-cell
homb
natural
isomorphisms
aabcd
cabd
cbcd
cacd
cabc
called
associators
every
quadruple
objects
homb
homb
homb
cbcd
×id
homb
homb
particular
invertible
2-cells
id×cabc
tttt
tttt
aabcd
cabd
homb
homb
cacd
homb
ahg
every
triple
1-cells
homb
homb
homb
natural
isomorphisms
rab
caab
lab
cabb
called
right
left
unitors
every
pair
objects
homb
id×1a
'❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖
c⑧⑧⑧
⑧⑧⑧
rab
◦aab
homb
1b×id
'❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖
c⑧⑧⑧
⑧⑧⑧
lab
◦abb
homb
homb
homb
homb
homb
homb
homb
homb
denotes
identity
functor
abuse
notation
homb
homb
denotes
functor
takes
every
2-cell
identity
2-cell
id1a
functor
deﬁned
similarly
thus
every
1-cell
homb
invertible
2-cells
conditions
data
triangle
identity
pair
composible
1-cells
diagram
2-cells
g1b
✼✼✼✼✼✼✼✼✼✼
✼✼✼✼✼✼✼✼✼✼
rg⋆1
✞✞✞✞✞✞✞✞✞✞
✞✞✞✞✞✞✞✞✞✞
idg⋆l
commutes
pentagon
identity
quadruple
composible
1-cells
diagram
a⋆idf
idk⋆a
✏✏✏✏✏✏
✏✏✏✏✏✏
■■■■■■■■■
■■■■■■■■■
✳✳✳✳✳✳
✳✳✳✳✳✳
✉✉✉✉✉✉✉✉✉
✉✉✉✉✉✉✉✉✉
commutes
remark
a.2
natural
isomorphisms
bicategory
identities
similarly
horizontal
1-cells
composition
2-cells
bicategory
strict
2-category
2-cells
bicategory
invertible
2-cell
idg
2,1
-bicategory
following
deﬁnitions
special
cases
general
deﬁnitions
specialized
2,1
bicategories
deﬁnition
a.3
pseudo-
functor
2,1
-bicategory
2,1
-bicategory
consists
follow
data
function
objects
pair
objects
functor
every
triple
objects
natural
isomorphism
fab
homb
homb′
µabc
fbc
fab
fac
cabc
homb
homb
fbc
×fab
homb′
homb′
cabc
tttt
tttt
µabc
homb
fac
homb′
thus
invertible
2-cells
every
pair
composible
1-cells
composition
functor
target
bicategory
2-cells
1fa
every
object
conditions
data
triple
composible
1-cells
following
diagrams
2-cells
commute
µ⋆1f
ab′
1fh⋆µ
ab′
denotes
associator
bicategory
1fa
1fb
❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑
❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑
rb′
1µ⋆1f
❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑
❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑❑
lb′
sssssssssssssssssssss
sssssssssssssssssssss
sssssssssssssssssssss
sssssssssssssssssssss
rb′
denote
right
unitors
respectively
meaning
lb′
similar
deﬁnition
a.4
let
pseudo-
functors
2,1
-bicategory
2,1
-bicategory
natural
transformation
consists
following
data
1-cells
every
object
natural
isomorphisms
homb
gab
homb′
fab
tttt
tttt
σab
◦σa
homb′
σb◦
homb′
thus
2-cells
data
subject
following
compatibility
conditions
pair
composible
1-cells
diagrams
commute
idg
idσc
✎✎✎✎✎✎✎✎✎
✎✎✎✎✎✎✎✎✎
τ⋆idσa
✴✴✴✴✴✴✴✴✴
✴✴✴✴✴✴✴✴✴
✴✴✴✴✴✴✴✴✴
✴✴✴✴✴✴✴✴✴
σg⋆idf
✎✎✎✎✎✎✎✎✎
✎✎✎✎✎✎✎✎✎
idσc
1ga
1fa
τ⋆idσa
idσa⋆µ
σ1a
references
baez
crans
higher-dimensional
algebra
lie
2-algebras
theory
applications
categories
2004
492–538
arxiv
math.qa/0307263
behrend
diﬀerentiable
stacks
gerbes
journal
symplectic
geometry,9
2011
285–341
b´enabou
introduction
bicategories
reports
midwest
category
seminar
1–77
springer
berlin
1967
blohmann
stacky
lie
groups
int
math
res
notices
2008
rnn082
borceux
handbook
categorical
algebra
volume
encyclopedia
mathematics
applications
cam-
bridge
univ
press
1994
deligne
formule
dualit´e
globale
th´eorie
des
topos
cohomologie
´etale
des
sch´emas
tome
lecture
notes
mathematics
vol
305.
springer-verlag
berlin-new
york
1973.
vi+640
fregier
wagemann
hopf
2-algebras
imrn
vol
2011
3471–3501
hepworth
vector
ﬁelds
ﬂows
diﬀerentiable
stacks
theory
appl
categ
2009
542–587
leinster
basic
bicategories
https
//arxiv.org/abs/math/9810017v1
lerman
orbifolds
stacks
enseignment
math´ematique
2010
315–363
k.c.h
mackenzie
general
theory
lie
groupoids
lie
algebroids
london
mathematical
society
lecture
note
series
213
cambridge
university
press
cambridge
2005.
xxxviii+501
k.c.h
mackenzie
classical
lifting
properties
multiplicative
vector
ﬁelds
quart
math
oxford
1998
59–85
metzler
topological
smooth
stacks
arxiv
math/0306176
math.dg
2003
moerdijk
mrcun
introduction
foliations
lie
groupoids
cambridge
university
press
cambridge
2003.
ix+173
noohi
integrating
morphisms
lie
2-algebras
compositio
math
149
2013
264–294
10.1112/s0010437x1200067x
ortiz
waldron
lie
2-algebra
vector
ﬁelds
lie
groupoids
arxiv:1703.09791
math.dg
2017
d.a
pronk
etendues
stacks
bicategories
fractions
compositio
mathematica
102
1996
243–303
schommer-pries
central
extensions
smooth
2-groups
ﬁnite-dimensional
string
2-group
geometry
topology
2011
609-676
weinstein
volume
diﬀerentiable
stack
lett
math
phys
2009
353–371
e-mail
address
danbe
illinois.edu
e-mail
address
lerman
illinois.edu
department
mathematics
university
illinois
urbana
61801
