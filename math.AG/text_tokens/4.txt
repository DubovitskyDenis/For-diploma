inertia
oper
motiv
hall
algebra
kai
behrend
pooya
ronagh
octob
abstract
studi
action
inertia
oper
motiv
hall
bra
prove
diagonaliz
lead
ﬁltration
hall
algebra
whose
associ
grade
algebra
commut
ticular
degre
subspac
form
lie
algebra
call
lie
algebra
virtual
indecompos
element
follow
joyc
prove
integr
virtual
indecompos
element
admit
euler
characterist
special
order
take
advantag
fact
inertia
group
unit
group
algebra
introduc
notion
algebroid
content
introduct
algebroid
motiv
hall
algebra
exampl
spectrum
inertia
result
discuss
acknowledg
linear
algebra
stack
algebroid
algebra
stack
sheaf
algebra
stack
coher
sheaf
represent
sheaf
modul
linear
algebra
stack
exampl
substack
fiber
product
lack
local
special
linear
stack
finit
type
algebra
inertia
represent
algebra
bundl
central
idempot
primit
idempot
degre
stratiﬁc
element
centr
perman
rank
split
rank
famili
idempot
group
unit
algebroid
morphism
algebroid
algebroid
inertia
idempot
algebroid
algebroid
represent
clear
algebroid
spectrum
inertia
stack
function
ﬁltration
split
central
rank
idempot
oper
spectrum
semisimpl
inertia
grade
structur
multipl
combinatori
lemma
order
ﬁltration
hall
algebra
filter
structur
hall
algebra
analysi
decompos
proof
main
lemma
hall
algebra
epsilon
function
epsilon
logarithm
hopf
algebra
integr
vector
bundl
relat
regular
motiv
weight
integr
pole
theorem
integr
hall
product
integr
limit
appendix
comparison
joyc
virtual
project
exampl
introduct
simplic
let
work
ﬁeld
later
replac
noetherian
ring
let
abelian
algebra
stack
roughli
mean
time
abelian
categori
algebra
stack
local
ﬁnite
type
precis
deﬁnit
linear
algebra
stack
deﬁnit
bodi
paper
work
exact
instead
abelian
categori
see
begin
section
exampl
interest
includ
cohi
modulu
stack
coher
tive
repq
modulu
stack
represent
quiver
space
iii
case
spec
vect
stack
space
case
vect
exact
categori
vector
bundl
vect
abelian
categori
space
algebra
stack
vect
vect
spec
algebroid
canon
sheaf
algebra
set
section
point
end
vect
point
vector
bundl
end
endomorph
also
canon
isomorph
group
sheaf
inertia
stack
recal
section
point
automorph
word
unit
algebra
endomorph
call
tripl
algebroid
see
deﬁnit
mark
algebra
stack
represent
sheaf
ﬁnite
ﬁnite
type
algebra
call
see
deﬁnit
open
immers
rel
group
scheme
make
canon
diagram
autx
commut
canon
sheaf
algebra
exampl
gebroid
case
isomorph
yield
call
strict
algebroid
algebroid
gener
linear
algebra
stack
linear
coars
modulu
space
strict
slightli
ﬂexibl
exampl
scheme
consid
algebroid
canon
way
algebra
stack
base
algebroid
connect
compon
inertia
stack
group
unit
algebra
main
signiﬁc
algebroid
like
algebra
stack
algebroid
form
ﬁbere
product
exist
whenev
algebroid
inert
morphism
algebra
stack
see
deﬁnit
stack
endow
natur
structur
algebroid
via
exampl
inert
morphism
includ
monomorph
project
scheme
local
close
immers
algebroid
morphism
local
close
immers
algebra
stack
everi
scheme
algebroid
via
deﬁnit
key
observ
algebroid
anoth
algebroid
fact
inertia
stack
stack
total
space
sheaf
algebra
equal
subalgebra
ﬁxed
tautolog
automorph
call
inertia
algebroid
come
canon
morphism
also
connect
version
algebroid
inertia
denot
motiv
hall
algebra
deﬁn
stack
function
represent
morphism
algebroid
ﬁnite
type
hall
algebra
space
isomorph
class
stack
function
modulo
scissor
relat
rel
bundl
relat
rel
denot
hall
algebra
element
deﬁn
stack
tion
base
also
close
immers
algebroid
open
complement
inert
ﬁbre
bundl
tion
special
structur
group
ﬁbre
endow
canon
algebroid
structur
strict
algebroid
bundl
relat
follow
scissor
relat
follow
structur
hall
algebra
modul
structur
let
var
denot
grothendieck
ring
varieti
denot
motiv
weight
aﬃn
line
var
deﬁn
var
structur
multipl
deﬁn
commut
multipl
var
multipl
hall
product
use
stack
short
exact
sequenc
deﬁn
hall
algebra
product
detail
see
section
modul
var
also
respect
hall
product
unit
multipl
unit
respect
product
repres
spec
via
unit
get
inclus
var
inertia
endomorph
algebroid
inertia
deﬁn
erat
via
inertia
oper
linear
var
multipl
respect
commut
multipl
fact
hold
connect
inertia
oper
also
version
hall
algebra
drop
represent
requir
stack
function
simpli
deﬁn
stack
function
morphism
algebroid
ﬁnite
type
represent
hall
algebra
subalgebra
respect
product
one
result
diagonaliz
variou
oper
hold
true
also
hall
algebra
algebra
result
structur
hall
algebra
need
represent
simplic
restrict
therefor
represent
case
usual
deﬁn
hall
algebra
one
requir
bundl
relat
also
morphism
connect
inertia
oper
respect
relat
therefor
includ
exampl
stack
function
vect
thing
algebroid
togeth
faith
represent
exampl
stack
function
valu
vect
includ
subalgebra
element
vect
deﬁn
equal
conjug
subalgebra
vect
respect
hall
product
ate
gln
vect
free
element
unitari
literatur
known
hopf
algebra
symmetr
function
see
exampl
add
vector
bundl
relat
rel
vect
see
get
gln
denot
multinomi
cient
give
motiv
weight
ﬂag
varieti
type
also
denot
parabol
subgroup
gln
type
henc
obtain
divid
vector
bundl
relat
commut
polynomi
algebra
symbol
hopf
algebra
symmetr
function
spectrum
inertia
main
point
work
studi
spectral
theori
simpl
inertia
oper
announc
result
let
sampl
calcul
contain
central
idea
paper
strict
algebroid
occur
write
instead
consid
vect
linear
stack
line
bundl
deﬁn
stack
function
vect
vect
vect
glss
vect
vect
vect
prof
vect
eigenvector
ing
eigenvalu
var
algebra
morphism
respect
commut
product
immedi
follow
everi
valu
correspond
eigenvector
bglr
bgln
vect
vect
eigenvalu
fact
let
consid
stack
function
rank
vector
bundl
vect
recal
inertia
stack
quotient
stack
act
adjoint
action
part
decompos
accord
whether
two
eigenvalu
element
equal
equal
scissor
relat
glneq
gleq
glneq
subgroup
scalar
matrix
maxim
toru
diagon
matrix
notat
normal
next
calcul
ssx
fact
stabil
formula
inertia
stack
quotient
stack
note
act
diagon
via
quotient
swap
entri
emb
equivariantli
respect
decompos
give
pullback
diagram
algebroid
show
vector
bundl
pullback
vector
bundl
latter
vector
bundl
scheme
therefor
trivial
hilbert
theorem
true
pullback
bundl
henc
conclud
use
scissor
relat
conclud
ssx
solv
ssx
get
ssx
alreadi
know
conclud
gener
subspac
vect
matrix
subspac
matrix
lower
triangular
distinct
scalar
diagon
therefor
diagonaliz
ﬁeld
subspac
diagonaliz
eigenvalu
decompos
sum
eigenvector
get
eigenvector
eigenvalu
eigenvalu
eigenvalu
import
observ
add
togeth
compon
whose
eigenvalu
order
vanish
get
coeﬃcient
instead
exampl
add
togeth
compon
eigenvalu
obtain
anoth
import
observ
diagon
spite
appear
requir
invert
fact
algebroid
appear
argument
divis
although
tient
strict
algebroid
longer
fact
reason
consid
algebroid
calcul
suppress
algebra
part
variou
algebroid
leav
reader
suppli
natur
algebra
algebroid
mention
result
summar
main
result
paper
theorem
diagonaliz
oper
diagonaliz
eigenvalu
index
partit
eigenvalu
correspond
partit
cyclotom
polynomi
word
direct
sum
decomposit
qλi
subspac
invari
multipl
theorem
hold
oper
context
strict
algebroid
also
prove
stronger
version
avoid
denomin
ibl
version
work
algebroid
proof
theorem
gener
sampl
calcul
stack
rank
vector
bundl
one
goal
section
paper
set
necessari
notat
theorem
grade
structur
direct
sum
composit
moreov
commut
product
grade
respect
theorem
hold
context
strict
algebroid
fact
graded
commut
product
expect
fact
inertia
respect
commut
uct
follow
fact
true
geometr
descend
ﬁltration
induc
ing
describ
follow
stack
function
algebra
global
section
admit
least
orthogon
central
idempot
algebra
algebroid
direct
summand
common
eigenspac
ili
commut
oper
stack
posit
sum
orthogon
label
idempot
eigenvalu
oper
integ
whole
famili
oper
diagonaliz
proof
fact
proce
prove
preserv
descend
ﬁltration
describ
ometr
distinct
integ
diagon
entri
turn
ascend
ﬁltration
associ
grade
theorem
describ
ker
let
also
point
var
context
strict
algebroid
denot
project
oper
onto
summand
form
gener
seri
πrtr
result
could
prove
pair
algebra
stack
endow
ﬁnite
type
algebra
instead
algebroid
strict
algebroid
one
simpli
replac
theorem
filter
natur
hall
algebra
hall
uct
ﬁltere
respect
ﬁltration
induc
ing
moreov
associ
grade
algebra
word
mod
proof
theorem
us
much
simpl
binator
involv
relabel
direct
sum
decomposit
patibl
direct
sum
decomposit
short
exact
sequenc
split
short
exact
sequenc
theorem
impli
one
paramet
famili
algebra
given
ree
construct
tnk
deform
quantiz
ﬂat
famili
bra
special
ﬁbre
commut
algebra
henc
grade
algebra
inherit
poisson
bracket
degre
particular
lie
algebra
turn
lie
bracket
equal
commut
bracket
associ
follow
joyc
call
lie
algebra
virtual
compos
element
notat
vir
denot
project
onto
vir
πvir
notat
special
case
πvir
term
eigenspac
inertia
vir
theorem
hall
algebra
logarithm
let
small
enough
substack
close
extens
direct
summand
ing
spec
particular
vir
virtual
indecompos
precis
deﬁnit
small
enough
see
section
ple
cohi
curv
could
take
consist
vector
bundl
ﬁxed
slope
sinc
typic
nite
type
make
sens
pa
certain
complet
see
section
detail
theorem
pole
theorem
let
braic
stack
modulo
bundl
relat
special
structur
group
inert
consid
map
forget
structur
map
algebroid
structur
stack
regular
element
identiﬁc
var
written
denomin
vanish
moreov
suppos
grade
monoid
say
degre
need
endow
bilinear
form
everi
object
everi
extens
stack
extens
quotient
vector
space
anoth
vector
space
act
trivial
dim
dim
precis
assumpt
see
section
satisﬁ
repq
cohi
smooth
curv
gener
hereditari
commut
diagram
var
reg
var
use
integr
essenti
gener
tion
index
integr
compon
degre
given
stack
function
upper
horizont
arrow
diagram
special
map
exist
theorem
left
vertic
arrow
exist
pole
theorem
standard
fact
map
algebra
morphism
respect
target
var
reg
endow
product
twist
formal
consequ
commut
diagram
right
vertic
map
morphism
poisson
algebra
target
var
endow
bracket
induc
particular
deduc
vir
var
morphism
lie
algebra
proof
pole
theorem
combin
result
diagonaliz
especi
form
avoid
denomin
divis
result
algebroid
stack
regular
motiv
weight
reg
think
motiv
version
burnsid
lemma
ural
look
conjectur
algebra
stack
motiv
weight
contain
var
like
fals
discuss
produc
count
invari
need
look
subcategori
appli
theorem
give
virtual
posabl
element
appli
integr
yield
gener
function
coeﬃcient
var
appli
euler
characterist
element
var
obtain
ration
number
hereditari
case
fact
morphism
lie
algebra
give
relat
among
gener
function
one
terest
lead
formula
result
detail
refer
work
joyc
mani
other
deal
case
one
need
insert
correct
motiv
vanish
cycl
weight
deﬁn
integr
done
joyc
song
work
joyc
conﬁgur
abelian
categori
contain
result
correspond
deﬁnit
fact
one
reason
write
present
articl
give
conceptu
treatment
joyc
result
prove
notion
virtual
indecompos
object
coincid
joyc
except
case
vect
see
appendix
instead
prove
notion
properti
joyc
use
cours
count
invari
obtain
one
obtain
joyc
depend
deﬁnit
virtual
indecompos
object
think
lie
algebra
vir
analogu
lie
algebra
primit
element
cocommut
hopf
algebra
fact
one
may
ask
whether
equal
univers
envelop
algebra
lie
algebra
vir
deduc
statement
structur
theorem
hopf
algebra
one
would
need
enhanc
cocommut
hopf
algebra
abl
construct
necessari
coproduct
view
famili
oper
somewhat
replac
let
prove
least
result
expect
cocommut
hopf
algebra
particular
theorem
acknowledg
idea
consid
inertia
stack
oper
stack
motiv
hall
algebra
studi
eigenspac
decomposit
understand
joyc
work
conceptu
fashion
due
tom
bridgeland
particular
conjectur
inertia
oper
diagonaliz
due
would
like
thank
tom
bridgeland
share
idea
would
also
like
thank
domin
joyc
arend
bayer
fruit
discuss
linear
algebra
stack
algebroid
algebra
stack
let
brieﬂi
summar
convent
algebra
stack
choos
noetherian
base
ring
commut
unit
base
categori
categori
endow
topolog
canon
sheaf
repres
spec
call
structur
sheaf
assum
algebra
stack
local
ﬁnite
type
thu
algebra
stack
stack
site
admit
present
smooth
groupoid
algebra
space
local
ﬁnite
type
sourc
target
morphism
smooth
diagon
ﬁnite
type
fact
algebra
stack
encount
aﬃn
diagon
stratiﬁc
algebra
stack
mean
morphism
algebra
stack
surject
monomorph
admit
ﬁnite
decomposit
everi
local
close
embed
algebra
stack
algebra
group
act
algebra
space
denot
quotient
stack
fear
common
notat
would
lead
confus
notat
element
variou
scheme
stack
suppos
rel
group
scheme
stack
connect
compon
notat
subsheaf
deﬁn
requir
section
factor
point
equival
geometr
point
smooth
connect
compon
repres
open
substack
smooth
group
scheme
geometr
connect
ﬁber
see
vib
inertia
stack
algebra
stack
smooth
connect
compon
exist
appli
rigidiﬁc
struction
see
exampl
appendix
obtain
uniqu
determin
stack
togeth
phism
make
connect
gerb
mean
rel
inertia
connect
ﬁbre
structur
morphism
smooth
gerb
isotrivi
gerb
admit
section
ﬁnite
smooth
gerb
stack
exist
stratiﬁc
restrict
gerb
piec
isotrivi
follow
fact
ﬁnite
morphism
stack
gener
ﬁnite
turn
follow
zariski
main
theorem
section
let
also
remark
everi
stack
admit
iﬁcat
integr
normal
stack
although
use
fact
sheaf
algebra
stack
need
clarifi
notion
vector
bundl
coher
sheaf
resent
sheaf
relat
particular
algebra
stack
ﬁbere
categori
categori
inherit
topolog
call
topolog
endow
topolog
big
site
sheaf
deﬁnit
sheaf
big
site
exampl
induc
sheaf
denot
call
structur
sheaf
repres
sheaf
induc
everi
object
lie
object
sheaf
usual
small
site
scheme
denot
moreov
everi
morphism
lie
obtain
morphism
sheaf
satisfi
obviou
cocycl
condit
condit
isomorph
exampl
structur
sheaf
induc
structur
sheaf
everi
data
small
sheaf
togeth
compat
morphism
satisfi
two
parenthet
condit
equival
data
deﬁn
see
exp
functor
sheaf
pullback
morphism
morphism
site
small
site
big
particular
exact
site
ring
site
also
sheaf
modul
pullback
morphism
ring
site
therefor
functor
also
exact
consid
functor
categori
big
sheaf
categori
small
sheaf
sheaf
sheaf
particular
sheaf
dual
note
gener
natur
homomorph
isomorph
see
coher
sheaf
sheaf
local
coher
everi
sheaf
coher
sheaf
terminolog
inspir
tag
cartesian
compat
morphism
isomorph
sheaf
sheaf
local
coher
cartesian
coher
exampl
groupoid
present
coher
sheaf
togeth
isomorph
satisfi
usual
cocycl
condit
give
rise
coher
sheaf
sheaf
section
vector
bundl
coher
fact
notion
vector
bundl
local
free
coher
sheaf
equival
use
interchang
even
though
two
categori
cokernel
homomorph
vector
bundl
coher
fact
everi
cokernel
homomorph
coher
sheaf
coher
cokernel
homomorph
vector
bundl
local
free
call
homomorph
strict
homomorph
vector
bundl
strict
homomorph
vector
bundl
imag
kernel
well
cokernel
local
free
strict
monomorph
vector
bundl
strict
homomorph
whose
kernel
zero
homomorph
vector
bundl
strict
epimorph
everi
geometr
point
induc
linear
map
homomorph
vector
bundl
monomorph
sheaf
strict
phism
bundl
let
homomorph
vector
bundl
braic
stack
ﬂatten
stratiﬁc
cok
serf
also
stricten
stratiﬁc
mean
object
lift
strict
gener
kernel
categori
big
sheaf
homomorph
vector
bundl
local
coher
coher
tag
sheaf
coher
exist
smooth
cover
ﬁnite
type
aﬃn
scheme
everi
restrict
big
site
isomorph
cokernel
homomorph
vector
bundl
proposit
suppos
coher
sheaf
algebra
stack
everi
local
coher
iii
repres
algebra
stack
ﬁnite
type
aﬃn
name
specx
symo
canon
homomorph
isomorph
sheaf
local
free
coher
vector
bundl
moreov
functor
fulli
faith
functor
categori
coher
sheaf
categori
local
coher
sheaf
map
right
exact
sequenc
coher
sheaf
left
exact
sequenc
local
coher
sheaf
proof
ﬁrst
claim
follow
directli
deﬁnit
main
fact
adjunct
homo
homo
homo
everi
morphism
second
claim
follow
ﬁrst
see
also
tag
third
claim
see
fourth
claim
consid
sheaf
equal
specx
symo
sheaf
homomorph
grade
henc
equal
section
give
rise
symo
homomorph
one
henc
denot
homgm
homgm
omo
ﬁfth
claim
clear
moreov
follow
fact
reconstruct
degre
one
part
grade
sheaf
specx
symo
project
morphism
represent
sheaf
modul
homomorph
vector
bundl
ker
construct
categori
big
sheaf
represent
sheaf
fact
ker
equal
ﬁbere
product
stack
ker
sheaf
ker
belong
class
dual
coher
sheaf
proposit
let
sheaf
follow
equival
exist
coher
sheaf
isomorph
exist
smooth
cover
ﬁnite
type
aﬃn
scheme
everi
restrict
big
site
isomorph
kernel
homomorph
vector
bundl
proof
fact
impli
follow
result
prove
let
indic
prove
impli
let
ﬁrst
assum
isomorph
kernel
phism
vector
bundl
one
check
repres
specx
symo
cok
thu
isomorph
dual
coher
sheaf
cok
suppos
local
isomorph
kernel
phism
vector
bundl
suﬃc
prove
coher
isomorph
claim
check
local
true
dual
coher
sheaf
deﬁnit
call
sheaf
local
coher
resent
two
equival
condit
proposit
satisﬁ
terminolog
justiﬁ
proposit
word
categori
local
coher
represent
sheaf
essenti
imag
fulli
faith
functor
mention
proposit
therefor
equival
categori
coh
sheaf
loc
coh
repr
sheaf
follow
proposit
summar
fact
local
coher
resent
sheaf
follow
easili
fact
mention
proposit
let
local
coher
represent
sheaf
algebra
stack
sheaf
local
coher
sheaf
coher
iii
canon
homomorph
isomorph
sheaf
sheaf
represent
algebra
stack
ﬁnite
type
aﬃn
fact
specx
symo
moreov
functor
essenti
invers
functor
map
left
exact
sequenc
local
coher
represent
sheaf
right
exact
sequenc
coher
sheaf
proposit
let
local
coher
represent
sheaf
ﬁnite
type
algebra
stack
uniqu
stratiﬁc
properti
factor
vector
bundl
precis
local
close
immers
algebra
stack
properti
factor
vector
bundl
rank
proof
sought
stratiﬁc
ﬂatten
stratiﬁc
coher
sheaf
exampl
consid
coordin
let
cokernel
homomorph
vector
bundl
skyscrap
sheaf
origin
consid
coher
sheaf
extend
big
sheaf
usual
way
sheaf
exampl
coher
sheaf
represent
let
kernel
local
coher
sentabl
cartesian
henc
coher
note
show
may
coher
even
note
also
show
may
sentabl
even
final
note
structur
sheaf
origin
consid
skyscrap
sheaf
zero
give
exampl
remark
cours
categori
coher
sheaf
algebra
stack
kernel
intern
hom
agre
categori
big
sheaf
consid
therefor
import
specifi
context
deal
kernel
dual
categori
coher
sheaf
unless
speciﬁ
otherwis
alway
consid
sheaf
big
sheaf
linear
algebra
stack
review
deﬁnit
linear
algebra
stack
basic
construct
deﬁnit
basic
properti
ﬁbere
categori
refer
reader
materi
presum
known
could
ﬁnd
suitabl
refer
suppos
categori
write
ﬁber
object
morphism
lie
respect
write
homf
set
morphism
lie
id
write
hom
recal
morphism
lie
cartesian
everi
object
composit
induc
biject
hom
homf
recal
ﬁbere
categori
everi
composit
cartesian
morphism
cartesian
everi
everi
exist
cartesian
morphism
target
cartesian
functor
categori
one
preserv
cartesian
morphism
ﬁbere
categori
subcategori
consist
object
cartesian
morphism
categori
ﬁbere
groupoid
denot
xcfg
call
underli
categori
ﬁbere
groupoid
deﬁnit
categori
categori
everi
set
homf
endow
structur
way
everi
pair
morphism
everi
tripl
object
composit
homf
homg
homf
functor
categori
functor
categori
everi
map
homf
homf
assum
given
ﬁbere
categori
pullback
morphism
object
pullback
pullback
map
hom
object
presheaf
hom
usual
small
site
deﬁn
hom
homt
everi
presheaf
moreov
morphism
natur
homomorph
presheav
hom
put
togeth
small
presheav
homt
vari
big
site
scheme
form
big
presheaf
denot
hom
deﬁnit
linear
algebra
stack
ﬁbere
gori
everi
object
everi
pair
presheaf
hom
big
site
scheme
local
coher
represent
sheaf
underli
categori
ﬁbere
groupoid
xcfg
braic
stack
local
ﬁnite
type
morphism
linear
algebra
stack
cartesian
functor
remark
linear
algebra
stack
underl
algebra
stack
xcfg
exist
local
coher
represent
sheaf
repres
sheaf
whose
set
section
pair
hom
sheaf
univers
sheaf
homomorph
subsheaf
repres
isomorph
natur
identiﬁ
project
diagon
pull
back
via
diagon
obtain
univers
sheaf
endomorph
repres
sheaf
whose
set
section
end
let
emphas
represent
morphism
algebra
stack
time
sheaf
algebra
local
coher
represent
sheaf
modul
linear
algebra
stack
reconstruct
underli
algebra
stack
represent
sheaf
leav
reader
write
axiom
pair
assur
come
linear
algebra
stack
exampl
exampl
let
project
linear
stack
cohx
object
lie
coher
sheaf
ﬂat
morphism
cohx
cohx
set
homf
morphism
cohx
homo
sian
induc
isomorph
linear
stack
cohx
algebra
see
suppos
coher
sheaf
ﬂat
fact
hom
local
coher
represent
sheaf
follow
fact
exist
coher
sheaf
big
site
hom
see
ega
iii
fact
morphism
scheme
homt
fact
pushforward
commut
arbitrari
pullback
mean
hom
gener
cartesian
henc
gener
coher
hand
ibid
prof
inde
hom
fact
cohx
cfg
algebra
local
ﬁnite
type
prove
exampl
special
case
previou
exampl
consid
case
spec
linear
algebra
stack
cohspec
linear
stack
vector
bundl
notat
vect
underli
algebra
stack
vectcfg
disjoint
union
bgln
sheaf
gln
glm
bgln
bgln
given
natur
represent
gln
glm
compon
gln
glm
exampl
gener
vect
diﬀer
direct
given
quiver
represent
let
quiver
stack
represent
notat
repq
repq
set
diagram
shape
local
free
ﬁnite
rank
morphism
homf
homomorph
diagram
local
free
exampl
toy
exampl
let
smooth
scheme
ﬁnite
type
smooth
group
scheme
unit
also
ﬁnite
type
underli
local
free
deﬁn
linear
stack
object
right
set
homf
exampl
underli
algebra
stack
case
exclud
associ
linear
stack
homf
singleton
endow
uniqu
modul
structur
stack
repres
spec
also
thought
stack
vector
bundl
substack
let
linear
algebra
stack
underli
algebra
stack
xcfg
local
close
algebra
substack
canon
linear
algebra
stack
underli
algebra
stack
ycfg
fact
deﬁn
full
subcategori
consist
object
situat
call
local
close
linear
substack
fiber
product
let
cartesian
morphism
ﬁbere
categori
deﬁn
new
ﬁbere
categori
follow
object
object
tripl
object
isomorph
morphism
pair
morphism
word
write
set
morphism
ﬁbere
product
homϕ
homϕ
set
ﬁbere
product
map
linear
ﬁbere
product
also
leav
reader
verifi
composit
bilinear
let
verifi
ﬁbere
categori
suppos
tripl
morphism
construct
tripl
take
pullback
via
pullback
via
cartesian
pullback
via
henc
exist
uniqu
morphism
cover
cartesian
cartesian
morphism
satisfi
necessari
two
three
properti
invert
cartesian
morphism
cover
ident
invert
tripl
come
given
morphism
cover
easili
veriﬁ
morphism
cartesian
therefor
ﬁbere
categori
construct
two
project
cartesian
call
ﬁbere
product
suppos
algebra
underli
algebra
stack
respect
tripl
presheaf
hom
equal
ﬁbere
product
hom
hom
therefor
local
coher
represent
sheaf
see
linear
algebra
stack
moreov
underli
algebra
stack
ﬁbere
product
lack
local
remark
suppos
linear
algebra
stack
derli
algebra
stack
construct
disjoint
union
linear
algebra
stack
whose
underli
algebra
stack
declar
homomorph
object
object
zero
concept
disjoint
union
use
purpos
linear
algebra
stack
interest
underli
algebra
stack
often
decompos
disjoint
union
even
though
linear
gebraic
stack
exampl
given
linear
stack
vector
bundl
vect
exampl
thu
linear
algebra
stack
exhibit
le
local
behaviour
algebra
stack
therefor
le
geometr
one
reason
prefer
work
algebroid
rather
linear
algebra
stack
special
linear
stack
linear
algebra
stack
everi
ﬁber
categori
categori
put
special
requir
linear
categori
get
stronger
notion
linear
algebra
stack
linear
algebra
stack
denot
univers
sheaf
morphism
deﬁnit
linear
algebra
stack
zero
object
categori
admit
zero
object
admit
zero
object
everi
categori
admit
zero
object
name
pullback
zero
object
spec
via
uniqu
morphism
spec
zero
object
deﬁn
section
spec
isomorph
onto
close
substack
deﬁn
condit
insid
admit
zero
object
denot
complement
zero
object
linear
open
substack
deﬁnit
linear
algebra
stack
admit
direct
sum
ever
categori
admit
ﬁnite
direct
sum
pullback
functor
morphism
commut
direct
sum
henc
admit
direct
sum
canon
morphism
linear
stack
see
also
remark
finit
type
algebra
deﬁnit
let
algebra
stack
algebra
mean
sheaf
algebra
algebra
stack
algebra
stack
structur
morphism
represent
morphism
stack
say
represent
repres
ﬁnite
type
aﬃn
stack
coher
sheaf
call
ﬁnite
form
specx
symo
type
algebra
automorph
algebra
denot
subalgebra
ﬁxed
section
section
denot
subalgebra
section
commut
sheaf
underli
ﬁnite
type
algebra
local
coher
represent
linear
algebra
stack
underli
algebra
stack
univers
sheaf
endomorph
ﬁnite
type
algebra
note
ﬁnite
type
algebra
need
coher
underli
sheaf
exampl
let
coordin
let
central
matrix
big
sheaf
underli
cartesian
case
remark
dualli
ﬁnite
type
algebra
correspond
coher
sheaf
endow
coalgebra
structur
associ
comultipl
counit
inertia
represent
whenev
algebra
algebra
stack
tautolog
morphism
sheaf
group
aut
inertia
stack
stack
pair
object
automorph
aut
sheaf
automorph
sheaf
algebra
construct
consid
stack
sheaf
algebra
alg
object
scheme
sheaf
usual
small
site
morphism
sheaf
cover
morphism
scheme
sheaf
deﬁnit
isomorph
sheaf
sheaf
algebra
give
rise
morphism
alg
get
induc
morphism
inertia
stack
ialg
notic
aut
deﬁnit
automorph
object
stack
map
invers
restrict
morphism
lemma
suppos
gerb
algebra
space
algebra
exist
sheaf
isomorph
inertia
represent
autx
trivial
similarli
connect
gerb
stack
algebra
descend
inertia
represent
restrict
trivial
homomorph
autx
either
case
represent
ﬁnite
type
pull
back
sheaf
algebra
via
structur
morphism
obtain
sheaf
algebra
sheaf
algebra
endow
tautolog
automorph
induc
algebra
invari
automorph
shall
denot
aﬁx
follow
statement
somewhat
tautolog
hold
gener
algebra
proposit
suppos
represent
algebra
algebra
stack
inertia
stack
natur
identiﬁ
aﬁx
particular
represent
algebra
proof
commut
diagram
algebra
stack
identiﬁ
substack
algebra
stack
tripl
object
automorph
object
lie
tripl
aut
subgroup
aut
aut
equival
ﬁxing
action
aut
claim
fact
ﬁbre
object
equal
aut
ﬁbre
aut
subalgebra
ﬁbre
subgroup
stabaut
aut
algebra
bundl
deﬁnit
call
ﬁnite
type
algebra
algebra
dle
underli
local
free
necessarili
ﬁnite
rank
studi
ﬁnite
type
algebra
ﬁnite
type
stack
may
pass
local
close
stratiﬁc
assum
ﬁnite
type
algebra
algebra
bundl
deﬁnit
let
ﬁnite
type
algebra
algebra
stack
stratiﬁc
proposit
character
properti
factor
algebra
bundl
pullback
algebra
bundl
induc
stratiﬁc
call
rank
stratiﬁc
remark
consid
represent
left
multipl
see
everi
algebra
bundl
sheaf
subalgebra
algebra
end
endomorph
vector
bundl
stack
central
idempot
lemma
centr
algebra
bundl
ﬁnite
type
algebra
proof
centr
kernel
homomorph
given
local
vector
bundl
endo
coher
represent
sheaf
thu
ﬁnite
type
algebra
ﬁnite
type
stack
pass
local
close
stratiﬁc
may
assum
algebra
bundl
whose
centr
algebra
bundl
commut
algebra
bundl
specx
ﬁnite
ﬂat
represent
morphism
fact
egori
commut
algebra
bundl
equival
categori
ﬁnite
ﬂat
represent
stack
commut
ﬁnite
type
algebra
denot
stack
idempot
lemma
suppos
commut
algebra
bundl
gebraic
stack
structur
morphism
aﬃn
ﬁnite
type
particular
exist
open
stack
ﬁnite
proof
reduc
case
scheme
quot
lem
ega
lemma
studi
centr
ﬁnite
type
algebra
ﬁnite
type
stack
may
pass
stratiﬁc
assum
stack
central
idempot
ﬁnite
primit
idempot
recal
idempot
call
primit
whenev
orthogon
idempot
necessarili
commut
algebra
ﬁeld
follow
true
everi
idempot
uniqu
way
order
summand
sum
orthogon
primit
idempot
primit
composit
orthogon
idempot
disjoint
primit
decomposit
iii
distinct
primit
idempot
orthogon
primit
idempot
add
thu
idempot
biject
subset
ﬁnite
set
primit
idempot
let
ﬁnite
type
algebra
deﬁnit
idempot
local
section
primit
give
rise
primit
idempot
ﬁber
everi
geometr
point
suppos
commut
algebra
bundl
potent
global
section
let
open
close
substack
deﬁn
equat
primit
geometr
ﬁbre
connect
function
count
number
connect
compon
ﬁbre
lower
set
primit
close
gener
subset
open
therefor
studi
primit
idempot
assum
ﬁnite
lemma
let
commut
algebra
bundl
nite
stack
idempot
open
close
substack
idempot
local
section
factor
primit
proof
may
assum
constant
cation
oper
partial
deﬁn
addit
oper
also
constant
claim
follow
deﬁnit
let
algebra
bundl
centr
let
stack
idempot
word
stack
central
idempot
assum
ﬁnite
substack
primit
idempot
denot
call
stack
primit
central
idempot
ﬁnite
degre
call
central
rank
connect
number
connect
compon
split
central
rank
precis
partit
central
rank
given
degre
connect
compon
call
central
type
split
central
rank
length
type
remark
let
connect
let
commut
nite
type
algebra
ﬁnite
stack
idempot
correspond
connect
compon
primit
idempot
algebra
global
section
degre
stratiﬁc
let
ﬁeld
rank
dimens
space
element
deﬁn
degre
dimens
commut
subalgebra
equal
degre
minim
polynomi
monic
gener
kernel
algebra
map
deﬁn
let
algebra
bundl
rank
algebra
stack
local
section
deﬁnit
cokernel
homomorph
morphism
deﬁn
ﬂat
say
strict
call
rank
imag
degre
characterist
polynomi
morphism
factor
theorem
henc
cokernel
actual
cokernel
homomorph
vector
bundl
henc
coher
condit
cokernel
ﬂat
equival
local
free
impli
form
imag
commut
base
chang
imag
denot
also
local
free
proposit
everi
exist
local
close
substack
properti
local
section
factor
strict
degre
pairwis
disjoint
disjoint
union
astrat
map
surject
section
factor
astrat
strict
proof
consid
tautolog
section
pullback
via
structur
map
give
rise
morphism
astrat
given
ﬂatten
stratiﬁc
cokernel
astrat
compon
cokernel
rank
call
stratiﬁc
astrat
degre
stratiﬁc
element
let
algebra
close
ﬁeld
recal
element
follow
equival
condit
satisﬁ
map
given
left
multipl
diagonaliz
minim
polynomi
separ
satisﬁ
iii
commut
subalgebra
reduc
equival
deﬁnit
let
algebra
bundl
local
section
call
strict
everi
geometr
point
element
induc
exampl
idempot
section
open
subset
neither
commut
algebra
bundl
subset
also
close
assum
strict
unramiﬁ
unramiﬁ
henc
metric
ﬁbre
ﬁnite
ﬂat
spec
condit
equival
spec
section
form
subsheaf
as
proposit
let
algebra
bundl
algebra
stack
as
algebra
stack
represent
structur
morphism
ﬁnite
type
as
proof
fact
as
astrat
open
substack
deﬁn
dition
ﬁnite
ﬂat
represent
morphism
speca
unramiﬁ
thu
factor
monomorph
as
as
open
immers
astrat
stratiﬁc
thu
as
construct
substack
centr
commut
ﬁnite
dimension
algebra
algebra
close
ﬁeld
primit
idempot
linearli
independ
element
linear
combin
primit
idempot
need
version
statement
algebra
bundl
proposit
let
commut
algebra
bundl
whose
stack
idempot
ﬁnite
let
ﬁnite
ﬂat
cover
correspond
canon
ﬁnite
ﬂat
morphism
everi
geometr
point
morphism
map
point
ﬁbre
characterist
function
connect
compon
primit
idempot
dualli
obtain
strict
monomorph
algebra
bundl
structur
map
induc
morphism
strat
astrat
factor
open
substack
as
astrat
induc
surject
close
immers
algebra
stack
strat
as
proof
consid
ﬁnite
cover
primit
idempot
tautolog
global
section
ﬁne
homomorph
push
forward
compos
trace
map
deﬁn
morphism
algebra
bundl
strict
monomorph
vector
bundl
inject
everi
geometr
point
fact
dualli
obtain
morphism
morphism
describ
statement
proposit
ﬂat
ﬂat
check
local
pass
degre
stratiﬁc
commut
strict
phism
algebra
bundl
cartesian
diagram
strat
astrat
show
strat
astrat
close
immers
fact
close
immers
factor
as
astrat
surject
onto
as
check
geometr
point
follow
fact
perman
rank
split
rank
proposit
let
monomorph
commut
nite
type
algebra
ﬁnite
stack
idempot
connect
stack
denot
rank
split
rank
respect
moreov
admit
global
section
factor
ﬁber
point
admit
idempot
global
section
proof
monomorph
induc
open
close
ding
ﬁnite
everi
idempot
decompos
uniqu
sum
orthogon
primit
idempot
let
call
primit
decomposit
consid
correspond
deﬁn
partak
primit
decomposit
one
show
ﬁnite
cover
local
topolog
reduc
case
trivial
cover
properti
primit
decomposit
project
surject
project
inject
thu
deg
deg
deg
isomorph
show
proposit
impli
morphism
as
surject
prof
repeat
argument
algebra
global
section
deduc
everi
primit
tent
remain
primit
everi
primit
potent
deduc
idempot
prof
famili
idempot
deﬁnit
ﬁnite
type
algebra
denot
stack
idempot
pairwis
orthogon
add
uniti
call
section
also
complet
set
orthogon
idempot
note
famili
member
section
need
central
stack
algebra
ﬁnite
type
stack
empti
unless
case
identiﬁ
stack
contain
exactli
unit
identiﬁ
unless
case
empti
group
unit
let
ﬁnite
type
algebra
algebra
stack
subsheaf
unit
deﬁn
everi
object
see
rel
aﬃn
group
scheme
write
ﬁbere
product
algebra
bundl
subsheaf
repres
open
substack
case
local
section
invert
determin
left
right
multipl
vanish
conclud
algebra
bundl
smooth
geometr
connect
ﬁber
gener
case
impli
aﬃn
group
scheme
smooth
geometr
connect
ﬁber
similar
argument
use
determin
prof
strict
monomorph
algebra
bundl
also
algebra
bundl
morphism
anoth
algebra
bundl
determin
restrict
algebroid
deﬁnit
algebroid
tripl
gebraic
stack
ﬁnite
type
algebra
homomorph
sheaf
group
identiﬁ
open
substack
moreov
requir
diagram
group
aut
commut
map
autx
associ
unit
inner
automorph
vertic
map
autx
inertia
represent
isomorph
call
strict
algebroid
usual
abbrevi
tripl
write
need
specifi
algebra
call
commut
algebroid
properti
explan
terminolog
see
remark
condit
open
immers
impli
repres
subsheaf
connect
compon
ident
ﬁeld
connect
open
immers
pli
condit
character
connect
compon
ﬁeld
particular
connect
gerb
stack
rel
inertia
necessarili
equal
henc
identiﬁ
algebra
bundl
therefor
also
aﬃn
smooth
rel
group
scheme
henc
admit
coars
mumford
stack
uniqu
determin
mumford
stack
connect
gerb
moreov
identiﬁ
rel
inertia
group
short
exact
sequenc
rel
group
scheme
case
strict
algebroid
space
fact
coars
modulu
space
algebra
mani
case
algebroid
properti
automat
proposit
consid
tripl
algebra
stack
algebra
bundl
homomorph
sheaf
group
identiﬁ
open
substack
commut
algebroid
proof
deﬁn
homomorph
equivari
respect
inertia
action
proof
combin
fact
monomorph
inertia
action
inner
action
fact
morphism
algebra
bundl
determin
restrict
unit
fact
let
show
automorph
suﬃc
show
check
appli
suﬃc
true
exampl
algebroid
underli
linear
stack
let
linear
algebra
stack
underli
algebra
stack
let
univers
sheaf
endomorph
remark
morphism
invert
endomorph
use
tautolog
identiﬁc
inertia
represent
invers
pullback
action
inde
given
left
inner
automorph
call
algebroid
underli
linear
algebra
stack
strict
algebroid
exampl
consid
linear
stack
vector
bundl
vect
ampl
underli
algebroid
consist
disjoint
union
quotient
stack
gln
given
adjoint
represent
thu
pass
linear
stack
underli
algebroid
discard
restrict
action
gln
left
adjoint
action
thu
remov
exactli
inform
consid
see
remark
exampl
classifi
algebroid
let
algebra
dle
stack
let
act
left
inner
automorph
algebra
bundl
tive
classifi
stack
exact
sequenc
group
scheme
unramiﬁ
open
embed
algebroid
space
strict
algebroid
remark
algebroid
trivial
gerb
classifi
algebroid
let
algebroid
algebra
bundl
therefor
connect
gerb
stack
suppos
gerb
admit
section
via
pull
back
bundl
algebra
claim
canon
isomorph
fact
gerb
section
univers
princip
pullback
diagram
show
henc
via
isomorph
action
identiﬁ
action
left
inner
automorph
follow
algebroid
properti
prof
claim
remark
spec
gerb
strict
algebroid
promot
linear
algebra
stack
whose
underli
algebra
stack
gener
exist
notion
rel
linear
algebra
stack
base
replac
arbitrari
scheme
algebra
space
everi
strict
algebroid
gerb
space
becom
natur
linear
algebra
stack
type
linear
algebra
stack
occur
natur
theori
deform
quantiz
introduc
kontsevich
name
stack
algebroid
see
loc
cit
one
also
ﬁnd
descript
stack
algebroid
term
cocycl
compar
also
thu
notion
algebroid
natur
gener
kontsevich
notion
stack
algebroid
justiﬁ
terminolog
loos
speak
algebroid
stack
linear
coars
stack
exampl
scheme
algebroid
everi
stack
algebroid
via
deﬁnit
natur
way
enhanc
algebroid
linear
algebra
stack
unless
spec
ﬁnal
scheme
exhibit
one
way
algebroid
ﬂexibl
linear
algebra
stack
exampl
algebroid
quotient
stack
let
quotient
stack
ﬁnite
type
algebra
given
ﬁnite
type
algebra
togeth
lift
action
algebra
automorph
inertia
stack
natur
identiﬁ
stabg
thu
becom
algebroid
specifi
equivari
open
embed
scheme
stabg
algebra
bundl
also
need
requir
morphism
algebroid
deﬁnit
call
morphism
algebra
stack
inert
diagram
stack
cartesian
isomorph
call
strictli
inert
connect
compon
algebroid
necessarili
algebra
stack
inert
appli
concept
represent
basic
fact
inert
morphism
everi
inert
morphism
algebra
stack
sentabl
rel
inertia
group
scheme
unramiﬁ
everi
base
chang
inert
morphism
algebra
stack
inert
iii
everi
monomorph
algebra
stack
particular
everi
local
close
immers
everi
stratiﬁc
strictli
inert
inert
local
topolog
target
everi
morphism
stack
inert
base
chang
morphism
stack
fact
inert
morphism
least
stratiﬁc
proposit
suppos
inert
morphism
algebra
stack
suppos
smooth
represent
coars
stack
induc
morphism
diagram
henc
also
cartesian
proof
prove
morphism
gerb
isomorph
may
pa
cover
assum
gerb
trivial
pullback
via
trivial
section
moreov
pullback
isomorph
henc
via
trivial
section
sinc
deﬁnit
morphism
algebroid
pair
morphism
algebra
stack
morphism
algebra
diagram
commut
morphism
represent
morphism
algebroid
monomorph
sheaf
algebra
impli
represent
morphism
inert
isomorph
ﬁnite
type
algebra
impli
inert
natur
notion
algebroid
make
algebroid
remark
inert
morphism
case
algebra
bundl
suppos
morphism
algebroid
inert
morphism
algebra
algebra
bundl
stack
automat
henc
inert
morphism
algebroid
remark
strict
algebroid
represent
morphism
suppos
strict
algebroid
represent
morphism
algebra
stack
ﬁnite
type
subalgebra
insid
strict
algebroid
represent
morphism
algebroid
condit
automat
everi
strict
algebroid
come
way
remark
pullback
suppos
algebroid
inert
morphism
algebra
stack
case
admit
uniqu
algebroid
endow
inert
morphism
algebroid
fact
strict
algebroid
morphism
sarili
strictli
inert
necessarili
strict
algebroid
call
strictli
inert
morphism
strict
algebroid
deﬁnit
call
morphism
algebroid
vector
bundl
princip
homogen
algebra
group
iii
ﬁbre
bundl
group
ﬁbre
local
close
immers
stratiﬁc
inert
underli
morphism
algebra
stack
indic
properti
remark
ﬁbere
product
fiber
product
algebroid
ist
commut
ﬁbere
product
underli
stack
lie
algebra
fiber
product
strict
algebroid
strict
algebroid
algebroid
underli
ﬁbere
product
linear
algebra
stack
equal
ﬁbere
product
underli
algebroid
proposit
suppos
morphism
algebroid
stratiﬁc
algebra
stack
exist
stratiﬁc
algebroid
composit
also
stratiﬁc
algebroid
strict
stratiﬁc
strict
algebroid
proof
pass
rank
stratiﬁc
obtain
mut
diagram
algebroid
upper
horizont
morphism
inert
morphism
algebroid
caus
algebra
bundl
remark
claim
low
algebroid
inertia
remark
inertia
let
algebroid
anoth
algebroid
call
algebroid
inertia
fact
subalgebra
element
invari
tautolog
automorph
induc
inertia
action
subgroup
unit
cartesian
diagram
iix
strict
algebroid
remark
induc
algebroid
structur
algebra
let
algebroid
let
subalgebra
pullback
ement
commut
tautolog
section
equal
space
commut
pair
subgroup
unit
cartesian
diagram
prof
algebroid
fact
commut
diagram
algebroid
strict
algebroid
diagram
strict
algebroid
remark
algebroid
inertia
also
simpl
version
algebroid
inertia
deﬁn
let
algebroid
consid
diagram
algebroid
as
squar
right
construct
remark
morphism
as
composit
stratiﬁc
open
immers
see
proposit
particular
inert
henc
get
induc
algebroid
structur
as
requir
squar
left
cartesian
diagram
algebroid
deﬁn
algebra
stack
algebroid
structur
strict
algebroid
object
diagram
strict
isomorph
justiﬁ
deﬁn
call
algebroid
inertia
gener
case
deﬁn
also
call
algebroid
inertia
slight
abus
languag
idempot
algebroid
lemma
let
invert
global
section
algebra
bundl
let
quotient
subgroup
scalar
consid
action
group
conjug
induc
group
homomorph
class
open
immers
proof
let
rel
spectrum
phism
commut
algebra
give
rise
close
mersion
invert
get
induc
proper
morphism
unramiﬁ
diagon
open
mersion
complement
denot
close
henc
proper
henc
imag
note
close
complement
henc
open
neighborhood
ident
section
cartesian
diagram
lower
squar
cartesian
deﬁnit
fact
upper
squar
cartesian
follow
fact
imag
contain
imag
latter
claim
follow
fact
scalar
necessarili
quotient
eigenvalu
remark
let
algebroid
let
stack
complet
label
set
orthogon
idempot
let
write
subalgebra
consist
element
commut
tautolog
idempot
homomorph
restrict
homomorph
deﬁn
algebroid
structur
algebra
endow
canon
complet
set
orthogon
central
idempot
henc
decompos
product
let
algebroid
algebra
bundl
let
complet
set
orthogon
central
idempot
compos
product
algebra
bundl
get
induc
decomposit
algebroid
structur
ﬁbere
product
algebroid
structur
obtain
embed
algebra
act
left
multipl
action
unit
restrict
action
free
quotient
via
toru
preserv
ﬁberwis
represent
proposit
claim
canon
algebroid
ture
get
induc
commut
diagram
algebroid
horizont
map
inert
henc
princip
bundl
algebroid
proof
inert
morphism
algebroid
stabl
tion
pullback
claim
reduc
case
consid
let
denot
tautolog
section
algebra
given
central
algebra
algebra
descend
quotient
central
bra
element
depend
equival
class
let
denot
descend
algebra
unit
algebra
identiﬁ
open
subgroup
stab
lemma
also
cartesian
diagram
stab
stab
inertia
stack
identiﬁ
prof
stab
open
subgroup
pose
two
open
immers
obtain
open
immers
group
algebroid
requir
endow
structur
get
induc
morphism
algebroid
inert
construct
remark
even
strict
necessarili
strict
construct
fact
make
imposs
restrict
attent
strict
algebroid
remark
let
algebroid
underli
linear
algebra
stack
suppos
admit
direct
sum
let
complement
zero
object
obtain
canon
morphism
algebroid
time
projector
correspond
factor
everi
morphism
fulli
faith
underli
morphism
algebra
stack
monomorph
requir
ﬁber
karoubian
requir
idempot
admit
correspond
direct
summand
morphism
algebroid
call
linear
algebra
stack
karoubian
admit
direct
sum
ﬁber
karoubian
algebroid
represent
deﬁnit
let
algebroid
represent
morphism
algebroid
vect
algebroid
underli
linear
stack
vect
vector
bundl
factor
vector
bundl
rank
deﬁn
morphism
gln
natur
algebroid
structur
see
exampl
say
rank
algebroid
morphism
gln
represent
call
represent
faith
give
represent
algebroid
equival
ifi
vector
bundl
togeth
morphism
bra
end
induc
morphism
unit
group
make
diagram
commut
inertia
represent
given
vector
bundl
represent
rank
faith
end
monomorph
algebra
case
underli
morphism
stack
gln
represent
frame
isom
repres
mumford
stack
faith
represent
identiﬁ
quotient
stack
gln
stack
algebroid
structur
given
subalgebra
subgroup
gln
equal
subgroup
stabgln
gln
remark
everi
algebroid
algebra
bundl
admit
tautolog
adjoint
represent
given
adjoint
represent
algebra
contrast
represent
left
multipl
algebroid
represent
unless
proposit
everi
algebroid
admit
stratiﬁc
restrict
algebroid
admit
faith
tation
proof
without
loss
gener
assum
algebra
bundl
smooth
unit
group
connect
isotrivi
gerb
stack
thu
admit
section
ﬁnite
cover
begin
consid
case
case
trivial
gerb
remark
assum
scend
deal
algebroid
consid
represent
left
plicat
end
restrict
represent
scheme
get
induc
morphism
algebra
stack
bgl
cover
morphism
algebra
bgl
end
sinc
end
inject
give
requir
faith
represent
note
construct
contradict
remark
vector
bundl
deﬁn
left
represent
diﬀer
vector
bundl
underli
algebroid
given
adjoint
represent
consid
gener
case
pullback
algebroid
inert
sinc
trivial
gerb
admit
faith
represent
end
vector
bundl
let
project
faith
represent
fact
adjunct
embed
end
give
rise
embed
end
end
clear
algebroid
suppos
algebroid
connect
gerb
stack
centr
descend
commut
ﬁnite
type
algebra
lemma
deﬁnit
call
algebroid
clear
algebra
bundl
connect
isotrivi
gerb
iii
stack
connect
ﬁnite
clear
algebroid
descend
ﬁnite
scheme
deﬁnit
central
rank
split
central
rank
central
type
appli
clear
algebroid
everi
algebroid
ﬁnite
type
algebra
stack
exist
stratiﬁc
restrict
algebroid
piec
stratiﬁc
clear
follow
proposit
lemma
spectrum
inertia
let
space
isomorph
class
ﬁnite
type
stack
modulo
scissor
relat
bundl
relat
equat
form
whenev
ﬁbre
bundl
special
structur
group
ﬁbre
product
spec
make
write
class
aﬃn
line
let
linear
algebra
stack
univers
phism
algebra
recal
algebroid
exampl
stack
function
deﬁnit
stack
function
represent
morphism
broid
ﬁnite
type
notat
free
space
isomorph
class
stack
function
modulo
scissor
bundl
relat
rel
class
deﬁn
stack
function
denot
scissor
relat
rel
close
immers
algebroid
stack
function
substack
endow
respect
pullback
algebroid
bundl
relat
rel
ﬁbre
bundl
algebroid
special
structur
group
ﬁbre
see
deﬁnit
action
given
action
make
addit
zero
given
empti
algebroid
admit
zero
object
deﬁnit
denot
ing
stack
function
spec
use
emb
via
spec
alway
assum
admit
zero
object
ﬁltration
split
central
rank
call
stack
function
clear
clear
algebroid
tion
deﬁnit
introduc
ﬁltration
split
central
rank
declar
gener
space
clear
stack
function
admit
orthogon
central
idempot
global
altern
gener
clear
algebroid
least
compon
ﬁltere
piec
stabl
scalar
multipl
let
introduc
abbrevi
remark
tri
deﬁn
direct
sum
decomposit
split
central
rank
would
work
clear
algebroid
split
central
rank
may
well
admit
close
substack
whose
restrict
algebroid
clear
split
central
rank
larger
similarli
bundl
relat
respect
split
central
rank
zero
ring
central
idempot
ring
least
one
therefor
complement
particular
idempot
oper
let
denot
oper
map
stack
function
stack
tupl
orthogon
idempot
ad
uniti
see
deﬁnit
algebroid
structur
describ
mark
oper
appli
cation
ﬁber
bundl
algebroid
give
rise
anoth
inert
morphism
algebroid
type
oper
deﬁnit
appli
also
stack
empti
stack
henc
diagonaliz
eigenvalu
kernel
imag
denot
gener
stack
function
stack
fact
oper
vanish
stack
function
stack
act
ident
stack
function
henc
also
diagonaliz
eigenvalu
kernel
imag
henc
complementari
idempot
oper
orthogon
add
ident
recal
stirl
number
second
kind
deﬁn
way
number
surject
elsewher
write
theorem
oper
preserv
ﬁltration
split
central
rank
subquoti
oper
act
multipl
proof
consid
clear
algebroid
morphism
deﬁn
stack
function
let
central
rank
split
central
rank
ﬁltere
piec
gener
denot
coars
stack
style
galoi
theori
see
section
trivial
descend
galoi
cover
sumption
connect
henc
admit
grothendieck
let
connect
galoi
cover
galoi
group
construct
pullback
therefor
morphism
inert
henc
inherit
via
pullback
structur
algebroid
henc
stack
function
label
compon
pullback
obtain
action
set
isomorph
ﬁnite
cover
recal
degre
cover
number
compon
sourc
target
isomorph
support
natur
algebroid
isomorph
preserv
number
orbit
also
isomorph
epi
zer
zer
denot
stack
label
complet
set
orthogon
central
idempot
stack
involv
fact
algebroid
isomorph
isomorph
algebroid
henc
may
calcul
follow
stack
involv
endow
natur
algebroid
structur
stabγ
zer
epi
stabγ
stabγ
stabγ
epi
epi
henc
epi
thu
conclud
zer
stabγ
proper
subgroup
quotient
diat
cover
pullback
compon
number
orbit
larger
thu
prove
theorem
zer
instead
stabγ
observ
zer
close
substack
zer
proper
separ
write
zer
zer
zer
complement
zer
prove
zer
let
zer
local
close
embed
algebroid
aﬁx
clear
consid
embed
algebra
induc
bed
commut
algebra
algebra
come
tautolog
idempot
section
contain
least
one
contain
proposit
split
central
rank
strictli
larger
split
central
rank
latter
least
big
split
central
rank
split
central
rank
decreas
base
extens
show
ﬁnish
proof
corollari
oper
simultan
naliz
common
eigenspac
form
famili
subspac
index
integ
moreov
everi
let
denot
project
onto
erπk
proof
first
remark
given
number
form
tone
increas
sequenc
integ
note
oper
pairwis
commut
composit
associ
algebroid
stack
pair
complet
famili
orthogon
idempot
length
length
member
commut
member
final
let
prove
everi
everi
space
union
subspac
invari
deﬁn
gener
space
stack
function
clear
algebroid
rank
vector
bundl
underli
algebra
bound
ascend
ﬁltration
preserv
set
suppos
stack
function
clear
algebroid
split
central
rank
let
rank
vector
bundl
underli
note
commut
algebra
number
primit
idempot
bound
rank
underli
vector
bundl
deduc
hand
theorem
impli
induct
appli
see
henc
invari
prof
contain
subspac
invari
standard
techniqu
linear
algebra
impli
result
remark
proof
theorem
corollari
show
central
version
zer
also
diagonaliz
hand
zer
commut
le
use
corollari
ker
particular
erx
corollari
everi
stirl
number
ﬁrst
kind
particular
proof
henc
therefor
erπℓ
invers
relationship
stirl
number
ﬁrst
second
kind
remark
stirl
number
ﬁrst
kind
appear
taylor
expans
power
logarithm
log
deﬁnit
let
formal
variabl
deﬁn
oper
formula
extend
var
write
formal
remark
follow
conveni
formula
follow
corollari
use
ident
exampl
univers
rank
vector
bundl
classifi
morphism
vect
deﬁn
hall
algebra
element
vect
vect
abbrevi
decompos
piec
accord
consid
action
fact
maxim
toru
thu
space
vect
invari
matrix
act
subspac
matrix
lower
triangular
diﬀer
number
diagon
henc
diagonaliz
fact
diagon
entri
diagon
give
eigenvector
eigenvalu
therefor
vect
vect
sinc
found
requir
decomposit
eigenvalu
spectrum
semisimpl
inertia
connect
inertia
oper
domorph
denot
semisimpl
algebroid
inertia
broid
see
remark
note
respect
scissor
bundl
connect
inertia
commut
inert
pullback
relat
deﬁn
linear
pass
note
commut
everi
composit
associ
algebroid
stack
pair
unit
label
complet
set
orthogon
idempot
commut
particular
preserv
ﬁltration
split
central
rank
composit
divis
proposit
everi
exist
tor
proof
let
algebroid
algebra
aekx
endow
tautolog
complet
set
orthogon
central
idempot
appli
construct
proposit
obtain
princip
bundl
algebroid
assign
kei
ekx
ekx
ekx
extend
oper
shall
denot
record
algebroid
stackei
stack
tupl
object
form
complet
set
orthogon
idempot
equival
class
unit
λiei
equat
follow
fact
kei
ekx
ekx
hold
bundl
relat
corollari
map
induc
subquoti
divis
kei
proof
oper
act
tiplic
use
scalar
local
maxim
ideal
denot
thu
invert
ration
polynomi
vanish
extend
scalar
well
consid
note
deﬁnit
ensur
free
direct
sum
decomposit
extend
ator
extend
oper
partit
deﬁn
polynomi
degre
vanish
order
also
deﬁn
polynomi
invert
theorem
oper
diagonaliz
eigenvalu
spectrum
consist
partit
length
proof
work
throughout
subquoti
restrict
oper
tacitli
subquoti
note
isomorph
henc
free
order
partit
length
divis
partit
write
exist
permut
partial
order
partit
length
write
gener
clear
stack
function
central
type
divis
prove
tition
local
ﬁnite
preserv
ﬁltration
divis
oper
quotient
oper
multipl
iii
oper
fact
impli
claim
concern
diagonaliz
ofei
satisﬁ
eqµ
eqλ
vanish
lower
triangular
matrix
distinct
diagon
entri
discret
valuat
ring
diagonaliz
suﬃc
diﬀer
diagon
entri
unit
latter
condit
argument
appli
directli
eigenvalu
linearli
order
partial
nevertheless
conclus
remain
true
larger
gener
act
let
partit
length
consid
clear
stack
function
central
type
algebra
abbrevi
induc
element
denot
central
rank
central
idempot
ekx
canon
section
given
label
idempot
denot
imag
section
proof
theorem
algebroid
ekx
stratiﬁ
ekx
clear
algebroid
split
central
rank
larger
lie
also
split
central
rank
larger
discard
everi
isomorph
label
replac
follow
argument
rememb
multipli
ﬁnal
result
part
henc
calcul
need
consid
quotient
write
center
strict
subbundl
henc
close
substack
complement
start
examin
pullback
coars
stack
henc
inert
algebroid
structur
henc
canon
algebroid
structur
inert
quotient
note
proof
theorem
let
connect
galoi
cover
galoi
group
act
set
get
induc
isomorph
proposit
surject
close
immers
strat
follow
surject
close
immers
strat
pass
quotient
anoth
surject
close
immers
strat
replac
label
central
idempot
correspond
label
orbit
label
part
let
denot
orbit
write
product
project
space
aλk
moreov
sequenc
subset
write
local
close
subspac
deﬁn
entri
other
zero
disjoint
union
sequenc
subset
group
act
linearli
respect
stratiﬁc
though
individu
stratum
moreov
stab
everi
subgroup
stabil
sequenc
orbit
proof
theorem
impli
correspond
morphism
cours
stack
deduc
true
project
inert
pullback
last
step
use
bundl
relat
bundl
product
project
bundl
associ
vector
bundl
clear
algebroid
consid
inclus
mut
algebra
bundl
zax
zay
proposit
split
rank
zay
split
central
rank
least
larg
split
rank
zax
turn
least
larg
split
rank
zax
sinc
work
modulo
may
assum
split
central
rank
henc
split
rank
zay
zax
equal
consid
correspond
use
proof
proposit
whose
structur
group
special
gener
linear
group
consid
local
close
embed
three
stack
diagram
represent
ﬁnite
cover
assumpt
connect
compon
impli
horizont
inclus
diagram
isomorph
surject
represent
ﬁnite
cover
sinc
number
compon
degre
compon
equal
well
mean
central
type
equal
central
type
exist
impli
divid
central
type
surject
isomorph
otherwis
given
central
least
pointwis
proposit
would
surject
would
forc
tautolog
section
class
structur
map
show
central
type
strictli
divid
thu
complet
proof
local
proceed
proof
corollari
everi
time
produc
clear
algebroid
whose
central
type
multipl
bound
central
rank
rank
ﬁnite
mani
step
process
ﬁnite
appli
increas
appli
stop
corollari
oper
agonaliz
eigenvalu
spectrum
consist
partit
denot
eigenspac
correspond
eigenvalu
exampl
consid
exampl
stack
function
rank
vector
bundl
deﬁn
element
vect
go
decompos
eigencompon
respect
oper
posit
given
case
stack
function
clear
central
rank
central
toru
also
normal
get
correspond
decomposit
split
central
rank
connect
inertia
stack
fact
let
close
subschem
consist
element
trace
zero
write
least
spec
note
strict
algebroid
strict
algebroid
connect
clear
algebroid
associ
coars
stack
gener
scheme
central
rank
consid
start
note
connect
inertia
central
henc
modulo
vect
see
invari
underei
matrix
subspac
matrix
lower
triangular
diﬀer
scalar
diagon
invert
therefor
diagonaliz
diagon
get
follow
eigenvector
modulo
vect
get
actual
eigenvector
project
vect
henc
add
iii
get
spectral
decomposit
respect
oper
cours
spectral
decomposit
respect
comput
introduct
appli
bundl
relat
remark
will
invert
prove
onaliz
entir
within
context
strict
algebroid
fact
gener
calcul
introduct
accomplish
grade
structur
multipl
assum
admit
direct
sum
deﬁn
commut
product
product
becom
commut
unit
spec
proposit
proof
follow
immedi
fact
two
broid
algebroid
denot
disjoint
union
two
partit
corollari
henc
also
grade
respect
commut
product
prove
next
fact
true
proposit
number
way
set
written
union
subset
order
subset
order
proof
consid
stack
function
stack
pair
complet
set
orthogon
idempot
complet
set
orthogon
idempot
everi
least
one
two
idempot
everi
pair
strictli
monoton
map
whose
imag
cover
get
morphism
stack
function
map
pair
complet
set
orthogon
idempot
pair
deﬁn
map
inject
sum
either
zero
one
summand
morphism
phism
onto
local
close
substack
locu
vanish
idempot
close
moreov
imag
morphism
disjoint
cover
corollari
proof
step
line
line
us
proposit
combinatori
lemma
let
integ
integ
deﬁn
iti
integ
follow
use
combinatori
properti
vanish
unless
number
index
cover
subset
proposit
everi
integ
proof
let
formal
variabl
prove
xλp
xλp
prove
side
equat
equal
one
hand
xλp
hand
xλp
use
obviou
properti
satisﬁ
cover
number
order
ﬁltration
hall
algebra
let
linear
algebra
stack
admit
direct
sum
direct
mand
assum
karoubian
remark
deﬁn
hall
product
need
addit
structur
linear
gebraic
substack
stack
sequenc
everi
ﬁbre
deﬁn
structur
exact
categori
stack
come
diagram
morphism
linear
algebra
stack
project
sequenc
onto
object
respect
requir
morphism
ﬁnite
type
morphism
represent
call
exact
linear
algebra
stack
exampl
linear
stack
cohx
vect
repq
exampl
satisfi
axiom
cohx
see
section
case
exact
structur
given
short
exact
sequenc
note
categori
abelian
cokernel
momorph
ﬂat
sheaf
necessarili
ﬂat
throughout
follow
discuss
exact
linear
algebra
stack
let
univers
endomorph
algebra
section
follow
structur
modul
structur
action
given
turn
multipl
commut
multipl
given
hall
product
hall
product
stack
function
deﬁn
ﬁrst
construct
ﬁbere
product
set
multipl
associ
commut
hall
product
associ
unit
respect
multipl
given
spec
refer
hall
algebra
filter
structur
hall
algebra
deﬁnit
deﬁn
ker
ascend
ﬁltration
call
ﬁltration
order
vanish
inertia
simpli
order
ﬁltration
slight
abus
languag
space
obtain
extens
scalar
direct
sum
eigenspac
whose
correspond
eigenvalu
order
vanish
le
equal
theorem
suppos
moreov
mod
prove
theorem
prove
follow
lemma
lemma
two
stack
function
integ
equat
mod
prove
lemma
let
indic
lemma
impli
theorem
suppos
degre
degre
degre
see
impli
set
left
hand
side
degre
right
hand
side
degre
exactli
impli
side
homogen
degre
corollari
notic
rewrit
equat
henc
prof
theorem
analysi
suppos
stack
function
stack
function
deﬁn
cartesian
diagram
explicitli
stack
tripl
object
respect
object
short
exact
sequenc
object
isomorph
imag
respect
omit
isomorph
tripl
simplifi
notat
stack
function
deﬁn
enlarg
diagram
repres
diagram
complet
set
orthogon
idempot
complet
set
orthogon
idempot
explicitli
stack
final
stack
stack
object
endow
complet
set
label
idempot
explicitli
consist
complet
set
orthogon
idempot
endomorph
short
exact
sequenc
moreov
orthogon
tent
orthogon
idempot
final
requir
everi
decompos
given
integ
deﬁn
new
stack
function
denot
follow
let
algebra
stack
complet
set
zero
orthogon
idempot
endomorph
short
exact
everi
requir
eϕρ
fψρ
famili
orthogon
idempot
respect
follow
union
complet
set
orthogon
potent
union
complet
set
orthogon
idempot
natur
algebroid
structur
morphism
given
map
middl
object
short
exact
sequenc
make
stack
function
note
integ
vanish
requir
let
write
let
assum
everi
least
one
two
integ
morphism
map
quadrupl
denot
imag
imag
deﬁn
break
complet
famili
orthogon
idempot
subfamili
subfamili
member
similarli
break
subfamili
whose
size
famili
idempot
deﬁn
formula
note
need
make
assumpt
order
everi
famili
member
lemma
everi
exactli
one
two
integ
isomorph
henc
equal
stack
function
proof
given
object
short
exact
sequenc
split
direct
sum
short
exact
sequenc
one
sequenc
canon
split
either
subobject
quotient
object
vanish
assumpt
therefor
sequenc
split
canon
suppos
given
strictli
monoton
map
imag
cover
imag
cover
choic
inject
determin
morphism
algebra
stack
map
deﬁn
xφρ
assumpt
sum
either
empti
consist
singl
summand
obtain
essenti
relabel
lemma
morphism
give
rise
morphism
stack
note
requir
need
assur
tion
open
close
imag
imag
morphism
cover
chang
get
morphism
disjoint
proof
follow
fact
sourc
target
diﬀer
way
idempot
index
immers
corollari
use
notat
introduc
low
equat
ψxφ
run
integ
exampl
consid
empti
henc
epen
sum
posit
integ
proof
main
lemma
use
proposit
calcul
follow
epπt
exampl
get
lowest
order
term
degre
sinc
vanish
need
everi
least
one
modulo
term
correspond
pair
properti
everi
exactli
one
contribut
exactli
term
lemma
appli
deduc
modulo
sum
support
form
partit
group
term
correspond
partit
size
togeth
rewrit
equal
eiπt
ejπt
eiπi
ejπj
modulo
term
congruent
conclud
prof
lemma
mod
hall
algebra
theorem
submodul
tnk
respect
hall
product
algebra
ﬂat
famili
algebra
special
ﬁbre
canon
isomorph
grade
algebra
associ
ﬁltere
algebra
quotient
map
identiﬁ
mappn
xntn
grade
algebra
associ
ﬁltere
algebra
canon
isomorph
commut
grade
algebra
theorem
special
ﬁbre
inherit
therefor
poisson
bracket
encod
hall
product
second
order
poisson
bracket
degre
given
formula
corollari
grade
endow
poisson
bracket
degre
given
corollari
particular
lie
algebra
respect
poisson
bracket
fact
case
poisson
bracket
equal
lie
bracket
thu
lie
algebra
ring
scalar
proof
equat
togeth
lemma
say
prof
impli
deﬁnit
call
lie
algebra
virtual
posabl
stack
function
usual
write
vir
terminolog
use
analog
section
check
notion
virtual
indecompos
agre
ibid
special
case
epsilon
function
prove
replac
direct
sum
decomposit
ﬁltration
formula
give
rise
oper
map
particular
abl
construct
virtual
indecompos
stack
function
hall
algebra
logarithm
fix
algebra
substack
follow
properti
avoid
imag
spec
close
direct
sum
direct
summand
karoubian
remark
add
spec
iii
everi
posit
integ
morphism
trate
diagram
squar
cartesian
ﬁnite
type
disjoint
union
morphism
still
ﬁnite
type
mean
morphism
ﬁnite
type
exist
imag
intersect
imag
exampl
stack
coher
sheaf
project
curv
substack
vector
bundl
ﬁxed
slope
exampl
substack
satisfi
condit
eral
take
stack
vector
bundl
whose
narasimhan
slope
contain
ﬁxed
interv
exampl
stack
represent
quiver
take
consid
arbitrari
stack
function
denot
fnx
stack
fnx
ﬁt
cartesian
diagram
fnx
note
fnx
ﬁnite
type
assumpt
also
sentabl
algebroid
therefor
fnx
anoth
stack
function
object
fnx
pair
object
ﬂag
imag
subquoti
consid
fnx
stack
tripl
pair
object
fnx
complet
set
orthogon
idempot
everi
endomorph
induc
respect
ﬂag
everi
therefor
get
induc
idempot
oper
idempot
properti
everi
least
one
vanish
stack
fnx
decompos
disjoint
union
substack
accord
idempot
vanish
make
decomposit
precis
consid
sequenc
posit
integ
deﬁn
fαx
stack
tripl
object
imag
complet
set
orthogon
idempot
decompos
direct
sum
moreov
ﬂag
length
subquoti
everi
everi
strictli
monoton
map
deﬁn
morphism
deﬁn
ﬂag
term
ﬂag
fαx
fnx
xφκ
note
sum
ﬁxed
realli
sum
largest
subobject
make
ﬂag
fακ
lemma
morphism
given
isomorph
onto
locu
fnx
deﬁn
corollari
denot
element
deﬁn
fnξ
sum
taken
posit
integ
set
equal
also
hold
deﬁnit
deﬁn
everi
set
deﬁnit
justiﬁ
assumpt
sum
actual
ﬁnite
expand
power
deﬁn
exampl
gener
corollari
everi
henc
particular
virtual
indecompos
proof
suﬃc
prove
mod
fact
ekfn
inde
divis
posit
remark
oper
respect
strict
broid
true
epsilon
logarithm
suppos
exist
abelian
group
decomposit
algebroid
linear
stack
disjoint
union
requir
deﬁn
cartesian
diagram
composit
factor
call
grade
group
grade
group
decompos
direct
sum
submodul
gener
stack
function
factor
hall
product
well
commut
product
grade
respect
denot
project
compon
let
linear
algebra
substack
avoid
spec
properti
everi
intersect
ﬁnite
type
close
direct
summand
extens
latter
mean
deﬁn
composit
factor
iii
submonoid
impli
monoid
requir
properti
everi
admit
ﬁnite
mani
decomposit
assum
properti
intersect
coﬁnit
ideal
empti
axiom
hold
satisﬁ
ﬁnite
condit
deﬁn
remark
stack
coher
sheaf
project
curv
take
deﬁn
stack
sheaf
rank
degre
suppos
stack
bundl
whose
slope
contain
interv
take
requir
satisﬁ
remark
stack
represent
quiver
take
set
vertex
set
equal
stack
represent
dimens
vector
take
take
let
also
deﬁn
coﬁnit
ideal
everi
group
ideal
respect
multipl
ring
may
complet
respect
collect
ideal
obtain
morphism
inject
multipl
extend
sum
converg
idempot
oper
commut
thing
deﬁn
term
proposit
henc
write
exponenti
logarithm
deﬁn
power
seri
use
hall
product
particular
log
proof
use
formula
result
follow
time
remark
compar
two
formula
remark
let
write
subspac
ﬁned
requir
coeﬃcient
contain
remark
set
also
get
one
think
hopf
algebra
make
brief
remark
without
strive
gener
let
assum
simplic
free
particular
impli
abbrevi
element
ﬁnite
sequenc
element
write
particular
mani
case
interest
hall
algebra
element
run
ﬁnite
sequenc
element
linearli
dent
let
assum
case
free
gener
unitari
let
denot
algebra
let
assum
morphism
induc
commut
product
inject
hold
mani
case
interest
deﬁn
comultipl
make
mut
hopf
algebra
deﬁn
conveni
extend
notat
ﬁnite
sequenc
element
may
zero
done
set
thu
unchang
cross
zero
deﬁn
sum
pair
sequenc
length
allow
zero
deﬁn
structur
cocommut
lemma
diagram
comm
mult
commut
augment
ideal
follow
virtual
indecompos
equal
itiv
respect
hopf
algebra
structur
prim
vir
cocommut
hopf
algebra
isomorph
univers
envelop
algebra
prim
theorem
rem
lie
algebra
vir
free
lie
algebra
element
remark
suppos
vect
stack
vector
bundl
take
inde
linearli
independ
least
ground
ring
ﬁeld
moreov
inject
hopf
algebra
obtain
hopf
algebra
symmetr
function
see
exampl
remark
doubt
possibl
extend
coproduct
way
vir
prim
consider
consid
famili
oper
substitut
allow
prove
least
result
one
would
expect
cocommut
hopf
algebra
particular
ﬁnd
unlik
gener
would
isomorph
univers
envelop
algebra
vir
integr
integr
stack
function
three
thing
forget
structur
map
forget
algebroid
structur
map
introduc
bundl
relat
morphism
algebra
stack
vector
bundl
relat
let
grothendieck
algebra
stack
ﬁnite
type
aﬃn
diagon
modulo
scissor
bundl
relat
bundl
relat
equat
form
ﬁbre
bundl
algebra
stack
special
structur
group
ﬁbre
var
prefer
latter
express
term
var
note
connect
inertia
oper
serv
bundl
relat
therefor
talk
regular
motiv
weight
deﬁnit
call
element
regular
written
denomin
vanish
thu
subalgebra
regular
motiv
weight
reg
deﬁnit
imag
morphism
var
var
var
imag
contain
reg
henc
also
think
reg
follow
follow
lemma
lemma
everi
ﬁnite
type
stack
stabil
lar
motiv
weight
proof
let
stack
stabil
mean
inertia
stratifi
necessari
may
assum
inertia
stack
fact
ﬁnite
tion
stratiﬁ
global
quotient
stack
may
assum
glm
algebra
space
glm
act
ﬁnite
stabil
maxim
toru
glm
also
act
ﬁnite
stabil
ﬂatten
stratiﬁc
biliz
stabt
act
pass
open
close
subspac
may
assum
action
constant
stabil
see
act
freeli
quotient
ﬁnite
subgroup
conclud
glm
glm
glm
quotient
isomorph
last
term
regular
algebra
space
glm
vanish
integr
map
stack
function
class
give
rise
homomorph
denot
homomorph
pole
theorem
theorem
composit
factor
algebra
regular
motiv
weight
reg
proof
suﬃc
prove
regular
everi
clear
algebroid
admit
faith
represent
suﬃc
proposit
algebroid
exist
mumford
stack
left
togeth
strict
equivari
algebra
subbundl
stabgln
gln
gln
let
diagon
subalgebra
standard
maxim
toru
gln
gln
act
toru
stratifi
stabil
respect
action
stratiﬁc
canon
need
stabt
unit
ﬁnite
type
algebra
fact
algebra
given
intersect
insid
central
tautolog
section
identiﬁc
stack
commut
pair
thu
section
inde
equal
stabt
rel
group
scheme
stabt
stabgln
subalgebra
correspond
tition
set
partit
correspond
subalgebra
whose
primit
let
write
tent
eiρ
toru
unit
uniqu
stratiﬁc
section
factor
back
via
equal
exist
tion
prove
pass
rank
stratiﬁc
see
deﬁnit
observ
subalgebra
bundl
stack
compos
disjoint
union
open
close
substack
constant
compon
may
reformul
deﬁn
erti
say
also
stabt
stratiﬁc
tdn
tdi
commut
let
remark
abl
prove
gener
action
stack
stabil
stratiﬁ
equivariantli
fact
stabil
equal
unit
algebra
help
note
also
prove
deﬁn
properti
term
stabil
everi
partit
toru
act
stabil
therefor
get
induc
action
matrix
conjug
preserv
unit
get
induc
action
fact
action
even
respect
modiﬁc
follow
consid
action
left
multipl
action
impli
particular
product
exist
moreov
action
preserv
ﬁeld
also
preserv
section
product
two
commut
matrix
matrix
note
impli
act
bs
even
strict
section
product
may
strict
ﬁnalli
consid
action
deﬁn
quotient
stack
ﬁnite
type
scheme
zariski
topolog
space
zariski
space
see
ter
chevalley
theorem
see
ibid
imag
construct
ﬁnd
disjoint
local
close
reduc
algebra
substack
imag
equal
let
ezi
ﬁnite
type
algebra
stack
endow
represent
phism
ezi
claim
ezi
algebra
stack
stabil
follow
fact
ﬁeld
valu
point
action
ﬁnite
stabil
see
assum
conjug
preserv
ﬁber
impli
henc
commut
rewrit
see
mute
chang
basi
necessari
diagon
three
matrix
simultan
sinc
valu
see
entri
diagon
matrix
obtain
permut
henc
possibl
valu
henc
everi
one
possibl
valu
one
thu
action
ﬁnite
stabil
least
ﬁeld
valu
point
requir
consid
cartesian
diagram
ezi
obtain
pull
back
disjoint
union
isomorph
onto
local
close
substack
via
ezi
morphism
true
surject
underli
zariski
topolog
space
scissor
relat
morphism
princip
true
bundl
relat
ezi
ezi
follow
gln
gln
gln
gln
claim
follow
lemma
ezi
ezi
corollari
multipl
integr
take
regular
valu
everi
reg
proof
consid
follow
diagram
reg
eqλ
var
dot
arrow
exist
squar
lower
right
gram
cartesian
outer
part
diagram
commut
identiﬁ
local
var
imag
corollari
deﬁn
extend
integr
var
linear
homomorph
reg
integr
hall
product
integr
let
grade
group
section
assum
addit
endow
bilinear
form
deﬁnit
call
hereditari
everi
phism
vector
bundl
stack
deﬁnit
rank
let
assum
henceforth
hereditari
deﬁn
free
symbol
introduc
associ
product
formula
extend
linearli
make
regular
cient
form
subalgebra
reg
deﬁn
integr
reg
uγz
proposit
hereditari
integr
preserv
star
product
fact
reg
proof
straightforward
calcul
one
us
fact
morphism
vector
bundl
stack
rank
henc
limit
morphism
poisson
algebra
reg
set
sourc
henc
pa
limit
integr
target
respect
limit
modulo
star
product
reg
commut
fact
modulo
given
commut
product
henc
quotient
reg
inherit
poisson
bracket
deﬁn
mod
explicitli
given
twice
conclud
theorem
hereditari
morphism
poisson
bra
poisson
structur
describ
section
one
see
coeﬃcient
integr
may
express
use
oper
deﬁnit
substitut
proof
homomorph
obtain
set
note
deform
paramet
map
deform
paramet
poisson
bracket
depend
choic
deform
paramet
preserv
note
section
quotient
map
obtain
set
give
rise
display
formula
remark
note
diagram
invert
reg
var
commut
central
column
morphism
famili
algebra
left
hand
column
gener
ﬁbre
morphism
var
right
hand
column
limit
henc
morphism
poisson
algebra
restrict
theorem
virtual
indecompos
element
obtain
corollari
limit
integr
deﬁn
phism
lie
algebra
var
vir
bracket
vir
commut
bracket
hall
product
bracket
var
given
integr
given
formula
virtual
indecompos
hall
algebra
element
vir
remark
surject
morphism
var
var
morphism
like
inject
obviou
reason
element
ann
var
map
zero
var
although
certainli
map
zero
without
much
eﬀort
possibl
prove
classic
limit
integr
lift
var
homomorph
var
unfortun
moment
prove
lift
phism
poisson
algebra
remark
leav
interest
reader
write
analogu
theorem
case
rather
hereditari
includ
prove
main
theorem
equivari
version
includ
vanish
cycl
orient
data
weight
integr
appendix
comparison
joyc
tual
project
exampl
let
write
gln
vect
vect
remark
give
aut
remark
also
formula
remark
give
contain
formula
joyc
deﬁn
project
oper
πvi
pairwis
commut
add
ident
although
work
bare
algebra
stack
algebroid
expect
modulo
diﬀer
πvi
prove
oper
take
valu
element
vect
proposit
πvi
proof
let
toru
diagon
matrix
insid
gln
joyc
set
deﬁnit
trivial
case
quotient
stack
bgln
gln
point
set
gln
comput
exampl
set
toru
diag
rang
surject
map
final
set
cide
joyc
deﬁnit
need
comput
select
respect
case
gln
ngln
cgln
ngln
ngln
choic
gln
unwind
deﬁnit
ngln
ﬁnalli
deﬁn
virtual
project
bgln
πvi
bgln
dim
gln
bcg
say
gln
type
correspond
surject
induc
partit
note
also
cgln
depend
type
gli
normal
isomorph
toqn
therefor
cgln
ngln
ngln
cgln
ngln
πvi
bgln
dim
gln
bcg
ngln
cgln
ngln
type
dim
ngln
bcg
bgli
bgli
third
line
follow
lemma
conclud
joyc
virtual
project
bgln
ident
eigenproject
lemma
type
dim
proof
let
dim
proof
obvious
possibl
choic
therefor
prove
dim
case
choic
choic
set
prof
dim
valu
deﬁn
recurs
suﬃc
show
thatpr
dim
satisﬁ
recurs
relat
choic
comput
also
form
choos
codimens
insid
everi
codimens
number
intermedi
subtori
posit
therefor
contain
includ
possibl
choic
cancel
size
pariti
let
write
point
let
dimension
toru
consist
point
dim
given
set
deﬁn
equat
xiki
deﬁn
equat
dim
either
appear
case
dimension
second
case
appear
deﬁn
equat
case
dimension
choic
consist
codimens
element
satisfi
lose
one
element
restrict
show
dim
dim
dim
complet
proof
refer
abramovich
olsson
vistoli
tame
stack
posit
characterist
ann
inst
fourier
grenobl
artin
bertin
demazur
grothendieck
gabriel
raynaud
serr
group
institut
de
haut
scientiﬁqu
pari
artin
grothendieck
verdier
de
topo
cohomologi
etal
de
lectur
note
matic
no
springer
berlin
heidelberg
new
york
behrend
fantechi
intrins
normal
cone
invent
bridgeland
introduct
motiv
hall
algebra
adv
cartier
primer
hopf
algebra
frontier
number
theori
physic
geometri
page
springer
berlin
agnolo
polesello
deform
quantiz
complex
involut
submanifold
noncommut
geometri
physic
page
world
sci
hackensack
grothendieck
revˆet
etal
group
fondament
volum
lectur
note
mathemat
grothendieck
ega
number
public
institut
de
haut
scientiﬁqu
joyc
conﬁgur
abelian
categori
bra
adv
joyc
motiv
invari
artin
stack
stack
function
joyc
song
theori
gener
invari
mem
amer
math
kontsevich
deform
quantiz
algebra
varieti
lett
math
flato
part
iii
dijon
kresch
cycl
group
artin
stack
invent
laumon
champ
volum
ergebniss
der
mathematik
und
ihrer
grenzgebiet
folg
berlin
noohi
fundament
group
algebra
stack
inst
math
jussieu
group
type
multiplicatif
autour
de
group
vol
volum
panor
synth
es
page
soc
math
franc
pari
stack
project
http
stack
math
columbia
edu
last
time
retriev
decemb
author
project
stack
